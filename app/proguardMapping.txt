# compiler: R8
# compiler_version: 2.0.74
# min_api: 19
# pg_map_id: 24dad38
# common_typos_disable
android.support.v4.app.INotificationSideChannel$Default -> android.support.v4.app.INotificationSideChannel$Default:
    14:14:void <init>() -> <init>
    36:36:android.os.IBinder asBinder() -> asBinder
    27:27:void cancel(java.lang.String,int,java.lang.String) -> cancel
    33:33:void cancelAll(java.lang.String) -> cancelAll
    21:21:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
android.support.v4.app.INotificationSideChannel$Stub -> android.support.v4.app.INotificationSideChannel$Stub:
    45:47:void <init>() -> <init>
    65:65:android.os.IBinder asBinder() -> asBinder
    54:61:android.support.v4.app.INotificationSideChannel asInterface(android.os.IBinder) -> asInterface
    218:218:android.support.v4.app.INotificationSideChannel getDefaultImpl() -> getDefaultImpl
    69:94:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
    211:215:boolean setDefaultImpl(android.support.v4.app.INotificationSideChannel) -> setDefaultImpl
android.support.v4.app.INotificationSideChannel$Stub$Proxy -> android.support.v4.app.INotificationSideChannel$Stub$Proxy:
    126:128:void <init>(android.os.IBinder) -> <init>
    131:131:android.os.IBinder asBinder() -> asBinder
    170:184:void cancel(java.lang.String,int,java.lang.String) -> cancel
    191:203:void cancelAll(java.lang.String) -> cancelAll
    135:135:java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    142:163:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
android.support.v4.app.RemoteActionCompatParcelizer -> android.support.v4.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.graphics.drawable.IconCompatParcelizer -> android.support.v4.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    13:13:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    17:18:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
android.support.v4.os.IResultReceiver$Default -> android.support.v4.os.IResultReceiver$Default:
    9:9:void <init>() -> <init>
    16:16:android.os.IBinder asBinder() -> asBinder
    13:13:void send(int,android.os.Bundle) -> send
android.support.v4.os.IResultReceiver$Stub -> android.support.v4.os.IResultReceiver$Stub:
    25:27:void <init>() -> <init>
    45:45:android.os.IBinder asBinder() -> asBinder
    34:41:android.support.v4.os.IResultReceiver asInterface(android.os.IBinder) -> asInterface
    127:127:android.support.v4.os.IResultReceiver getDefaultImpl() -> getDefaultImpl
    49:70:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
    120:124:boolean setDefaultImpl(android.support.v4.os.IResultReceiver) -> setDefaultImpl
android.support.v4.os.IResultReceiver$Stub$Proxy -> android.support.v4.os.IResultReceiver$Stub$Proxy:
    82:84:void <init>(android.os.IBinder) -> <init>
    87:87:android.os.IBinder asBinder() -> asBinder
    91:91:java.lang.String getInterfaceDescriptor() -> getInterfaceDescriptor
    95:114:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver -> android.support.v4.os.ResultReceiver:
    144:144:void <clinit>() -> <clinit>
    83:86:void <init>(android.os.Handler) -> <init>
    138:142:void <init>(android.os.Parcel) -> <init>
    125:125:int describeContents() -> describeContents
    121:121:void onReceiveResult(int,android.os.Bundle) -> onReceiveResult
    96:111:void send(int,android.os.Bundle) -> send
    130:135:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.os.ResultReceiver$1 -> android.support.v4.os.ResultReceiver$1:
    145:145:void <init>() -> <init>
    145:145:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    148:148:android.support.v4.os.ResultReceiver createFromParcel(android.os.Parcel) -> createFromParcel
    145:145:java.lang.Object[] newArray(int) -> newArray
    152:152:android.support.v4.os.ResultReceiver[] newArray(int) -> newArray
android.support.v4.os.ResultReceiver$MyResultReceiver -> android.support.v4.os.ResultReceiver$MyResultReceiver:
    67:67:void <init>(android.support.v4.os.ResultReceiver) -> <init>
    70:75:void send(int,android.os.Bundle) -> send
android.support.v4.os.ResultReceiver$MyRunnable -> android.support.v4.os.ResultReceiver$MyRunnable:
    56:59:void <init>(android.support.v4.os.ResultReceiver,int,android.os.Bundle) -> <init>
    63:64:void run() -> run
androidx.activity.ComponentActivity -> androidx.activity.ComponentActivity:
    84:88:void <init>() -> <init>
    137:139:void <init>(int) -> <init>
    50:50:void access$001(androidx.activity.ComponentActivity) -> access$001
    220:222:java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    241:241:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    297:297:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    303:303:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    257:258:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    286:287:void onBackPressed() -> onBackPressed
    149:155:void onCreate(android.os.Bundle) -> onCreate
    208:208:java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    176:196:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    160:166:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
androidx.activity.ComponentActivity$1 -> androidx.activity.ComponentActivity$1:
    69:69:void <init>(androidx.activity.ComponentActivity) -> <init>
    72:73:void run() -> run
androidx.activity.ComponentActivity$2 -> androidx.activity.ComponentActivity$2:
    94:94:void <init>(androidx.activity.ComponentActivity) -> <init>
    98:105:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$3 -> androidx.activity.ComponentActivity$3:
    108:108:void <init>(androidx.activity.ComponentActivity) -> <init>
    112:117:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.ComponentActivity$NonConfigurationInstances -> androidx.activity.ComponentActivity$NonConfigurationInstances:
    56:56:void <init>() -> <init>
androidx.activity.ImmLeaksCleaner -> androidx.activity.ImmLeaksCleaner:
    38:38:void <clinit>() -> <clinit>
    45:47:void <init>(android.app.Activity) -> <init>
    101:112:void initializeReflectiveFields() -> initializeReflectiveFields
    51:96:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedCallback -> androidx.activity.OnBackPressedCallback:
    54:56:void <init>(boolean) -> <init>
    103:104:void addCancellable(androidx.activity.Cancellable) -> addCancellable
    82:82:boolean isEnabled() -> isEnabled
    91:94:void remove() -> remove
    107:108:void removeCancellable(androidx.activity.Cancellable) -> removeCancellable
    71:72:void setEnabled(boolean) -> setEnabled
androidx.activity.OnBackPressedDispatcher -> androidx.activity.OnBackPressedDispatcher:
    65:66:void <init>() -> <init>
    75:77:void <init>(java.lang.Runnable) -> <init>
    95:96:void addCallback(androidx.activity.OnBackPressedCallback) -> addCallback
    145:152:void addCallback(androidx.lifecycle.LifecycleOwner,androidx.activity.OnBackPressedCallback) -> addCallback
    112:115:androidx.activity.Cancellable addCancellableCallback(androidx.activity.OnBackPressedCallback) -> addCancellableCallback
    162:169:boolean hasEnabledCallbacks() -> hasEnabledCallbacks
    184:196:void onBackPressed() -> onBackPressed
androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$LifecycleOnBackPressedCancellable:
    220:224:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.lifecycle.Lifecycle,androidx.activity.OnBackPressedCallback) -> <init>
    243:249:void cancel() -> cancel
    229:239:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable -> androidx.activity.OnBackPressedDispatcher$OnBackPressedCancellable:
    200:202:void <init>(androidx.activity.OnBackPressedDispatcher,androidx.activity.OnBackPressedCallback) -> <init>
    206:208:void cancel() -> cancel
androidx.annotation.InspectableProperty$ValueType -> androidx.annotation.InspectableProperty$ValueType:
    152:148:void <clinit>() -> <clinit>
    148:148:void <init>(java.lang.String,int) -> <init>
    148:148:androidx.annotation.InspectableProperty$ValueType valueOf(java.lang.String) -> valueOf
    148:148:androidx.annotation.InspectableProperty$ValueType[] values() -> values
androidx.annotation.RestrictTo$Scope -> androidx.annotation.RestrictTo$Scope:
    63:58:void <clinit>() -> <clinit>
    58:58:void <init>(java.lang.String,int) -> <init>
    58:58:androidx.annotation.RestrictTo$Scope valueOf(java.lang.String) -> valueOf
    58:58:androidx.annotation.RestrictTo$Scope[] values() -> values
androidx.appcompat.app.ActionBar -> androidx.appcompat.app.ActionBar:
    92:92:void <init>() -> <init>
    1074:1074:boolean closeOptionsMenu() -> closeOptionsMenu
    1098:1098:boolean collapseActionView() -> collapseActionView
    1057:1057:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    1036:1036:float getElevation() -> getElevation
    993:993:int getHideOffset() -> getHideOffset
    859:859:android.content.Context getThemedContext() -> getThemedContext
    1080:1080:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    980:980:boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    870:870:boolean isTitleTruncated() -> isTitleTruncated
    1052:1052:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1121:1121:void onDestroy() -> onDestroy
    1092:1092:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1086:1086:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    1068:1068:boolean openOptionsMenu() -> openOptionsMenu
    1114:1114:boolean requestFocus() -> requestFocus
    1042:1042:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    1021:1022:void setElevation(float) -> setElevation
    1006:1007:void setHideOffset(int) -> setHideOffset
    966:967:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    930:930:void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    950:950:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    890:890:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    911:911:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    847:847:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    1047:1047:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    540:540:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    530:530:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    1104:1104:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    1062:1062:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
androidx.appcompat.app.ActionBar$LayoutParams -> androidx.appcompat.app.ActionBar$LayoutParams:
    1377:1382:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1385:1387:void <init>(int,int) -> <init>
    1390:1392:void <init>(int,int,int) -> <init>
    1395:1396:void <init>(int) -> <init>
    1399:1402:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    1405:1406:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
androidx.appcompat.app.ActionBar$Tab -> androidx.appcompat.app.ActionBar$Tab:
    1171:1171:void <init>() -> <init>
androidx.appcompat.app.ActionBarDrawerToggle -> androidx.appcompat.app.ActionBarDrawerToggle:
    153:155:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,int,int) -> <init>
    184:186:void <init>(android.app.Activity,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.widget.Toolbar,int,int) -> <init>
    195:224:void <init>(android.app.Activity,androidx.appcompat.widget.Toolbar,androidx.drawerlayout.widget.DrawerLayout,androidx.appcompat.graphics.drawable.DrawerArrowDrawable,int,int) -> <init>
    371:371:androidx.appcompat.graphics.drawable.DrawerArrowDrawable getDrawerArrowDrawable() -> getDrawerArrowDrawable
    503:503:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    471:471:android.view.View$OnClickListener getToolbarNavigationClickListener() -> getToolbarNavigationClickListener
    340:340:boolean isDrawerIndicatorEnabled() -> isDrawerIndicatorEnabled
    400:400:boolean isDrawerSlideAnimationEnabled() -> isDrawerSlideAnimationEnabled
    258:262:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    444:448:void onDrawerClosed(android.view.View) -> onDrawerClosed
    429:433:void onDrawerOpened(android.view.View) -> onDrawerOpened
    413:418:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    459:459:void onDrawerStateChanged(int) -> onDrawerStateChanged
    274:278:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    499:500:void setActionBarDescription(int) -> setActionBarDescription
    489:496:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
    380:382:void setDrawerArrowDrawable(androidx.appcompat.graphics.drawable.DrawerArrowDrawable) -> setDrawerArrowDrawable
    354:364:void setDrawerIndicatorEnabled(boolean) -> setDrawerIndicatorEnabled
    390:394:void setDrawerSlideAnimationEnabled(boolean) -> setDrawerSlideAnimationEnabled
    303:314:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    328:333:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    507:513:void setPosition(float) -> setPosition
    485:486:void setToolbarNavigationClickListener(android.view.View$OnClickListener) -> setToolbarNavigationClickListener
    236:246:void syncState() -> syncState
    282:289:void toggle() -> toggle
androidx.appcompat.app.ActionBarDrawerToggle$1 -> androidx.appcompat.app.ActionBarDrawerToggle$1:
    198:198:void <init>(androidx.appcompat.app.ActionBarDrawerToggle) -> <init>
    201:206:void onClick(android.view.View) -> onClick
androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate -> androidx.appcompat.app.ActionBarDrawerToggle$FrameworkActionBarDelegate:
    519:521:void <init>(android.app.Activity) -> <init>
    538:542:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    525:531:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    547:548:boolean isNavigationVisible() -> isNavigationVisible
    570:579:void setActionBarDescription(int) -> setActionBarDescription
    554:566:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate -> androidx.appcompat.app.ActionBarDrawerToggle$ToolbarCompatDelegate:
    591:595:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    619:619:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    614:614:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    624:624:boolean isNavigationVisible() -> isNavigationVisible
    605:610:void setActionBarDescription(int) -> setActionBarDescription
    599:601:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb -> androidx.appcompat.app.ActionBarDrawerToggleHoneycomb:
    45:45:void <clinit>() -> <clinit>
    138:139:void <init>() -> <init>
    90:93:android.graphics.drawable.Drawable getThemeUpIndicator(android.app.Activity) -> getThemeUpIndicator
    70:86:androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarDescription(androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo,android.app.Activity,int) -> setActionBarDescription
    51:65:androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo setActionBarUpIndicator(android.app.Activity,android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo -> androidx.appcompat.app.ActionBarDrawerToggleHoneycomb$SetIndicatorInfo:
    101:135:void <init>(android.app.Activity) -> <init>
androidx.appcompat.app.AlertController -> androidx.appcompat.app.AlertController:
    182:206:void <init>(android.content.Context,androidx.appcompat.app.AppCompatDialog,android.view.Window) -> <init>
    209:227:boolean canTextInput(android.view.View) -> canTextInput
    829:833:void centerButton(android.widget.Button) -> centerButton
    408:414:android.widget.Button getButton(int) -> getButton
    398:400:int getIconAttributeResId(int) -> getIconAttributeResId
    404:404:android.widget.ListView getListView() -> getListView
    231:234:void installContent() -> installContent
    748:756:void manageScrollIndicators(android.view.View,android.view.View,android.view.View) -> manageScrollIndicators
    422:422:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    427:427:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    441:463:android.view.ViewGroup resolvePanel(android.view.View,android.view.View) -> resolvePanel
    237:243:int selectContentView() -> selectContentView
    323:350:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener,android.os.Message,android.graphics.drawable.Drawable) -> setButton
    303:304:void setButtonPanelLayoutHint(int) -> setButtonPanelLayoutHint
    257:258:void setCustomTitle(android.view.View) -> setCustomTitle
    359:370:void setIcon(int) -> setIcon
    378:389:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    261:265:void setMessage(java.lang.CharSequence) -> setMessage
    560:636:void setScrollIndicators(android.view.ViewGroup,android.view.View,int,int) -> setScrollIndicators
    247:251:void setTitle(java.lang.CharSequence) -> setTitle
    271:274:void setView(int) -> setView
    280:283:void setView(android.view.View) -> setView
    290:297:void setView(android.view.View,int,int,int,int) -> setView
    759:826:void setupButtons(android.view.ViewGroup) -> setupButtons
    719:745:void setupContent(android.view.ViewGroup) -> setupContent
    640:670:void setupCustomContent(android.view.ViewGroup) -> setupCustomContent
    673:716:void setupTitle(android.view.ViewGroup) -> setupTitle
    467:555:void setupView() -> setupView
    177:179:boolean shouldCenterSingleButton(android.content.Context) -> shouldCenterSingleButton
androidx.appcompat.app.AlertController$1 -> androidx.appcompat.app.AlertController$1:
    126:126:void <init>(androidx.appcompat.app.AlertController) -> <init>
    130:147:void onClick(android.view.View) -> onClick
androidx.appcompat.app.AlertController$2 -> androidx.appcompat.app.AlertController$2:
    591:591:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    596:597:void onScrollChange(androidx.core.widget.NestedScrollView,int,int,int,int) -> onScrollChange
androidx.appcompat.app.AlertController$3 -> androidx.appcompat.app.AlertController$3:
    600:600:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    603:604:void run() -> run
androidx.appcompat.app.AlertController$4 -> androidx.appcompat.app.AlertController$4:
    608:608:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    615:616:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    610:610:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.app.AlertController$5 -> androidx.appcompat.app.AlertController$5:
    619:619:void <init>(androidx.appcompat.app.AlertController,android.view.View,android.view.View) -> <init>
    622:623:void run() -> run
androidx.appcompat.app.AlertController$AlertParams -> androidx.appcompat.app.AlertController$AlertParams:
    924:928:void <init>(android.content.Context) -> <init>
    931:985:void apply(androidx.appcompat.app.AlertController) -> apply
    988:1098:void createListView(androidx.appcompat.app.AlertController) -> createListView
androidx.appcompat.app.AlertController$AlertParams$1 -> androidx.appcompat.app.AlertController$AlertParams$1:
    995:995:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,int,int,java.lang.CharSequence[],androidx.appcompat.app.AlertController$RecycleListView) -> <init>
    998:1005:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.app.AlertController$AlertParams$2 -> androidx.appcompat.app.AlertController$AlertParams$2:
    1009:1017:void <init>(androidx.appcompat.app.AlertController$AlertParams,android.content.Context,android.database.Cursor,boolean,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1021:1026:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    1030:1030:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
androidx.appcompat.app.AlertController$AlertParams$3 -> androidx.appcompat.app.AlertController$AlertParams$3:
    1065:1065:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController) -> <init>
    1068:1072:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$AlertParams$4 -> androidx.appcompat.app.AlertController$AlertParams$4:
    1075:1075:void <init>(androidx.appcompat.app.AlertController$AlertParams,androidx.appcompat.app.AlertController$RecycleListView,androidx.appcompat.app.AlertController) -> <init>
    1078:1083:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.app.AlertController$ButtonHandler -> androidx.appcompat.app.AlertController$ButtonHandler:
    156:158:void <init>(android.content.DialogInterface) -> <init>
    162:173:void handleMessage(android.os.Message) -> handleMessage
androidx.appcompat.app.AlertController$CheckedItemAdapter -> androidx.appcompat.app.AlertController$CheckedItemAdapter:
    1104:1105:void <init>(android.content.Context,int,int,java.lang.CharSequence[]) -> <init>
    1114:1114:long getItemId(int) -> getItemId
    1109:1109:boolean hasStableIds() -> hasStableIds
androidx.appcompat.app.AlertController$RecycleListView -> androidx.appcompat.app.AlertController$RecycleListView:
    840:841:void <init>(android.content.Context) -> <init>
    844:852:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    855:862:void setHasDecor(boolean,boolean) -> setHasDecor
androidx.appcompat.app.AlertDialog -> androidx.appcompat.app.AlertDialog:
    88:89:void <init>(android.content.Context) -> <init>
    98:100:void <init>(android.content.Context,int) -> <init>
    104:107:void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    131:131:android.widget.Button getButton(int) -> getButton
    140:140:android.widget.ListView getListView() -> getListView
    278:280:void onCreate(android.os.Bundle) -> onCreate
    284:287:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    292:295:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    111:116:int resolveDialogTheme(android.content.Context,int) -> resolveDialogTheme
    211:212:void setButton(int,java.lang.CharSequence,android.os.Message) -> setButton
    226:227:void setButton(int,java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setButton
    244:245:void setButton(int,java.lang.CharSequence,android.graphics.drawable.Drawable,android.content.DialogInterface$OnClickListener) -> setButton
    196:197:void setButtonPanelLayoutHint(int) -> setButtonPanelLayoutHint
    155:156:void setCustomTitle(android.view.View) -> setCustomTitle
    253:254:void setIcon(int) -> setIcon
    262:263:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    271:274:void setIconAttribute(int) -> setIconAttribute
    164:165:void setMessage(java.lang.CharSequence) -> setMessage
    145:147:void setTitle(java.lang.CharSequence) -> setTitle
    172:173:void setView(android.view.View) -> setView
    187:188:void setView(android.view.View,int,int,int,int) -> setView
androidx.appcompat.app.AlertDialog$Builder -> androidx.appcompat.app.AlertDialog$Builder:
    313:314:void <init>(android.content.Context) -> <init>
    342:346:void <init>(android.content.Context,int) -> <init>
    983:994:androidx.appcompat.app.AlertDialog create() -> create
    358:358:android.content.Context getContext() -> getContext
    659:661:androidx.appcompat.app.AlertDialog$Builder setAdapter(android.widget.ListAdapter,android.content.DialogInterface$OnClickListener) -> setAdapter
    579:580:androidx.appcompat.app.AlertDialog$Builder setCancelable(boolean) -> setCancelable
    678:681:androidx.appcompat.app.AlertDialog$Builder setCursor(android.database.Cursor,android.content.DialogInterface$OnClickListener,java.lang.String) -> setCursor
    398:399:androidx.appcompat.app.AlertDialog$Builder setCustomTitle(android.view.View) -> setCustomTitle
    430:431:androidx.appcompat.app.AlertDialog$Builder setIcon(int) -> setIcon
    445:446:androidx.appcompat.app.AlertDialog$Builder setIcon(android.graphics.drawable.Drawable) -> setIcon
    459:462:androidx.appcompat.app.AlertDialog$Builder setIconAttribute(int) -> setIconAttribute
    957:958:androidx.appcompat.app.AlertDialog$Builder setInverseBackgroundForced(boolean) -> setInverseBackgroundForced
    631:633:androidx.appcompat.app.AlertDialog$Builder setItems(int,android.content.DialogInterface$OnClickListener) -> setItems
    643:645:androidx.appcompat.app.AlertDialog$Builder setItems(java.lang.CharSequence[],android.content.DialogInterface$OnClickListener) -> setItems
    408:409:androidx.appcompat.app.AlertDialog$Builder setMessage(int) -> setMessage
    418:419:androidx.appcompat.app.AlertDialog$Builder setMessage(java.lang.CharSequence) -> setMessage
    704:708:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(int,boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    730:734:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(java.lang.CharSequence[],boolean[],android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    758:763:androidx.appcompat.app.AlertDialog$Builder setMultiChoiceItems(android.database.Cursor,java.lang.String,java.lang.String,android.content.DialogInterface$OnMultiChoiceClickListener) -> setMultiChoiceItems
    509:511:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(int,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    522:524:androidx.appcompat.app.AlertDialog$Builder setNegativeButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNegativeButton
    533:534:androidx.appcompat.app.AlertDialog$Builder setNegativeButtonIcon(android.graphics.drawable.Drawable) -> setNegativeButtonIcon
    545:547:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(int,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    558:560:androidx.appcompat.app.AlertDialog$Builder setNeutralButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setNeutralButton
    569:570:androidx.appcompat.app.AlertDialog$Builder setNeutralButtonIcon(android.graphics.drawable.Drawable) -> setNeutralButtonIcon
    600:601:androidx.appcompat.app.AlertDialog$Builder setOnCancelListener(android.content.DialogInterface$OnCancelListener) -> setOnCancelListener
    610:611:androidx.appcompat.app.AlertDialog$Builder setOnDismissListener(android.content.DialogInterface$OnDismissListener) -> setOnDismissListener
    868:869:androidx.appcompat.app.AlertDialog$Builder setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    620:621:androidx.appcompat.app.AlertDialog$Builder setOnKeyListener(android.content.DialogInterface$OnKeyListener) -> setOnKeyListener
    473:475:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(int,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    486:488:androidx.appcompat.app.AlertDialog$Builder setPositiveButton(java.lang.CharSequence,android.content.DialogInterface$OnClickListener) -> setPositiveButton
    497:498:androidx.appcompat.app.AlertDialog$Builder setPositiveButtonIcon(android.graphics.drawable.Drawable) -> setPositiveButtonIcon
    966:967:androidx.appcompat.app.AlertDialog$Builder setRecycleOnMeasureEnabled(boolean) -> setRecycleOnMeasureEnabled
    783:787:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(int,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    808:813:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.database.Cursor,int,java.lang.String,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    831:835:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(java.lang.CharSequence[],int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    853:857:androidx.appcompat.app.AlertDialog$Builder setSingleChoiceItems(android.widget.ListAdapter,int,android.content.DialogInterface$OnClickListener) -> setSingleChoiceItems
    367:368:androidx.appcompat.app.AlertDialog$Builder setTitle(int) -> setTitle
    377:378:androidx.appcompat.app.AlertDialog$Builder setTitle(java.lang.CharSequence) -> setTitle
    881:884:androidx.appcompat.app.AlertDialog$Builder setView(int) -> setView
    902:905:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View) -> setView
    935:942:androidx.appcompat.app.AlertDialog$Builder setView(android.view.View,int,int,int,int) -> setView
    1008:1010:androidx.appcompat.app.AlertDialog show() -> show
androidx.appcompat.app.AppCompatActivity -> androidx.appcompat.app.AppCompatActivity:
    77:78:void <init>() -> <init>
    92:93:void <init>(int) -> <init>
    176:177:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    97:99:void attachBaseContext(android.content.Context) -> attachBaseContext
    609:614:void closeOptionsMenu() -> closeOptionsMenu
    552:558:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    214:214:android.view.View findViewById(int) -> findViewById
    542:545:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    506:506:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    156:156:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    563:566:android.content.res.Resources getResources() -> getResources
    130:130:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    454:454:android.content.Intent getSupportParentActivityIntent() -> getSupportParentActivityIntent
    268:269:void invalidateOptionsMenu() -> invalidateOptionsMenu
    181:191:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    493:494:void onContentChanged() -> onContentChanged
    103:107:void onCreate(android.os.Bundle) -> onCreate
    371:372:void onCreateSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onCreateSupportNavigateUpTaskStack
    233:235:void onDestroy() -> onDestroy
    592:595:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    219:228:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    517:517:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    623:623:void onNightModeChanged(int) -> onNightModeChanged
    528:529:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    117:119:void onPostCreate(android.os.Bundle) -> onPostCreate
    195:197:void onPostResume() -> onPostResume
    390:390:void onPrepareSupportNavigateUpTaskStack(androidx.core.app.TaskStackBuilder) -> onPrepareSupportNavigateUpTaskStack
    533:535:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    201:203:void onStart() -> onStart
    207:209:void onStop() -> onStop
    291:291:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    280:280:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    501:501:void onSupportContentChanged() -> onSupportContentChanged
    416:439:boolean onSupportNavigateUp() -> onSupportNavigateUp
    239:241:void onTitleChanged(java.lang.CharSequence,int) -> onTitleChanged
    305:305:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    600:605:void openOptionsMenu() -> openOptionsMenu
    575:587:boolean performMenuItemShortcut(int,android.view.KeyEvent) -> performMenuItemShortcut
    161:162:void setContentView(int) -> setContentView
    166:167:void setContentView(android.view.View) -> setContentView
    171:172:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    150:151:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    345:345:void setSupportProgress(int) -> setSupportProgress
    338:338:void setSupportProgressBarIndeterminate(boolean) -> setSupportProgressBarIndeterminate
    331:331:void setSupportProgressBarIndeterminateVisibility(boolean) -> setSupportProgressBarIndeterminateVisibility
    324:324:void setSupportProgressBarVisibility(boolean) -> setSupportProgressBarVisibility
    111:113:void setTheme(int) -> setTheme
    316:316:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    263:264:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    487:488:void supportNavigateUpTo(android.content.Intent) -> supportNavigateUpTo
    258:258:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
    471:471:boolean supportShouldUpRecreateTask(android.content.Intent) -> supportShouldUpRecreateTask
androidx.appcompat.app.AppCompatDelegate -> androidx.appcompat.app.AppCompatDelegate:
    163:167:void <clinit>() -> <clinit>
    262:262:void <init>() -> <init>
    653:660:void applyDayNightToActiveDelegates() -> applyDayNightToActiveDelegates
    377:377:void attachBaseContext(android.content.Context) -> attachBaseContext
    221:221:androidx.appcompat.app.AppCompatDelegate create(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    232:232:androidx.appcompat.app.AppCompatDelegate create(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> create
    244:244:androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback) -> create
    256:256:androidx.appcompat.app.AppCompatDelegate create(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> create
    571:571:int getDefaultNightMode() -> getDefaultNightMode
    526:526:int getLocalNightMode() -> getLocalNightMode
    618:618:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    622:628:void markStarted(androidx.appcompat.app.AppCompatDelegate) -> markStarted
    632:635:void markStopped(androidx.appcompat.app.AppCompatDelegate) -> markStopped
    639:649:void removeDelegateFromActives(androidx.appcompat.app.AppCompatDelegate) -> removeDelegateFromActives
    608:609:void setCompatVectorFromResourcesEnabled(boolean) -> setCompatVectorFromResourcesEnabled
    547:562:void setDefaultNightMode(int) -> setDefaultNightMode
    339:339:void setTheme(int) -> setTheme
androidx.appcompat.app.AppCompatDelegateImpl -> androidx.appcompat.app.AppCompatDelegateImpl:
    130:185:void <clinit>() -> <clinit>
    278:279:void <init>(android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    282:283:void <init>(android.app.Dialog,androidx.appcompat.app.AppCompatCallback) -> <init>
    286:287:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback) -> <init>
    290:291:void <init>(android.content.Context,android.app.Activity,androidx.appcompat.app.AppCompatCallback) -> <init>
    294:329:void <init>(android.content.Context,android.view.Window,androidx.appcompat.app.AppCompatCallback,java.lang.Object) -> <init>
    570:574:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    2159:2159:boolean applyDayNight() -> applyDayNight
    2163:2185:boolean applyDayNight(boolean) -> applyDayNight
    873:907:void applyFixedSizeWindow() -> applyFixedSizeWindow
    334:336:void attachBaseContext(android.content.Context) -> attachBaseContext
    631:632:void attachToWindow(android.view.Window) -> attachToWindow
    2232:2232:int calculateNightMode() -> calculateNightMode
    1915:1939:void callOnPanelClosed(int,androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.Menu) -> callOnPanelClosed
    1800:1811:void checkCloseActionMenu(androidx.appcompat.view.menu.MenuBuilder) -> checkCloseActionMenu
    606:612:void cleanupAutoManagers() -> cleanupAutoManagers
    1814:1815:void closePanel(int) -> closePanel
    1818:1847:void closePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,boolean) -> closePanel
    692:696:android.view.ViewGroup createSubDecor() -> createSubDecor
    1375:1407:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> createView
    2133:2155:void dismissPopups() -> dismissPopups
    1307:1325:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2005:2029:void doInvalidatePanelMenu(int) -> doInvalidatePanelMenu
    1246:1249:void endOnGoingFadeAnimation() -> endOnGoingFadeAnimation
    658:689:void ensureSubDecor() -> ensureSubDecor
    622:626:void ensureWindow() -> ensureWindow
    1942:1950:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState findMenuPanel(android.view.Menu) -> findMenuPanel
    479:480:android.view.View findViewById(int) -> findViewById
    450:461:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    2398:2401:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoBatteryNightModeManager() -> getAutoBatteryNightModeManager
    2390:2394:androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager getAutoTimeNightModeManager() -> getAutoTimeNightModeManager
    3061:3061:androidx.appcompat.app.ActionBarDrawerToggle$Delegate getDrawerToggleDelegate() -> getDrawerToggleDelegate
    2198:2198:int getLocalNightMode() -> getLocalNightMode
    467:472:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1955:1967:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState getPanelState(int,boolean) -> getPanelState
    2129:2129:android.view.ViewGroup getSubDecor() -> getSubDecor
    383:384:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    992:996:java.lang.CharSequence getTitle() -> getTitle
    392:392:android.view.Window$Callback getWindowCallback() -> getWindowCallback
    953:974:boolean hasWindowFeature(int) -> hasWindowFeature
    396:399:void initWindowDecorActionBar() -> initWindowDecorActionBar
    1675:1692:boolean initializePanelContent(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelContent
    1581:1584:boolean initializePanelDecor(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelDecor
    1632:1671:boolean initializePanelMenu(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState) -> initializePanelMenu
    1441:1450:void installViewFactory() -> installViewFactory
    1071:1075:void invalidateOptionsMenu() -> invalidateOptionsMenu
    1996:2002:void invalidatePanelMenu(int) -> invalidatePanelMenu
    2405:2427:boolean isActivityManifestHandlingUiMode() -> isActivityManifestHandlingUiMode
    1242:1242:boolean isHandleNativeActionModesEnabled() -> isHandleNativeActionModesEnabled
    2203:2223:int mapNightMode(int) -> mapNightMode
    1253:1265:boolean onBackPressed() -> onBackPressed
    487:502:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    342:371:void onCreate(android.os.Bundle) -> onCreate
    1457:1457:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    1465:1465:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    587:602:void onDestroy() -> onDestroy
    1356:1369:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1850:1857:boolean onKeyDownPanel(int,android.view.KeyEvent) -> onKeyDownPanel
    1270:1301:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    1329:1352:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1861:1910:boolean onKeyUpPanel(int,android.view.KeyEvent) -> onKeyUpPanel
    1026:1033:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1038:1039:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1016:1022:void onMenuOpened(int) -> onMenuOpened
    1000:1013:void onPanelClosed(int) -> onPanelClosed
    376:377:void onPostCreate(android.os.Bundle) -> onPostCreate
    535:539:void onPostResume() -> onPostResume
    578:582:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    506:513:void onStart() -> onStart
    517:531:void onStop() -> onStop
    870:870:void onSubDecorInstalled(android.view.ViewGroup) -> onSubDecorInstalled
    1486:1487:void openPanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> openPanel
    388:388:androidx.appcompat.app.ActionBar peekSupportActionBar() -> peekSupportActionBar
    1972:1992:boolean performPanelShortcut(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,int,android.view.KeyEvent,int) -> performPanelShortcut
    1696:1796:boolean preparePanel(androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState,android.view.KeyEvent) -> preparePanel
    1588:1629:void reopenMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> reopenMenu
    911:945:boolean requestWindowFeature(int) -> requestWindowFeature
    2115:2125:int sanitizeWindowFeatureId(int) -> sanitizeWindowFeatureId
    543:548:void setContentView(android.view.View) -> setContentView
    552:557:void setContentView(int) -> setContentView
    561:566:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    1237:1238:void setHandleNativeActionModesEnabled(boolean) -> setHandleNativeActionModesEnabled
    2190:2194:void setLocalNightMode(int) -> setLocalNightMode
    414:421:void setSupportActionBar(androidx.appcompat.widget.Toolbar) -> setSupportActionBar
    616:617:void setTheme(int) -> setTheme
    979:988:void setTitle(java.lang.CharSequence) -> setTitle
    1232:1232:boolean shouldAnimateActionModeView() -> shouldAnimateActionModeView
    1415:1433:boolean shouldInheritContext(android.view.ViewParent) -> shouldInheritContext
    1043:1044:androidx.appcompat.view.ActionMode startSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionMode
    1078:1226:androidx.appcompat.view.ActionMode startSupportActionModeFromWindow(androidx.appcompat.view.ActionMode$Callback) -> startSupportActionModeFromWindow
    2108:2109:void throwFeatureRequestIfSubDecorInstalled() -> throwFeatureRequestIfSubDecorInstalled
    1470:1481:androidx.appcompat.app.AppCompatActivity tryUnwrapContext() -> tryUnwrapContext
    2245:2334:boolean updateForNightMode(int,boolean) -> updateForNightMode
    2341:2382:void updateResourcesConfigurationForNightMode(int,boolean) -> updateResourcesConfigurationForNightMode
    2038:2104:int updateStatusGuard(int) -> updateStatusGuard
androidx.appcompat.app.AppCompatDelegateImpl$1 -> androidx.appcompat.app.AppCompatDelegateImpl$1:
    158:158:void <init>(java.lang.Thread$UncaughtExceptionHandler) -> <init>
    174:179:boolean shouldWrapException(java.lang.Throwable) -> shouldWrapException
    161:171:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
androidx.appcompat.app.AppCompatDelegateImpl$2 -> androidx.appcompat.app.AppCompatDelegateImpl$2:
    256:256:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    259:267:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$3 -> androidx.appcompat.app.AppCompatDelegateImpl$3:
    780:780:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    784:796:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.appcompat.app.AppCompatDelegateImpl$4 -> androidx.appcompat.app.AppCompatDelegateImpl$4:
    802:802:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    805:806:void onFitSystemWindows(android.graphics.Rect) -> onFitSystemWindows
androidx.appcompat.app.AppCompatDelegateImpl$5 -> androidx.appcompat.app.AppCompatDelegateImpl$5:
    857:857:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    859:859:void onAttachedFromWindow() -> onAttachedFromWindow
    863:864:void onDetachedFromWindow() -> onDetachedFromWindow
androidx.appcompat.app.AppCompatDelegateImpl$6 -> androidx.appcompat.app.AppCompatDelegateImpl$6:
    1133:1133:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1136:1161:void run() -> run
androidx.appcompat.app.AppCompatDelegateImpl$6$1 -> androidx.appcompat.app.AppCompatDelegateImpl$6$1:
    1144:1144:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$6) -> <init>
    1152:1155:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1147:1148:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$7 -> androidx.appcompat.app.AppCompatDelegateImpl$7:
    1187:1187:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    1200:1203:void onAnimationEnd(android.view.View) -> onAnimationEnd
    1190:1196:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl -> androidx.appcompat.app.AppCompatDelegateImpl$ActionBarDrawableToggleImpl:
    3065:3066:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    3079:3079:android.content.Context getActionBarThemedContext() -> getActionBarThemedContext
    3070:3074:android.graphics.drawable.Drawable getThemeUpIndicator() -> getThemeUpIndicator
    3084:3085:boolean isNavigationVisible() -> isNavigationVisible
    3099:3103:void setActionBarDescription(int) -> setActionBarDescription
    3090:3095:void setActionBarUpIndicator(android.graphics.drawable.Drawable,int) -> setActionBarUpIndicator
androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$ActionMenuPresenterCallback:
    2521:2522:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2535:2536:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2526:2530:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9:
    2436:2438:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.view.ActionMode$Callback) -> <init>
    2452:2452:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    2442:2442:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    2457:2484:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    2447:2447:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1 -> androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9$1:
    2465:2465:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$ActionModeCallbackWrapperV9) -> <init>
    2468:2477:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback -> androidx.appcompat.app.AppCompatDelegateImpl$AppCompatWindowCallback:
    2807:2809:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.view.Window$Callback) -> <init>
    2813:2813:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2819:2819:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    2837:2837:void onContentChanged() -> onContentChanged
    2825:2830:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    2868:2870:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    2875:2877:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    2841:2863:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    2934:2943:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    2882:2891:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    2919:2927:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
    2901:2912:android.view.ActionMode startAsSupportActionMode(android.view.ActionMode$Callback) -> startAsSupportActionMode
androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoBatteryNightModeManager:
    3030:3032:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    3050:3055:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3037:3040:int getApplyableNightMode() -> getApplyableNightMode
    3045:3046:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager:
    2951:2951:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2983:2992:void cleanup() -> cleanup
    2995:2995:boolean isListening() -> isListening
    2960:2965:void setup() -> setup
androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1 -> androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager$1:
    2969:2969:void <init>(androidx.appcompat.app.AppCompatDelegateImpl$AutoNightModeManager) -> <init>
    2972:2973:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager -> androidx.appcompat.app.AppCompatDelegateImpl$AutoTimeNightModeManager:
    3002:3004:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,androidx.appcompat.app.TwilightManager) -> <init>
    3019:3023:android.content.IntentFilter createIntentFilterForBroadcastReceiver() -> createIntentFilterForBroadcastReceiver
    3009:3009:int getApplyableNightMode() -> getApplyableNightMode
    3014:3015:void onChange() -> onChange
androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView -> androidx.appcompat.app.AppCompatDelegateImpl$ListMenuDecorView:
    2771:2773:void <init>(androidx.appcompat.app.AppCompatDelegateImpl,android.content.Context) -> <init>
    2777:2777:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2801:2801:boolean isOutOfBounds(int,int) -> isOutOfBounds
    2783:2792:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    2797:2798:void setBackgroundResource(int) -> setBackgroundResource
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState:
    2604:2608:void <init>(int) -> <init>
    2710:2714:void applyFrozenState() -> applyFrozenState
    2621:2625:void clearMenuPresenters() -> clearMenuPresenters
    2672:2683:androidx.appcompat.view.menu.MenuView getListMenuView(androidx.appcompat.view.menu.MenuPresenter$Callback) -> getListMenuView
    2611:2614:boolean hasPanelItems() -> hasPanelItems
    2700:2707:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2687:2696:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2660:2669:void setMenu(androidx.appcompat.view.menu.MenuBuilder) -> setMenu
    2628:2657:void setStyle(android.content.Context) -> setStyle
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState:
    2751:2751:void <clinit>() -> <clinit>
    2721:2722:void <init>() -> <init>
    2726:2726:int describeContents() -> describeContents
    2740:2748:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState readFromParcel(android.os.Parcel,java.lang.ClassLoader) -> readFromParcel
    2731:2737:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1 -> androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState$1:
    2751:2751:void <init>() -> <init>
    2751:2751:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2751:2751:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2754:2754:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2759:2759:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2751:2751:java.lang.Object[] newArray(int) -> newArray
    2764:2764:androidx.appcompat.app.AppCompatDelegateImpl$PanelFeatureState$SavedState[] newArray(int) -> newArray
androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback -> androidx.appcompat.app.AppCompatDelegateImpl$PanelMenuPresenterCallback:
    2488:2489:void <init>(androidx.appcompat.app.AppCompatDelegateImpl) -> <init>
    2493:2506:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2510:2516:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.AppCompatDialog -> androidx.appcompat.app.AppCompatDialog:
    53:54:void <init>(android.content.Context) -> <init>
    57:68:void <init>(android.content.Context,int) -> <init>
    72:73:void <init>(android.content.Context,boolean,android.content.DialogInterface$OnCancelListener) -> <init>
    129:130:void addContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> addContentView
    206:207:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    112:112:android.view.View findViewById(int) -> findViewById
    169:172:androidx.appcompat.app.AppCompatDelegate getDelegate() -> getDelegate
    90:90:androidx.appcompat.app.ActionBar getSupportActionBar() -> getSupportActionBar
    176:182:int getThemeResId(android.content.Context,int) -> getThemeResId
    162:163:void invalidateOptionsMenu() -> invalidateOptionsMenu
    77:80:void onCreate(android.os.Bundle) -> onCreate
    134:136:void onStop() -> onStop
    191:191:void onSupportActionModeFinished(androidx.appcompat.view.ActionMode) -> onSupportActionModeFinished
    187:187:void onSupportActionModeStarted(androidx.appcompat.view.ActionMode) -> onSupportActionModeStarted
    196:196:androidx.appcompat.view.ActionMode onWindowStartingSupportActionMode(androidx.appcompat.view.ActionMode$Callback) -> onWindowStartingSupportActionMode
    95:96:void setContentView(int) -> setContentView
    100:101:void setContentView(android.view.View) -> setContentView
    105:106:void setContentView(android.view.View,android.view.ViewGroup$LayoutParams) -> setContentView
    117:119:void setTitle(java.lang.CharSequence) -> setTitle
    123:125:void setTitle(int) -> setTitle
    201:201:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
    153:153:boolean supportRequestWindowFeature(int) -> supportRequestWindowFeature
androidx.appcompat.app.AppCompatDialog$1 -> androidx.appcompat.app.AppCompatDialog$1:
    45:45:void <init>(androidx.appcompat.app.AppCompatDialog) -> <init>
    48:48:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.appcompat.app.AppCompatDialogFragment -> androidx.appcompat.app.AppCompatDialogFragment:
    38:38:void <init>() -> <init>
    43:43:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    50:67:void setupDialog(android.app.Dialog,int) -> setupDialog
androidx.appcompat.app.AppCompatViewInflater -> androidx.appcompat.app.AppCompatViewInflater:
    63:75:void <clinit>() -> <clinit>
    61:78:void <init>() -> <init>
    301:308:void checkOnClickListener(android.view.View,android.util.AttributeSet) -> checkOnClickListener
    228:228:androidx.appcompat.widget.AppCompatAutoCompleteTextView createAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createAutoCompleteTextView
    192:192:androidx.appcompat.widget.AppCompatButton createButton(android.content.Context,android.util.AttributeSet) -> createButton
    212:212:androidx.appcompat.widget.AppCompatCheckBox createCheckBox(android.content.Context,android.util.AttributeSet) -> createCheckBox
    222:222:androidx.appcompat.widget.AppCompatCheckedTextView createCheckedTextView(android.content.Context,android.util.AttributeSet) -> createCheckedTextView
    197:197:androidx.appcompat.widget.AppCompatEditText createEditText(android.content.Context,android.util.AttributeSet) -> createEditText
    207:207:androidx.appcompat.widget.AppCompatImageButton createImageButton(android.content.Context,android.util.AttributeSet) -> createImageButton
    187:187:androidx.appcompat.widget.AppCompatImageView createImageView(android.content.Context,android.util.AttributeSet) -> createImageView
    234:234:androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView createMultiAutoCompleteTextView(android.content.Context,android.util.AttributeSet) -> createMultiAutoCompleteTextView
    217:217:androidx.appcompat.widget.AppCompatRadioButton createRadioButton(android.content.Context,android.util.AttributeSet) -> createRadioButton
    239:239:androidx.appcompat.widget.AppCompatRatingBar createRatingBar(android.content.Context,android.util.AttributeSet) -> createRatingBar
    244:244:androidx.appcompat.widget.AppCompatSeekBar createSeekBar(android.content.Context,android.util.AttributeSet) -> createSeekBar
    202:202:androidx.appcompat.widget.AppCompatSpinner createSpinner(android.content.Context,android.util.AttributeSet) -> createSpinner
    182:182:androidx.appcompat.widget.AppCompatTextView createTextView(android.content.Context,android.util.AttributeSet) -> createTextView
    249:249:androidx.appcompat.widget.AppCompatToggleButton createToggleButton(android.content.Context,android.util.AttributeSet) -> createToggleButton
    83:177:android.view.View createView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet,boolean,boolean,boolean,boolean) -> createView
    261:261:android.view.View createView(android.content.Context,java.lang.String,android.util.AttributeSet) -> createView
    321:339:android.view.View createViewByPrefix(android.content.Context,java.lang.String,java.lang.String) -> createViewByPrefix
    265:287:android.view.View createViewFromTag(android.content.Context,java.lang.String,android.util.AttributeSet) -> createViewFromTag
    348:371:android.content.Context themifyContext(android.content.Context,android.util.AttributeSet,boolean,boolean) -> themifyContext
    253:254:void verifyNotNull(android.view.View,java.lang.String) -> verifyNotNull
androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener -> androidx.appcompat.app.AppCompatViewInflater$DeclaredOnClickListener:
    385:388:void <init>(android.view.View,java.lang.String) -> <init>
    392:399:void onClick(android.view.View) -> onClick
    409:436:void resolveMethod(android.content.Context,java.lang.String) -> resolveMethod
androidx.appcompat.app.NavItemSelectedListener -> androidx.appcompat.app.NavItemSelectedListener:
    30:32:void <init>(androidx.appcompat.app.ActionBar$OnNavigationListener) -> <init>
    36:39:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    44:44:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.app.ResourcesFlusher -> androidx.appcompat.app.ResourcesFlusher:
    209:210:void <init>() -> <init>
    46:56:void flush(android.content.res.Resources) -> flush
    60:80:void flushLollipops(android.content.res.Resources) -> flushLollipops
    84:109:void flushMarshmallows(android.content.res.Resources) -> flushMarshmallows
    113:162:void flushNougats(android.content.res.Resources) -> flushNougats
    166:207:void flushThemedResourcesCache(java.lang.Object) -> flushThemedResourcesCache
androidx.appcompat.app.ToolbarActionBar -> androidx.appcompat.app.ToolbarActionBar:
    68:74:void <init>(androidx.appcompat.widget.Toolbar,java.lang.CharSequence,android.view.Window$Callback) -> <init>
    494:495:void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    334:334:void addTab(androidx.appcompat.app.ActionBar$Tab) -> addTab
    340:340:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> addTab
    346:346:void addTab(androidx.appcompat.app.ActionBar$Tab,int) -> addTab
    352:352:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> addTab
    428:428:boolean closeOptionsMenu() -> closeOptionsMenu
    440:444:boolean collapseActionView() -> collapseActionView
    504:513:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    295:295:android.view.View getCustomView() -> getCustomView
    323:323:int getDisplayOptions() -> getDisplayOptions
    141:141:float getElevation() -> getElevation
    399:399:int getHeight() -> getHeight
    543:548:android.view.Menu getMenu() -> getMenu
    213:213:int getNavigationItemCount() -> getNavigationItemCount
    310:310:int getNavigationMode() -> getNavigationMode
    208:208:int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    382:382:androidx.appcompat.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    305:305:java.lang.CharSequence getSubtitle() -> getSubtitle
    388:388:androidx.appcompat.app.ActionBar$Tab getTabAt(int) -> getTabAt
    394:394:int getTabCount() -> getTabCount
    146:146:android.content.Context getThemedContext() -> getThemedContext
    300:300:java.lang.CharSequence getTitle() -> getTitle
    77:77:android.view.Window$Callback getWrappedWindowCallback() -> getWrappedWindowCallback
    413:414:void hide() -> hide
    433:435:boolean invalidateOptionsMenu() -> invalidateOptionsMenu
    418:418:boolean isShowing() -> isShowing
    151:151:boolean isTitleTruncated() -> isTitleTruncated
    328:328:androidx.appcompat.app.ActionBar$Tab newTab() -> newTab
    186:187:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    489:490:void onDestroy() -> onDestroy
    476:483:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    468:471:boolean onMenuKeyEvent(android.view.KeyEvent) -> onMenuKeyEvent
    423:423:boolean openOptionsMenu() -> openOptionsMenu
    448:463:void populateOptionsMenu() -> populateOptionsMenu
    370:370:void removeAllTabs() -> removeAllTabs
    499:500:void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    358:358:void removeTab(androidx.appcompat.app.ActionBar$Tab) -> removeTab
    364:364:void removeTabAt(int) -> removeTabAt
    233:238:boolean requestFocus() -> requestFocus
    376:376:void selectTab(androidx.appcompat.app.ActionBar$Tab) -> selectTab
    290:291:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    82:83:void setCustomView(android.view.View) -> setCustomView
    87:91:void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams) -> setCustomView
    95:97:void setCustomView(int) -> setCustomView
    172:172:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    275:276:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    254:255:void setDisplayOptions(int) -> setDisplayOptions
    259:261:void setDisplayOptions(int,int) -> setDisplayOptions
    285:286:void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    270:271:void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    280:281:void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    265:266:void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    136:137:void setElevation(float) -> setElevation
    166:167:void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    176:177:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    156:157:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    161:162:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    132:132:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    101:102:void setIcon(int) -> setIcon
    106:107:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    191:192:void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    111:112:void setLogo(int) -> setLogo
    116:117:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    315:316:void setNavigationMode(int) -> setNavigationMode
    196:201:void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    182:182:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    127:127:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    122:122:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    243:244:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    248:249:void setSubtitle(int) -> setSubtitle
    218:219:void setTitle(java.lang.CharSequence) -> setTitle
    223:224:void setTitle(int) -> setTitle
    228:229:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    406:407:void show() -> show
androidx.appcompat.app.ToolbarActionBar$1 -> androidx.appcompat.app.ToolbarActionBar$1:
    53:53:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    56:57:void run() -> run
androidx.appcompat.app.ToolbarActionBar$2 -> androidx.appcompat.app.ToolbarActionBar$2:
    61:61:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    64:64:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback -> androidx.appcompat.app.ToolbarActionBar$ActionMenuPresenterCallback:
    554:555:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    568:578:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    559:563:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback -> androidx.appcompat.app.ToolbarActionBar$MenuBuilderCallback:
    583:584:void <init>(androidx.appcompat.app.ToolbarActionBar) -> <init>
    588:588:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    593:601:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper -> androidx.appcompat.app.ToolbarActionBar$ToolbarCallbackWrapper:
    516:518:void <init>(androidx.appcompat.app.ToolbarActionBar,android.view.Window$Callback) -> <init>
    532:538:android.view.View onCreatePanelView(int) -> onCreatePanelView
    522:527:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
androidx.appcompat.app.TwilightCalculator -> androidx.appcompat.app.TwilightCalculator:
    26:26:void <init>() -> <init>
    89:138:void calculateTwilight(long,double,double) -> calculateTwilight
    31:34:androidx.appcompat.app.TwilightCalculator getInstance() -> getInstance
androidx.appcompat.app.TwilightManager -> androidx.appcompat.app.TwilightManager:
    69:72:void <init>(android.content.Context,android.location.LocationManager) -> <init>
    50:55:androidx.appcompat.app.TwilightManager getInstance(android.content.Context) -> getInstance
    107:127:android.location.Location getLastKnownLocation() -> getLastKnownLocation
    134:140:android.location.Location getLastKnownLocationForProvider(java.lang.String) -> getLastKnownLocationForProvider
    80:102:boolean isNight() -> isNight
    144:144:boolean isStateValid() -> isStateValid
    60:61:void setInstance(androidx.appcompat.app.TwilightManager) -> setInstance
    148:192:void updateState(android.location.Location) -> updateState
androidx.appcompat.app.TwilightManager$TwilightState -> androidx.appcompat.app.TwilightManager$TwilightState:
    205:206:void <init>() -> <init>
androidx.appcompat.app.WindowDecorActionBar -> androidx.appcompat.app.WindowDecorActionBar:
    79:85:void <clinit>() -> <clinit>
    169:177:void <init>(android.app.Activity,boolean) -> <init>
    179:182:void <init>(android.app.Dialog) -> <init>
    189:192:void <init>(android.view.View) -> <init>
    341:342:void addOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> addOnMenuVisibilityListener
    562:563:void addTab(androidx.appcompat.app.ActionBar$Tab) -> addTab
    567:568:void addTab(androidx.appcompat.app.ActionBar$Tab,int) -> addTab
    572:578:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> addTab
    582:588:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> addTab
    875:911:void animateToMode(boolean) -> animateToMode
    760:763:boolean checkShowingFlags(boolean,boolean,boolean) -> checkShowingFlags
    429:437:void cleanupTabs() -> cleanupTabs
    975:979:boolean collapseActionView() -> collapseActionView
    312:317:void completeDeferredDestroyActionMode() -> completeDeferredDestroyActionMode
    544:548:void configureTab(androidx.appcompat.app.ActionBar$Tab,int) -> configureTab
    351:360:void dispatchMenuVisibilityChanged(boolean) -> dispatchMenuVisibilityChanged
    837:865:void doHide(boolean) -> doHide
    788:834:void doShow(boolean) -> doShow
    674:675:void enableContentAnimations(boolean) -> enableContentAnimations
    288:309:void ensureTabsExist() -> ensureTabsExist
    498:498:android.view.View getCustomView() -> getCustomView
    237:243:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    518:518:int getDisplayOptions() -> getDisplayOptions
    254:254:float getElevation() -> getElevation
    669:669:int getHeight() -> getHeight
    746:746:int getHideOffset() -> getHideOffset
    1314:1318:int getNavigationItemCount() -> getNavigationItemCount
    513:513:int getNavigationMode() -> getNavigationMode
    1302:1306:int getSelectedNavigationIndex() -> getSelectedNavigationIndex
    664:664:androidx.appcompat.app.ActionBar$Tab getSelectedTab() -> getSelectedTab
    508:508:java.lang.CharSequence getSubtitle() -> getSubtitle
    1361:1361:androidx.appcompat.app.ActionBar$Tab getTabAt(int) -> getTabAt
    1326:1326:int getTabCount() -> getTabCount
    921:933:android.content.Context getThemedContext() -> getThemedContext
    503:503:java.lang.CharSequence getTitle() -> getTitle
    1376:1376:boolean hasIcon() -> hasIcon
    1390:1390:boolean hasLogo() -> hasLogo
    705:709:void hide() -> hide
    712:719:void hideForActionMode() -> hideForActionMode
    723:727:void hideForSystem() -> hideForSystem
    195:206:void init(android.view.View) -> init
    741:741:boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    869:871:boolean isShowing() -> isShowing
    938:938:boolean isTitleTruncated() -> isTitleTruncated
    592:592:androidx.appcompat.app.ActionBar$Tab newTab() -> newTab
    259:260:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    963:967:void onContentScrollStarted() -> onContentScrollStarted
    971:971:void onContentScrollStopped() -> onContentScrollStopped
    1402:1412:boolean onKeyShortcut(int,android.view.KeyEvent) -> onKeyShortcut
    321:322:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    425:426:void removeAllTabs() -> removeAllTabs
    346:347:void removeOnMenuVisibilityListener(androidx.appcompat.app.ActionBar$OnMenuVisibilityListener) -> removeOnMenuVisibilityListener
    597:598:void removeTab(androidx.appcompat.app.ActionBar$Tab) -> removeTab
    602:623:void removeTabAt(int) -> removeTabAt
    451:456:boolean requestFocus() -> requestFocus
    627:660:void selectTab(androidx.appcompat.app.ActionBar$Tab) -> selectTab
    483:484:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    364:366:void setCustomView(int) -> setCustomView
    1286:1287:void setCustomView(android.view.View) -> setCustomView
    1291:1293:void setCustomView(android.view.View,androidx.appcompat.app.ActionBar$LayoutParams) -> setCustomView
    1395:1398:void setDefaultDisplayHomeAsUpEnabled(boolean) -> setDefaultDisplayHomeAsUpEnabled
    380:381:void setDisplayHomeAsUpEnabled(boolean) -> setDisplayHomeAsUpEnabled
    466:470:void setDisplayOptions(int) -> setDisplayOptions
    474:479:void setDisplayOptions(int,int) -> setDisplayOptions
    390:391:void setDisplayShowCustomEnabled(boolean) -> setDisplayShowCustomEnabled
    375:376:void setDisplayShowHomeEnabled(boolean) -> setDisplayShowHomeEnabled
    385:386:void setDisplayShowTitleEnabled(boolean) -> setDisplayShowTitleEnabled
    370:371:void setDisplayUseLogoEnabled(boolean) -> setDisplayUseLogoEnabled
    249:250:void setElevation(float) -> setElevation
    263:285:void setHasEmbeddedTabs(boolean) -> setHasEmbeddedTabs
    751:756:void setHideOffset(int) -> setHideOffset
    731:737:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    953:954:void setHomeActionContentDescription(java.lang.CharSequence) -> setHomeActionContentDescription
    958:959:void setHomeActionContentDescription(int) -> setHomeActionContentDescription
    943:944:void setHomeAsUpIndicator(android.graphics.drawable.Drawable) -> setHomeAsUpIndicator
    948:949:void setHomeAsUpIndicator(int) -> setHomeAsUpIndicator
    395:396:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    1367:1368:void setIcon(int) -> setIcon
    1372:1373:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    1297:1298:void setListNavigationCallbacks(android.widget.SpinnerAdapter,androidx.appcompat.app.ActionBar$OnNavigationListener) -> setListNavigationCallbacks
    1381:1382:void setLogo(int) -> setLogo
    1386:1387:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    1331:1357:void setNavigationMode(int) -> setNavigationMode
    410:421:void setSelectedNavigationItem(int) -> setSelectedNavigationItem
    333:337:void setShowHideAnimationEnabled(boolean) -> setShowHideAnimationEnabled
    494:494:void setSplitBackgroundDrawable(android.graphics.drawable.Drawable) -> setSplitBackgroundDrawable
    488:489:void setStackedBackgroundDrawable(android.graphics.drawable.Drawable) -> setStackedBackgroundDrawable
    405:406:void setSubtitle(int) -> setSubtitle
    461:462:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    400:401:void setTitle(int) -> setTitle
    441:442:void setTitle(java.lang.CharSequence) -> setTitle
    446:447:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    916:916:boolean shouldAnimateContextView() -> shouldAnimateContextView
    679:683:void show() -> show
    686:693:void showForActionMode() -> showForActionMode
    697:701:void showForSystem() -> showForSystem
    523:540:androidx.appcompat.view.ActionMode startActionMode(androidx.appcompat.view.ActionMode$Callback) -> startActionMode
    771:785:void updateVisibility(boolean) -> updateVisibility
androidx.appcompat.app.WindowDecorActionBar$1 -> androidx.appcompat.app.WindowDecorActionBar$1:
    135:135:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    138:149:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$2 -> androidx.appcompat.app.WindowDecorActionBar$2:
    152:152:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    155:157:void onAnimationEnd(android.view.View) -> onAnimationEnd
androidx.appcompat.app.WindowDecorActionBar$3 -> androidx.appcompat.app.WindowDecorActionBar$3:
    161:161:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    164:166:void onAnimationUpdate(android.view.View) -> onAnimationUpdate
androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl -> androidx.appcompat.app.WindowDecorActionBar$ActionModeImpl:
    993:999:void <init>(androidx.appcompat.app.WindowDecorActionBar,android.content.Context,androidx.appcompat.view.ActionMode$Callback) -> <init>
    1060:1065:boolean dispatchOnCreate() -> dispatchOnCreate
    1013:1040:void finish() -> finish
    1117:1117:android.view.View getCustomView() -> getCustomView
    1008:1008:android.view.Menu getMenu() -> getMenu
    1003:1003:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    1101:1101:java.lang.CharSequence getSubtitle() -> getSubtitle
    1096:1096:java.lang.CharSequence getTitle() -> getTitle
    1044:1056:void invalidate() -> invalidate
    1112:1112:boolean isTitleOptional() -> isTitleOptional
    1130:1130:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    1146:1146:void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> onCloseSubMenu
    1122:1125:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    1150:1155:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    1133:1142:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    1070:1072:void setCustomView(android.view.View) -> setCustomView
    1076:1077:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    1091:1092:void setSubtitle(int) -> setSubtitle
    1081:1082:void setTitle(java.lang.CharSequence) -> setTitle
    1086:1087:void setTitle(int) -> setTitle
    1106:1108:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.app.WindowDecorActionBar$TabImpl -> androidx.appcompat.app.WindowDecorActionBar$TabImpl:
    1162:1168:void <init>(androidx.appcompat.app.WindowDecorActionBar) -> <init>
    1183:1183:androidx.appcompat.app.ActionBar$TabListener getCallback() -> getCallback
    1280:1280:java.lang.CharSequence getContentDescription() -> getContentDescription
    1194:1194:android.view.View getCustomView() -> getCustomView
    1214:1214:android.graphics.drawable.Drawable getIcon() -> getIcon
    1219:1219:int getPosition() -> getPosition
    1173:1173:java.lang.Object getTag() -> getTag
    1228:1228:java.lang.CharSequence getText() -> getText
    1261:1262:void select() -> select
    1266:1266:androidx.appcompat.app.ActionBar$Tab setContentDescription(int) -> setContentDescription
    1271:1275:androidx.appcompat.app.ActionBar$Tab setContentDescription(java.lang.CharSequence) -> setContentDescription
    1199:1203:androidx.appcompat.app.ActionBar$Tab setCustomView(android.view.View) -> setCustomView
    1208:1208:androidx.appcompat.app.ActionBar$Tab setCustomView(int) -> setCustomView
    1233:1237:androidx.appcompat.app.ActionBar$Tab setIcon(android.graphics.drawable.Drawable) -> setIcon
    1242:1242:androidx.appcompat.app.ActionBar$Tab setIcon(int) -> setIcon
    1223:1224:void setPosition(int) -> setPosition
    1188:1189:androidx.appcompat.app.ActionBar$Tab setTabListener(androidx.appcompat.app.ActionBar$TabListener) -> setTabListener
    1178:1179:androidx.appcompat.app.ActionBar$Tab setTag(java.lang.Object) -> setTag
    1247:1251:androidx.appcompat.app.ActionBar$Tab setText(java.lang.CharSequence) -> setText
    1256:1256:androidx.appcompat.app.ActionBar$Tab setText(int) -> setText
androidx.appcompat.content.res.AppCompatResources -> androidx.appcompat.content.res.AppCompatResources:
    50:55:void <clinit>() -> <clinit>
    57:57:void <init>() -> <init>
    150:158:void addColorStateListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addColorStateListToCache
    130:144:android.content.res.ColorStateList getCachedColorStateList(android.content.Context,int) -> getCachedColorStateList
    67:86:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    104:104:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    173:178:android.util.TypedValue getTypedValue() -> getTypedValue
    112:124:android.content.res.ColorStateList inflateColorStateList(android.content.Context,int) -> inflateColorStateList
    162:167:boolean isColorInt(android.content.Context,int) -> isColorInt
androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry -> androidx.appcompat.content.res.AppCompatResources$ColorStateListCacheEntry:
    186:189:void <init>(android.content.res.ColorStateList,android.content.res.Configuration) -> <init>
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat:
    92:92:void <clinit>() -> <clinit>
    111:112:void <init>() -> <init>
    116:122:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,android.content.res.Resources) -> <init>
    89:89:void addState(int[],android.graphics.drawable.Drawable) -> addState
    234:235:void addState(int[],android.graphics.drawable.Drawable,int) -> addState
    251:252:void addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> addTransition
    89:89:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    89:89:boolean canApplyTheme() -> canApplyTheme
    619:621:void clearMutated() -> clearMutated
    89:89:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    89:89:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    614:614:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState cloneConstantState() -> cloneConstantState
    138:156:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat create(android.content.Context,int,android.content.res.Resources$Theme) -> create
    171:174:androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    89:89:void draw(android.graphics.Canvas) -> draw
    89:89:int getAlpha() -> getAlpha
    89:89:int getChangingConfigurations() -> getChangingConfigurations
    89:89:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    89:89:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    89:89:int getIntrinsicHeight() -> getIntrinsicHeight
    89:89:int getIntrinsicWidth() -> getIntrinsicWidth
    89:89:int getMinimumHeight() -> getMinimumHeight
    89:89:int getMinimumWidth() -> getMinimumWidth
    89:89:int getOpacity() -> getOpacity
    89:89:void getOutline(android.graphics.Outline) -> getOutline
    89:89:boolean getPadding(android.graphics.Rect) -> getPadding
    201:210:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    483:500:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    472:473:void init() -> init
    89:89:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    89:89:boolean isAutoMirrored() -> isAutoMirrored
    259:259:boolean isStateful() -> isStateful
    264:272:void jumpToCurrentState() -> jumpToCurrentState
    605:609:android.graphics.drawable.Drawable mutate() -> mutate
    89:89:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    278:288:boolean onStateChange(int[]) -> onStateChange
    564:598:int parseItem(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseItem
    510:548:int parseTransition(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> parseTransition
    89:89:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    293:321:boolean selectTransition(int) -> selectTransition
    89:89:void setAlpha(int) -> setAlpha
    89:89:void setAutoMirrored(boolean) -> setAutoMirrored
    89:89:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    718:722:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    89:89:void setDither(boolean) -> setDither
    89:89:void setEnterFadeDuration(int) -> setEnterFadeDuration
    89:89:void setExitFadeDuration(int) -> setExitFadeDuration
    89:89:void setHotspot(float,float) -> setHotspot
    89:89:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    89:89:void setTintList(android.content.res.ColorStateList) -> setTintList
    89:89:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    214:223:boolean setVisible(boolean,boolean) -> setVisible
    89:89:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    449:469:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatableTransition:
    370:372:void <init>(android.graphics.drawable.Animatable) -> <init>
    376:377:void start() -> start
    381:382:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState:
    634:643:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedStateListState,androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat,android.content.res.Resources) -> <init>
    667:669:int addStateSet(int[],android.graphics.drawable.Drawable,int) -> addStateSet
    652:663:int addTransition(int,int,android.graphics.drawable.Drawable,boolean) -> addTransition
    712:712:long generateTransitionKey(int,int) -> generateTransitionKey
    681:681:int getKeyframeIdAt(int) -> getKeyframeIdAt
    673:677:int indexOfKeyframe(int[]) -> indexOfKeyframe
    685:686:int indexOfTransition(int,int) -> indexOfTransition
    690:691:boolean isTransitionReversed(int,int) -> isTransitionReversed
    647:649:void mutate() -> mutate
    702:702:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    708:708:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    695:696:boolean transitionHasReversibleFlag(int,int) -> transitionHasReversibleFlag
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimatedVectorDrawableTransition:
    433:435:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    439:440:void start() -> start
    444:445:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$AnimationDrawableTransition:
    392:407:void <init>(android.graphics.drawable.AnimationDrawable,boolean,boolean) -> <init>
    411:411:boolean canReverse() -> canReverse
    421:422:void reverse() -> reverse
    416:417:void start() -> start
    426:427:void stop() -> stop
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$FrameInterpolator:
    732:734:void <init>(android.graphics.drawable.AnimationDrawable,boolean) -> <init>
    759:776:float getInterpolation(float) -> getInterpolation
    754:754:int getTotalDuration() -> getTotalDuration
    737:750:int updateFrames(android.graphics.drawable.AnimationDrawable,boolean) -> updateFrames
androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition -> androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$Transition:
    353:353:void <init>() -> <init>
    353:353:void <init>(androidx.appcompat.graphics.drawable.AnimatedStateListDrawableCompat$1) -> <init>
    363:363:boolean canReverse() -> canReverse
    360:360:void reverse() -> reverse
androidx.appcompat.graphics.drawable.DrawableContainer -> androidx.appcompat.graphics.drawable.DrawableContainer:
    53:75:void <init>() -> <init>
    535:573:void animate(boolean) -> animate
    595:596:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    601:601:boolean canApplyTheme() -> canApplyTheme
    636:638:void clearMutated() -> clearMutated
    632:632:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    87:93:void draw(android.graphics.Canvas) -> draw
    154:154:int getAlpha() -> getAlpha
    97:97:int getChangingConfigurations() -> getChangingConfigurations
    606:610:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    578:578:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    414:414:int getCurrentIndex() -> getCurrentIndex
    296:301:void getHotspotBounds(android.graphics.Rect) -> getHotspotBounds
    342:345:int getIntrinsicHeight() -> getIntrinsicHeight
    334:337:int getIntrinsicWidth() -> getIntrinsicWidth
    358:361:int getMinimumHeight() -> getMinimumHeight
    350:353:int getMinimumWidth() -> getMinimumWidth
    405:405:int getOpacity() -> getOpacity
    132:135:void getOutline(android.graphics.Outline) -> getOutline
    108:126:boolean getPadding(android.graphics.Rect) -> getPadding
    491:531:void initializeDrawableForDisplay(android.graphics.drawable.Drawable) -> initializeDrawableForDisplay
    369:375:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    244:244:boolean isAutoMirrored() -> isAutoMirrored
    228:228:boolean isStateful() -> isStateful
    249:273:void jumpToCurrentState() -> jumpToCurrentState
    616:622:android.graphics.drawable.Drawable mutate() -> mutate
    102:102:boolean needsMirroring() -> needsMirroring
    218:224:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    329:329:boolean onLayoutDirectionChanged(int) -> onLayoutDirectionChanged
    316:322:boolean onLevelChange(int) -> onLevelChange
    305:311:boolean onStateChange(int[]) -> onStateChange
    1204:1205:int resolveDensity(android.content.res.Resources,int) -> resolveDensity
    379:382:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    427:482:boolean selectDrawable(int) -> selectDrawable
    139:150:void setAlpha(int) -> setAlpha
    233:240:void setAutoMirrored(boolean) -> setAutoMirrored
    169:176:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    1152:1164:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    410:411:void setCurrentIndex(int) -> setCurrentIndex
    159:165:void setDither(boolean) -> setDither
    203:204:void setEnterFadeDuration(int) -> setEnterFadeDuration
    213:214:void setExitFadeDuration(int) -> setExitFadeDuration
    277:280:void setHotspot(float,float) -> setHotspot
    284:292:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    180:185:void setTintList(android.content.res.ColorStateList) -> setTintList
    189:194:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    393:400:boolean setVisible(boolean,boolean) -> setVisible
    386:389:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    589:590:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableContainer$1 -> androidx.appcompat.graphics.drawable.DrawableContainer$1:
    468:468:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer) -> <init>
    471:473:void run() -> run
androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback -> androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback:
    1169:1169:void <init>() -> <init>
    1186:1186:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    1190:1193:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    1197:1200:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    1178:1180:android.graphics.drawable.Drawable$Callback unwrap() -> unwrap
    1173:1174:androidx.appcompat.graphics.drawable.DrawableContainer$BlockInvalidateCallback wrap(android.graphics.drawable.Drawable$Callback) -> wrap
androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState -> androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState:
    684:757:void <init>(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState,androidx.appcompat.graphics.drawable.DrawableContainer,android.content.res.Resources) -> <init>
    771:786:int addChild(android.graphics.drawable.Drawable) -> addChild
    895:908:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    913:928:boolean canApplyTheme() -> canApplyTheme
    1133:1132:boolean canConstantState() -> canConstantState
    952:953:void clearMutated() -> clearMutated
    1044:1061:void computeConstantSize() -> computeConstantSize
    802:811:void createAllFutures() -> createAllFutures
    798:798:int getCapacity() -> getCapacity
    761:761:int getChangingConfigurations() -> getChangingConfigurations
    830:848:android.graphics.drawable.Drawable getChild(int) -> getChild
    823:823:int getChildCount() -> getChildCount
    1017:1020:int getConstantHeight() -> getConstantHeight
    1037:1040:int getConstantMinimumHeight() -> getConstantMinimumHeight
    1027:1030:int getConstantMinimumWidth() -> getConstantMinimumWidth
    968:972:android.graphics.Rect getConstantPadding() -> getConstantPadding
    1007:1010:int getConstantWidth() -> getConstantWidth
    1068:1068:int getEnterFadeDuration() -> getEnterFadeDuration
    1076:1076:int getExitFadeDuration() -> getExitFadeDuration
    1083:1095:int getOpacity() -> getOpacity
    1124:1127:void growArray(int,int) -> growArray
    793:795:void invalidateCache() -> invalidateCache
    1000:1000:boolean isConstantSize() -> isConstantSize
    1102:1117:boolean isStateful() -> isStateful
    934:942:void mutate() -> mutate
    814:819:android.graphics.drawable.Drawable prepareDrawable(android.graphics.drawable.Drawable) -> prepareDrawable
    993:994:void setConstantSize(boolean) -> setConstantSize
    1064:1065:void setEnterFadeDuration(int) -> setEnterFadeDuration
    1072:1073:void setExitFadeDuration(int) -> setExitFadeDuration
    852:869:boolean setLayoutDirection(int,int) -> setLayoutDirection
    961:962:void setVariablePadding(boolean) -> setVariablePadding
    879:891:void updateDensity(android.content.res.Resources) -> updateDensity
androidx.appcompat.graphics.drawable.DrawableWrapper -> androidx.appcompat.graphics.drawable.DrawableWrapper:
    46:48:void <init>(android.graphics.drawable.Drawable) -> <init>
    52:53:void draw(android.graphics.Canvas) -> draw
    67:67:int getChangingConfigurations() -> getChangingConfigurations
    112:112:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    137:137:int getIntrinsicHeight() -> getIntrinsicHeight
    132:132:int getIntrinsicWidth() -> getIntrinsicWidth
    147:147:int getMinimumHeight() -> getMinimumHeight
    142:142:int getMinimumWidth() -> getMinimumWidth
    122:122:int getOpacity() -> getOpacity
    152:152:boolean getPadding(android.graphics.Rect) -> getPadding
    102:102:int[] getState() -> getState
    127:127:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    220:220:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    160:161:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    191:191:boolean isAutoMirrored() -> isAutoMirrored
    92:92:boolean isStateful() -> isStateful
    107:108:void jumpToCurrentState() -> jumpToCurrentState
    57:58:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    181:181:boolean onLevelChange(int) -> onLevelChange
    168:169:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    82:83:void setAlpha(int) -> setAlpha
    186:187:void setAutoMirrored(boolean) -> setAutoMirrored
    62:63:void setChangingConfigurations(int) -> setChangingConfigurations
    87:88:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    72:73:void setDither(boolean) -> setDither
    77:78:void setFilterBitmap(boolean) -> setFilterBitmap
    211:212:void setHotspot(float,float) -> setHotspot
    216:217:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    97:97:boolean setState(int[]) -> setState
    196:197:void setTint(int) -> setTint
    201:202:void setTintList(android.content.res.ColorStateList) -> setTintList
    206:207:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    117:117:boolean setVisible(boolean,boolean) -> setVisible
    224:233:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    176:177:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.appcompat.graphics.drawable.DrawerArrowDrawable -> androidx.appcompat.graphics.drawable.DrawerArrowDrawable:
    100:100:void <clinit>() -> <clinit>
    128:152:void <init>(android.content.Context) -> <init>
    326:401:void draw(android.graphics.Canvas) -> draw
    171:171:float getArrowHeadLength() -> getArrowHeadLength
    190:190:float getArrowShaftLength() -> getArrowShaftLength
    197:197:float getBarLength() -> getBarLength
    247:247:float getBarThickness() -> getBarThickness
    227:227:int getColor() -> getColor
    311:311:int getDirection() -> getDirection
    256:256:float getGapSize() -> getGapSize
    419:419:int getIntrinsicHeight() -> getIntrinsicHeight
    424:424:int getIntrinsicWidth() -> getIntrinsicWidth
    429:429:int getOpacity() -> getOpacity
    458:458:android.graphics.Paint getPaint() -> getPaint
    437:437:float getProgress() -> getProgress
    289:289:boolean isSpinEnabled() -> isSpinEnabled
    465:465:float lerp(float,float,float) -> lerp
    405:409:void setAlpha(int) -> setAlpha
    160:164:void setArrowHeadLength(float) -> setArrowHeadLength
    180:184:void setArrowShaftLength(float) -> setArrowShaftLength
    206:210:void setBarLength(float) -> setBarLength
    236:241:void setBarThickness(float) -> setBarThickness
    216:220:void setColor(int) -> setColor
    413:415:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:281:void setDirection(int) -> setDirection
    267:271:void setGapSize(float) -> setGapSize
    448:452:void setProgress(float) -> setProgress
    300:304:void setSpinEnabled(boolean) -> setSpinEnabled
    318:322:void setVerticalMirror(boolean) -> setVerticalMirror
androidx.appcompat.graphics.drawable.StateListDrawable -> androidx.appcompat.graphics.drawable.StateListDrawable:
    88:89:void <init>() -> <init>
    403:408:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,android.content.res.Resources) -> <init>
    414:418:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState) -> <init>
    99:104:void addState(int[],android.graphics.drawable.Drawable) -> addState
    391:393:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    324:326:void clearMutated() -> clearMutated
    79:79:androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState cloneConstantState() -> cloneConstantState
    319:319:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState cloneConstantState() -> cloneConstantState
    234:253:int[] extractStateSet(android.util.AttributeSet) -> extractStateSet
    268:268:int getStateCount() -> getStateCount
    292:292:android.graphics.drawable.Drawable getStateDrawable(int) -> getStateDrawable
    304:304:int getStateDrawableIndex(int[]) -> getStateDrawableIndex
    257:257:androidx.appcompat.graphics.drawable.StateListDrawable$StateListState getStateListState() -> getStateListState
    280:280:int[] getStateSet(int) -> getStateSet
    143:150:void inflate(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    179:225:void inflateChildElements(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    108:108:boolean isStateful() -> isStateful
    310:314:android.graphics.drawable.Drawable mutate() -> mutate
    113:122:boolean onStateChange(int[]) -> onStateChange
    397:401:void setConstantState(androidx.appcompat.graphics.drawable.DrawableContainer$DrawableContainerState) -> setConstantState
    156:171:void updateStateFromTypedArray(android.content.res.TypedArray) -> updateStateFromTypedArray
androidx.appcompat.graphics.drawable.StateListDrawable$StateListState -> androidx.appcompat.graphics.drawable.StateListDrawable$StateListState:
    332:339:void <init>(androidx.appcompat.graphics.drawable.StateListDrawable$StateListState,androidx.appcompat.graphics.drawable.StateListDrawable,android.content.res.Resources) -> <init>
    351:353:int addStateSet(int[],android.graphics.drawable.Drawable) -> addStateSet
    381:385:void growArray(int,int) -> growArray
    357:364:int indexOfStateSet(int[]) -> indexOfStateSet
    343:348:void mutate() -> mutate
    370:370:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    376:376:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.appcompat.text.AllCapsTransformationMethod -> androidx.appcompat.text.AllCapsTransformationMethod:
    37:39:void <init>(android.content.Context) -> <init>
    43:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
    49:49:void onFocusChanged(android.view.View,java.lang.CharSequence,boolean,int,android.graphics.Rect) -> onFocusChanged
androidx.appcompat.view.ActionBarPolicy -> androidx.appcompat.view.ActionBarPolicy:
    46:48:void <init>(android.content.Context) -> <init>
    110:110:boolean enableHomeButtonByDefault() -> enableHomeButtonByDefault
    43:43:androidx.appcompat.view.ActionBarPolicy get(android.content.Context) -> get
    86:86:int getEmbeddedMenuWidthLimit() -> getEmbeddedMenuWidthLimit
    56:64:int getMaxActionButtons() -> getMaxActionButtons
    115:115:int getStackedTabMaxWidth() -> getStackedTabMaxWidth
    94:104:int getTabContainerHeight() -> getTabContainerHeight
    90:90:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    78:79:boolean showsOverflowMenuButton() -> showsOverflowMenuButton
androidx.appcompat.view.ActionMode -> androidx.appcompat.view.ActionMode:
    41:41:void <init>() -> <init>
    71:71:java.lang.Object getTag() -> getTag
    145:145:boolean getTitleOptionalHint() -> getTitleOptionalHint
    153:153:boolean isTitleOptional() -> isTitleOptional
    225:225:boolean isUiFocusable() -> isUiFocusable
    57:58:void setTag(java.lang.Object) -> setTag
    134:135:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.ContextThemeWrapper -> androidx.appcompat.view.ContextThemeWrapper:
    48:49:void <init>() -> <init>
    63:65:void <init>(android.content.Context,int) -> <init>
    77:79:void <init>(android.content.Context,android.content.res.Resources$Theme) -> <init>
    97:98:void applyOverrideConfiguration(android.content.res.Configuration) -> applyOverrideConfiguration
    83:84:void attachBaseContext(android.content.Context) -> attachBaseContext
    195:195:android.content.res.AssetManager getAssets() -> getAssets
    109:109:android.content.res.Resources getResources() -> getResources
    113:121:android.content.res.Resources getResourcesInternal() -> getResourcesInternal
    156:162:java.lang.Object getSystemService(java.lang.String) -> getSystemService
    142:151:android.content.res.Resources$Theme getTheme() -> getTheme
    137:137:int getThemeResId() -> getThemeResId
    181:190:void initializeTheme() -> initializeTheme
    177:178:void onApplyThemeResource(android.content.res.Resources$Theme,int,boolean) -> onApplyThemeResource
    126:130:void setTheme(int) -> setTheme
androidx.appcompat.view.StandaloneActionMode -> androidx.appcompat.view.StandaloneActionMode:
    50:59:void <init>(android.content.Context,androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode$Callback,boolean) -> <init>
    105:112:void finish() -> finish
    131:131:android.view.View getCustomView() -> getCustomView
    116:116:android.view.Menu getMenu() -> getMenu
    136:136:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    126:126:java.lang.CharSequence getSubtitle() -> getSubtitle
    121:121:java.lang.CharSequence getTitle() -> getTitle
    100:101:void invalidate() -> invalidate
    89:89:boolean isTitleOptional() -> isTitleOptional
    167:167:boolean isUiFocusable() -> isUiFocusable
    145:145:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    157:157:void onCloseSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> onCloseSubMenu
    141:141:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    161:163:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
    148:153:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    94:96:void setCustomView(android.view.View) -> setCustomView
    68:69:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    78:79:void setSubtitle(int) -> setSubtitle
    63:64:void setTitle(java.lang.CharSequence) -> setTitle
    73:74:void setTitle(int) -> setTitle
    83:85:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper -> androidx.appcompat.view.SupportActionModeWrapper:
    49:52:void <init>(android.content.Context,androidx.appcompat.view.ActionMode) -> <init>
    81:82:void finish() -> finish
    111:111:android.view.View getCustomView() -> getCustomView
    86:86:android.view.Menu getMenu() -> getMenu
    121:121:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    101:101:java.lang.CharSequence getSubtitle() -> getSubtitle
    56:56:java.lang.Object getTag() -> getTag
    91:91:java.lang.CharSequence getTitle() -> getTitle
    126:126:boolean getTitleOptionalHint() -> getTitleOptionalHint
    76:77:void invalidate() -> invalidate
    136:136:boolean isTitleOptional() -> isTitleOptional
    116:117:void setCustomView(android.view.View) -> setCustomView
    71:72:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    106:107:void setSubtitle(int) -> setSubtitle
    61:62:void setTag(java.lang.Object) -> setTag
    66:67:void setTitle(java.lang.CharSequence) -> setTitle
    96:97:void setTitle(int) -> setTitle
    131:132:void setTitleOptionalHint(boolean) -> setTitleOptionalHint
androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper -> androidx.appcompat.view.SupportActionModeWrapper$CallbackWrapper:
    150:155:void <init>(android.content.Context,android.view.ActionMode$Callback) -> <init>
    192:204:android.view.ActionMode getActionModeWrapper(androidx.appcompat.view.ActionMode) -> getActionModeWrapper
    182:187:android.view.Menu getMenuWrapper(android.view.Menu) -> getMenuWrapper
    172:172:boolean onActionItemClicked(androidx.appcompat.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    159:159:boolean onCreateActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onCreateActionMode
    178:179:void onDestroyActionMode(androidx.appcompat.view.ActionMode) -> onDestroyActionMode
    165:165:boolean onPrepareActionMode(androidx.appcompat.view.ActionMode,android.view.Menu) -> onPrepareActionMode
androidx.appcompat.view.SupportMenuInflater -> androidx.appcompat.view.SupportMenuInflater:
    83:85:void <clinit>() -> <clinit>
    101:105:void <init>(android.content.Context) -> <init>
    231:237:java.lang.Object findRealOwner(java.lang.Object) -> findRealOwner
    224:227:java.lang.Object getRealOwner() -> getRealOwner
    119:136:void inflate(int,android.view.Menu) -> inflate
    145:221:void parseMenu(org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.view.Menu) -> parseMenu
androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener -> androidx.appcompat.view.SupportMenuInflater$InflatedOnMenuItemClickListener:
    242:242:void <clinit>() -> <clinit>
    247:257:void <init>(java.lang.Object,java.lang.String) -> <init>
    264:271:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.SupportMenuInflater$MenuState -> androidx.appcompat.view.SupportMenuInflater$MenuState:
    349:353:void <init>(androidx.appcompat.view.SupportMenuInflater,android.view.Menu) -> <init>
    531:533:void addItem() -> addItem
    536:539:android.view.SubMenu addSubMenuItem() -> addSubMenuItem
    459:462:char getShortcut(java.lang.String) -> getShortcut
    543:543:boolean hasAddedItem() -> hasAddedItem
    550:557:java.lang.Object newInstance(java.lang.String,java.lang.Class[],java.lang.Object[]) -> newInstance
    368:380:void readGroup(android.util.AttributeSet) -> readGroup
    386:456:void readItem(android.util.AttributeSet) -> readItem
    356:362:void resetGroup() -> resetGroup
    467:528:void setItem(android.view.MenuItem) -> setItem
androidx.appcompat.view.ViewPropertyAnimatorCompatSet -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet:
    48:50:void <init>() -> <init>
    90:97:void cancel() -> cancel
    86:87:void onAnimationsEnded() -> onAnimationsEnded
    53:56:androidx.appcompat.view.ViewPropertyAnimatorCompatSet play(androidx.core.view.ViewPropertyAnimatorCompat) -> play
    61:64:androidx.appcompat.view.ViewPropertyAnimatorCompatSet playSequentially(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorCompat) -> playSequentially
    100:103:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setDuration(long) -> setDuration
    107:110:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    114:117:androidx.appcompat.view.ViewPropertyAnimatorCompatSet setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    68:83:void start() -> start
androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1 -> androidx.appcompat.view.ViewPropertyAnimatorCompatSet$1:
    121:123:void <init>(androidx.appcompat.view.ViewPropertyAnimatorCompatSet) -> <init>
    144:150:void onAnimationEnd(android.view.View) -> onAnimationEnd
    127:134:void onAnimationStart(android.view.View) -> onAnimationStart
    137:140:void onEnd() -> onEnd
androidx.appcompat.view.WindowCallbackWrapper -> androidx.appcompat.view.WindowCallbackWrapper:
    50:52:void <init>(android.view.Window$Callback) -> <init>
    79:79:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    59:59:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    64:64:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    84:84:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    69:69:boolean dispatchTouchEvent(android.view.MotionEvent) -> dispatchTouchEvent
    74:74:boolean dispatchTrackballEvent(android.view.MotionEvent) -> dispatchTrackballEvent
    188:188:android.view.Window$Callback getWrapped() -> getWrapped
    171:172:void onActionModeFinished(android.view.ActionMode) -> onActionModeFinished
    166:167:void onActionModeStarted(android.view.ActionMode) -> onActionModeStarted
    129:130:void onAttachedToWindow() -> onAttachedToWindow
    119:120:void onContentChanged() -> onContentChanged
    94:94:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    89:89:android.view.View onCreatePanelView(int) -> onCreatePanelView
    134:135:void onDetachedFromWindow() -> onDetachedFromWindow
    109:109:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    104:104:boolean onMenuOpened(int,android.view.Menu) -> onMenuOpened
    139:140:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    184:185:void onPointerCaptureChanged(boolean) -> onPointerCaptureChanged
    99:99:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    178:179:void onProvideKeyboardShortcuts(java.util.List,android.view.Menu,int) -> onProvideKeyboardShortcuts
    145:145:boolean onSearchRequested(android.view.SearchEvent) -> onSearchRequested
    150:150:boolean onSearchRequested() -> onSearchRequested
    114:115:void onWindowAttributesChanged(android.view.WindowManager$LayoutParams) -> onWindowAttributesChanged
    124:125:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    155:155:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback) -> onWindowStartingActionMode
    161:161:android.view.ActionMode onWindowStartingActionMode(android.view.ActionMode$Callback,int) -> onWindowStartingActionMode
androidx.appcompat.view.menu.ActionMenuItem -> androidx.appcompat.view.menu.ActionMenuItem:
    83:90:void <init>(android.content.Context,int,int,int,int,java.lang.CharSequence) -> <init>
    444:456:void applyIconTint() -> applyIconTint
    378:378:boolean collapseActionView() -> collapseActionView
    373:373:boolean expandActionView() -> expandActionView
    347:347:android.view.ActionProvider getActionProvider() -> getActionProvider
    337:337:android.view.View getActionView() -> getActionView
    99:99:int getAlphabeticModifiers() -> getAlphabeticModifiers
    94:94:char getAlphabeticShortcut() -> getAlphabeticShortcut
    399:399:java.lang.CharSequence getContentDescription() -> getContentDescription
    104:104:int getGroupId() -> getGroupId
    109:109:android.graphics.drawable.Drawable getIcon() -> getIcon
    425:425:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    440:440:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    114:114:android.content.Intent getIntent() -> getIntent
    119:119:int getItemId() -> getItemId
    124:124:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    134:134:int getNumericModifiers() -> getNumericModifiers
    129:129:char getNumericShortcut() -> getNumericShortcut
    139:139:int getOrder() -> getOrder
    144:144:android.view.SubMenu getSubMenu() -> getSubMenu
    357:357:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    149:149:java.lang.CharSequence getTitle() -> getTitle
    154:154:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    410:410:java.lang.CharSequence getTooltipText() -> getTooltipText
    159:159:boolean hasSubMenu() -> hasSubMenu
    303:312:boolean invoke() -> invoke
    383:383:boolean isActionViewExpanded() -> isActionViewExpanded
    164:164:boolean isCheckable() -> isCheckable
    169:169:boolean isChecked() -> isChecked
    174:174:boolean isEnabled() -> isEnabled
    179:179:boolean isVisible() -> isVisible
    322:322:boolean requiresActionButton() -> requiresActionButton
    327:327:boolean requiresOverflow() -> requiresOverflow
    342:342:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    42:42:android.view.MenuItem setActionView(int) -> setActionView
    42:42:android.view.MenuItem setActionView(android.view.View) -> setActionView
    332:332:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    352:352:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    184:185:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    190:192:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    197:198:android.view.MenuItem setCheckable(boolean) -> setCheckable
    208:209:android.view.MenuItem setChecked(boolean) -> setChecked
    42:42:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    393:394:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    214:215:android.view.MenuItem setEnabled(boolean) -> setEnabled
    202:203:androidx.appcompat.view.menu.ActionMenuItem setExclusiveCheckable(boolean) -> setExclusiveCheckable
    220:224:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    229:233:android.view.MenuItem setIcon(int) -> setIcon
    415:420:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    430:435:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    238:239:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    244:245:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    250:252:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    388:388:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    257:258:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    263:265:android.view.MenuItem setShortcut(char,char) -> setShortcut
    271:275:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    318:318:void setShowAsAction(int) -> setShowAsAction
    42:42:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    367:368:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    362:362:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    280:281:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    286:287:android.view.MenuItem setTitle(int) -> setTitle
    292:293:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    42:42:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    404:405:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    298:299:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.ActionMenuItemView -> androidx.appcompat.view.menu.ActionMenuItemView:
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:88:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    119:119:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    237:237:boolean hasText() -> hasText
    124:137:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    264:264:boolean needsDividerAfter() -> needsDividerAfter
    259:259:boolean needsDividerBefore() -> needsDividerBefore
    150:153:void onClick(android.view.View) -> onClick
    92:96:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    269:296:void onMeasure(int,int) -> onMeasure
    333:334:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    141:145:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    165:165:boolean prefersCondensedTitle() -> prefersCondensedTitle
    171:171:void setCheckable(boolean) -> setCheckable
    176:176:void setChecked(boolean) -> setChecked
    179:185:void setExpandedFormat(boolean) -> setExpandedFormat
    215:234:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    156:157:void setItemInvoker(androidx.appcompat.view.menu.MenuBuilder$ItemInvoker) -> setItemInvoker
    113:115:void setPadding(int,int,int,int) -> setPadding
    160:161:void setPopupCallback(androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback) -> setPopupCallback
    243:243:void setShortcut(boolean,char) -> setShortcut
    247:250:void setTitle(java.lang.CharSequence) -> setTitle
    103:107:boolean shouldAllowTextWithIcon() -> shouldAllowTextWithIcon
    254:254:boolean showsIcon() -> showsIcon
    188:211:void updateTextButtonVisibility() -> updateTextButtonVisibility
androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener -> androidx.appcompat.view.menu.ActionMenuItemView$ActionMenuItemForwardingListener:
    299:301:void <init>(androidx.appcompat.view.menu.ActionMenuItemView) -> <init>
    305:308:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    314:318:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback -> androidx.appcompat.view.menu.ActionMenuItemView$PopupCallback:
    336:336:void <init>() -> <init>
androidx.appcompat.view.menu.BaseMenuPresenter -> androidx.appcompat.view.menu.BaseMenuPresenter:
    61:66:void <init>(android.content.Context,int,int) -> <init>
    134:139:void addItemView(android.view.View,int) -> addItemView
    238:238:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    167:167:androidx.appcompat.view.menu.MenuView$ItemView createItemView(android.view.ViewGroup) -> createItemView
    233:233:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    148:149:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    228:228:boolean flagActionItems() -> flagActionItems
    158:158:androidx.appcompat.view.menu.MenuPresenter$Callback getCallback() -> getCallback
    243:243:int getId() -> getId
    183:189:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    77:83:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    70:73:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    213:216:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    220:223:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    154:155:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    247:248:void setId(int) -> setId
    208:208:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    91:125:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.BaseMenuWrapper -> androidx.appcompat.view.menu.BaseMenuWrapper:
    37:39:void <init>(android.content.Context) -> <init>
    42:61:android.view.MenuItem getMenuItemWrapper(android.view.MenuItem) -> getMenuItemWrapper
    65:81:android.view.SubMenu getSubMenuWrapper(android.view.SubMenu) -> getSubMenuWrapper
    86:92:void internalClear() -> internalClear
    95:108:void internalRemoveGroup(int) -> internalRemoveGroup
    111:125:void internalRemoveItem(int) -> internalRemoveItem
androidx.appcompat.view.menu.CascadingMenuPopup -> androidx.appcompat.view.menu.CascadingMenuPopup:
    66:66:void <clinit>() -> <clinit>
    222:237:void <init>(android.content.Context,android.view.View,int,int,boolean) -> <init>
    354:361:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    791:791:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    245:254:androidx.appcompat.widget.MenuPopupWindow createPopupWindow() -> createPopupWindow
    287:298:void dismiss() -> dismiss
    655:662:int findIndexOfAddedMenu(androidx.appcompat.view.menu.MenuBuilder) -> findIndexOfAddedMenu
    516:523:android.view.MenuItem findMenuItemForSubmenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuBuilder) -> findMenuItemForSubmenu
    537:577:android.view.View findParentViewForSubmenu(androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,androidx.appcompat.view.menu.MenuBuilder) -> findParentViewForSubmenu
    726:726:boolean flagActionItems() -> flagActionItems
    315:316:int getInitialMenuPosition() -> getInitialMenuPosition
    765:765:android.widget.ListView getListView() -> getListView
    329:348:int getNextMenuPosition(int) -> getNextMenuPosition
    588:588:boolean isShowing() -> isShowing
    667:722:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    598:612:void onDismiss() -> onDismiss
    302:306:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    736:736:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    731:731:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    629:645:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    749:756:void setAnchorView(android.view.View) -> setAnchorView
    623:624:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    241:242:void setForceShowIcon(boolean) -> setForceShowIcon
    740:745:void setGravity(int) -> setGravity
    772:774:void setHorizontalOffset(int) -> setHorizontalOffset
    760:761:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    784:785:void setShowTitle(boolean) -> setShowTitle
    778:780:void setVerticalOffset(int) -> setVerticalOffset
    259:279:void show() -> show
    369:503:void showMenu(androidx.appcompat.view.menu.MenuBuilder) -> showMenu
    616:619:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.CascadingMenuPopup$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$1:
    98:98:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    104:116:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.CascadingMenuPopup$2 -> androidx.appcompat.view.menu.CascadingMenuPopup$2:
    120:120:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    123:123:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    127:134:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.CascadingMenuPopup$3 -> androidx.appcompat.view.menu.CascadingMenuPopup$3:
    137:137:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup) -> <init>
    150:194:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    143:144:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
androidx.appcompat.view.menu.CascadingMenuPopup$3$1 -> androidx.appcompat.view.menu.CascadingMenuPopup$3$1:
    173:173:void <init>(androidx.appcompat.view.menu.CascadingMenuPopup$3,androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo,android.view.MenuItem,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    178:190:void run() -> run
androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo -> androidx.appcompat.view.menu.CascadingMenuPopup$CascadingMenuInfo:
    800:804:void <init>(androidx.appcompat.widget.MenuPopupWindow,androidx.appcompat.view.menu.MenuBuilder,int) -> <init>
    807:807:android.widget.ListView getListView() -> getListView
androidx.appcompat.view.menu.ExpandedMenuView -> androidx.appcompat.view.menu.ExpandedMenuView:
    42:42:void <clinit>() -> <clinit>
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    97:97:int getWindowAnimations() -> getWindowAnimations
    73:74:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    86:86:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    78:82:void onDetachedFromWindow() -> onDetachedFromWindow
    92:93:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.view.menu.ListMenuItemView -> androidx.appcompat.view.menu.ListMenuItemView:
    76:77:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    80:100:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    141:142:void addContentView(android.view.View) -> addContentView
    145:150:void addContentView(android.view.View,int) -> addContentView
    350:358:void adjustListItemSelectionBounds(android.graphics.Rect) -> adjustListItemSelectionBounds
    330:333:android.view.LayoutInflater getInflater() -> getInflater
    169:169:androidx.appcompat.view.menu.MenuItemImpl getItemData() -> getItemData
    126:138:void initialize(androidx.appcompat.view.menu.MenuItemImpl,int) -> initialize
    312:317:void insertCheckBox() -> insertCheckBox
    297:301:void insertIconView() -> insertIconView
    304:309:void insertRadioButton() -> insertRadioButton
    104:122:void onFinishInflate() -> onFinishInflate
    285:294:void onMeasure(int,int) -> onMeasure
    321:321:boolean prefersCondensedTitle() -> prefersCondensedTitle
    174:216:void setCheckable(boolean) -> setCheckable
    222:235:void setChecked(boolean) -> setChecked
    153:154:void setForceShowIcon(boolean) -> setForceShowIcon
    342:346:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    259:281:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    245:255:void setShortcut(boolean,char) -> setShortcut
    238:241:void setSubMenuArrowVisible(boolean) -> setSubMenuArrowVisible
    158:165:void setTitle(java.lang.CharSequence) -> setTitle
    326:326:boolean showsIcon() -> showsIcon
androidx.appcompat.view.menu.ListMenuPresenter -> androidx.appcompat.view.menu.ListMenuPresenter:
    71:74:void <init>(android.content.Context,int) -> <init>
    81:84:void <init>(int,int) -> <init>
    188:188:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    183:183:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    178:178:boolean flagActionItems() -> flagActionItems
    125:128:android.widget.ListAdapter getAdapter() -> getAdapter
    212:212:int getId() -> getId
    161:161:int getItemIndexOffset() -> getItemIndexOffset
    105:114:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    88:101:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    155:158:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    173:174:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    228:229:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    217:223:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    143:150:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    200:204:void restoreHierarchyState(android.os.Bundle) -> restoreHierarchyState
    192:197:void saveHierarchyState(android.os.Bundle) -> saveHierarchyState
    138:139:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    207:208:void setId(int) -> setId
    165:169:void setItemIndexOffset(int) -> setItemIndexOffset
    133:134:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter -> androidx.appcompat.view.menu.ListMenuPresenter$MenuAdapter:
    234:236:void <init>(androidx.appcompat.view.menu.ListMenuPresenter) -> <init>
    277:290:void findExpandedIndex() -> findExpandedIndex
    240:245:int getCount() -> getCount
    231:231:java.lang.Object getItem(int) -> getItem
    250:255:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    262:262:long getItemId(int) -> getItemId
    267:273:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    294:296:void notifyDataSetChanged() -> notifyDataSetChanged
androidx.appcompat.view.menu.MenuAdapter -> androidx.appcompat.view.menu.MenuAdapter:
    44:50:void <init>(androidx.appcompat.view.menu.MenuBuilder,android.view.LayoutInflater,boolean,int) -> <init>
    114:127:void findExpandedIndex() -> findExpandedIndex
    71:71:androidx.appcompat.view.menu.MenuBuilder getAdapterMenu() -> getAdapterMenu
    62:67:int getCount() -> getCount
    53:53:boolean getForceShowIcon() -> getForceShowIcon
    32:32:java.lang.Object getItem(int) -> getItem
    76:81:androidx.appcompat.view.menu.MenuItemImpl getItem(int) -> getItem
    88:88:long getItemId(int) -> getItemId
    93:110:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    131:133:void notifyDataSetChanged() -> notifyDataSetChanged
    57:58:void setForceShowIcon(boolean) -> setForceShowIcon
androidx.appcompat.view.menu.MenuBuilder -> androidx.appcompat.view.menu.MenuBuilder:
    68:68:void <clinit>() -> <clinit>
    229:242:void <init>(android.content.Context) -> <init>
    472:472:android.view.MenuItem add(java.lang.CharSequence) -> add
    477:477:android.view.MenuItem add(int) -> add
    482:482:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    487:487:android.view.MenuItem add(int,int,int,int) -> add
    526:550:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    447:460:android.view.MenuItem addInternal(int,int,int,java.lang.CharSequence) -> addInternal
    256:257:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> addMenuPresenter
    269:272:void addMenuPresenter(androidx.appcompat.view.menu.MenuPresenter,android.content.Context) -> addMenuPresenter
    492:492:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    497:497:android.view.SubMenu addSubMenu(int) -> addSubMenu
    502:506:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    511:511:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    847:850:void changeMenuMode() -> changeMenuMode
    610:616:void clear() -> clear
    598:606:void clearAll() -> clearAll
    1219:1224:void clearHeader() -> clearHeader
    1036:1048:void close(boolean) -> close
    1052:1053:void close() -> close
    1379:1379:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    466:466:androidx.appcompat.view.menu.MenuItemImpl createNewMenuItem(int,int,int,int,java.lang.CharSequence,int) -> createNewMenuItem
    840:840:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    290:302:void dispatchPresenterUpdate(boolean) -> dispatchPresenterUpdate
    350:352:void dispatchRestoreInstanceState(android.os.Bundle) -> dispatchRestoreInstanceState
    327:347:void dispatchSaveInstanceState(android.os.Bundle) -> dispatchSaveInstanceState
    306:323:boolean dispatchSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder,androidx.appcompat.view.menu.MenuPresenter) -> dispatchSubMenuSelected
    1357:1375:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    730:730:int findGroupIndex(int) -> findGroupIndex
    734:748:int findGroupIndex(int,int) -> findGroupIndex
    853:860:int findInsertIndex(java.util.ArrayList,int) -> findInsertIndex
    699:713:android.view.MenuItem findItem(int) -> findItem
    717:726:int findItemIndex(int) -> findItemIndex
    936:971:androidx.appcompat.view.menu.MenuItemImpl findItemWithShortcutForKey(int,android.view.KeyEvent) -> findItemWithShortcutForKey
    888:920:void findItemsWithShortcutForKey(java.util.List,int,android.view.KeyEvent) -> findItemsWithShortcutForKey
    1169:1206:void flagActionItems() -> flagActionItems
    1209:1210:java.util.ArrayList getActionItems() -> getActionItems
    436:436:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    836:836:android.content.Context getContext() -> getContext
    1401:1401:androidx.appcompat.view.menu.MenuItemImpl getExpandedItem() -> getExpandedItem
    1322:1322:android.graphics.drawable.Drawable getHeaderIcon() -> getHeaderIcon
    1318:1318:java.lang.CharSequence getHeaderTitle() -> getHeaderTitle
    1326:1326:android.view.View getHeaderView() -> getHeaderView
    758:758:android.view.MenuItem getItem(int) -> getItem
    1214:1215:java.util.ArrayList getNonActionItems() -> getNonActionItems
    1353:1353:boolean getOptionalIconsVisible() -> getOptionalIconsVisible
    785:788:int getOrdering(int) -> getOrdering
    832:832:android.content.res.Resources getResources() -> getResources
    1334:1334:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    1124:1139:java.util.ArrayList getVisibleItems() -> getVisibleItems
    681:694:boolean hasVisibleItems() -> hasVisibleItems
    520:520:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    798:798:boolean isQwertyMode() -> isQwertyMode
    763:763:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    828:828:boolean isShortcutsVisible() -> isShortcutsVisible
    1118:1120:void onItemActionRequestChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemActionRequestChanged
    1107:1109:void onItemVisibleChanged(androidx.appcompat.view.menu.MenuItemImpl) -> onItemVisibleChanged
    1063:1076:void onItemsChanged(boolean) -> onItemsChanged
    977:977:boolean performIdentifierAction(int,int) -> performIdentifierAction
    981:981:boolean performItemAction(android.view.MenuItem,int) -> performItemAction
    985:988:boolean performItemAction(android.view.MenuItem,androidx.appcompat.view.menu.MenuPresenter,int) -> performItemAction
    865:877:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    560:573:void removeGroup(int) -> removeGroup
    555:556:void removeItem(int) -> removeItem
    594:595:void removeItemAt(int) -> removeItemAt
    586:586:void removeItemAtInt(int,boolean) -> removeItemAtInt
    281:287:void removeMenuPresenter(androidx.appcompat.view.menu.MenuPresenter) -> removeMenuPresenter
    406:433:void restoreActionViewStates(android.os.Bundle) -> restoreActionViewStates
    375:376:void restorePresenterStates(android.os.Bundle) -> restorePresenterStates
    379:403:void saveActionViewStates(android.os.Bundle) -> saveActionViewStates
    371:372:void savePresenterStates(android.os.Bundle) -> savePresenterStates
    440:441:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    1345:1346:void setCurrentMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setCurrentMenuInfo
    245:246:androidx.appcompat.view.menu.MenuBuilder setDefaultShowAsAction(int) -> setDefaultShowAsAction
    619:634:void setExclusiveItemChecked(android.view.MenuItem) -> setExclusiveItemChecked
    638:647:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    516:517:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    669:677:void setGroupEnabled(int,boolean) -> setGroupEnabled
    651:665:void setGroupVisible(int,boolean) -> setGroupVisible
    1289:1290:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(android.graphics.drawable.Drawable) -> setHeaderIconInt
    1301:1302:androidx.appcompat.view.menu.MenuBuilder setHeaderIconInt(int) -> setHeaderIconInt
    1228:1255:void setHeaderInternal(int,java.lang.CharSequence,int,android.graphics.drawable.Drawable,android.view.View) -> setHeaderInternal
    1265:1266:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(java.lang.CharSequence) -> setHeaderTitleInt
    1277:1278:androidx.appcompat.view.menu.MenuBuilder setHeaderTitleInt(int) -> setHeaderTitleInt
    1313:1314:androidx.appcompat.view.menu.MenuBuilder setHeaderViewInt(android.view.View) -> setHeaderViewInt
    1349:1350:void setOptionalIconsVisible(boolean) -> setOptionalIconsVisible
    1410:1411:void setOverrideVisibleItems(boolean) -> setOverrideVisibleItems
    768:771:void setQwertyMode(boolean) -> setQwertyMode
    809:815:void setShortcutsVisible(boolean) -> setShortcutsVisible
    818:822:void setShortcutsVisibleInner(boolean) -> setShortcutsVisibleInner
    753:753:int size() -> size
    1092:1098:void startDispatchingItemsChanged() -> startDispatchingItemsChanged
    1084:1089:void stopDispatchingItemsChanged() -> stopDispatchingItemsChanged
androidx.appcompat.view.menu.MenuDialogHelper -> androidx.appcompat.view.menu.MenuDialogHelper:
    42:44:void <init>(androidx.appcompat.view.menu.MenuBuilder) -> <init>
    139:142:void dismiss() -> dismiss
    169:170:void onClick(android.content.DialogInterface,int) -> onClick
    151:157:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    146:147:void onDismiss(android.content.DialogInterface) -> onDismiss
    94:125:boolean onKey(android.content.DialogInterface,int,android.view.KeyEvent) -> onKey
    161:164:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
    130:131:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    53:90:void show(android.os.IBinder) -> show
androidx.appcompat.view.menu.MenuItemImpl -> androidx.appcompat.view.menu.MenuItemImpl:
    137:146:void <init>(androidx.appcompat.view.menu.MenuBuilder,int,int,int,int,java.lang.CharSequence,int) -> <init>
    691:692:void actionFormatChanged() -> actionFormatChanged
    402:405:void appendModifier(java.lang.StringBuilder,int,int,java.lang.String) -> appendModifier
    570:585:android.graphics.drawable.Drawable applyIconTintIfNecessary(android.graphics.drawable.Drawable) -> applyIconTintIfNecessary
    838:848:boolean collapseActionView() -> collapseActionView
    824:830:boolean expandActionView() -> expandActionView
    788:788:android.view.ActionProvider getActionProvider() -> getActionProvider
    770:776:android.view.View getActionView() -> getActionView
    275:275:int getAlphabeticModifiers() -> getAlphabeticModifiers
    243:243:char getAlphabeticShortcut() -> getAlphabeticShortcut
    233:233:java.lang.Runnable getCallback() -> getCallback
    891:891:java.lang.CharSequence getContentDescription() -> getContentDescription
    203:203:int getGroupId() -> getGroupId
    500:511:android.graphics.drawable.Drawable getIcon() -> getIcon
    550:550:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    566:566:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    223:223:android.content.Intent getIntent() -> getIntent
    209:209:int getItemId() -> getItemId
    687:687:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    285:285:int getNumericModifiers() -> getNumericModifiers
    280:280:char getNumericShortcut() -> getNumericShortcut
    214:214:int getOrder() -> getOrder
    218:218:int getOrdering() -> getOrdering
    342:342:char getShortcut() -> getShortcut
    352:398:java.lang.String getShortcutLabel() -> getShortcutLabel
    419:419:android.view.SubMenu getSubMenu() -> getSubMenu
    794:794:androidx.core.view.ActionProvider getSupportActionProvider() -> getSupportActionProvider
    436:436:java.lang.CharSequence getTitle() -> getTitle
    471:480:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    446:446:java.lang.CharSequence getTitleForItemView(androidx.appcompat.view.menu.MenuView$ItemView) -> getTitleForItemView
    905:905:java.lang.CharSequence getTooltipText() -> getTooltipText
    855:861:boolean hasCollapsibleActionView() -> hasCollapsibleActionView
    424:424:boolean hasSubMenu() -> hasSubMenu
    154:180:boolean invoke() -> invoke
    702:702:boolean isActionButton() -> isActionButton
    871:871:boolean isActionViewExpanded() -> isActionViewExpanded
    590:590:boolean isCheckable() -> isCheckable
    614:614:boolean isChecked() -> isChecked
    185:185:boolean isEnabled() -> isEnabled
    609:609:boolean isExclusiveCheckable() -> isExclusiveCheckable
    640:643:boolean isVisible() -> isVisible
    706:706:boolean requestsActionButton() -> requestsActionButton
    711:711:boolean requiresActionButton() -> requiresActionButton
    716:716:boolean requiresOverflow() -> requiresOverflow
    782:782:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    51:51:android.view.MenuItem setActionView(int) -> setActionView
    51:51:android.view.MenuItem setActionView(android.view.View) -> setActionView
    751:757:androidx.core.internal.view.SupportMenuItem setActionView(android.view.View) -> setActionView
    762:765:androidx.core.internal.view.SupportMenuItem setActionView(int) -> setActionView
    865:867:void setActionViewExpanded(boolean) -> setActionViewExpanded
    248:256:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    261:270:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    237:238:android.view.MenuItem setCallback(java.lang.Runnable) -> setCallback
    595:601:android.view.MenuItem setCheckable(boolean) -> setCheckable
    619:627:android.view.MenuItem setChecked(boolean) -> setChecked
    631:636:void setCheckedInt(boolean) -> setCheckedInt
    51:51:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    882:886:androidx.core.internal.view.SupportMenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    190:198:android.view.MenuItem setEnabled(boolean) -> setEnabled
    605:606:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    516:521:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    526:533:android.view.MenuItem setIcon(int) -> setIcon
    539:545:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    555:561:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    228:229:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    720:725:void setIsActionButton(boolean) -> setIsActionButton
    682:683:void setMenuInfo(android.view.ContextMenu$ContextMenuInfo) -> setMenuInfo
    290:298:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    303:312:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    876:877:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    672:673:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    317:322:android.view.MenuItem setShortcut(char,char) -> setShortcut
    328:335:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    733:747:void setShowAsAction(int) -> setShowAsAction
    51:51:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    818:819:androidx.core.internal.view.SupportMenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    428:431:void setSubMenu(androidx.appcompat.view.menu.SubMenuBuilder) -> setSubMenu
    799:813:androidx.core.internal.view.SupportMenuItem setSupportActionProvider(androidx.core.view.ActionProvider) -> setSupportActionProvider
    453:461:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    466:466:android.view.MenuItem setTitle(int) -> setTitle
    486:495:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    51:51:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    896:900:androidx.core.internal.view.SupportMenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    665:667:android.view.MenuItem setVisible(boolean) -> setVisible
    655:657:boolean setVisibleInt(boolean) -> setVisibleInt
    698:698:boolean shouldShowIcon() -> shouldShowIcon
    414:414:boolean shouldShowShortcut() -> shouldShowShortcut
    728:728:boolean showsTextAsAction() -> showsTextAsAction
    678:678:java.lang.String toString() -> toString
androidx.appcompat.view.menu.MenuItemImpl$1 -> androidx.appcompat.view.menu.MenuItemImpl$1:
    806:806:void <init>(androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    809:810:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
androidx.appcompat.view.menu.MenuItemWrapperICS -> androidx.appcompat.view.menu.MenuItemWrapperICS:
    56:58:void <init>(android.content.Context,androidx.core.internal.view.SupportMenuItem) -> <init>
    326:326:boolean collapseActionView() -> collapseActionView
    321:321:boolean expandActionView() -> expandActionView
    312:316:android.view.ActionProvider getActionProvider() -> getActionProvider
    291:295:android.view.View getActionView() -> getActionView
    188:188:int getAlphabeticModifiers() -> getAlphabeticModifiers
    183:183:char getAlphabeticShortcut() -> getAlphabeticShortcut
    349:349:java.lang.CharSequence getContentDescription() -> getContentDescription
    70:70:int getGroupId() -> getGroupId
    120:120:android.graphics.drawable.Drawable getIcon() -> getIcon
    371:371:android.content.res.ColorStateList getIconTintList() -> getIconTintList
    382:382:android.graphics.PorterDuff$Mode getIconTintMode() -> getIconTintMode
    131:131:android.content.Intent getIntent() -> getIntent
    65:65:int getItemId() -> getItemId
    253:253:android.view.ContextMenu$ContextMenuInfo getMenuInfo() -> getMenuInfo
    166:166:int getNumericModifiers() -> getNumericModifiers
    161:161:char getNumericShortcut() -> getNumericShortcut
    75:75:int getOrder() -> getOrder
    241:241:android.view.SubMenu getSubMenu() -> getSubMenu
    92:92:java.lang.CharSequence getTitle() -> getTitle
    103:103:java.lang.CharSequence getTitleCondensed() -> getTitleCondensed
    360:360:java.lang.CharSequence getTooltipText() -> getTooltipText
    236:236:boolean hasSubMenu() -> hasSubMenu
    331:331:boolean isActionViewExpanded() -> isActionViewExpanded
    199:199:boolean isCheckable() -> isCheckable
    210:210:boolean isChecked() -> isChecked
    231:231:boolean isEnabled() -> isEnabled
    220:220:boolean isVisible() -> isVisible
    301:307:android.view.MenuItem setActionProvider(android.view.ActionProvider) -> setActionProvider
    269:273:android.view.MenuItem setActionView(android.view.View) -> setActionView
    279:286:android.view.MenuItem setActionView(int) -> setActionView
    171:172:android.view.MenuItem setAlphabeticShortcut(char) -> setAlphabeticShortcut
    177:178:android.view.MenuItem setAlphabeticShortcut(char,int) -> setAlphabeticShortcut
    193:194:android.view.MenuItem setCheckable(boolean) -> setCheckable
    204:205:android.view.MenuItem setChecked(boolean) -> setChecked
    343:344:android.view.MenuItem setContentDescription(java.lang.CharSequence) -> setContentDescription
    225:226:android.view.MenuItem setEnabled(boolean) -> setEnabled
    387:395:void setExclusiveCheckable(boolean) -> setExclusiveCheckable
    108:109:android.view.MenuItem setIcon(android.graphics.drawable.Drawable) -> setIcon
    114:115:android.view.MenuItem setIcon(int) -> setIcon
    365:366:android.view.MenuItem setIconTintList(android.content.res.ColorStateList) -> setIconTintList
    376:377:android.view.MenuItem setIconTintMode(android.graphics.PorterDuff$Mode) -> setIconTintMode
    125:126:android.view.MenuItem setIntent(android.content.Intent) -> setIntent
    149:150:android.view.MenuItem setNumericShortcut(char) -> setNumericShortcut
    155:156:android.view.MenuItem setNumericShortcut(char,int) -> setNumericShortcut
    336:338:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem$OnActionExpandListener) -> setOnActionExpandListener
    246:248:android.view.MenuItem setOnMenuItemClickListener(android.view.MenuItem$OnMenuItemClickListener) -> setOnMenuItemClickListener
    136:137:android.view.MenuItem setShortcut(char,char) -> setShortcut
    143:144:android.view.MenuItem setShortcut(char,char,int,int) -> setShortcut
    258:259:void setShowAsAction(int) -> setShowAsAction
    263:264:android.view.MenuItem setShowAsActionFlags(int) -> setShowAsActionFlags
    80:81:android.view.MenuItem setTitle(java.lang.CharSequence) -> setTitle
    86:87:android.view.MenuItem setTitle(int) -> setTitle
    97:98:android.view.MenuItem setTitleCondensed(java.lang.CharSequence) -> setTitleCondensed
    354:355:android.view.MenuItem setTooltipText(java.lang.CharSequence) -> setTooltipText
    215:215:android.view.MenuItem setVisible(boolean) -> setVisible
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapper:
    432:435:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    449:449:boolean hasSubMenu() -> hasSubMenu
    439:439:android.view.View onCreateActionView() -> onCreateActionView
    444:444:boolean onPerformDefaultAction() -> onPerformDefaultAction
    454:455:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB -> androidx.appcompat.view.menu.MenuItemWrapperICS$ActionProviderWrapperJB:
    463:465:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.content.Context,android.view.ActionProvider) -> <init>
    479:479:boolean isVisible() -> isVisible
    495:498:void onActionProviderVisibilityChanged(boolean) -> onActionProviderVisibilityChanged
    469:469:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    474:474:boolean overridesItemVisibility() -> overridesItemVisibility
    484:485:void refreshVisibility() -> refreshVisibility
    489:491:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$CollapsibleActionViewWrapper:
    512:515:void <init>(android.view.View) -> <init>
    528:528:android.view.View getWrappedView() -> getWrappedView
    524:525:void onActionViewCollapsed() -> onActionViewCollapsed
    519:520:void onActionViewExpanded() -> onActionViewExpanded
androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnActionExpandListenerWrapper:
    414:416:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnActionExpandListener) -> <init>
    425:425:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    420:420:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper -> androidx.appcompat.view.menu.MenuItemWrapperICS$OnMenuItemClickListenerWrapper:
    401:403:void <init>(androidx.appcompat.view.menu.MenuItemWrapperICS,android.view.MenuItem$OnMenuItemClickListener) -> <init>
    407:407:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.view.menu.MenuPopup -> androidx.appcompat.view.menu.MenuPopup:
    39:39:void <init>() -> <init>
    217:217:boolean closeMenuOnSubMenuOpened() -> closeMenuOnSubMenuOpened
    113:113:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    108:108:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    78:78:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    118:118:int getId() -> getId
    103:103:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    99:99:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    143:172:int measureIndividualMenuWidth(android.widget.ListAdapter,android.view.ViewGroup,android.content.Context,int) -> measureIndividualMenuWidth
    123:132:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    71:72:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    202:213:boolean shouldPreserveIconSpacing(androidx.appcompat.view.menu.MenuBuilder) -> shouldPreserveIconSpacing
    184:187:androidx.appcompat.view.menu.MenuAdapter toMenuAdapter(android.widget.ListAdapter) -> toMenuAdapter
androidx.appcompat.view.menu.MenuPopupHelper -> androidx.appcompat.view.menu.MenuPopupHelper:
    68:69:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> <init>
    73:74:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View) -> <init>
    79:80:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int) -> <init>
    84:91:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean,int,int) -> <init>
    224:259:androidx.appcompat.view.menu.MenuPopup createPopup() -> createPopup
    298:301:void dismiss() -> dismiss
    139:139:int getGravity() -> getGravity
    345:345:android.widget.ListView getListView() -> getListView
    156:159:androidx.appcompat.view.menu.MenuPopup getPopup() -> getPopup
    320:320:boolean isShowing() -> isShowing
    312:317:void onDismiss() -> onDismiss
    105:106:void setAnchorView(android.view.View) -> setAnchorView
    118:122:void setForceShowIcon(boolean) -> setForceShowIcon
    132:133:void setGravity(int) -> setGravity
    94:95:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    325:329:void setPresenterCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setPresenterCallback
    143:144:void show() -> show
    149:150:void show(int,int) -> show
    263:291:void showPopup(int,int,boolean,boolean) -> showPopup
    169:178:boolean tryShow() -> tryShow
    205:214:boolean tryShow(int,int) -> tryShow
androidx.appcompat.view.menu.MenuPopupHelper$1 -> androidx.appcompat.view.menu.MenuPopupHelper$1:
    334:334:void <init>(androidx.appcompat.view.menu.MenuPopupHelper) -> <init>
    337:338:void onDismiss() -> onDismiss
androidx.appcompat.view.menu.MenuWrapperICS -> androidx.appcompat.view.menu.MenuWrapperICS:
    41:43:void <init>(android.content.Context,androidx.core.internal.view.SupportMenu) -> <init>
    50:50:android.view.MenuItem add(java.lang.CharSequence) -> add
    55:55:android.view.MenuItem add(int) -> add
    60:60:android.view.MenuItem add(int,int,int,java.lang.CharSequence) -> add
    65:65:android.view.MenuItem add(int,int,int,int) -> add
    92:106:int addIntentOptions(int,int,int,android.content.ComponentName,android.content.Intent[],android.content.Intent,int,android.view.MenuItem[]) -> addIntentOptions
    70:70:android.view.SubMenu addSubMenu(java.lang.CharSequence) -> addSubMenu
    75:75:android.view.SubMenu addSubMenu(int) -> addSubMenu
    80:80:android.view.SubMenu addSubMenu(int,int,int,java.lang.CharSequence) -> addSubMenu
    85:85:android.view.SubMenu addSubMenu(int,int,int,int) -> addSubMenu
    123:125:void clear() -> clear
    164:165:void close() -> close
    149:149:android.view.MenuItem findItem(int) -> findItem
    159:159:android.view.MenuItem getItem(int) -> getItem
    144:144:boolean hasVisibleItems() -> hasVisibleItems
    174:174:boolean isShortcutKey(int,android.view.KeyEvent) -> isShortcutKey
    179:179:boolean performIdentifierAction(int,int) -> performIdentifierAction
    169:169:boolean performShortcut(int,android.view.KeyEvent,int) -> performShortcut
    117:119:void removeGroup(int) -> removeGroup
    111:113:void removeItem(int) -> removeItem
    129:130:void setGroupCheckable(int,boolean,boolean) -> setGroupCheckable
    139:140:void setGroupEnabled(int,boolean) -> setGroupEnabled
    134:135:void setGroupVisible(int,boolean) -> setGroupVisible
    184:185:void setQwertyMode(boolean) -> setQwertyMode
    154:154:int size() -> size
androidx.appcompat.view.menu.StandardMenuPopup -> androidx.appcompat.view.menu.StandardMenuPopup:
    46:46:void <clinit>() -> <clinit>
    117:136:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,int,int,boolean) -> <init>
    223:223:void addMenu(androidx.appcompat.view.menu.MenuBuilder) -> addMenu
    215:218:void dismiss() -> dismiss
    311:311:boolean flagActionItems() -> flagActionItems
    344:344:android.widget.ListView getListView() -> getListView
    227:227:boolean isShowing() -> isShowing
    301:307:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    232:245:void onDismiss() -> onDismiss
    330:334:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
    321:321:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    316:316:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    263:295:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    325:326:void setAnchorView(android.view.View) -> setAnchorView
    258:259:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    140:141:void setForceShowIcon(boolean) -> setForceShowIcon
    145:146:void setGravity(int) -> setGravity
    350:351:void setHorizontalOffset(int) -> setHorizontalOffset
    339:340:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    360:361:void setShowTitle(boolean) -> setShowTitle
    355:356:void setVerticalOffset(int) -> setVerticalOffset
    208:209:void show() -> show
    149:154:boolean tryShow() -> tryShow
    249:254:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.view.menu.StandardMenuPopup$1 -> androidx.appcompat.view.menu.StandardMenuPopup$1:
    61:61:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    67:76:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.view.menu.StandardMenuPopup$2 -> androidx.appcompat.view.menu.StandardMenuPopup$2:
    80:80:void <init>(androidx.appcompat.view.menu.StandardMenuPopup) -> <init>
    83:83:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    87:92:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.appcompat.view.menu.SubMenuBuilder -> androidx.appcompat.view.menu.SubMenuBuilder:
    42:46:void <init>(android.content.Context,androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> <init>
    137:137:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    89:89:boolean dispatchMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> dispatchMenuItemSelected
    132:132:boolean expandItemActionView(androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    142:146:java.lang.String getActionViewStatesKey() -> getActionViewStatesKey
    74:74:android.view.MenuItem getItem() -> getItem
    69:69:android.view.Menu getParentMenu() -> getParentMenu
    84:84:androidx.appcompat.view.menu.MenuBuilder getRootMenu() -> getRootMenu
    156:156:boolean isGroupDividerEnabled() -> isGroupDividerEnabled
    55:55:boolean isQwertyMode() -> isQwertyMode
    65:65:boolean isShortcutsVisible() -> isShortcutsVisible
    79:80:void setCallback(androidx.appcompat.view.menu.MenuBuilder$Callback) -> setCallback
    151:152:void setGroupDividerEnabled(boolean) -> setGroupDividerEnabled
    107:107:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    112:112:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    117:117:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    122:122:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    127:127:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    95:96:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
    101:102:android.view.SubMenu setIcon(int) -> setIcon
    50:51:void setQwertyMode(boolean) -> setQwertyMode
    60:61:void setShortcutsVisible(boolean) -> setShortcutsVisible
androidx.appcompat.view.menu.SubMenuWrapperICS -> androidx.appcompat.view.menu.SubMenuWrapperICS:
    39:41:void <init>(android.content.Context,androidx.core.internal.view.SupportSubMenu) -> <init>
    75:76:void clearHeader() -> clearHeader
    92:92:android.view.MenuItem getItem() -> getItem
    57:58:android.view.SubMenu setHeaderIcon(int) -> setHeaderIcon
    63:64:android.view.SubMenu setHeaderIcon(android.graphics.drawable.Drawable) -> setHeaderIcon
    45:46:android.view.SubMenu setHeaderTitle(int) -> setHeaderTitle
    51:52:android.view.SubMenu setHeaderTitle(java.lang.CharSequence) -> setHeaderTitle
    69:70:android.view.SubMenu setHeaderView(android.view.View) -> setHeaderView
    80:81:android.view.SubMenu setIcon(int) -> setIcon
    86:87:android.view.SubMenu setIcon(android.graphics.drawable.Drawable) -> setIcon
androidx.appcompat.widget.AbsActionBarView -> androidx.appcompat.widget.AbsActionBarView:
    52:53:void <init>(android.content.Context) -> <init>
    56:57:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    60:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    34:34:void access$001(androidx.appcompat.widget.AbsActionBarView,int) -> access$001
    34:34:void access$101(androidx.appcompat.widget.AbsActionBarView,int) -> access$101
    179:181:void animateToVisibility(int) -> animateToVisibility
    235:235:boolean canShowOverflowMenu() -> canShowOverflowMenu
    239:242:void dismissPopupMenus() -> dismissPopupMenus
    151:154:int getAnimatedVisibility() -> getAnimatedVisibility
    144:144:int getContentHeight() -> getContentHeight
    210:213:boolean hideOverflowMenu() -> hideOverflowMenu
    224:227:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    217:220:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    231:231:boolean isOverflowReserved() -> isOverflowReserved
    246:252:int measureChildView(android.view.View,int,int,int) -> measureChildView
    256:256:int next(int,int,boolean) -> next
    73:85:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    118:135:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    94:110:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    260:270:int positionChild(android.view.View,int,int,int,boolean) -> positionChild
    201:207:void postShowOverflowMenu() -> postShowOverflowMenu
    139:141:void setContentHeight(int) -> setContentHeight
    185:191:void setVisibility(int) -> setVisibility
    158:174:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    194:197:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.AbsActionBarView$1 -> androidx.appcompat.widget.AbsActionBarView$1:
    201:201:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    204:205:void run() -> run
androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener -> androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener:
    273:274:void <init>(androidx.appcompat.widget.AbsActionBarView) -> <init>
    300:301:void onAnimationCancel(android.view.View) -> onAnimationCancel
    292:296:void onAnimationEnd(android.view.View) -> onAnimationEnd
    286:288:void onAnimationStart(android.view.View) -> onAnimationStart
    279:281:androidx.appcompat.widget.AbsActionBarView$VisibilityAnimListener withFinalVisibility(androidx.core.view.ViewPropertyAnimatorCompat,int) -> withFinalVisibility
androidx.appcompat.widget.ActionBarBackgroundDrawable -> androidx.appcompat.widget.ActionBarBackgroundDrawable:
    32:34:void <init>(androidx.appcompat.widget.ActionBarContainer) -> <init>
    38:50:void draw(android.graphics.Canvas) -> draw
    62:62:int getOpacity() -> getOpacity
    68:78:void getOutline(android.graphics.Outline) -> getOutline
    54:54:void setAlpha(int) -> setAlpha
    58:58:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
androidx.appcompat.widget.ActionBarContainer -> androidx.appcompat.widget.ActionBarContainer:
    55:56:void <init>(android.content.Context) -> <init>
    59:80:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    168:178:void drawableStateChanged() -> drawableStateChanged
    267:268:int getMeasuredHeightWithMargins(android.view.View) -> getMeasuredHeightWithMargins
    243:243:android.view.View getTabContainer() -> getTabContainer
    263:263:boolean isCollapsed(android.view.View) -> isCollapsed
    182:192:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    84:87:void onFinishInflate() -> onFinishInflate
    222:225:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    209:209:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    303:347:void onLayout(boolean,int,int,int,int) -> onLayout
    273:299:void onMeasure(int,int) -> onMeasure
    214:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    90:108:void setPrimaryBackground(android.graphics.drawable.Drawable) -> setPrimaryBackground
    132:149:void setSplitBackground(android.graphics.drawable.Drawable) -> setSplitBackground
    111:129:void setStackedBackground(android.graphics.drawable.Drawable) -> setStackedBackground
    229:240:void setTabContainer(androidx.appcompat.widget.ScrollingTabContainerView) -> setTabContainer
    202:205:void setTransitioning(boolean) -> setTransitioning
    153:158:void setVisibility(int) -> setVisibility
    250:250:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback) -> startActionModeForChild
    256:259:android.view.ActionMode startActionModeForChild(android.view.View,android.view.ActionMode$Callback,int) -> startActionModeForChild
    162:162:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.ActionBarContextView -> androidx.appcompat.widget.ActionBarContextView:
    58:59:void <init>(android.content.Context) -> <init>
    62:63:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    66:84:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    40:40:void animateToVisibility(int) -> animateToVisibility
    40:40:boolean canShowOverflowMenu() -> canShowOverflowMenu
    193:197:void closeMode() -> closeMode
    40:40:void dismissPopupMenus() -> dismissPopupMenus
    233:233:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    238:238:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    40:40:int getAnimatedVisibility() -> getAnimatedVisibility
    40:40:int getContentHeight() -> getContentHeight
    130:130:java.lang.CharSequence getSubtitle() -> getSubtitle
    126:126:java.lang.CharSequence getTitle() -> getTitle
    215:218:boolean hideOverflowMenu() -> hideOverflowMenu
    161:190:void initForMode(androidx.appcompat.view.ActionMode) -> initForMode
    134:158:void initTitle() -> initTitle
    40:40:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    223:226:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    40:40:boolean isOverflowReserved() -> isOverflowReserved
    378:378:boolean isTitleOptional() -> isTitleOptional
    200:203:void killMode() -> killMode
    88:93:void onDetachedFromWindow() -> onDetachedFromWindow
    40:40:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    359:368:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    323:350:void onLayout(boolean,int,int,int,int) -> onLayout
    243:245:void onMeasure(int,int) -> onMeasure
    40:40:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    40:40:void postShowOverflowMenu() -> postShowOverflowMenu
    97:98:void setContentHeight(int) -> setContentHeight
    101:113:void setCustomView(android.view.View) -> setCustomView
    121:123:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    116:118:void setTitle(java.lang.CharSequence) -> setTitle
    371:375:void setTitleOptional(boolean) -> setTitleOptional
    40:40:void setVisibility(int) -> setVisibility
    40:40:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    354:354:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    207:210:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarContextView$1 -> androidx.appcompat.widget.ActionBarContextView$1:
    170:170:void <init>(androidx.appcompat.widget.ActionBarContextView,androidx.appcompat.view.ActionMode) -> <init>
    173:174:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ActionBarOverlayLayout -> androidx.appcompat.widget.ActionBarOverlayLayout:
    131:131:void <clinit>() -> <clinit>
    139:140:void <init>(android.content.Context) -> <init>
    143:147:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    651:653:void addActionBarHideOffset() -> addActionBarHideOffset
    266:284:boolean applyInsets(android.view.View,android.graphics.Rect,boolean,boolean,boolean,boolean) -> applyInsets
    732:733:boolean canShowOverflowMenu() -> canShowOverflowMenu
    337:337:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    786:788:void dismissPopups() -> dismissPopups
    453:462:void draw(android.graphics.Canvas) -> draw
    289:317:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    56:56:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    322:322:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    56:56:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    327:327:androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    332:332:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    617:617:int getActionBarHideOffset() -> getActionBarHideOffset
    592:598:androidx.appcompat.widget.DecorToolbar getDecorToolbar(android.view.View) -> getDecorToolbar
    580:580:int getNestedScrollAxes() -> getNestedScrollAxes
    675:676:java.lang.CharSequence getTitle() -> getTitle
    628:633:void haltActionBarHideOffsetAnimations() -> haltActionBarHideOffsetAnimations
    702:703:boolean hasIcon() -> hasIcon
    708:709:boolean hasLogo() -> hasLogo
    756:757:boolean hideOverflowMenu() -> hideOverflowMenu
    150:160:void init(android.content.Context) -> init
    681:693:void initFeature(int) -> initFeature
    613:613:boolean isHideOnContentScrollEnabled() -> isHideOnContentScrollEnabled
    195:195:boolean isInOverlayMode() -> isInOverlayMode
    744:745:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    738:739:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    225:228:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    164:166:void onDetachedFromWindow() -> onDetachedFromWindow
    427:449:void onLayout(boolean,int,int,int,int) -> onLayout
    342:423:void onMeasure(int,int) -> onMeasure
    556:557:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    575:575:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    508:511:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    571:571:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    474:475:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    501:504:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    536:538:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    486:489:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    525:531:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    481:481:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    517:518:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    493:496:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    542:552:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    232:253:void onWindowSystemUiVisibilityChanged(int) -> onWindowSystemUiVisibilityChanged
    257:262:void onWindowVisibilityChanged(int) -> onWindowVisibilityChanged
    641:643:void postAddActionBarHideOffset() -> postAddActionBarHideOffset
    636:638:void postRemoveActionBarHideOffset() -> postRemoveActionBarHideOffset
    584:589:void pullChildren() -> pullChildren
    646:648:void removeActionBarHideOffset() -> removeActionBarHideOffset
    780:782:void restoreToolbarHierarchyState(android.util.SparseArray) -> restoreToolbarHierarchyState
    774:776:void saveToolbarHierarchyState(android.util.SparseArray) -> saveToolbarHierarchyState
    621:625:void setActionBarHideOffset(int) -> setActionBarHideOffset
    169:180:void setActionBarVisibilityCallback(androidx.appcompat.widget.ActionBarOverlayLayout$ActionBarVisibilityCallback) -> setActionBarVisibilityCallback
    199:200:void setHasNonEmbeddedTabs(boolean) -> setHasNonEmbeddedTabs
    603:610:void setHideOnContentScrollEnabled(boolean) -> setHideOnContentScrollEnabled
    714:716:void setIcon(int) -> setIcon
    720:722:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    726:728:void setLogo(int) -> setLogo
    768:770:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    762:764:void setMenuPrepared() -> setMenuPrepared
    183:192:void setOverlayMode(boolean) -> setOverlayMode
    221:221:void setShowingForActionMode(boolean) -> setShowingForActionMode
    698:698:void setUiOptions(int) -> setUiOptions
    663:665:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    669:671:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    466:466:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    656:658:boolean shouldHideActionBarOnFling(float,float) -> shouldHideActionBarOnFling
    750:751:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionBarOverlayLayout$1 -> androidx.appcompat.widget.ActionBarOverlayLayout$1:
    98:98:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    107:109:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    101:103:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.appcompat.widget.ActionBarOverlayLayout$2 -> androidx.appcompat.widget.ActionBarOverlayLayout$2:
    112:112:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    115:118:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$3 -> androidx.appcompat.widget.ActionBarOverlayLayout$3:
    121:121:void <init>(androidx.appcompat.widget.ActionBarOverlayLayout) -> <init>
    124:128:void run() -> run
androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams -> androidx.appcompat.widget.ActionBarOverlayLayout$LayoutParams:
    792:793:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    796:797:void <init>(int,int) -> <init>
    800:801:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    804:805:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.appcompat.widget.ActionMenuPresenter -> androidx.appcompat.widget.ActionMenuPresenter:
    87:88:void <init>(android.content.Context) -> <init>
    54:54:androidx.appcompat.view.menu.MenuBuilder access$000(androidx.appcompat.widget.ActionMenuPresenter) -> access$000
    54:54:androidx.appcompat.view.menu.MenuBuilder access$100(androidx.appcompat.widget.ActionMenuPresenter) -> access$100
    54:54:androidx.appcompat.view.menu.MenuView access$200(androidx.appcompat.widget.ActionMenuPresenter) -> access$200
    54:54:androidx.appcompat.view.menu.MenuBuilder access$300(androidx.appcompat.widget.ActionMenuPresenter) -> access$300
    54:54:androidx.appcompat.view.menu.MenuBuilder access$400(androidx.appcompat.widget.ActionMenuPresenter) -> access$400
    54:54:androidx.appcompat.view.menu.MenuView access$500(androidx.appcompat.widget.ActionMenuPresenter) -> access$500
    207:217:void bindItemView(androidx.appcompat.view.menu.MenuItemImpl,androidx.appcompat.view.menu.MenuView$ItemView) -> bindItemView
    377:379:boolean dismissPopupMenus() -> dismissPopupMenus
    275:276:boolean filterLeftoverView(android.view.ViewGroup,int) -> filterLeftoverView
    317:328:android.view.View findViewForItem(android.view.MenuItem) -> findViewForItem
    417:547:boolean flagActionItems() -> flagActionItems
    191:202:android.view.View getItemView(androidx.appcompat.view.menu.MenuItemImpl,android.view.View,android.view.ViewGroup) -> getItemView
    181:186:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    171:176:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    358:369:boolean hideOverflowMenu() -> hideOverflowMenu
    388:392:boolean hideSubMenus() -> hideSubMenus
    92:130:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    403:403:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    399:399:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    410:410:boolean isOverflowReserved() -> isOverflowReserved
    552:554:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    133:139:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    565:577:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    558:560:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    281:313:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    581:587:void onSubUiVisibilityChanged(boolean) -> onSubUiVisibilityChanged
    158:159:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    153:155:void setItemLimit(int) -> setItemLimit
    590:592:void setMenuView(androidx.appcompat.widget.ActionMenuView) -> setMenuView
    162:168:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    148:150:void setReserveOverflow(boolean) -> setReserveOverflow
    142:145:void setWidthLimit(int,boolean) -> setWidthLimit
    221:221:boolean shouldIncludeItem(int,androidx.appcompat.view.menu.MenuItemImpl) -> shouldIncludeItem
    336:349:boolean showOverflowMenu() -> showOverflowMenu
    226:271:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu -> androidx.appcompat.widget.ActionMenuPresenter$ActionButtonSubmenu:
    738:748:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.SubMenuBuilder,android.view.View) -> <init>
    752:756:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback -> androidx.appcompat.widget.ActionMenuPresenter$ActionMenuPopupCallback:
    805:806:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    810:810:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable -> androidx.appcompat.widget.ActionMenuPresenter$OpenOverflowRunnable:
    787:789:void <init>(androidx.appcompat.widget.ActionMenuPresenter,androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup) -> <init>
    793:801:void run() -> run
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton:
    633:672:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context) -> <init>
    692:692:boolean needsDividerAfter() -> needsDividerAfter
    687:687:boolean needsDividerBefore() -> needsDividerBefore
    676:682:boolean performClick() -> performClick
    697:714:boolean setFrame(int,int,int,int) -> setFrame
androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1 -> androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton$1:
    643:643:void <init>(androidx.appcompat.widget.ActionMenuPresenter$OverflowMenuButton,android.view.View,androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    646:650:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    655:656:boolean onForwardingStarted() -> onForwardingStarted
    664:669:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup -> androidx.appcompat.widget.ActionMenuPresenter$OverflowPopup:
    720:724:void <init>(androidx.appcompat.widget.ActionMenuPresenter,android.content.Context,androidx.appcompat.view.menu.MenuBuilder,android.view.View,boolean) -> <init>
    728:734:void onDismiss() -> onDismiss
androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback -> androidx.appcompat.widget.ActionMenuPresenter$PopupPresenterCallback:
    760:761:void <init>(androidx.appcompat.widget.ActionMenuPresenter) -> <init>
    774:781:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    765:769:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuPresenter$SavedState -> androidx.appcompat.widget.ActionMenuPresenter$SavedState:
    615:615:void <clinit>() -> <clinit>
    598:599:void <init>() -> <init>
    601:603:void <init>(android.os.Parcel) -> <init>
    607:607:int describeContents() -> describeContents
    612:613:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.ActionMenuPresenter$SavedState$1 -> androidx.appcompat.widget.ActionMenuPresenter$SavedState$1:
    616:616:void <init>() -> <init>
    616:616:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    619:619:androidx.appcompat.widget.ActionMenuPresenter$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    616:616:java.lang.Object[] newArray(int) -> newArray
    624:624:androidx.appcompat.widget.ActionMenuPresenter$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ActionMenuView -> androidx.appcompat.widget.ActionMenuView:
    76:77:void <init>(android.content.Context) -> <init>
    80:87:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    610:610:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:726:void dismissPopupMenus() -> dismissPopupMenus
    750:750:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    48:48:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    583:586:androidx.appcompat.widget.ActionMenuView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    48:48:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    591:591:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    596:605:androidx.appcompat.widget.ActionMenuView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    616:618:androidx.appcompat.widget.ActionMenuView$LayoutParams generateOverflowButtonLayoutParams() -> generateOverflowButtonLayoutParams
    651:663:android.view.Menu getMenu() -> getMenu
    565:566:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    113:113:int getPopupTheme() -> getPopupTheme
    632:632:int getWindowAnimations() -> getWindowAnimations
    733:745:boolean hasSupportDividerBeforeChildAt(int) -> hasSupportDividerBeforeChildAt
    700:700:boolean hideOverflowMenu() -> hideOverflowMenu
    639:640:void initialize(androidx.appcompat.view.menu.MenuBuilder) -> initialize
    625:625:boolean invokeItem(androidx.appcompat.view.menu.MenuItemImpl) -> invokeItem
    716:716:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    710:710:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    572:572:boolean isOverflowReserved() -> isOverflowReserved
    404:434:int measureChildForCells(android.view.View,int,int,int,int) -> measureChildForCells
    128:138:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    544:546:void onDetachedFromWindow() -> onDetachedFromWindow
    439:540:void onLayout(boolean,int,int,int,int) -> onLayout
    147:174:void onMeasure(int,int) -> onMeasure
    178:387:void onMeasureExactFormat(int,int) -> onMeasureExactFormat
    682:682:androidx.appcompat.view.menu.MenuBuilder peekMenu() -> peekMenu
    756:757:void setExpandedActionViewsExclusive(boolean) -> setExpandedActionViewsExclusive
    672:674:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    141:142:void setOnMenuItemClickListener(androidx.appcompat.widget.ActionMenuView$OnMenuItemClickListener) -> setOnMenuItemClickListener
    554:556:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    578:579:void setOverflowReserved(boolean) -> setOverflowReserved
    97:105:void setPopupTheme(int) -> setPopupTheme
    122:124:void setPresenter(androidx.appcompat.widget.ActionMenuPresenter) -> setPresenter
    691:691:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback -> androidx.appcompat.widget.ActionMenuView$ActionMenuPresenterCallback:
    793:794:void <init>() -> <init>
    798:798:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    802:802:boolean onOpenSubMenu(androidx.appcompat.view.menu.MenuBuilder) -> onOpenSubMenu
androidx.appcompat.widget.ActionMenuView$LayoutParams -> androidx.appcompat.widget.ActionMenuView$LayoutParams:
    833:834:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    837:838:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    841:843:void <init>(androidx.appcompat.widget.ActionMenuView$LayoutParams) -> <init>
    846:848:void <init>(int,int) -> <init>
    851:853:void <init>(int,int,boolean) -> <init>
androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback -> androidx.appcompat.widget.ActionMenuView$MenuBuilderCallback:
    775:776:void <init>(androidx.appcompat.widget.ActionMenuView) -> <init>
    780:780:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    786:789:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.ActivityChooserModel -> androidx.appcompat.widget.ActivityChooserModel:
    157:223:void <clinit>() -> <clinit>
    346:354:void <init>(android.content.Context,java.lang.String) -> <init>
    727:735:boolean addHistoricalRecord(androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord) -> addHistoricalRecord
    457:488:android.content.Intent chooseActivity(int) -> chooseActivity
    654:661:void ensureConsistentState() -> ensureConsistentState
    330:337:androidx.appcompat.widget.ActivityChooserModel get(android.content.Context,java.lang.String) -> get
    410:413:android.content.pm.ResolveInfo getActivity(int) -> getActivity
    395:398:int getActivityCount() -> getActivityCount
    424:435:int getActivityIndex(android.content.pm.ResolveInfo) -> getActivityIndex
    512:517:android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    630:632:int getHistoryMaxSize() -> getHistoryMaxSize
    641:644:int getHistorySize() -> getHistorySize
    382:384:android.content.Intent getIntent() -> getIntent
    687:699:boolean loadActivitiesIfNeeded() -> loadActivitiesIfNeeded
    566:567:void persistHistoricalDataIfNeeded() -> persistHistoricalDataIfNeeded
    742:753:void pruneExcessiveHistoricalRecordsIfNeeded() -> pruneExcessiveHistoricalRecordsIfNeeded
    710:717:boolean readHistoricalDataIfNeeded() -> readHistoricalDataIfNeeded
    964:971:void readHistoricalDataImpl() -> readHistoricalDataImpl
    587:595:void setActivitySorter(androidx.appcompat.widget.ActivityChooserModel$ActivitySorter) -> setActivitySorter
    532:553:void setDefaultActivity(int) -> setDefaultActivity
    612:621:void setHistoryMaxSize(int) -> setHistoryMaxSize
    366:373:void setIntent(android.content.Intent) -> setIntent
    497:499:void setOnChooseActivityListener(androidx.appcompat.widget.ActivityChooserModel$OnChooseActivityListener) -> setOnChooseActivityListener
    671:677:boolean sortActivitiesIfNeeded() -> sortActivitiesIfNeeded
androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo -> androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo:
    869:871:void <init>(android.content.pm.ResolveInfo) -> <init>
    852:852:int compareTo(java.lang.Object) -> compareTo
    898:898:int compareTo(androidx.appcompat.widget.ActivityChooserModel$ActivityResolveInfo) -> compareTo
    880:893:boolean equals(java.lang.Object) -> equals
    875:875:int hashCode() -> hashCode
    903:908:java.lang.String toString() -> toString
androidx.appcompat.widget.ActivityChooserModel$DefaultSorter -> androidx.appcompat.widget.ActivityChooserModel$DefaultSorter:
    921:922:void <init>() -> <init>
    927:960:void sort(android.content.Intent,java.util.List,java.util.List) -> sort
androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord -> androidx.appcompat.widget.ActivityChooserModel$HistoricalRecord:
    783:784:void <init>(java.lang.String,long,float) -> <init>
    793:797:void <init>(android.content.ComponentName,long,float) -> <init>
    811:834:boolean equals(java.lang.Object) -> equals
    801:806:int hashCode() -> hashCode
    839:845:java.lang.String toString() -> toString
androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask -> androidx.appcompat.widget.ActivityChooserModel$PersistHistoryAsyncTask:
    1039:1040:void <init>(androidx.appcompat.widget.ActivityChooserModel) -> <init>
    1037:1037:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    1045:1054:java.lang.Void doInBackground(java.lang.Object[]) -> doInBackground
androidx.appcompat.widget.ActivityChooserView -> androidx.appcompat.widget.ActivityChooserView:
    201:202:void <init>(android.content.Context) -> <init>
    211:212:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    222:297:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    415:422:boolean dismissPopup() -> dismissPopup
    484:484:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> getDataModel
    528:536:androidx.appcompat.widget.ListPopupWindow getListPopupWindow() -> getListPopupWindow
    431:431:boolean isShowingPopup() -> isShowingPopup
    436:442:void onAttachedToWindow() -> onAttachedToWindow
    446:459:void onDetachedFromWindow() -> onDetachedFromWindow
    477:481:void onLayout(boolean,int,int,int,int) -> onLayout
    463:473:void onMeasure(int,int) -> onMeasure
    304:309:void setActivityChooserModel(androidx.appcompat.widget.ActivityChooserModel) -> setActivityChooserModel
    519:520:void setDefaultActionButtonContentDescription(int) -> setDefaultActionButtonContentDescription
    337:339:void setExpandActivityOverflowButtonContentDescription(int) -> setExpandActivityOverflowButtonContentDescription
    323:324:void setExpandActivityOverflowButtonDrawable(android.graphics.drawable.Drawable) -> setExpandActivityOverflowButtonDrawable
    505:506:void setInitialActivityCount(int) -> setInitialActivityCount
    493:494:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    347:348:void setProvider(androidx.core.view.ActionProvider) -> setProvider
    356:357:boolean showPopup() -> showPopup
    370:371:void showPopupUnchecked(int) -> showPopupUnchecked
    544:572:void updateAppearance() -> updateAppearance
androidx.appcompat.widget.ActivityChooserView$1 -> androidx.appcompat.widget.ActivityChooserView$1:
    135:135:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    139:141:void onChanged() -> onChanged
    144:146:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ActivityChooserView$2 -> androidx.appcompat.widget.ActivityChooserView$2:
    149:149:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    152:162:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.ActivityChooserView$3 -> androidx.appcompat.widget.ActivityChooserView$3:
    255:255:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    258:260:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
androidx.appcompat.widget.ActivityChooserView$4 -> androidx.appcompat.widget.ActivityChooserView$4:
    262:262:void <init>(androidx.appcompat.widget.ActivityChooserView,android.view.View) -> <init>
    265:265:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    270:271:boolean onForwardingStarted() -> onForwardingStarted
    276:277:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ActivityChooserView$5 -> androidx.appcompat.widget.ActivityChooserView$5:
    286:286:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    289:291:void onChanged() -> onChanged
androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter -> androidx.appcompat.widget.ActivityChooserView$ActivityChooserViewAdapter:
    690:691:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    836:836:int getActivityCount() -> getActivityCount
    721:730:int getCount() -> getCount
    844:844:androidx.appcompat.widget.ActivityChooserModel getDataModel() -> getDataModel
    825:825:android.content.pm.ResolveInfo getDefaultActivity() -> getDefaultActivity
    840:840:int getHistorySize() -> getHistorySize
    735:743:java.lang.Object getItem(int) -> getItem
    751:751:long getItemId(int) -> getItemId
    707:710:int getItemViewType(int) -> getItemViewType
    858:858:boolean getShowDefaultActivity() -> getShowDefaultActivity
    756:787:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    716:716:int getViewTypeCount() -> getViewTypeCount
    796:814:int measureContentWidth() -> measureContentWidth
    694:703:void setDataModel(androidx.appcompat.widget.ActivityChooserModel) -> setDataModel
    818:822:void setMaxActivityCount(int) -> setMaxActivityCount
    849:855:void setShowDefaultActivity(boolean,boolean) -> setShowDefaultActivity
    829:833:void setShowFooterView(boolean) -> setShowFooterView
androidx.appcompat.widget.ActivityChooserView$Callbacks -> androidx.appcompat.widget.ActivityChooserView$Callbacks:
    580:581:void <init>(androidx.appcompat.widget.ActivityChooserView) -> <init>
    659:662:void notifyOnDismissListener() -> notifyOnDismissListener
    618:631:void onClick(android.view.View) -> onClick
    652:656:void onDismiss() -> onDismiss
    586:613:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
    638:644:boolean onLongClick(android.view.View) -> onLongClick
androidx.appcompat.widget.ActivityChooserView$InnerLayout -> androidx.appcompat.widget.ActivityChooserView$InnerLayout:
    869:869:void <clinit>() -> <clinit>
    874:878:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.appcompat.widget.AlertDialogLayout -> androidx.appcompat.widget.AlertDialogLayout:
    55:56:void <init>(android.content.Context) -> <init>
    59:60:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    217:236:void forceUniformWidth(int,int) -> forceUniformWidth
    265:345:void onLayout(boolean,int,int,int,int) -> onLayout
    64:68:void onMeasure(int,int) -> onMeasure
    248:260:int resolveMinimumHeight(android.view.View) -> resolveMinimumHeight
    348:349:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    71:206:boolean tryOnMeasure(int,int) -> tryOnMeasure
androidx.appcompat.widget.AppCompatAutoCompleteTextView -> androidx.appcompat.widget.AppCompatAutoCompleteTextView:
    58:58:void <clinit>() -> <clinit>
    66:67:void <init>(android.content.Context) -> <init>
    70:71:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    74:89:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    170:177:void drawableStateChanged() -> drawableStateChanged
    136:136:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    164:164:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    189:189:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    106:110:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    98:102:void setBackgroundResource(int) -> setBackgroundResource
    199:201:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    93:94:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    121:124:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    149:152:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    181:185:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatBackgroundHelper -> androidx.appcompat.widget.AppCompatBackgroundHelper:
    41:44:void <init>(android.view.View) -> <init>
    173:192:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    118:135:void applySupportBackgroundTint() -> applySupportBackgroundTint
    100:100:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    114:114:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    47:71:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    84:88:void onSetBackgroundDrawable(android.graphics.drawable.Drawable) -> onSetBackgroundDrawable
    75:81:void onSetBackgroundResource(int) -> onSetBackgroundResource
    138:148:void setInternalBackgroundTint(android.content.res.ColorStateList) -> setInternalBackgroundTint
    91:97:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    104:111:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    151:163:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatButton -> androidx.appcompat.widget.AppCompatButton:
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    156:163:void drawableStateChanged() -> drawableStateChanged
    324:331:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    308:315:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    292:299:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    340:347:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    274:283:int getAutoSizeTextType() -> getAutoSizeTextType
    122:122:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    150:150:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    175:177:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    181:183:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    187:191:void onLayout(boolean,int,int,int,int) -> onLayout
    206:210:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    238:247:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    256:263:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    219:226:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    92:96:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    84:88:void setBackgroundResource(int) -> setBackgroundResource
    371:373:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    360:363:void setSupportAllCaps(boolean) -> setSupportAllCaps
    107:110:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    135:138:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    167:171:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    195:202:void setTextSize(int,float) -> setTextSize
androidx.appcompat.widget.AppCompatCheckBox -> androidx.appcompat.widget.AppCompatCheckBox:
    61:62:void <init>(android.content.Context) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    224:231:void drawableStateChanged() -> drawableStateChanged
    95:96:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    174:174:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    202:202:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    121:121:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    146:146:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    208:212:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    216:220:void setBackgroundResource(int) -> setBackgroundResource
    82:86:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    90:91:void setButtonDrawable(int) -> setButtonDrawable
    159:162:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    187:190:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    108:111:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    133:136:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatCheckedTextView -> androidx.appcompat.widget.AppCompatCheckedTextView:
    40:40:void <clinit>() -> <clinit>
    47:48:void <init>(android.content.Context) -> <init>
    51:52:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    55:65:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    82:86:void drawableStateChanged() -> drawableStateChanged
    90:90:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    69:70:void setCheckMarkDrawable(int) -> setCheckMarkDrawable
    100:102:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    74:78:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatCompoundButtonHelper -> androidx.appcompat.widget.AppCompatCompoundButtonHelper:
    52:54:void <init>(android.widget.CompoundButton) -> <init>
    130:148:void applyButtonTint() -> applyButtonTint
    151:159:int getCompoundPaddingLeft(int) -> getCompoundPaddingLeft
    105:105:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    116:116:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    57:94:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    120:127:void onSetButtonDrawable() -> onSetButtonDrawable
    98:102:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    109:113:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatDrawableManager -> androidx.appcompat.widget.AppCompatDrawableManager:
    49:49:void <clinit>() -> <clinit>
    46:46:void <init>() -> <init>
    46:46:android.graphics.PorterDuff$Mode access$000() -> access$000
    397:396:androidx.appcompat.widget.AppCompatDrawableManager get() -> get
    406:406:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    411:411:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    438:438:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    429:429:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    415:414:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    420:420:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    54:53:void preload() -> preload
    433:434:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    425:425:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatDrawableManager$1 -> androidx.appcompat.widget.AppCompatDrawableManager$1:
    57:126:void <init>() -> <init>
    291:296:boolean arrayContains(int[],int) -> arrayContains
    141:141:android.content.res.ColorStateList createBorderlessButtonColorStateList(android.content.Context) -> createBorderlessButtonColorStateList
    152:179:android.content.res.ColorStateList createButtonColorStateList(android.content.Context,int) -> createButtonColorStateList
    146:146:android.content.res.ColorStateList createColoredButtonColorStateList(android.content.Context) -> createColoredButtonColorStateList
    134:134:android.content.res.ColorStateList createDefaultButtonColorStateList(android.content.Context) -> createDefaultButtonColorStateList
    232:240:android.graphics.drawable.Drawable createDrawableFor(androidx.appcompat.widget.ResourceManagerInternal,android.content.Context,int) -> createDrawableFor
    183:226:android.content.res.ColorStateList createSwitchThumbColorStateList(android.content.Context) -> createSwitchThumbColorStateList
    303:317:android.content.res.ColorStateList getTintListForDrawableRes(android.content.Context,int) -> getTintListForDrawableRes
    381:387:android.graphics.PorterDuff$Mode getTintModeForDrawableRes(int) -> getTintModeForDrawableRes
    244:249:void setPorterDuffColorFilter(android.graphics.drawable.Drawable,int,android.graphics.PorterDuff$Mode) -> setPorterDuffColorFilter
    254:285:boolean tintDrawable(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawable
    333:376:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.AppCompatEditText -> androidx.appcompat.widget.AppCompatEditText:
    65:66:void <init>(android.content.Context) -> <init>
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:83:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    173:180:void drawableStateChanged() -> drawableStateChanged
    139:139:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    167:167:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    58:58:java.lang.CharSequence getText() -> getText
    91:96:android.text.Editable getText() -> getText
    230:231:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    192:192:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    109:113:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    101:105:void setBackgroundResource(int) -> setBackgroundResource
    202:204:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    124:127:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    152:155:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    184:188:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    212:214:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatHintHelper -> androidx.appcompat.widget.AppCompatHintHelper:
    43:44:void <init>() -> <init>
    28:40:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,android.view.View) -> onCreateInputConnection
androidx.appcompat.widget.AppCompatImageButton -> androidx.appcompat.widget.AppCompatImageButton:
    65:66:void <init>(android.content.Context) -> <init>
    69:70:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    73:80:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    241:248:void drawableStateChanged() -> drawableStateChanged
    152:152:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    180:180:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    207:207:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    235:235:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    252:252:boolean hasOverlappingRendering() -> hasOverlappingRendering
    122:126:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    114:118:void setBackgroundResource(int) -> setBackgroundResource
    98:102:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    90:94:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    85:86:void setImageResource(int) -> setImageResource
    106:110:void setImageURI(android.net.Uri) -> setImageURI
    137:140:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    165:168:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    192:195:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    220:223:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatImageHelper -> androidx.appcompat.widget.AppCompatImageHelper:
    45:47:void <init>(android.widget.ImageView) -> <init>
    196:215:boolean applyFrameworkTintUsingColorFilter(android.graphics.drawable.Drawable) -> applyFrameworkTintUsingColorFilter
    137:158:void applySupportImageTint() -> applySupportImageTint
    119:119:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    133:133:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    99:106:boolean hasOverlappingRendering() -> hasOverlappingRendering
    50:81:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    85:96:void setImageResource(int) -> setImageResource
    161:171:void setInternalImageTint(android.content.res.ColorStateList) -> setInternalImageTint
    110:116:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    123:130:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
    174:186:boolean shouldApplyFrameworkTintUsingColorFilter() -> shouldApplyFrameworkTintUsingColorFilter
androidx.appcompat.widget.AppCompatImageView -> androidx.appcompat.widget.AppCompatImageView:
    64:65:void <init>(android.content.Context) -> <init>
    68:69:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    72:79:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    252:259:void drawableStateChanged() -> drawableStateChanged
    162:162:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    190:190:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    218:218:android.content.res.ColorStateList getSupportImageTintList() -> getSupportImageTintList
    246:246:android.graphics.PorterDuff$Mode getSupportImageTintMode() -> getSupportImageTintMode
    263:263:boolean hasOverlappingRendering() -> hasOverlappingRendering
    132:136:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    124:128:void setBackgroundResource(int) -> setBackgroundResource
    108:112:void setImageBitmap(android.graphics.Bitmap) -> setImageBitmap
    100:104:void setImageDrawable(android.graphics.drawable.Drawable) -> setImageDrawable
    92:96:void setImageResource(int) -> setImageResource
    116:120:void setImageURI(android.net.Uri) -> setImageURI
    147:150:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    175:178:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    203:206:void setSupportImageTintList(android.content.res.ColorStateList) -> setSupportImageTintList
    231:234:void setSupportImageTintMode(android.graphics.PorterDuff$Mode) -> setSupportImageTintMode
androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView -> androidx.appcompat.widget.AppCompatMultiAutoCompleteTextView:
    55:55:void <clinit>() -> <clinit>
    63:64:void <init>(android.content.Context) -> <init>
    67:68:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    71:86:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    167:174:void drawableStateChanged() -> drawableStateChanged
    133:133:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    161:161:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    186:186:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    103:107:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    95:99:void setBackgroundResource(int) -> setBackgroundResource
    90:91:void setDropDownBackgroundResource(int) -> setDropDownBackgroundResource
    118:121:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    146:149:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    178:182:void setTextAppearance(android.content.Context,int) -> setTextAppearance
androidx.appcompat.widget.AppCompatPopupWindow -> androidx.appcompat.widget.AppCompatPopupWindow:
    34:34:void <clinit>() -> <clinit>
    40:42:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    46:48:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    51:60:void init(android.content.Context,android.util.AttributeSet,int,int) -> init
    90:95:void setSupportOverlapAnchor(boolean) -> setSupportOverlapAnchor
    64:69:void showAsDropDown(android.view.View,int,int) -> showAsDropDown
    73:78:void showAsDropDown(android.view.View,int,int,int) -> showAsDropDown
    82:87:void update(android.view.View,int,int,int,int) -> update
androidx.appcompat.widget.AppCompatProgressBarHelper -> androidx.appcompat.widget.AppCompatProgressBarHelper:
    38:38:void <clinit>() -> <clinit>
    47:49:void <init>(android.widget.ProgressBar) -> <init>
    140:141:android.graphics.drawable.shapes.Shape getDrawableShape() -> getDrawableShape
    145:145:android.graphics.Bitmap getSampleTile() -> getSampleTile
    52:66:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    73:113:android.graphics.drawable.Drawable tileify(android.graphics.drawable.Drawable,boolean) -> tileify
    122:136:android.graphics.drawable.Drawable tileifyIndeterminate(android.graphics.drawable.Drawable) -> tileifyIndeterminate
androidx.appcompat.widget.AppCompatRadioButton -> androidx.appcompat.widget.AppCompatRadioButton:
    61:62:void <init>(android.content.Context) -> <init>
    65:66:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    69:78:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    225:232:void drawableStateChanged() -> drawableStateChanged
    95:96:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    175:175:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    203:203:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    121:121:android.content.res.ColorStateList getSupportButtonTintList() -> getSupportButtonTintList
    146:146:android.graphics.PorterDuff$Mode getSupportButtonTintMode() -> getSupportButtonTintMode
    209:213:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    217:221:void setBackgroundResource(int) -> setBackgroundResource
    82:86:void setButtonDrawable(android.graphics.drawable.Drawable) -> setButtonDrawable
    90:91:void setButtonDrawable(int) -> setButtonDrawable
    160:163:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    188:191:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    108:111:void setSupportButtonTintList(android.content.res.ColorStateList) -> setSupportButtonTintList
    133:136:void setSupportButtonTintMode(android.graphics.PorterDuff$Mode) -> setSupportButtonTintMode
androidx.appcompat.widget.AppCompatRatingBar -> androidx.appcompat.widget.AppCompatRatingBar:
    40:41:void <init>(android.content.Context) -> <init>
    44:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:52:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    56:55:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.AppCompatSeekBar -> androidx.appcompat.widget.AppCompatSeekBar:
    39:40:void <init>(android.content.Context) -> <init>
    43:44:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    47:51:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    61:63:void drawableStateChanged() -> drawableStateChanged
    67:69:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    55:54:void onDraw(android.graphics.Canvas) -> onDraw
androidx.appcompat.widget.AppCompatSeekBarHelper -> androidx.appcompat.widget.AppCompatSeekBarHelper:
    42:44:void <init>(android.widget.SeekBar) -> <init>
    125:142:void applyTickMarkTint() -> applyTickMarkTint
    162:182:void drawTickMarks(android.graphics.Canvas) -> drawTickMarks
    151:156:void drawableStateChanged() -> drawableStateChanged
    97:97:android.graphics.drawable.Drawable getTickMark() -> getTickMark
    109:109:android.content.res.ColorStateList getTickMarkTintList() -> getTickMarkTintList
    121:121:android.graphics.PorterDuff$Mode getTickMarkTintMode() -> getTickMarkTintMode
    145:148:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    48:74:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    77:93:void setTickMark(android.graphics.drawable.Drawable) -> setTickMark
    101:105:void setTickMarkTintList(android.content.res.ColorStateList) -> setTickMarkTintList
    113:117:void setTickMarkTintMode(android.graphics.PorterDuff$Mode) -> setTickMarkTintMode
androidx.appcompat.widget.AppCompatSpinner -> androidx.appcompat.widget.AppCompatSpinner:
    78:78:void <clinit>() -> <clinit>
    114:115:void <init>(android.content.Context) -> <init>
    129:130:void <init>(android.content.Context,int) -> <init>
    140:141:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    155:156:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    174:175:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    203:294:void <init>(android.content.Context,android.util.AttributeSet,int,int,android.content.res.Resources$Theme) -> <init>
    550:590:int compatMeasureContentWidth(android.widget.SpinnerAdapter,android.graphics.drawable.Drawable) -> compatMeasureContentWidth
    543:547:void drawableStateChanged() -> drawableStateChanged
    365:368:int getDropDownHorizontalOffset() -> getDropDownHorizontalOffset
    339:342:int getDropDownVerticalOffset() -> getDropDownVerticalOffset
    384:387:int getDropDownWidth() -> getDropDownWidth
    595:595:androidx.appcompat.widget.AppCompatSpinner$SpinnerPopup getInternalPopup() -> getInternalPopup
    320:323:android.graphics.drawable.Drawable getPopupBackground() -> getPopupBackground
    301:301:android.content.Context getPopupContext() -> getPopupContext
    464:464:java.lang.CharSequence getPrompt() -> getPrompt
    508:508:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    537:537:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    411:416:void onDetachedFromWindow() -> onDetachedFromWindow
    428:437:void onMeasure(int,int) -> onMeasure
    617:643:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    609:612:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    420:423:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    441:450:boolean performClick() -> performClick
    76:76:void setAdapter(android.widget.Adapter) -> setAdapter
    396:407:void setAdapter(android.widget.SpinnerAdapter) -> setAdapter
    477:481:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    469:473:void setBackgroundResource(int) -> setBackgroundResource
    349:355:void setDropDownHorizontalOffset(int) -> setDropDownHorizontalOffset
    330:335:void setDropDownVerticalOffset(int) -> setDropDownVerticalOffset
    375:380:void setDropDownWidth(int) -> setDropDownWidth
    306:311:void setPopupBackgroundDrawable(android.graphics.drawable.Drawable) -> setPopupBackgroundDrawable
    315:316:void setPopupBackgroundResource(int) -> setPopupBackgroundResource
    455:460:void setPrompt(java.lang.CharSequence) -> setPrompt
    493:496:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    522:525:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    599:604:void showPopup() -> showPopup
androidx.appcompat.widget.AppCompatSpinner$1 -> androidx.appcompat.widget.AppCompatSpinner$1:
    256:256:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.view.View,androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    259:259:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    265:268:boolean onForwardingStarted() -> onForwardingStarted
androidx.appcompat.widget.AppCompatSpinner$2 -> androidx.appcompat.widget.AppCompatSpinner$2:
    624:624:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    627:638:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DialogPopup -> androidx.appcompat.widget.AppCompatSpinner$DialogPopup:
    848:848:void <init>(androidx.appcompat.widget.AppCompatSpinner) -> <init>
    856:860:void dismiss() -> dismiss
    927:927:android.graphics.drawable.Drawable getBackground() -> getBackground
    879:879:java.lang.CharSequence getHintText() -> getHintText
    937:937:int getHorizontalOffset() -> getHorizontalOffset
    947:947:int getHorizontalOriginalOffset() -> getHorizontalOriginalOffset
    932:932:int getVerticalOffset() -> getVerticalOffset
    864:864:boolean isShowing() -> isShowing
    903:908:void onClick(android.content.DialogInterface,int) -> onClick
    869:870:void setAdapter(android.widget.ListAdapter) -> setAdapter
    912:913:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    922:923:void setHorizontalOffset(int) -> setHorizontalOffset
    942:943:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    874:875:void setPromptText(java.lang.CharSequence) -> setPromptText
    917:918:void setVerticalOffset(int) -> setVerticalOffset
    884:899:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter -> androidx.appcompat.widget.AppCompatSpinner$DropDownAdapter:
    693:715:void <init>(android.widget.SpinnerAdapter,android.content.res.Resources$Theme) -> <init>
    768:772:boolean areAllItemsEnabled() -> areAllItemsEnabled
    719:719:int getCount() -> getCount
    739:739:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    724:724:java.lang.Object getItem(int) -> getItem
    729:729:long getItemId(int) -> getItemId
    792:792:int getItemViewType(int) -> getItemViewType
    734:734:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    797:797:int getViewTypeCount() -> getViewTypeCount
    745:745:boolean hasStableIds() -> hasStableIds
    802:802:boolean isEmpty() -> isEmpty
    782:786:boolean isEnabled(int) -> isEnabled
    750:753:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    757:760:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup:
    958:976:void <init>(androidx.appcompat.widget.AppCompatSpinner,android.content.Context,android.util.AttributeSet,int) -> <init>
    952:952:void access$001(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> access$001
    996:1031:void computeContentWidth() -> computeContentWidth
    986:986:java.lang.CharSequence getHintText() -> getHintText
    1102:1102:int getHorizontalOriginalOffset() -> getHorizontalOriginalOffset
    1092:1092:boolean isVisibleToUser(android.view.View) -> isVisibleToUser
    980:982:void setAdapter(android.widget.ListAdapter) -> setAdapter
    1097:1098:void setHorizontalOriginalOffset(int) -> setHorizontalOriginalOffset
    992:993:void setPromptText(java.lang.CharSequence) -> setPromptText
    1035:1086:void show(int,int) -> show
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$1:
    965:965:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,androidx.appcompat.widget.AppCompatSpinner) -> <init>
    968:974:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$2:
    1061:1061:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup) -> <init>
    1064:1073:void onGlobalLayout() -> onGlobalLayout
androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3 -> androidx.appcompat.widget.AppCompatSpinner$DropdownPopup$3:
    1076:1076:void <init>(androidx.appcompat.widget.AppCompatSpinner$DropdownPopup,android.view.ViewTreeObserver$OnGlobalLayoutListener) -> <init>
    1079:1083:void onDismiss() -> onDismiss
androidx.appcompat.widget.AppCompatSpinner$SavedState -> androidx.appcompat.widget.AppCompatSpinner$SavedState:
    663:663:void <clinit>() -> <clinit>
    649:650:void <init>(android.os.Parcelable) -> <init>
    653:655:void <init>(android.os.Parcel) -> <init>
    659:661:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.AppCompatSpinner$SavedState$1 -> androidx.appcompat.widget.AppCompatSpinner$SavedState$1:
    664:664:void <init>() -> <init>
    664:664:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    666:666:androidx.appcompat.widget.AppCompatSpinner$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    664:664:java.lang.Object[] newArray(int) -> newArray
    670:670:androidx.appcompat.widget.AppCompatSpinner$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.AppCompatTextClassifierHelper -> androidx.appcompat.widget.AppCompatTextClassifierHelper:
    42:44:void <init>(android.widget.TextView) -> <init>
    62:70:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    51:52:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
androidx.appcompat.widget.AppCompatTextHelper -> androidx.appcompat.widget.AppCompatTextHelper:
    74:77:void <init>(android.widget.TextView) -> <init>
    554:557:void applyCompoundDrawableTint(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo) -> applyCompoundDrawableTint
    536:551:void applyCompoundDrawablesTints() -> applyCompoundDrawablesTints
    592:593:void autoSizeText() -> autoSizeText
    561:568:androidx.appcompat.widget.TintInfo createTintInfo(android.content.Context,androidx.appcompat.widget.AppCompatDrawableManager,int) -> createTintInfo
    637:637:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    633:633:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    629:629:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    641:641:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    625:625:int getAutoSizeTextType() -> getAutoSizeTextType
    646:646:android.content.res.ColorStateList getCompoundDrawableTintList() -> getCompoundDrawableTintList
    660:660:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode() -> getCompoundDrawableTintMode
    598:598:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    81:331:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    574:577:void onLayout(boolean,int,int,int,int) -> onLayout
    532:533:void onSetCompoundDrawables() -> onSetCompoundDrawables
    485:525:void onSetTextAppearance(android.content.Context,int) -> onSetTextAppearance
    347:348:void runOnUiThread(java.lang.Runnable) -> runOnUiThread
    528:529:void setAllCaps(boolean) -> setAllCaps
    614:616:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    620:621:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    606:607:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    650:656:void setCompoundDrawableTintList(android.content.res.ColorStateList) -> setCompoundDrawableTintList
    664:670:void setCompoundDrawableTintMode(android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    685:717:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    673:679:void setCompoundTints() -> setCompoundTints
    582:587:void setTextSize(int,float) -> setTextSize
    602:603:void setTextSizeInternal(int,float) -> setTextSizeInternal
    337:341:void setTypefaceByCallback(android.graphics.Typeface) -> setTypefaceByCallback
    407:461:void updateTypefaceAndStyle(android.content.Context,androidx.appcompat.widget.TintTypedArray) -> updateTypefaceAndStyle
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback -> androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback:
    379:383:void <init>(androidx.appcompat.widget.AppCompatTextHelper,int,int) -> <init>
    403:403:void onFontRetrievalFailed(int) -> onFontRetrievalFailed
    387:398:void onFontRetrieved(android.graphics.Typeface) -> onFontRetrieved
androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback -> androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback$TypefaceApplyCallback:
    359:362:void <init>(androidx.appcompat.widget.AppCompatTextHelper$ApplyTextViewCallback,java.lang.ref.WeakReference,android.graphics.Typeface) -> <init>
    366:371:void run() -> run
androidx.appcompat.widget.AppCompatTextView -> androidx.appcompat.widget.AppCompatTextView:
    91:92:void <init>(android.content.Context) -> <init>
    95:96:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    99:109:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    482:491:void consumeTextFutureAndSetBlocking() -> consumeTextFutureAndSetBlocking
    193:200:void drawableStateChanged() -> drawableStateChanged
    365:372:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    346:353:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    327:334:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    384:391:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    306:315:int getAutoSizeTextType() -> getAutoSizeTextType
    422:422:int getFirstBaselineToTopHeight() -> getFirstBaselineToTopHeight
    427:427:int getLastBaselineToBottomHeight() -> getLastBaselineToBottomHeight
    151:151:android.content.res.ColorStateList getSupportBackgroundTintList() -> getSupportBackgroundTintList
    179:179:android.graphics.PorterDuff$Mode getSupportBackgroundTintMode() -> getSupportBackgroundTintMode
    634:634:android.content.res.ColorStateList getSupportCompoundDrawablesTintList() -> getSupportCompoundDrawablesTintList
    677:677:android.graphics.PorterDuff$Mode getSupportCompoundDrawablesTintMode() -> getSupportCompoundDrawablesTintMode
    495:496:java.lang.CharSequence getText() -> getText
    523:524:android.view.textclassifier.TextClassifier getTextClassifier() -> getTextClassifier
    454:454:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParamsCompat() -> getTextMetricsParamsCompat
    396:396:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    204:208:void onLayout(boolean,int,int,int,int) -> onLayout
    550:552:void onMeasure(int,int) -> onMeasure
    223:227:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    263:272:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    285:292:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    240:247:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    121:125:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    113:117:void setBackgroundResource(int) -> setBackgroundResource
    557:561:void setCompoundDrawables(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawables
    567:571:void setCompoundDrawablesRelative(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    599:603:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    609:618:void setCompoundDrawablesRelativeWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    576:580:void setCompoundDrawablesWithIntrinsicBounds(android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesWithIntrinsicBounds
    584:593:void setCompoundDrawablesWithIntrinsicBounds(int,int,int,int) -> setCompoundDrawablesWithIntrinsicBounds
    441:443:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    402:407:void setFirstBaselineToTopHeight(int) -> setFirstBaselineToTopHeight
    412:418:void setLastBaselineToBottomHeight(int) -> setLastBaselineToBottomHeight
    432:433:void setLineHeight(int) -> setLineHeight
    478:479:void setPrecomputedText(androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    136:139:void setSupportBackgroundTintList(android.content.res.ColorStateList) -> setSupportBackgroundTintList
    164:167:void setSupportBackgroundTintMode(android.graphics.PorterDuff$Mode) -> setSupportBackgroundTintMode
    657:659:void setSupportCompoundDrawablesTintList(android.content.res.ColorStateList) -> setSupportCompoundDrawablesTintList
    697:699:void setSupportCompoundDrawablesTintMode(android.graphics.PorterDuff$Mode) -> setSupportCompoundDrawablesTintMode
    185:189:void setTextAppearance(android.content.Context,int) -> setTextAppearance
    505:507:void setTextClassifier(android.view.textclassifier.TextClassifier) -> setTextClassifier
    542:546:void setTextFuture(java.util.concurrent.Future) -> setTextFuture
    465:466:void setTextMetricsParamsCompat(androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParamsCompat
    212:219:void setTextSize(int,float) -> setTextSize
    703:709:void setTypeface(android.graphics.Typeface,int) -> setTypeface
androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper -> androidx.appcompat.widget.AppCompatTextViewAutoSizeHelper:
    63:76:void <clinit>() -> <clinit>
    105:108:void <init>(android.widget.TextView) -> <init>
    811:819:java.lang.Object accessAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> accessAndReturnWithDefault
    546:582:void autoSizeText() -> autoSizeText
    453:477:int[] cleanupAutoSizePresetSizes(int[]) -> cleanupAutoSizePresetSizes
    585:591:void clearAutoSizeConfiguration() -> clearAutoSizeConfiguration
    679:682:android.text.StaticLayout createLayout(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createLayout
    724:748:android.text.StaticLayout createStaticLayoutForMeasuring(java.lang.CharSequence,android.text.Layout$Alignment,int,int) -> createStaticLayoutForMeasuring
    771:778:android.text.StaticLayout createStaticLayoutForMeasuringPre16(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre16
    754:760:android.text.StaticLayout createStaticLayoutForMeasuringPre23(java.lang.CharSequence,android.text.Layout$Alignment,int) -> createStaticLayoutForMeasuringPre23
    642:644:int findLargestTextSizeWhichFits(android.graphics.RectF) -> findLargestTextSizeWhichFits
    410:410:int getAutoSizeMaxTextSize() -> getAutoSizeMaxTextSize
    394:394:int getAutoSizeMinTextSize() -> getAutoSizeMinTextSize
    378:378:int getAutoSizeStepGranularity() -> getAutoSizeStepGranularity
    423:423:int[] getAutoSizeTextAvailableSizes() -> getAutoSizeTextAvailableSizes
    364:364:int getAutoSizeTextType() -> getAutoSizeTextType
    846:858:java.lang.reflect.Field getTextViewField(java.lang.String) -> getTextViewField
    826:839:java.lang.reflect.Method getTextViewMethod(java.lang.String) -> getTextViewMethod
    667:674:void initTempTextPaint(int) -> initTempTextPaint
    788:802:java.lang.Object invokeAndReturnWithDefault(java.lang.Object,java.lang.String,java.lang.Object) -> invokeAndReturnWithDefault
    870:870:boolean isAutoSizeEnabled() -> isAutoSizeEnabled
    111:186:void loadFromAttributes(android.util.AttributeSet,int) -> loadFromAttributes
    271:287:void setAutoSizeTextTypeUniformWithConfiguration(int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    314:344:void setAutoSizeTextTypeUniformWithPresetSizes(int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    204:234:void setAutoSizeTextTypeWithDefaults(int) -> setAutoSizeTextTypeWithDefaults
    604:635:void setRawTextSize(float) -> setRawTextSize
    596:601:void setTextSizeInternal(int,float) -> setTextSizeInternal
    516:536:boolean setupAutoSizeText() -> setupAutoSizeText
    427:437:void setupAutoSizeUniformPresetSizes(android.content.res.TypedArray) -> setupAutoSizeUniformPresetSizes
    440:448:boolean setupAutoSizeUniformPresetSizesConfiguration() -> setupAutoSizeUniformPresetSizesConfiguration
    689:717:boolean suggestedSizeFitsInSpace(int,android.graphics.RectF) -> suggestedSizeFitsInSpace
    879:879:boolean supportsAutoSizeText() -> supportsAutoSizeText
    491:492:void validateAndSetAutoSizeTextTypeUniformConfiguration(float,float,float) -> validateAndSetAutoSizeTextTypeUniformConfiguration
androidx.appcompat.widget.AppCompatToggleButton -> androidx.appcompat.widget.AppCompatToggleButton:
    38:39:void <init>(android.content.Context) -> <init>
    42:43:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    46:50:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
androidx.appcompat.widget.ButtonBarLayout -> androidx.appcompat.widget.ButtonBarLayout:
    51:58:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    154:154:int getMinimumHeight() -> getMinimumHeight
    144:149:int getNextVisibleChildIndex(int) -> getNextVisibleChildIndex
    175:175:boolean isStacked() -> isStacked
    72:141:void onMeasure(int,int) -> onMeasure
    61:68:void setAllowStacking(boolean) -> setAllowStacking
    158:172:void setStacked(boolean) -> setStacked
androidx.appcompat.widget.ContentFrameLayout -> androidx.appcompat.widget.ContentFrameLayout:
    59:60:void <init>(android.content.Context) -> <init>
    63:64:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    67:69:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    76:77:void dispatchFitSystemWindows(android.graphics.Rect) -> dispatchFitSystemWindows
    195:196:android.util.TypedValue getFixedHeightMajor() -> getFixedHeightMajor
    200:201:android.util.TypedValue getFixedHeightMinor() -> getFixedHeightMinor
    185:186:android.util.TypedValue getFixedWidthMajor() -> getFixedWidthMajor
    190:191:android.util.TypedValue getFixedWidthMinor() -> getFixedWidthMinor
    175:176:android.util.TypedValue getMinWidthMajor() -> getMinWidthMajor
    180:181:android.util.TypedValue getMinWidthMinor() -> getMinWidthMinor
    206:210:void onAttachedToWindow() -> onAttachedToWindow
    214:218:void onDetachedFromWindow() -> onDetachedFromWindow
    99:172:void onMeasure(int,int) -> onMeasure
    80:81:void setAttachListener(androidx.appcompat.widget.ContentFrameLayout$OnAttachListener) -> setAttachListener
    91:95:void setDecorPadding(int,int,int,int) -> setDecorPadding
androidx.appcompat.widget.DialogTitle -> androidx.appcompat.widget.DialogTitle:
    40:41:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    44:45:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    48:49:void <init>(android.content.Context) -> <init>
    53:80:void onMeasure(int,int) -> onMeasure
androidx.appcompat.widget.DrawableUtils -> androidx.appcompat.widget.DrawableUtils:
    45:64:void <clinit>() -> <clinit>
    66:66:void <init>() -> <init>
    142:176:boolean canSafelyMutateDrawable(android.graphics.drawable.Drawable) -> canSafelyMutateDrawable
    131:135:void fixDrawable(android.graphics.drawable.Drawable) -> fixDrawable
    184:194:void fixVectorDrawableTinting(android.graphics.drawable.Drawable) -> fixVectorDrawableTinting
    73:122:android.graphics.Rect getOpticalBounds(android.graphics.drawable.Drawable) -> getOpticalBounds
    200:201:android.graphics.PorterDuff$Mode parseTintMode(int,android.graphics.PorterDuff$Mode) -> parseTintMode
androidx.appcompat.widget.DropDownListView -> androidx.appcompat.widget.DropDownListView:
    118:128:void <init>(android.content.Context,boolean) -> <init>
    629:643:void clearPressedItem() -> clearPressedItem
    542:544:void clickPressedItem(android.view.View,int) -> clickPressedItem
    198:204:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    565:572:void drawSelectorCompat(android.graphics.Canvas) -> drawSelectorCompat
    186:194:void drawableStateChanged() -> drawableStateChanged
    164:164:boolean hasFocus() -> hasFocus
    144:144:boolean hasWindowFocus() -> hasWindowFocus
    154:154:boolean isFocused() -> isFocused
    134:134:boolean isInTouchMode() -> isInTouchMode
    229:231:int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    290:369:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    471:473:void onDetachedFromWindow() -> onDetachedFromWindow
    482:534:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    430:466:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    208:217:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    604:626:void positionSelectorCompat(int,android.view.View) -> positionSelectorCompat
    586:601:void positionSelectorLikeFocusCompat(int,android.view.View) -> positionSelectorLikeFocusCompat
    575:581:void positionSelectorLikeTouchCompat(int,android.view.View,float,float) -> positionSelectorLikeTouchCompat
    554:555:void setListSelectionHidden(boolean) -> setListSelectionHidden
    646:690:void setPressedItem(android.view.View,int,float,float) -> setPressedItem
    169:181:void setSelector(android.graphics.drawable.Drawable) -> setSelector
    373:376:void setSelectorEnabled(boolean) -> setSelectorEnabled
    693:693:boolean touchModeDrawsInPressedStateCompat() -> touchModeDrawsInPressedStateCompat
    558:562:void updateSelectorStateCompat() -> updateSelectorStateCompat
androidx.appcompat.widget.DropDownListView$GateKeeperDrawable -> androidx.appcompat.widget.DropDownListView$GateKeeperDrawable:
    382:384:void <init>(android.graphics.drawable.Drawable) -> <init>
    400:403:void draw(android.graphics.Canvas) -> draw
    387:388:void setEnabled(boolean) -> setEnabled
    407:410:void setHotspot(float,float) -> setHotspot
    414:417:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    392:395:boolean setState(int[]) -> setState
    421:424:boolean setVisible(boolean,boolean) -> setVisible
androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable -> androidx.appcompat.widget.DropDownListView$ResolveHoverRunnable:
    700:701:void <init>(androidx.appcompat.widget.DropDownListView) -> <init>
    711:713:void cancel() -> cancel
    716:717:void post() -> post
    706:708:void run() -> run
androidx.appcompat.widget.FitWindowsFrameLayout -> androidx.appcompat.widget.FitWindowsFrameLayout:
    37:38:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:47:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.FitWindowsLinearLayout -> androidx.appcompat.widget.FitWindowsLinearLayout:
    37:38:void <init>(android.content.Context) -> <init>
    41:42:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    51:54:boolean fitSystemWindows(android.graphics.Rect) -> fitSystemWindows
    46:47:void setOnFitSystemWindowsListener(androidx.appcompat.widget.FitWindowsViewGroup$OnFitSystemWindowsListener) -> setOnFitSystemWindowsListener
androidx.appcompat.widget.ForwardingListener -> androidx.appcompat.widget.ForwardingListener:
    68:78:void <init>(android.view.View) -> <init>
    216:223:void clearCallbacks() -> clearCallbacks
    139:143:boolean onForwardingStarted() -> onForwardingStarted
    156:160:boolean onForwardingStopped() -> onForwardingStopped
    226:232:void onLongPress() -> onLongPress
    94:112:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    259:262:boolean onTouchForwarded(android.view.MotionEvent) -> onTouchForwarded
    170:212:boolean onTouchObserved(android.view.MotionEvent) -> onTouchObserved
    117:117:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    121:127:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    288:288:boolean pointInView(android.view.View,float,float,float) -> pointInView
    309:312:boolean toGlobalMotionEvent(android.view.View,android.view.MotionEvent) -> toGlobalMotionEvent
    298:301:boolean toLocalMotionEvent(android.view.View,android.view.MotionEvent) -> toLocalMotionEvent
androidx.appcompat.widget.ForwardingListener$DisallowIntercept -> androidx.appcompat.widget.ForwardingListener$DisallowIntercept:
    316:317:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    321:325:void run() -> run
androidx.appcompat.widget.ForwardingListener$TriggerLongPress -> androidx.appcompat.widget.ForwardingListener$TriggerLongPress:
    329:330:void <init>(androidx.appcompat.widget.ForwardingListener) -> <init>
    334:335:void run() -> run
androidx.appcompat.widget.LinearLayoutCompat -> androidx.appcompat.widget.LinearLayoutCompat:
    149:150:void <init>(android.content.Context) -> <init>
    153:154:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    157:189:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1755:1755:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    326:364:void drawDividersHorizontal(android.graphics.Canvas) -> drawDividersHorizontal
    299:323:void drawDividersVertical(android.graphics.Canvas) -> drawDividersVertical
    367:370:void drawHorizontalDivider(android.graphics.Canvas,int) -> drawHorizontalDivider
    373:376:void drawVerticalDivider(android.graphics.Canvas,int) -> drawVerticalDivider
    1321:1340:void forceUniformHeight(int,int) -> forceUniformHeight
    899:918:void forceUniformWidth(int,int) -> forceUniformWidth
    57:57:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1738:1743:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    57:57:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1725:1725:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    1748:1748:androidx.appcompat.widget.LinearLayoutCompat$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    427:432:int getBaseline() -> getBaseline
    484:484:int getBaselineAlignedChildIndex() -> getBaselineAlignedChildIndex
    1351:1351:int getChildrenSkipCount(android.view.View,int) -> getChildrenSkipCount
    225:225:android.graphics.drawable.Drawable getDividerDrawable() -> getDividerDrawable
    272:272:int getDividerPadding() -> getDividerPadding
    282:282:int getDividerWidth() -> getDividerWidth
    1704:1704:int getGravity() -> getGravity
    1393:1393:int getLocationOffset(android.view.View) -> getLocationOffset
    1405:1405:int getNextLocationOffset(android.view.View) -> getNextLocationOffset
    1671:1671:int getOrientation() -> getOrientation
    216:216:int getShowDividers() -> getShowDividers
    509:509:android.view.View getVirtualChildAt(int) -> getVirtualChildAt
    522:522:int getVirtualChildCount() -> getVirtualChildCount
    533:533:float getWeightSum() -> getWeightSum
    570:584:boolean hasDividerBeforeChildAt(int) -> hasDividerBeforeChildAt
    385:385:boolean isBaselineAligned() -> isBaselineAligned
    408:408:boolean isMeasureWithLargestChildEnabled() -> isMeasureWithLargestChildEnabled
    1525:1646:void layoutHorizontal(int,int,int,int) -> layoutHorizontal
    1430:1510:void layoutVertical(int,int,int,int) -> layoutVertical
    1381:1383:void measureChildBeforeLayout(android.view.View,int,int,int,int,int) -> measureChildBeforeLayout
    932:1315:void measureHorizontal(int,int) -> measureHorizontal
    1362:1362:int measureNullChild(int) -> measureNullChild
    599:895:void measureVertical(int,int) -> measureVertical
    287:296:void onDraw(android.graphics.Canvas) -> onDraw
    1760:1762:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1766:1768:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1410:1415:void onLayout(boolean,int,int,int,int) -> onLayout
    554:559:void onMeasure(int,int) -> onMeasure
    396:397:void setBaselineAligned(boolean) -> setBaselineAligned
    492:494:void setBaselineAlignedChildIndex(int) -> setBaselineAlignedChildIndex
    1649:1650:void setChildFrame(android.view.View,int,int,int,int) -> setChildFrame
    236:249:void setDividerDrawable(android.graphics.drawable.Drawable) -> setDividerDrawable
    261:262:void setDividerPadding(int) -> setDividerPadding
    1683:1695:void setGravity(int) -> setGravity
    1708:1713:void setHorizontalGravity(int) -> setHorizontalGravity
    422:423:void setMeasureWithLargestChildEnabled(boolean) -> setMeasureWithLargestChildEnabled
    1658:1662:void setOrientation(int) -> setOrientation
    199:203:void setShowDividers(int) -> setShowDividers
    1716:1721:void setVerticalGravity(int) -> setVerticalGravity
    549:550:void setWeightSum(float) -> setWeightSum
    207:207:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
androidx.appcompat.widget.LinearLayoutCompat$LayoutParams -> androidx.appcompat.widget.LinearLayoutCompat$LayoutParams:
    1793:1801:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1807:1809:void <init>(int,int) -> <init>
    1822:1824:void <init>(int,int,float) -> <init>
    1830:1831:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1837:1838:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1847:1851:void <init>(androidx.appcompat.widget.LinearLayoutCompat$LayoutParams) -> <init>
androidx.appcompat.widget.ListPopupWindow -> androidx.appcompat.widget.ListPopupWindow:
    84:109:void <clinit>() -> <clinit>
    225:226:void <init>(android.content.Context) -> <init>
    236:237:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    249:250:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    262:279:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1157:1298:int buildDropDown() -> buildDropDown
    847:854:void clearListSelection() -> clearListSelection
    1141:1141:android.view.View$OnTouchListener createDragToOpenListener(android.view.View) -> createDragToOpenListener
    951:951:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    773:778:void dismiss() -> dismiss
    461:461:android.view.View getAnchorView() -> getAnchorView
    452:452:int getAnimationStyle() -> getAnimationStyle
    424:424:android.graphics.drawable.Drawable getBackground() -> getBackground
    529:529:android.graphics.Rect getEpicenterBounds() -> getEpicenterBounds
    579:579:int getHeight() -> getHeight
    478:478:int getHorizontalOffset() -> getHorizontalOffset
    821:821:int getInputMethodMode() -> getInputMethodMode
    947:947:android.widget.ListView getListView() -> getListView
    1446:1458:int getMaxAvailableHeight(android.view.View,int,boolean) -> getMaxAvailableHeight
    323:323:int getPromptPosition() -> getPromptPosition
    896:899:java.lang.Object getSelectedItem() -> getSelectedItem
    922:925:long getSelectedItemId() -> getSelectedItemId
    909:912:int getSelectedItemPosition() -> getSelectedItemPosition
    935:938:android.view.View getSelectedView() -> getSelectedView
    408:408:int getSoftInputMode() -> getSoftInputMode
    494:497:int getVerticalOffset() -> getVerticalOffset
    546:546:int getWidth() -> getWidth
    1428:1428:boolean isConfirmKey(int) -> isConfirmKey
    384:384:boolean isDropDownAlwaysVisible() -> isDropDownAlwaysVisible
    869:869:boolean isInputMethodNotNeeded() -> isInputMethodNotNeeded
    346:346:boolean isModal() -> isModal
    861:861:boolean isShowing() -> isShowing
    977:1057:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1096:1117:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1072:1081:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    880:889:boolean performItemClick(int) -> performItemClick
    655:656:void postShow() -> postShow
    790:797:void removePromptView() -> removePromptView
    288:301:void setAdapter(android.widget.ListAdapter) -> setAdapter
    471:472:void setAnchorView(android.view.View) -> setAnchorView
    442:443:void setAnimationStyle(int) -> setAnimationStyle
    433:434:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    566:573:void setContentWidth(int) -> setContentWidth
    374:375:void setDropDownAlwaysVisible(boolean) -> setDropDownAlwaysVisible
    539:540:void setDropDownGravity(int) -> setDropDownGravity
    518:519:void setEpicenterBounds(android.graphics.Rect) -> setEpicenterBounds
    358:359:void setForceIgnoreOutsideTouch(boolean) -> setForceIgnoreOutsideTouch
    591:597:void setHeight(int) -> setHeight
    487:488:void setHorizontalOffset(int) -> setHorizontalOffset
    812:813:void setInputMethodMode(int) -> setInputMethodMode
    961:962:void setListItemExpandMax(int) -> setListItemExpandMax
    417:418:void setListSelector(android.graphics.drawable.Drawable) -> setListSelector
    336:338:void setModal(boolean) -> setModal
    786:787:void setOnDismissListener(android.widget.PopupWindow$OnDismissListener) -> setOnDismissListener
    620:621:void setOnItemClickListener(android.widget.AdapterView$OnItemClickListener) -> setOnItemClickListener
    631:632:void setOnItemSelectedListener(android.widget.AdapterView$OnItemSelectedListener) -> setOnItemSelectedListener
    1339:1341:void setOverlapAnchor(boolean) -> setOverlapAnchor
    1432:1443:void setPopupClipToScreenEnabled(boolean) -> setPopupClipToScreenEnabled
    313:314:void setPromptPosition(int) -> setPromptPosition
    641:649:void setPromptView(android.view.View) -> setPromptView
    831:840:void setSelection(int) -> setSelection
    398:399:void setSoftInputMode(int) -> setSoftInputMode
    506:508:void setVerticalOffset(int) -> setVerticalOffset
    556:557:void setWidth(int) -> setWidth
    609:610:void setWindowLayoutType(int) -> setWindowLayoutType
    664:766:void show() -> show
androidx.appcompat.widget.ListPopupWindow$1 -> androidx.appcompat.widget.ListPopupWindow$1:
    1141:1141:void <init>(androidx.appcompat.widget.ListPopupWindow,android.view.View) -> <init>
    1141:1141:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    1144:1144:androidx.appcompat.widget.ListPopupWindow getPopup() -> getPopup
androidx.appcompat.widget.ListPopupWindow$2 -> androidx.appcompat.widget.ListPopupWindow$2:
    1168:1168:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1172:1176:void run() -> run
androidx.appcompat.widget.ListPopupWindow$3 -> androidx.appcompat.widget.ListPopupWindow$3:
    1187:1187:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1192:1199:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1203:1203:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.ListPopupWindow$ListSelectorHider -> androidx.appcompat.widget.ListPopupWindow$ListSelectorHider:
    1362:1363:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1367:1368:void run() -> run
androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver -> androidx.appcompat.widget.ListPopupWindow$PopupDataSetObserver:
    1344:1345:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1349:1353:void onChanged() -> onChanged
    1357:1358:void onInvalidated() -> onInvalidated
androidx.appcompat.widget.ListPopupWindow$PopupScrollListener -> androidx.appcompat.widget.ListPopupWindow$PopupScrollListener:
    1408:1409:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1415:1415:void onScroll(android.widget.AbsListView,int,int,int) -> onScroll
    1419:1424:void onScrollStateChanged(android.widget.AbsListView,int) -> onScrollStateChanged
androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor -> androidx.appcompat.widget.ListPopupWindow$PopupTouchInterceptor:
    1387:1388:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1392:1403:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable -> androidx.appcompat.widget.ListPopupWindow$ResizePopupRunnable:
    1372:1373:void <init>(androidx.appcompat.widget.ListPopupWindow) -> <init>
    1377:1383:void run() -> run
androidx.appcompat.widget.MenuPopupWindow -> androidx.appcompat.widget.MenuPopupWindow:
    60:67:void <clinit>() -> <clinit>
    72:73:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    77:79:androidx.appcompat.widget.DropDownListView createDropDownListView(android.content.Context,boolean) -> createDropDownListView
    119:122:void onItemHoverEnter(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverEnter
    127:130:void onItemHoverExit(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onItemHoverExit
    83:86:void setEnterTransition(java.lang.Object) -> setEnterTransition
    89:92:void setExitTransition(java.lang.Object) -> setExitTransition
    95:96:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    103:114:void setTouchModal(boolean) -> setTouchModal
androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView -> androidx.appcompat.widget.MenuPopupWindow$MenuDropDownListView:
    144:156:void <init>(android.content.Context,boolean) -> <init>
    163:164:void clearSelection() -> clearSelection
    135:135:boolean hasFocus() -> hasFocus
    135:135:boolean hasWindowFocus() -> hasWindowFocus
    135:135:boolean isFocused() -> isFocused
    135:135:boolean isInTouchMode() -> isInTouchMode
    135:135:int lookForSelectablePosition(int,boolean) -> lookForSelectablePosition
    135:135:int measureHeightOfChildrenCompat(int,int,int,int,int) -> measureHeightOfChildrenCompat
    135:135:boolean onForwardedEvent(android.view.MotionEvent,int) -> onForwardedEvent
    190:231:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    168:184:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    135:135:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    159:160:void setHoverListener(androidx.appcompat.widget.MenuItemHoverListener) -> setHoverListener
    135:135:void setSelector(android.graphics.drawable.Drawable) -> setSelector
androidx.appcompat.widget.PopupMenu -> androidx.appcompat.widget.PopupMenu:
    68:69:void <init>(android.content.Context,android.view.View) -> <init>
    83:84:void <init>(android.content.Context,android.view.View,int) -> <init>
    104:133:void <init>(android.content.Context,android.view.View,int,int,int) -> <init>
    247:248:void dismiss() -> dismiss
    174:196:android.view.View$OnTouchListener getDragToOpenListener() -> getDragToOpenListener
    153:153:int getGravity() -> getGravity
    209:209:android.view.Menu getMenu() -> getMenu
    219:219:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    306:309:android.widget.ListView getMenuListView() -> getMenuListView
    229:230:void inflate(int) -> inflate
    145:146:void setGravity(int) -> setGravity
    266:267:void setOnDismissListener(androidx.appcompat.widget.PopupMenu$OnDismissListener) -> setOnDismissListener
    257:258:void setOnMenuItemClickListener(androidx.appcompat.widget.PopupMenu$OnMenuItemClickListener) -> setOnMenuItemClickListener
    238:239:void show() -> show
androidx.appcompat.widget.PopupMenu$1 -> androidx.appcompat.widget.PopupMenu$1:
    109:109:void <init>(androidx.appcompat.widget.PopupMenu) -> <init>
    112:115:boolean onMenuItemSelected(androidx.appcompat.view.menu.MenuBuilder,android.view.MenuItem) -> onMenuItemSelected
    120:120:void onMenuModeChange(androidx.appcompat.view.menu.MenuBuilder) -> onMenuModeChange
androidx.appcompat.widget.PopupMenu$2 -> androidx.appcompat.widget.PopupMenu$2:
    125:125:void <init>(androidx.appcompat.widget.PopupMenu) -> <init>
    128:131:void onDismiss() -> onDismiss
androidx.appcompat.widget.PopupMenu$3 -> androidx.appcompat.widget.PopupMenu$3:
    175:175:void <init>(androidx.appcompat.widget.PopupMenu,android.view.View) -> <init>
    191:191:androidx.appcompat.view.menu.ShowableListMenu getPopup() -> getPopup
    178:179:boolean onForwardingStarted() -> onForwardingStarted
    184:185:boolean onForwardingStopped() -> onForwardingStopped
androidx.appcompat.widget.ResourceManagerInternal -> androidx.appcompat.widget.ResourceManagerInternal:
    83:112:void <clinit>() -> <clinit>
    62:118:void <init>() -> <init>
    367:371:void addDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) -> addDelegate
    336:335:boolean addDrawableToCache(android.content.Context,long,android.graphics.drawable.Drawable) -> addDrawableToCache
    417:426:void addTintListToCache(android.content.Context,int,android.content.res.ColorStateList) -> addTintListToCache
    380:385:boolean arrayContains(int[],int) -> arrayContains
    497:507:void checkVectorDrawableSetup(android.content.Context) -> checkVectorDrawableSetup
    167:167:long createCacheKey(android.util.TypedValue) -> createCacheKey
    172:195:android.graphics.drawable.Drawable createDrawableIfNeeded(android.content.Context,int) -> createDrawableIfNeeded
    475:476:android.graphics.PorterDuffColorFilter createTintFilter(android.content.res.ColorStateList,android.graphics.PorterDuff$Mode,int[]) -> createTintFilter
    94:93:androidx.appcompat.widget.ResourceManagerInternal get() -> get
    315:314:android.graphics.drawable.Drawable getCachedDrawable(android.content.Context,long) -> getCachedDrawable
    132:132:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    137:136:android.graphics.drawable.Drawable getDrawable(android.content.Context,int,boolean) -> getDrawable
    485:484:android.graphics.PorterDuffColorFilter getPorterDuffColorFilter(int,android.graphics.PorterDuff$Mode) -> getPorterDuffColorFilter
    394:393:android.content.res.ColorStateList getTintList(android.content.Context,int) -> getTintList
    408:412:android.content.res.ColorStateList getTintListFromCache(android.content.Context,int) -> getTintListFromCache
    389:389:android.graphics.PorterDuff$Mode getTintMode(int) -> getTintMode
    105:110:void installDefaultInflateDelegates(androidx.appcompat.widget.ResourceManagerInternal) -> installDefaultInflateDelegates
    513:513:boolean isVectorDrawable(android.graphics.drawable.Drawable) -> isVectorDrawable
    229:310:android.graphics.drawable.Drawable loadDrawableFromDelegates(android.content.Context,int) -> loadDrawableFromDelegates
    159:158:void onConfigurationChanged(android.content.Context) -> onConfigurationChanged
    351:350:android.graphics.drawable.Drawable onDrawableLoadedFromResources(android.content.Context,androidx.appcompat.widget.VectorEnabledTintResources,int) -> onDrawableLoadedFromResources
    374:377:void removeDelegate(java.lang.String,androidx.appcompat.widget.ResourceManagerInternal$InflateDelegate) -> removeDelegate
    128:127:void setHooks(androidx.appcompat.widget.ResourceManagerInternal$ResourceManagerHooks) -> setHooks
    200:225:android.graphics.drawable.Drawable tintDrawable(android.content.Context,int,boolean,android.graphics.drawable.Drawable) -> tintDrawable
    451:471:void tintDrawable(android.graphics.drawable.Drawable,androidx.appcompat.widget.TintInfo,int[]) -> tintDrawable
    363:363:boolean tintDrawableUsingColorFilter(android.content.Context,int,android.graphics.drawable.Drawable) -> tintDrawableUsingColorFilter
androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AsldcInflateDelegate:
    552:552:void <init>() -> <init>
    557:561:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$AvdcInflateDelegate:
    535:536:void <init>() -> <init>
    542:546:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache -> androidx.appcompat.widget.ResourceManagerInternal$ColorFilterLruCache:
    431:432:void <init>(int) -> <init>
    443:446:int generateCacheKey(int,android.graphics.PorterDuff$Mode) -> generateCacheKey
    435:435:android.graphics.PorterDuffColorFilter get(int,android.graphics.PorterDuff$Mode) -> get
    439:439:android.graphics.PorterDuffColorFilter put(int,android.graphics.PorterDuff$Mode,android.graphics.PorterDuffColorFilter) -> put
androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate -> androidx.appcompat.widget.ResourceManagerInternal$VdcInflateDelegate:
    518:519:void <init>() -> <init>
    525:529:android.graphics.drawable.Drawable createFromXmlInner(android.content.Context,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
androidx.appcompat.widget.ResourcesWrapper -> androidx.appcompat.widget.ResourcesWrapper:
    48:50:void <init>(android.content.res.Resources) -> <init>
    183:183:android.content.res.XmlResourceParser getAnimation(int) -> getAnimation
    168:168:boolean getBoolean(int) -> getBoolean
    158:158:int getColor(int) -> getColor
    163:163:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    245:245:android.content.res.Configuration getConfiguration() -> getConfiguration
    110:110:float getDimension(int) -> getDimension
    115:115:int getDimensionPixelOffset(int) -> getDimensionPixelOffset
    120:120:int getDimensionPixelSize(int) -> getDimensionPixelSize
    240:240:android.util.DisplayMetrics getDisplayMetrics() -> getDisplayMetrics
    130:130:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    136:136:android.graphics.drawable.Drawable getDrawable(int,android.content.res.Resources$Theme) -> getDrawable
    142:142:android.graphics.drawable.Drawable getDrawableForDensity(int,int) -> getDrawableForDensity
    148:148:android.graphics.drawable.Drawable getDrawableForDensity(int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    125:125:float getFraction(int,int,int) -> getFraction
    250:250:int getIdentifier(java.lang.String,java.lang.String,java.lang.String) -> getIdentifier
    100:100:int[] getIntArray(int) -> getIntArray
    173:173:int getInteger(int) -> getInteger
    178:178:android.content.res.XmlResourceParser getLayout(int) -> getLayout
    153:153:android.graphics.Movie getMovie(int) -> getMovie
    75:75:java.lang.String getQuantityString(int,int,java.lang.Object[]) -> getQuantityString
    80:80:java.lang.String getQuantityString(int,int) -> getQuantityString
    59:59:java.lang.CharSequence getQuantityText(int,int) -> getQuantityText
    270:270:java.lang.String getResourceEntryName(int) -> getResourceEntryName
    255:255:java.lang.String getResourceName(int) -> getResourceName
    260:260:java.lang.String getResourcePackageName(int) -> getResourcePackageName
    265:265:java.lang.String getResourceTypeName(int) -> getResourceTypeName
    64:64:java.lang.String getString(int) -> getString
    69:69:java.lang.String getString(int,java.lang.Object[]) -> getString
    95:95:java.lang.String[] getStringArray(int) -> getStringArray
    54:54:java.lang.CharSequence getText(int) -> getText
    85:85:java.lang.CharSequence getText(int,java.lang.CharSequence) -> getText
    90:90:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    209:210:void getValue(int,android.util.TypedValue,boolean) -> getValue
    222:223:void getValue(java.lang.String,android.util.TypedValue,boolean) -> getValue
    216:217:void getValueForDensity(int,int,android.util.TypedValue,boolean) -> getValueForDensity
    188:188:android.content.res.XmlResourceParser getXml(int) -> getXml
    227:227:android.content.res.TypedArray obtainAttributes(android.util.AttributeSet,int[]) -> obtainAttributes
    105:105:android.content.res.TypedArray obtainTypedArray(int) -> obtainTypedArray
    193:193:java.io.InputStream openRawResource(int) -> openRawResource
    198:198:java.io.InputStream openRawResource(int,android.util.TypedValue) -> openRawResource
    203:203:android.content.res.AssetFileDescriptor openRawResourceFd(int) -> openRawResourceFd
    282:283:void parseBundleExtra(java.lang.String,android.util.AttributeSet,android.os.Bundle) -> parseBundleExtra
    276:277:void parseBundleExtras(android.content.res.XmlResourceParser,android.os.Bundle) -> parseBundleExtras
    232:236:void updateConfiguration(android.content.res.Configuration,android.util.DisplayMetrics) -> updateConfiguration
androidx.appcompat.widget.RtlSpacingHelper -> androidx.appcompat.widget.RtlSpacingHelper:
    25:36:void <init>() -> <init>
    51:51:int getEnd() -> getEnd
    39:39:int getLeft() -> getLeft
    43:43:int getRight() -> getRight
    47:47:int getStart() -> getStart
    68:71:void setAbsolute(int,int) -> setAbsolute
    74:90:void setDirection(boolean) -> setDirection
    55:65:void setRelative(int,int) -> setRelative
androidx.appcompat.widget.ScrollingTabContainerView -> androidx.appcompat.widget.ScrollingTabContainerView:
    77:77:void <clinit>() -> <clinit>
    82:93:void <init>(android.content.Context) -> <init>
    310:322:void addTab(androidx.appcompat.app.ActionBar$Tab,boolean) -> addTab
    325:337:void addTab(androidx.appcompat.app.ActionBar$Tab,int,boolean) -> addTab
    260:273:void animateToTab(int) -> animateToTab
    235:257:void animateToVisibility(int) -> animateToVisibility
    214:220:android.widget.Spinner createSpinner() -> createSpinner
    204:210:androidx.appcompat.widget.LinearLayoutCompat createTabLayout() -> createTabLayout
    293:306:androidx.appcompat.widget.ScrollingTabContainerView$TabView createTabView(androidx.appcompat.app.ActionBar$Tab,boolean) -> createTabView
    146:146:boolean isCollapsed() -> isCollapsed
    277:282:void onAttachedToWindow() -> onAttachedToWindow
    225:232:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    286:290:void onDetachedFromWindow() -> onDetachedFromWindow
    371:373:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    97:138:void onMeasure(int,int) -> onMeasure
    378:378:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
    154:170:void performCollapse() -> performCollapse
    173:179:boolean performExpand() -> performExpand
    360:367:void removeAllTabs() -> removeAllTabs
    350:357:void removeTabAt(int) -> removeTabAt
    150:151:void setAllowCollapse(boolean) -> setAllowCollapse
    199:201:void setContentHeight(int) -> setContentHeight
    183:196:void setTabSelected(int) -> setTabSelected
    340:347:void updateTab(int) -> updateTab
androidx.appcompat.widget.ScrollingTabContainerView$1 -> androidx.appcompat.widget.ScrollingTabContainerView$1:
    264:264:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.view.View) -> <init>
    267:270:void run() -> run
androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter -> androidx.appcompat.widget.ScrollingTabContainerView$TabAdapter:
    526:527:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    531:531:int getCount() -> getCount
    536:536:java.lang.Object getItem(int) -> getItem
    541:541:long getItemId(int) -> getItemId
    546:551:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener -> androidx.appcompat.widget.ScrollingTabContainerView$TabClickListener:
    556:557:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    561:568:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ScrollingTabContainerView$TabView -> androidx.appcompat.widget.ScrollingTabContainerView$TabView:
    394:410:void <init>(androidx.appcompat.widget.ScrollingTabContainerView,android.content.Context,androidx.appcompat.app.ActionBar$Tab,boolean) -> <init>
    413:415:void bindTab(androidx.appcompat.app.ActionBar$Tab) -> bindTab
    521:521:androidx.appcompat.app.ActionBar$Tab getTab() -> getTab
    428:431:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    435:439:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    443:450:void onMeasure(int,int) -> onMeasure
    419:424:void setSelected(boolean) -> setSelected
    453:518:void update() -> update
androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener -> androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener:
    571:572:void <init>(androidx.appcompat.widget.ScrollingTabContainerView) -> <init>
    598:599:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    590:594:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    584:586:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    577:579:androidx.appcompat.widget.ScrollingTabContainerView$VisibilityAnimListener withFinalVisibility(android.view.ViewPropertyAnimator,int) -> withFinalVisibility
androidx.appcompat.widget.SearchView -> androidx.appcompat.widget.SearchView:
    176:176:void <clinit>() -> <clinit>
    267:268:void <init>(android.content.Context) -> <init>
    271:272:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    275:387:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1364:1385:void adjustDropDownSizeAndPosition() -> adjustDropDownSizeAndPosition
    497:502:void clearFocus() -> clearFocus
    1537:1560:android.content.Intent createIntent(java.lang.String,android.net.Uri,java.lang.String,java.lang.String,int,java.lang.String) -> createIntent
    1656:1692:android.content.Intent createIntentFromSuggestion(android.database.Cursor,int,java.lang.String) -> createIntentFromSuggestion
    1582:1637:android.content.Intent createVoiceAppSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceAppSearchIntent
    1567:1571:android.content.Intent createVoiceWebSearchIntent(android.content.Intent,android.app.SearchableInfo) -> createVoiceWebSearchIntent
    1202:1203:void dismissSuggestions() -> dismissSuggestions
    1697:1703:void forceSuggestionQuery() -> forceSuggestionQuery
    851:856:void getChildBoundsWithinSearchView(android.view.View,android.graphics.Rect) -> getChildBoundsWithinSearchView
    1088:1089:java.lang.CharSequence getDecoratedHint(java.lang.CharSequence) -> getDecoratedHint
    452:452:int getImeOptions() -> getImeOptions
    474:474:int getInputType() -> getInputType
    777:777:int getMaxWidth() -> getMaxWidth
    864:864:int getPreferredHeight() -> getPreferredHeight
    859:859:int getPreferredWidth() -> getPreferredWidth
    559:559:java.lang.CharSequence getQuery() -> getQuery
    619:626:java.lang.CharSequence getQueryHint() -> getQueryHint
    394:394:int getSuggestionCommitIconResId() -> getSuggestionCommitIconResId
    390:390:int getSuggestionRowLayout() -> getSuggestionRowLayout
    755:755:androidx.cursoradapter.widget.CursorAdapter getSuggestionsAdapter() -> getSuggestionsAdapter
    893:906:boolean hasVoiceSearch() -> hasVoiceSearch
    655:655:boolean isIconfiedByDefault() -> isIconfiedByDefault
    683:683:boolean isIconified() -> isIconified
    1706:1706:boolean isLandscapeMode(android.content.Context) -> isLandscapeMode
    735:735:boolean isQueryRefinementEnabled() -> isQueryRefinementEnabled
    910:910:boolean isSubmitAreaEnabled() -> isSubmitAreaEnabled
    705:705:boolean isSubmitButtonEnabled() -> isSubmitButtonEnabled
    1494:1504:void launchIntent(android.content.Intent) -> launchIntent
    1516:1519:void launchQuerySearch(int,java.lang.String,java.lang.String) -> launchQuerySearch
    1477:1487:boolean launchSuggestion(int,int,java.lang.String) -> launchSuggestion
    1279:1284:void onActionViewCollapsed() -> onActionViewCollapsed
    1291:1298:void onActionViewExpanded() -> onActionViewExpanded
    1206:1223:void onCloseClicked() -> onCloseClicked
    964:967:void onDetachedFromWindow() -> onDetachedFromWindow
    1388:1393:boolean onItemClicked(int,int,java.lang.String) -> onItemClicked
    1399:1402:boolean onItemSelected(int) -> onItemSelected
    832:848:void onLayout(boolean,int,int,int,int) -> onLayout
    783:828:void onMeasure(int,int) -> onMeasure
    973:974:void onQueryRefine(java.lang.CharSequence) -> onQueryRefine
    1353:1361:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1345:1348:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1226:1232:void onSearchClicked() -> onSearchClicked
    1188:1199:void onSubmitQuery() -> onSubmitQuery
    1043:1082:boolean onSuggestionsKey(android.view.View,int,android.view.KeyEvent) -> onSuggestionsKey
    1174:1185:void onTextChanged(java.lang.CharSequence) -> onTextChanged
    1258:1265:void onTextFocusChanged() -> onTextFocusChanged
    1236:1255:void onVoiceClicked() -> onVoiceClicked
    1269:1272:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    945:946:void postUpdateFocusedState() -> postUpdateFocusedState
    480:491:boolean requestFocus(int,android.graphics.Rect) -> requestFocus
    1444:1464:void rewriteQueryFromSuggestion(int) -> rewriteQueryFromSuggestion
    429:430:void setAppSearchData(android.os.Bundle) -> setAppSearchData
    669:674:void setIconified(boolean) -> setIconified
    642:646:void setIconifiedByDefault(boolean) -> setIconifiedByDefault
    441:442:void setImeOptions(int) -> setImeOptions
    464:465:void setInputType(int) -> setInputType
    764:767:void setMaxWidth(int) -> setMaxWidth
    520:521:void setOnCloseListener(androidx.appcompat.widget.SearchView$OnCloseListener) -> setOnCloseListener
    529:530:void setOnQueryTextFocusChangeListener(android.view.View$OnFocusChangeListener) -> setOnQueryTextFocusChangeListener
    511:512:void setOnQueryTextListener(androidx.appcompat.widget.SearchView$OnQueryTextListener) -> setOnQueryTextListener
    550:551:void setOnSearchClickListener(android.view.View$OnClickListener) -> setOnSearchClickListener
    538:539:void setOnSuggestionListener(androidx.appcompat.widget.SearchView$OnSuggestionListener) -> setOnSuggestionListener
    571:581:void setQuery(java.lang.CharSequence,boolean) -> setQuery
    1510:1513:void setQuery(java.lang.CharSequence) -> setQuery
    594:596:void setQueryHint(java.lang.CharSequence) -> setQueryHint
    723:728:void setQueryRefinementEnabled(boolean) -> setQueryRefinementEnabled
    406:420:void setSearchableInfo(android.app.SearchableInfo) -> setSearchableInfo
    695:697:void setSubmitButtonEnabled(boolean) -> setSubmitButtonEnabled
    745:748:void setSuggestionsAdapter(androidx.cursoradapter.widget.CursorAdapter) -> setSuggestionsAdapter
    933:942:void updateCloseButton() -> updateCloseButton
    949:960:void updateFocusedState() -> updateFocusedState
    1102:1104:void updateQueryHint() -> updateQueryHint
    1110:1144:void updateSearchAutoComplete() -> updateSearchAutoComplete
    923:930:void updateSubmitArea() -> updateSubmitArea
    914:920:void updateSubmitButton(boolean) -> updateSubmitButton
    869:890:void updateViewsVisibility(boolean) -> updateViewsVisibility
    1153:1159:void updateVoiceButton(boolean) -> updateVoiceButton
androidx.appcompat.widget.SearchView$1 -> androidx.appcompat.widget.SearchView$1:
    178:178:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    181:182:void run() -> run
androidx.appcompat.widget.SearchView$10 -> androidx.appcompat.widget.SearchView$10:
    1713:1713:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1725:1725:void afterTextChanged(android.text.Editable) -> afterTextChanged
    1715:1715:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    1720:1721:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.appcompat.widget.SearchView$2 -> androidx.appcompat.widget.SearchView$2:
    185:185:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    188:191:void run() -> run
androidx.appcompat.widget.SearchView$3 -> androidx.appcompat.widget.SearchView$3:
    331:331:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    334:337:void onFocusChange(android.view.View,boolean) -> onFocusChange
androidx.appcompat.widget.SearchView$4 -> androidx.appcompat.widget.SearchView$4:
    376:376:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    380:381:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.appcompat.widget.SearchView$5 -> androidx.appcompat.widget.SearchView$5:
    976:976:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    979:990:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.SearchView$6 -> androidx.appcompat.widget.SearchView$6:
    998:998:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1002:1032:boolean onKey(android.view.View,int,android.view.KeyEvent) -> onKey
androidx.appcompat.widget.SearchView$7 -> androidx.appcompat.widget.SearchView$7:
    1161:1161:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1168:1169:boolean onEditorAction(android.widget.TextView,int,android.view.KeyEvent) -> onEditorAction
androidx.appcompat.widget.SearchView$8 -> androidx.appcompat.widget.SearchView$8:
    1407:1407:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1415:1416:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.appcompat.widget.SearchView$9 -> androidx.appcompat.widget.SearchView$9:
    1419:1419:void <init>(androidx.appcompat.widget.SearchView) -> <init>
    1427:1428:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    1437:1437:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector -> androidx.appcompat.widget.SearchView$AutoCompleteTextViewReflector:
    2029:2051:void <init>() -> <init>
    2063:2069:void doAfterTextChanged(android.widget.AutoCompleteTextView) -> doAfterTextChanged
    2054:2060:void doBeforeTextChanged(android.widget.AutoCompleteTextView) -> doBeforeTextChanged
    2072:2078:void ensureImeVisible(android.widget.AutoCompleteTextView,boolean) -> ensureImeVisible
androidx.appcompat.widget.SearchView$SavedState -> androidx.appcompat.widget.SearchView$SavedState:
    1325:1325:void <clinit>() -> <clinit>
    1304:1305:void <init>(android.os.Parcelable) -> <init>
    1308:1310:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1320:1320:java.lang.String toString() -> toString
    1314:1316:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.SearchView$SavedState$1 -> androidx.appcompat.widget.SearchView$SavedState$1:
    1325:1325:void <init>() -> <init>
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1328:1328:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1333:1333:androidx.appcompat.widget.SearchView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1325:1325:java.lang.Object[] newArray(int) -> newArray
    1338:1338:androidx.appcompat.widget.SearchView$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.SearchView$SearchAutoComplete -> androidx.appcompat.widget.SearchView$SearchAutoComplete:
    1842:1843:void <init>(android.content.Context) -> <init>
    1846:1847:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1850:1852:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1931:1931:boolean enoughToFilter() -> enoughToFilter
    1964:1972:int getSearchViewTextMinWidthDp() -> getSearchViewTextMinWidthDp
    1876:1876:boolean isEmpty() -> isEmpty
    1983:1988:android.view.inputmethod.InputConnection onCreateInputConnection(android.view.inputmethod.EditorInfo) -> onCreateInputConnection
    1856:1860:void onFinishInflate() -> onFinishInflate
    1921:1923:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    1936:1957:boolean onKeyPreIme(int,android.view.KeyEvent) -> onKeyPreIme
    1903:1917:void onWindowFocusChanged(boolean) -> onWindowFocusChanged
    1895:1895:void performCompletion() -> performCompletion
    1885:1885:void replaceText(java.lang.CharSequence) -> replaceText
    2001:2022:void setImeVisibility(boolean) -> setImeVisibility
    1863:1864:void setSearchView(androidx.appcompat.widget.SearchView) -> setSearchView
    1868:1870:void setThreshold(int) -> setThreshold
    1992:1998:void showSoftInputIfNecessary() -> showSoftInputIfNecessary
androidx.appcompat.widget.SearchView$SearchAutoComplete$1 -> androidx.appcompat.widget.SearchView$SearchAutoComplete$1:
    1834:1834:void <init>(androidx.appcompat.widget.SearchView$SearchAutoComplete) -> <init>
    1837:1838:void run() -> run
androidx.appcompat.widget.SearchView$UpdatableTouchDelegate -> androidx.appcompat.widget.SearchView$UpdatableTouchDelegate:
    1760:1767:void <init>(android.graphics.Rect,android.graphics.Rect,android.view.View) -> <init>
    1778:1819:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1770:1774:void setBounds(android.graphics.Rect,android.graphics.Rect) -> setBounds
androidx.appcompat.widget.ShareActionProvider -> androidx.appcompat.widget.ShareActionProvider:
    197:199:void <init>(android.content.Context) -> <init>
    249:249:boolean hasSubMenu() -> hasSubMenu
    222:241:android.view.View onCreateActionView() -> onCreateActionView
    258:286:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    383:391:void setActivityChooserPolicyIfNeeded() -> setActivityChooserPolicyIfNeeded
    212:214:void setOnShareTargetSelectedListener(androidx.appcompat.widget.ShareActionProvider$OnShareTargetSelectedListener) -> setOnShareTargetSelectedListener
    321:323:void setShareHistoryFileName(java.lang.String) -> setShareHistoryFileName
    342:351:void setShareIntent(android.content.Intent) -> setShareIntent
    411:419:void updateIntent(android.content.Intent) -> updateIntent
androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy -> androidx.appcompat.widget.ShareActionProvider$ShareActivityChooserModelPolicy:
    397:398:void <init>(androidx.appcompat.widget.ShareActionProvider) -> <init>
    402:406:boolean onChooseActivity(androidx.appcompat.widget.ActivityChooserModel,android.content.Intent) -> onChooseActivity
androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener -> androidx.appcompat.widget.ShareActionProvider$ShareMenuItemOnMenuItemClickListener:
    357:358:void <init>(androidx.appcompat.widget.ShareActionProvider) -> <init>
    362:374:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.SuggestionsAdapter -> androidx.appcompat.widget.SuggestionsAdapter:
    96:107:void <init>(android.content.Context,androidx.appcompat.widget.SearchView,android.app.SearchableInfo,java.util.WeakHashMap) -> <init>
    276:326:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    218:238:void changeCursor(android.database.Cursor) -> changeCursor
    584:589:android.graphics.drawable.Drawable checkIconCache(java.lang.String) -> checkIconCache
    175:177:void close() -> close
    416:439:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    337:348:java.lang.CharSequence formatUrl(java.lang.CharSequence) -> formatUrl
    648:654:android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) -> getActivityIcon
    626:637:android.graphics.drawable.Drawable getActivityIconWithCache(android.content.ComponentName) -> getActivityIconWithCache
    677:678:java.lang.String getColumnString(android.database.Cursor,java.lang.String) -> getColumnString
    607:613:android.graphics.drawable.Drawable getDefaultIcon1(android.database.Cursor) -> getDefaultIcon1
    551:577:android.graphics.drawable.Drawable getDrawable(android.net.Uri) -> getDrawable
    700:703:android.graphics.drawable.Drawable getDrawableFromResourceUri(android.net.Uri) -> getDrawableFromResourceUri
    508:509:android.graphics.drawable.Drawable getDrawableFromResourceValue(java.lang.String) -> getDrawableFromResourceValue
    474:484:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    363:371:android.graphics.drawable.Drawable getIcon1(android.database.Cursor) -> getIcon1
    375:379:android.graphics.drawable.Drawable getIcon2(android.database.Cursor) -> getIcon2
    127:127:int getQueryRefinement() -> getQueryRefinement
    738:779:android.database.Cursor getSearchManagerSuggestions(android.app.SearchableInfo,java.lang.String,int) -> getSearchManagerSuggestions
    682:691:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
    451:461:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    136:136:boolean hasStableIds() -> hasStableIds
    245:251:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    182:185:void notifyDataSetChanged() -> notifyDataSetChanged
    190:193:void notifyDataSetInvalidated() -> notifyDataSetInvalidated
    330:334:void onClick(android.view.View) -> onClick
    147:155:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    119:120:void setQueryRefinement(int) -> setQueryRefinement
    389:404:void setViewDrawable(android.widget.ImageView,android.graphics.drawable.Drawable,int) -> setViewDrawable
    353:360:void setViewText(android.widget.TextView,java.lang.CharSequence) -> setViewText
    593:596:void storeInIconCache(java.lang.String,android.graphics.drawable.Drawable) -> storeInIconCache
    196:209:void updateSpinnerState(android.database.Cursor) -> updateSpinnerState
androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache -> androidx.appcompat.widget.SuggestionsAdapter$ChildViewCache:
    265:271:void <init>(android.view.View) -> <init>
androidx.appcompat.widget.SwitchCompat -> androidx.appcompat.widget.SwitchCompat:
    101:184:void <clinit>() -> <clinit>
    194:195:void <init>(android.content.Context) -> <init>
    205:206:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    219:295:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1028:1035:void animateThumbToCheckedState(boolean) -> animateThumbToCheckedState
    698:715:void applyThumbTint() -> applyThumbTint
    575:592:void applyTrackTint() -> applyTrackTint
    1038:1041:void cancelPositionAnimator() -> cancelPositionAnimator
    988:992:void cancelSuperTouch(android.view.MotionEvent) -> cancelSuperTouch
    1430:1430:float constrain(float,float,float) -> constrain
    1137:1198:void draw(android.graphics.Canvas) -> draw
    1357:1368:void drawableHotspotChanged(float,float) -> drawableHotspotChanged
    1335:1353:void drawableStateChanged() -> drawableStateChanged
    1267:1274:int getCompoundPaddingLeft() -> getCompoundPaddingLeft
    1279:1286:int getCompoundPaddingRight() -> getCompoundPaddingRight
    796:796:boolean getShowText() -> getShowText
    737:737:boolean getSplitTrack() -> getSplitTrack
    450:450:int getSwitchMinWidth() -> getSwitchMinWidth
    425:425:int getSwitchPadding() -> getSwitchPadding
    1044:1044:boolean getTargetCheckedState() -> getTargetCheckedState
    765:765:java.lang.CharSequence getTextOff() -> getTextOff
    746:746:java.lang.CharSequence getTextOn() -> getTextOn
    634:634:android.graphics.drawable.Drawable getThumbDrawable() -> getThumbDrawable
    1297:1302:int getThumbOffset() -> getThumbOffset
    1306:1320:int getThumbScrollRange() -> getThumbScrollRange
    473:473:int getThumbTextPadding() -> getThumbTextPadding
    665:665:android.content.res.ColorStateList getThumbTintList() -> getThumbTintList
    694:694:android.graphics.PorterDuff$Mode getThumbTintMode() -> getThumbTintMode
    513:513:android.graphics.drawable.Drawable getTrackDrawable() -> getTrackDrawable
    543:543:android.content.res.ColorStateList getTrackTintList() -> getTrackTintList
    571:571:android.graphics.PorterDuff$Mode getTrackTintMode() -> getTrackTintMode
    892:905:boolean hitThumb(float,float) -> hitThumb
    1377:1391:void jumpDrawablesToCurrentState() -> jumpDrawablesToCurrentState
    878:882:android.text.Layout makeLayout(java.lang.CharSequence) -> makeLayout
    1326:1330:int[] onCreateDrawableState(int) -> onCreateDrawableState
    1202:1263:void onDraw(android.graphics.Canvas) -> onDraw
    1395:1397:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1401:1414:void onInitializeAccessibilityNodeInfo(android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    1081:1133:void onLayout(boolean,int,int,int,int) -> onLayout
    801:865:void onMeasure(int,int) -> onMeasure
    869:875:void onPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    910:984:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1064:1077:void setChecked(boolean) -> setChecked
    1422:1424:void setCustomSelectionActionModeCallback(android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    785:789:void setShowText(boolean) -> setShowText
    727:729:void setSplitTrack(boolean) -> setSplitTrack
    437:439:void setSwitchMinWidth(int) -> setSwitchMinWidth
    413:415:void setSwitchPadding(int) -> setSwitchPadding
    304:340:void setSwitchTextAppearance(android.content.Context,int) -> setSwitchTextAppearance
    368:386:void setSwitchTypeface(android.graphics.Typeface,int) -> setSwitchTypeface
    396:403:void setSwitchTypeface(android.graphics.Typeface) -> setSwitchTypeface
    343:359:void setSwitchTypefaceByIndex(int,int) -> setSwitchTypefaceByIndex
    774:776:void setTextOff(java.lang.CharSequence) -> setTextOff
    755:757:void setTextOn(java.lang.CharSequence) -> setTextOn
    603:611:void setThumbDrawable(android.graphics.drawable.Drawable) -> setThumbDrawable
    1053:1055:void setThumbPosition(float) -> setThumbPosition
    622:623:void setThumbResource(int) -> setThumbResource
    461:463:void setThumbTextPadding(int) -> setThumbTextPadding
    652:656:void setThumbTintList(android.content.res.ColorStateList) -> setThumbTintList
    680:684:void setThumbTintMode(android.graphics.PorterDuff$Mode) -> setThumbTintMode
    484:492:void setTrackDrawable(android.graphics.drawable.Drawable) -> setTrackDrawable
    502:503:void setTrackResource(int) -> setTrackResource
    530:534:void setTrackTintList(android.content.res.ColorStateList) -> setTrackTintList
    557:561:void setTrackTintMode(android.graphics.PorterDuff$Mode) -> setTrackTintMode
    1000:1025:void stopDrag(android.view.MotionEvent) -> stopDrag
    1059:1060:void toggle() -> toggle
    1372:1372:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.appcompat.widget.SwitchCompat$1 -> androidx.appcompat.widget.SwitchCompat$1:
    102:102:void <init>(java.lang.Class,java.lang.String) -> <init>
    102:102:java.lang.Object get(java.lang.Object) -> get
    105:105:java.lang.Float get(androidx.appcompat.widget.SwitchCompat) -> get
    102:102:void set(java.lang.Object,java.lang.Object) -> set
    110:111:void set(androidx.appcompat.widget.SwitchCompat,java.lang.Float) -> set
androidx.appcompat.widget.ThemeUtils -> androidx.appcompat.widget.ThemeUtils:
    28:40:void <clinit>() -> <clinit>
    114:115:void <init>() -> <init>
    45:59:android.content.res.ColorStateList createDisabledStateList(int,int) -> createDisabledStateList
    83:95:int getDisabledThemeAttrColor(android.content.Context,int) -> getDisabledThemeAttrColor
    63:69:int getThemeAttrColor(android.content.Context,int) -> getThemeAttrColor
    109:111:int getThemeAttrColor(android.content.Context,int,float) -> getThemeAttrColor
    73:79:android.content.res.ColorStateList getThemeAttrColorStateList(android.content.Context,int) -> getThemeAttrColorStateList
    100:105:android.util.TypedValue getTypedValue() -> getTypedValue
androidx.appcompat.widget.ThemedSpinnerAdapter$Helper -> androidx.appcompat.widget.ThemedSpinnerAdapter$Helper:
    111:114:void <init>(android.content.Context) -> <init>
    152:152:android.view.LayoutInflater getDropDownViewInflater() -> getDropDownViewInflater
    140:140:android.content.res.Resources$Theme getDropDownViewTheme() -> getDropDownViewTheme
    124:132:void setDropDownViewTheme(android.content.res.Resources$Theme) -> setDropDownViewTheme
androidx.appcompat.widget.TintContextWrapper -> androidx.appcompat.widget.TintContextWrapper:
    42:42:void <clinit>() -> <clinit>
    92:104:void <init>(android.content.Context) -> <init>
    128:128:android.content.res.AssetManager getAssets() -> getAssets
    122:122:android.content.res.Resources getResources() -> getResources
    108:108:android.content.res.Resources$Theme getTheme() -> getTheme
    113:118:void setTheme(int) -> setTheme
    78:83:boolean shouldWrap(android.content.Context) -> shouldWrap
    46:74:android.content.Context wrap(android.content.Context) -> wrap
androidx.appcompat.widget.TintInfo -> androidx.appcompat.widget.TintInfo:
    28:28:void <init>() -> <init>
    35:39:void clear() -> clear
androidx.appcompat.widget.TintResources -> androidx.appcompat.widget.TintResources:
    35:37:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    46:51:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
androidx.appcompat.widget.TintTypedArray -> androidx.appcompat.widget.TintTypedArray:
    67:70:void <init>(android.content.Context,android.content.res.TypedArray) -> <init>
    151:151:boolean getBoolean(int,boolean) -> getBoolean
    250:250:int getChangingConfigurations() -> getChangingConfigurations
    163:163:int getColor(int,int) -> getColor
    167:177:android.content.res.ColorStateList getColorStateList(int) -> getColorStateList
    185:185:float getDimension(int,float) -> getDimension
    189:189:int getDimensionPixelOffset(int,int) -> getDimensionPixelOffset
    193:193:int getDimensionPixelSize(int,int) -> getDimensionPixelSize
    73:79:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    83:89:android.graphics.drawable.Drawable getDrawableIfKnown(int) -> getDrawableIfKnown
    159:159:float getFloat(int,float) -> getFloat
    112:119:android.graphics.Typeface getFont(int,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    205:205:float getFraction(int,int,int,float) -> getFraction
    131:131:int getIndex(int) -> getIndex
    127:127:int getIndexCount() -> getIndexCount
    155:155:int getInt(int,int) -> getInt
    181:181:int getInteger(int,int) -> getInteger
    197:197:int getLayoutDimension(int,java.lang.String) -> getLayoutDimension
    201:201:int getLayoutDimension(int,int) -> getLayoutDimension
    147:147:java.lang.String getNonResourceString(int) -> getNonResourceString
    241:241:java.lang.String getPositionDescription() -> getPositionDescription
    209:209:int getResourceId(int,int) -> getResourceId
    135:135:android.content.res.Resources getResources() -> getResources
    143:143:java.lang.String getString(int) -> getString
    139:139:java.lang.CharSequence getText(int) -> getText
    213:213:java.lang.CharSequence[] getTextArray(int) -> getTextArray
    221:228:int getType(int) -> getType
    217:217:boolean getValue(int,android.util.TypedValue) -> getValue
    233:233:boolean hasValue(int) -> hasValue
    123:123:int length() -> length
    54:54:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[]) -> obtainStyledAttributes
    59:59:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int) -> obtainStyledAttributes
    64:64:androidx.appcompat.widget.TintTypedArray obtainStyledAttributes(android.content.Context,int,int[]) -> obtainStyledAttributes
    237:237:android.util.TypedValue peekValue(int) -> peekValue
    245:246:void recycle() -> recycle
androidx.appcompat.widget.Toolbar -> androidx.appcompat.widget.Toolbar:
    228:229:void <init>(android.content.Context) -> <init>
    232:233:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    236:351:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2251:2257:void addChildrenForExpandedActionView() -> addChildrenForExpandedActionView
    2139:2165:void addCustomViewsWithGravity(java.util.List,int) -> addCustomViewsWithGravity
    1510:1527:void addSystemView(android.view.View,boolean) -> addSystemView
    515:515:boolean canShowOverflowMenu() -> canShowOverflowMenu
    2221:2221:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    723:728:void collapseActionView() -> collapseActionView
    593:596:void dismissPopupMenus() -> dismissPopupMenus
    1491:1507:void ensureCollapseButtonView() -> ensureCollapseButtonView
    2288:2291:void ensureContentInsets() -> ensureContentInsets
    693:696:void ensureLogoView() -> ensureLogoView
    1152:1162:void ensureMenu() -> ensureMenu
    1165:1175:void ensureMenuView() -> ensureMenuView
    1481:1488:void ensureNavButtonView() -> ensureNavButtonView
    145:145:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2216:2216:androidx.appcompat.widget.Toolbar$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    145:145:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    145:145:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2198:2198:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    2203:2210:androidx.appcompat.widget.Toolbar$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2168:2175:int getChildHorizontalGravity(int) -> getChildHorizontalGravity
    2088:2093:int getChildTop(android.view.View,int) -> getChildTop
    2120:2125:int getChildVerticalGravity(int) -> getChildVerticalGravity
    1035:1035:java.lang.CharSequence getCollapseContentDescription() -> getCollapseContentDescription
    1080:1080:android.graphics.drawable.Drawable getCollapseIcon() -> getCollapseIcon
    1266:1266:int getContentInsetEnd() -> getContentInsetEnd
    1388:1388:int getContentInsetEndWithActions() -> getContentInsetEndWithActions
    1309:1309:int getContentInsetLeft() -> getContentInsetLeft
    1329:1329:int getContentInsetRight() -> getContentInsetRight
    1246:1246:int getContentInsetStart() -> getContentInsetStart
    1345:1345:int getContentInsetStartWithNavigation() -> getContentInsetStartWithNavigation
    1440:1445:int getCurrentContentInsetEnd() -> getCurrentContentInsetEnd
    1460:1460:int getCurrentContentInsetLeft() -> getCurrentContentInsetLeft
    1475:1475:int getCurrentContentInsetRight() -> getCurrentContentInsetRight
    1426:1426:int getCurrentContentInsetStart() -> getCurrentContentInsetStart
    2186:2187:int getHorizontalMargins(android.view.View) -> getHorizontalMargins
    651:651:android.graphics.drawable.Drawable getLogo() -> getLogo
    689:689:java.lang.CharSequence getLogoDescription() -> getLogoDescription
    1126:1127:android.view.Menu getMenu() -> getMenu
    1178:1178:android.view.MenuInflater getMenuInflater() -> getMenuInflater
    915:915:java.lang.CharSequence getNavigationContentDescription() -> getNavigationContentDescription
    1007:1007:android.graphics.drawable.Drawable getNavigationIcon() -> getNavigationIcon
    2315:2315:androidx.appcompat.widget.ActionMenuPresenter getOuterActionMenuPresenter() -> getOuterActionMenuPresenter
    1147:1148:android.graphics.drawable.Drawable getOverflowIcon() -> getOverflowIcon
    2319:2319:android.content.Context getPopupContext() -> getPopupContext
    377:377:int getPopupTheme() -> getPopupTheme
    792:792:java.lang.CharSequence getSubtitle() -> getSubtitle
    2308:2308:android.widget.TextView getSubtitleTextView() -> getSubtitleTextView
    736:736:java.lang.CharSequence getTitle() -> getTitle
    474:474:int getTitleMarginBottom() -> getTitleMarginBottom
    452:452:int getTitleMarginEnd() -> getTitleMarginEnd
    408:408:int getTitleMarginStart() -> getTitleMarginStart
    430:430:int getTitleMarginTop() -> getTitleMarginTop
    2299:2299:android.widget.TextView getTitleTextView() -> getTitleTextView
    2192:2193:int getVerticalMargins(android.view.View) -> getVerticalMargins
    2043:2058:int getViewListMeasuredWidth(java.util.List,int[]) -> getViewListMeasuredWidth
    2231:2234:androidx.appcompat.widget.DecorToolbar getWrapper() -> getWrapper
    709:709:boolean hasExpandedActionView() -> hasExpandedActionView
    549:549:boolean hideOverflowMenu() -> hideOverflowMenu
    1191:1192:void inflateMenu(int) -> inflateMenu
    2260:2260:boolean isChildOrHidden(android.view.View) -> isChildOrHidden
    2225:2225:boolean isCustomView(android.view.View) -> isCustomView
    531:531:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    525:525:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    601:616:boolean isTitleTruncated() -> isTitleTruncated
    2063:2071:int layoutChildLeft(android.view.View,int,int[],int) -> layoutChildLeft
    2076:2084:int layoutChildRight(android.view.View,int,int[],int) -> layoutChildRight
    1652:1669:int measureChildCollapseMargins(android.view.View,int,int,int,int,int[]) -> measureChildCollapseMargins
    1627:1644:void measureChildConstrained(android.view.View,int,int,int,int,int) -> measureChildConstrained
    1571:1573:void onDetachedFromWindow() -> onDetachedFromWindow
    1606:1622:boolean onHoverEvent(android.view.MotionEvent) -> onHoverEvent
    1825:2040:void onLayout(boolean,int,int,int,int) -> onLayout
    1691:1821:void onMeasure(int,int) -> onMeasure
    1543:1562:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    491:497:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    1531:1538:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1582:1598:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1565:1567:void postShowOverflowMenu() -> postShowOverflowMenu
    2238:2248:void removeChildrenForExpandedActionView() -> removeChildrenForExpandedActionView
    1049:1050:void setCollapseContentDescription(int) -> setCollapseContentDescription
    1063:1069:void setCollapseContentDescription(java.lang.CharSequence) -> setCollapseContentDescription
    1094:1095:void setCollapseIcon(int) -> setCollapseIcon
    1108:1114:void setCollapseIcon(android.graphics.drawable.Drawable) -> setCollapseIcon
    2270:2272:void setCollapsible(boolean) -> setCollapsible
    1406:1415:void setContentInsetEndWithActions(int) -> setContentInsetEndWithActions
    1364:1373:void setContentInsetStartWithNavigation(int) -> setContentInsetStartWithNavigation
    1288:1290:void setContentInsetsAbsolute(int,int) -> setContentInsetsAbsolute
    1225:1227:void setContentInsetsRelative(int,int) -> setContentInsetsRelative
    509:510:void setLogo(int) -> setLogo
    629:641:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    663:664:void setLogoDescription(int) -> setLogoDescription
    675:681:void setLogoDescription(java.lang.CharSequence) -> setLogoDescription
    555:587:void setMenu(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.widget.ActionMenuPresenter) -> setMenu
    2280:2285:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    929:930:void setNavigationContentDescription(int) -> setNavigationContentDescription
    943:949:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    966:967:void setNavigationIcon(int) -> setNavigationIcon
    984:996:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    1020:1022:void setNavigationOnClickListener(android.view.View$OnClickListener) -> setNavigationOnClickListener
    1203:1204:void setOnMenuItemClickListener(androidx.appcompat.widget.Toolbar$OnMenuItemClickListener) -> setOnMenuItemClickListener
    1136:1138:void setOverflowIcon(android.graphics.drawable.Drawable) -> setOverflowIcon
    361:369:void setPopupTheme(int) -> setPopupTheme
    803:804:void setSubtitle(int) -> setSubtitle
    814:838:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    856:860:void setSubtitleTextAppearance(android.content.Context,int) -> setSubtitleTextAppearance
    889:890:void setSubtitleTextColor(int) -> setSubtitleTextColor
    898:902:void setSubtitleTextColor(android.content.res.ColorStateList) -> setSubtitleTextColor
    748:749:void setTitle(int) -> setTitle
    760:784:void setTitle(java.lang.CharSequence) -> setTitle
    394:400:void setTitleMargin(int,int,int,int) -> setTitleMargin
    485:487:void setTitleMarginBottom(int) -> setTitleMarginBottom
    463:466:void setTitleMarginEnd(int) -> setTitleMarginEnd
    419:422:void setTitleMarginStart(int) -> setTitleMarginStart
    441:444:void setTitleMarginTop(int) -> setTitleMarginTop
    845:849:void setTitleTextAppearance(android.content.Context,int) -> setTitleTextAppearance
    868:869:void setTitleTextColor(int) -> setTitleTextColor
    877:881:void setTitleTextColor(android.content.res.ColorStateList) -> setTitleTextColor
    1676:1686:boolean shouldCollapse() -> shouldCollapse
    2182:2182:boolean shouldLayout(android.view.View) -> shouldLayout
    540:540:boolean showOverflowMenu() -> showOverflowMenu
androidx.appcompat.widget.Toolbar$1 -> androidx.appcompat.widget.Toolbar$1:
    203:203:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    206:209:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
androidx.appcompat.widget.Toolbar$2 -> androidx.appcompat.widget.Toolbar$2:
    221:221:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    223:224:void run() -> run
androidx.appcompat.widget.Toolbar$3 -> androidx.appcompat.widget.Toolbar$3:
    1500:1500:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    1503:1504:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter -> androidx.appcompat.widget.Toolbar$ExpandedActionViewMenuPresenter:
    2447:2448:void <init>(androidx.appcompat.widget.Toolbar) -> <init>
    2545:2558:boolean collapseItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> collapseItemActionView
    2508:2538:boolean expandItemActionView(androidx.appcompat.view.menu.MenuBuilder,androidx.appcompat.view.menu.MenuItemImpl) -> expandItemActionView
    2503:2503:boolean flagActionItems() -> flagActionItems
    2563:2563:int getId() -> getId
    2461:2461:androidx.appcompat.view.menu.MenuView getMenuView(android.view.ViewGroup) -> getMenuView
    2453:2457:void initForMenu(android.content.Context,androidx.appcompat.view.menu.MenuBuilder) -> initForMenu
    2499:2499:void onCloseMenu(androidx.appcompat.view.menu.MenuBuilder,boolean) -> onCloseMenu
    2573:2573:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2568:2568:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2494:2494:boolean onSubMenuSelected(androidx.appcompat.view.menu.SubMenuBuilder) -> onSubMenuSelected
    2490:2490:void setCallback(androidx.appcompat.view.menu.MenuPresenter$Callback) -> setCallback
    2467:2486:void updateMenuView(boolean) -> updateMenuView
androidx.appcompat.widget.Toolbar$LayoutParams -> androidx.appcompat.widget.Toolbar$LayoutParams:
    2354:2355:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2358:2360:void <init>(int,int) -> <init>
    2363:2365:void <init>(int,int,int) -> <init>
    2368:2369:void <init>(int) -> <init>
    2372:2375:void <init>(androidx.appcompat.widget.Toolbar$LayoutParams) -> <init>
    2378:2379:void <init>(androidx.appcompat.app.ActionBar$LayoutParams) -> <init>
    2382:2386:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2389:2390:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2393:2397:void copyMarginsFromCompat(android.view.ViewGroup$MarginLayoutParams) -> copyMarginsFromCompat
androidx.appcompat.widget.Toolbar$SavedState -> androidx.appcompat.widget.Toolbar$SavedState:
    2425:2425:void <clinit>() -> <clinit>
    2405:2406:void <init>(android.os.Parcel) -> <init>
    2409:2412:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2415:2416:void <init>(android.os.Parcelable) -> <init>
    2420:2423:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.appcompat.widget.Toolbar$SavedState$1 -> androidx.appcompat.widget.Toolbar$SavedState$1:
    2425:2425:void <init>() -> <init>
    2425:2425:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2425:2425:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2428:2428:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2433:2433:androidx.appcompat.widget.Toolbar$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2425:2425:java.lang.Object[] newArray(int) -> newArray
    2438:2438:androidx.appcompat.widget.Toolbar$SavedState[] newArray(int) -> newArray
androidx.appcompat.widget.ToolbarWidgetWrapper -> androidx.appcompat.widget.ToolbarWidgetWrapper:
    96:98:void <init>(androidx.appcompat.widget.Toolbar,boolean) -> <init>
    101:192:void <init>(androidx.appcompat.widget.Toolbar,boolean,int,int) -> <init>
    556:561:void animateToVisibility(int) -> animateToVisibility
    335:335:boolean canShowOverflowMenu() -> canShowOverflowMenu
    232:233:void collapseActionView() -> collapseActionView
    206:212:int detectDisplayOptions() -> detectDisplayOptions
    375:376:void dismissPopupMenus() -> dismissPopupMenus
    503:509:void ensureSpinner() -> ensureSpinner
    222:222:android.content.Context getContext() -> getContext
    551:551:android.view.View getCustomView() -> getCustomView
    380:380:int getDisplayOptions() -> getDisplayOptions
    535:535:int getDropdownItemCount() -> getDropdownItemCount
    530:530:int getDropdownSelectedPosition() -> getDropdownSelectedPosition
    656:656:int getHeight() -> getHeight
    677:677:android.view.Menu getMenu() -> getMenu
    458:458:int getNavigationMode() -> getNavigationMode
    268:268:java.lang.CharSequence getSubtitle() -> getSubtitle
    250:250:java.lang.CharSequence getTitle() -> getTitle
    217:217:android.view.ViewGroup getViewGroup() -> getViewGroup
    666:666:int getVisibility() -> getVisibility
    438:438:boolean hasEmbeddedTabs() -> hasEmbeddedTabs
    227:227:boolean hasExpandedActionView() -> hasExpandedActionView
    291:291:boolean hasIcon() -> hasIcon
    296:296:boolean hasLogo() -> hasLogo
    355:355:boolean hideOverflowMenu() -> hideOverflowMenu
    286:287:void initIndeterminateProgress() -> initIndeterminateProgress
    281:282:void initProgress() -> initProgress
    345:345:boolean isOverflowMenuShowPending() -> isOverflowMenuShowPending
    340:340:boolean isOverflowMenuShowing() -> isOverflowMenuShowing
    443:443:boolean isTitleTruncated() -> isTitleTruncated
    646:647:void restoreHierarchyState(android.util.SparseArray) -> restoreHierarchyState
    641:642:void saveHierarchyState(android.util.SparseArray) -> saveHierarchyState
    651:652:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    448:449:void setCollapsible(boolean) -> setCollapsible
    540:547:void setCustomView(android.view.View) -> setCustomView
    196:203:void setDefaultNavigationContentDescription(int) -> setDefaultNavigationContentDescription
    604:608:void setDefaultNavigationIcon(android.graphics.drawable.Drawable) -> setDefaultNavigationIcon
    385:418:void setDisplayOptions(int) -> setDisplayOptions
    514:517:void setDropdownParams(android.widget.SpinnerAdapter,android.widget.AdapterView$OnItemSelectedListener) -> setDropdownParams
    521:522:void setDropdownSelectedPosition(int) -> setDropdownSelectedPosition
    422:434:void setEmbeddedTabView(androidx.appcompat.widget.ScrollingTabContainerView) -> setEmbeddedTabView
    454:454:void setHomeButtonEnabled(boolean) -> setHomeButtonEnabled
    301:302:void setIcon(int) -> setIcon
    306:308:void setIcon(android.graphics.drawable.Drawable) -> setIcon
    312:313:void setLogo(int) -> setLogo
    317:319:void setLogo(android.graphics.drawable.Drawable) -> setLogo
    365:371:void setMenu(android.view.Menu,androidx.appcompat.view.menu.MenuPresenter$Callback) -> setMenu
    672:673:void setMenuCallbacks(androidx.appcompat.view.menu.MenuPresenter$Callback,androidx.appcompat.view.menu.MenuBuilder$Callback) -> setMenuCallbacks
    360:361:void setMenuPrepared() -> setMenuPrepared
    620:622:void setNavigationContentDescription(java.lang.CharSequence) -> setNavigationContentDescription
    626:627:void setNavigationContentDescription(int) -> setNavigationContentDescription
    593:595:void setNavigationIcon(android.graphics.drawable.Drawable) -> setNavigationIcon
    599:600:void setNavigationIcon(int) -> setNavigationIcon
    463:500:void setNavigationMode(int) -> setNavigationMode
    273:277:void setSubtitle(java.lang.CharSequence) -> setSubtitle
    255:257:void setTitle(java.lang.CharSequence) -> setTitle
    260:264:void setTitleInt(java.lang.CharSequence) -> setTitleInt
    661:662:void setVisibility(int) -> setVisibility
    237:238:void setWindowCallback(android.view.Window$Callback) -> setWindowCallback
    243:246:void setWindowTitle(java.lang.CharSequence) -> setWindowTitle
    566:566:androidx.core.view.ViewPropertyAnimatorCompat setupAnimatorToVisibility(int,long) -> setupAnimatorToVisibility
    350:350:boolean showOverflowMenu() -> showOverflowMenu
    630:637:void updateHomeAccessibility() -> updateHomeAccessibility
    611:616:void updateNavigationIcon() -> updateNavigationIcon
    322:331:void updateToolbarLogo() -> updateToolbarLogo
androidx.appcompat.widget.ToolbarWidgetWrapper$1 -> androidx.appcompat.widget.ToolbarWidgetWrapper$1:
    182:183:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper) -> <init>
    187:190:void onClick(android.view.View) -> onClick
androidx.appcompat.widget.ToolbarWidgetWrapper$2 -> androidx.appcompat.widget.ToolbarWidgetWrapper$2:
    569:570:void <init>(androidx.appcompat.widget.ToolbarWidgetWrapper,int) -> <init>
    586:587:void onAnimationCancel(android.view.View) -> onAnimationCancel
    579:582:void onAnimationEnd(android.view.View) -> onAnimationEnd
    574:575:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.appcompat.widget.TooltipCompat -> androidx.appcompat.widget.TooltipCompat:
    48:48:void <init>() -> <init>
    41:46:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
androidx.appcompat.widget.TooltipCompatHandler -> androidx.appcompat.widget.TooltipCompatHandler:
    108:117:void <init>(android.view.View,java.lang.CharSequence) -> <init>
    224:225:void cancelPendingShow() -> cancelPendingShow
    250:252:void clearAnchorPos() -> clearAnchorPos
    192:207:void hide() -> hide
    129:149:boolean onHover(android.view.View,android.view.MotionEvent) -> onHover
    121:124:boolean onLongClick(android.view.View) -> onLongClick
    155:155:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    159:160:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    220:221:void scheduleShow() -> scheduleShow
    210:217:void setPendingHandler(androidx.appcompat.widget.TooltipCompatHandler) -> setPendingHandler
    93:106:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    163:189:void show(boolean) -> show
    235:243:boolean updateAnchorPos(android.view.MotionEvent) -> updateAnchorPos
androidx.appcompat.widget.TooltipCompatHandler$1 -> androidx.appcompat.widget.TooltipCompatHandler$1:
    54:54:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    57:58:void run() -> run
androidx.appcompat.widget.TooltipCompatHandler$2 -> androidx.appcompat.widget.TooltipCompatHandler$2:
    60:60:void <init>(androidx.appcompat.widget.TooltipCompatHandler) -> <init>
    63:64:void run() -> run
androidx.appcompat.widget.TooltipPopup -> androidx.appcompat.widget.TooltipPopup:
    58:73:void <init>(android.content.Context) -> <init>
    104:184:void computePosition(android.view.View,int,int,boolean,android.view.WindowManager$LayoutParams) -> computePosition
    187:207:android.view.View getAppRootView(android.view.View) -> getAppRootView
    90:96:void hide() -> hide
    99:99:boolean isShowing() -> isShowing
    77:87:void show(android.view.View,int,int,boolean,java.lang.CharSequence) -> show
androidx.appcompat.widget.VectorEnabledTintResources -> androidx.appcompat.widget.VectorEnabledTintResources:
    39:39:void <clinit>() -> <clinit>
    55:57:void <init>(android.content.Context,android.content.res.Resources) -> <init>
    66:70:android.graphics.drawable.Drawable getDrawable(int) -> getDrawable
    93:93:boolean isCompatVectorFromResourcesEnabled() -> isCompatVectorFromResourcesEnabled
    83:84:void setCompatVectorFromResourcesEnabled(boolean) -> setCompatVectorFromResourcesEnabled
    42:42:boolean shouldBeUsed() -> shouldBeUsed
    75:75:android.graphics.drawable.Drawable superGetDrawable(int) -> superGetDrawable
androidx.appcompat.widget.ViewStubCompat -> androidx.appcompat.widget.ViewStubCompat:
    53:54:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    57:70:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    159:159:void dispatchDraw(android.graphics.Canvas) -> dispatchDraw
    155:155:void draw(android.graphics.Canvas) -> draw
    83:83:int getInflatedId() -> getInflatedId
    144:144:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    113:113:int getLayoutResource() -> getLayoutResource
    196:235:android.view.View inflate() -> inflate
    149:150:void onMeasure(int,int) -> onMeasure
    97:98:void setInflatedId(int) -> setInflatedId
    137:138:void setLayoutInflater(android.view.LayoutInflater) -> setLayoutInflater
    129:130:void setLayoutResource(int) -> setLayoutResource
    248:249:void setOnInflateListener(androidx.appcompat.widget.ViewStubCompat$OnInflateListener) -> setOnInflateListener
    173:186:void setVisibility(int) -> setVisibility
androidx.appcompat.widget.ViewUtils -> androidx.appcompat.widget.ViewUtils:
    42:53:void <clinit>() -> <clinit>
    55:55:void <init>() -> <init>
    66:73:void computeFitSystemWindows(android.view.View,android.graphics.Rect,android.graphics.Rect) -> computeFitSystemWindows
    58:58:boolean isLayoutRtl(android.view.View) -> isLayoutRtl
    80:97:void makeOptionalFitsSystemWindows(android.view.View) -> makeOptionalFitsSystemWindows
androidx.arch.core.executor.ArchTaskExecutor -> androidx.arch.core.executor.ArchTaskExecutor:
    42:50:void <clinit>() -> <clinit>
    57:60:void <init>() -> <init>
    96:97:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    111:111:java.util.concurrent.Executor getIOThreadExecutor() -> getIOThreadExecutor
    69:76:androidx.arch.core.executor.ArchTaskExecutor getInstance() -> getInstance
    106:106:java.util.concurrent.Executor getMainThreadExecutor() -> getMainThreadExecutor
    116:116:boolean isMainThread() -> isMainThread
    101:102:void postToMainThread(java.lang.Runnable) -> postToMainThread
    91:92:void setDelegate(androidx.arch.core.executor.TaskExecutor) -> setDelegate
androidx.arch.core.executor.ArchTaskExecutor$1 -> androidx.arch.core.executor.ArchTaskExecutor$1:
    42:42:void <init>() -> <init>
    45:46:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.ArchTaskExecutor$2 -> androidx.arch.core.executor.ArchTaskExecutor$2:
    50:50:void <init>() -> <init>
    53:54:void execute(java.lang.Runnable) -> execute
androidx.arch.core.executor.DefaultTaskExecutor -> androidx.arch.core.executor.DefaultTaskExecutor:
    34:38:void <init>() -> <init>
    56:57:void executeOnDiskIO(java.lang.Runnable) -> executeOnDiskIO
    74:74:boolean isMainThread() -> isMainThread
    61:70:void postToMainThread(java.lang.Runnable) -> postToMainThread
androidx.arch.core.executor.DefaultTaskExecutor$1 -> androidx.arch.core.executor.DefaultTaskExecutor$1:
    38:41:void <init>(androidx.arch.core.executor.DefaultTaskExecutor) -> <init>
    45:47:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.arch.core.executor.TaskExecutor -> androidx.arch.core.executor.TaskExecutor:
    31:31:void <init>() -> <init>
    54:59:void executeOnMainThread(java.lang.Runnable) -> executeOnMainThread
androidx.arch.core.internal.FastSafeIterableMap -> androidx.arch.core.internal.FastSafeIterableMap:
    35:37:void <init>() -> <init>
    75:78:java.util.Map$Entry ceil(java.lang.Object) -> ceil
    66:66:boolean contains(java.lang.Object) -> contains
    41:41:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    46:51:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    56:58:java.lang.Object remove(java.lang.Object) -> remove
androidx.arch.core.internal.SafeIterableMap -> androidx.arch.core.internal.SafeIterableMap:
    35:43:void <init>() -> <init>
    150:152:java.util.Iterator descendingIterator() -> descendingIterator
    169:169:java.util.Map$Entry eldest() -> eldest
    181:201:boolean equals(java.lang.Object) -> equals
    46:53:androidx.arch.core.internal.SafeIterableMap$Entry get(java.lang.Object) -> get
    206:211:int hashCode() -> hashCode
    140:142:java.util.Iterator iterator() -> iterator
    160:162:androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions iteratorWithAdditions() -> iteratorWithAdditions
    176:176:java.util.Map$Entry newest() -> newest
    75:86:androidx.arch.core.internal.SafeIterableMap$Entry put(java.lang.Object,java.lang.Object) -> put
    66:71:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    98:123:java.lang.Object remove(java.lang.Object) -> remove
    130:130:int size() -> size
    216:226:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$AscendingIterator -> androidx.arch.core.internal.SafeIterableMap$AscendingIterator:
    283:284:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    293:293:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    288:288:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$DescendingIterator -> androidx.arch.core.internal.SafeIterableMap$DescendingIterator:
    300:301:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    310:310:androidx.arch.core.internal.SafeIterableMap$Entry backward(androidx.arch.core.internal.SafeIterableMap$Entry) -> backward
    305:305:androidx.arch.core.internal.SafeIterableMap$Entry forward(androidx.arch.core.internal.SafeIterableMap$Entry) -> forward
androidx.arch.core.internal.SafeIterableMap$Entry -> androidx.arch.core.internal.SafeIterableMap$Entry:
    362:365:void <init>(java.lang.Object,java.lang.Object) -> <init>
    392:399:boolean equals(java.lang.Object) -> equals
    370:370:java.lang.Object getKey() -> getKey
    376:376:java.lang.Object getValue() -> getValue
    404:404:int hashCode() -> hashCode
    381:381:java.lang.Object setValue(java.lang.Object) -> setValue
    386:386:java.lang.String toString() -> toString
androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions -> androidx.arch.core.internal.SafeIterableMap$IteratorWithAdditions:
    318:319:void <init>(androidx.arch.core.internal.SafeIterableMap) -> <init>
    332:335:boolean hasNext() -> hasNext
    314:314:java.lang.Object next() -> next
    340:346:java.util.Map$Entry next() -> next
    324:328:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.arch.core.internal.SafeIterableMap$ListIterator -> androidx.arch.core.internal.SafeIterableMap$ListIterator:
    234:237:void <init>(androidx.arch.core.internal.SafeIterableMap$Entry,androidx.arch.core.internal.SafeIterableMap$Entry) -> <init>
    241:241:boolean hasNext() -> hasNext
    229:229:java.lang.Object next() -> next
    271:273:java.util.Map$Entry next() -> next
    263:264:androidx.arch.core.internal.SafeIterableMap$Entry nextNode() -> nextNode
    247:259:void supportRemove(androidx.arch.core.internal.SafeIterableMap$Entry) -> supportRemove
androidx.collection.ArrayMap -> androidx.collection.ArrayMap:
    57:58:void <init>() -> <init>
    64:65:void <init>(int) -> <init>
    71:72:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    133:133:boolean containsAll(java.util.Collection) -> containsAll
    182:182:java.util.Set entrySet() -> entrySet
    75:123:androidx.collection.MapCollections getCollection() -> getCollection
    194:194:java.util.Set keySet() -> keySet
    142:146:void putAll(java.util.Map) -> putAll
    154:154:boolean removeAll(java.util.Collection) -> removeAll
    164:164:boolean retainAll(java.util.Collection) -> retainAll
    206:206:java.util.Collection values() -> values
androidx.collection.ArrayMap$1 -> androidx.collection.ArrayMap$1:
    76:76:void <init>(androidx.collection.ArrayMap) -> <init>
    119:120:void colClear() -> colClear
    84:84:java.lang.Object colGetEntry(int,int) -> colGetEntry
    99:99:java.util.Map colGetMap() -> colGetMap
    79:79:int colGetSize() -> colGetSize
    89:89:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    94:94:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    104:105:void colPut(java.lang.Object,java.lang.Object) -> colPut
    114:115:void colRemoveAt(int) -> colRemoveAt
    109:109:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.ArraySet -> androidx.collection.ArraySet:
    50:51:void <clinit>() -> <clinit>
    240:241:void <init>() -> <init>
    247:255:void <init>(int) -> <init>
    261:265:void <init>(androidx.collection.ArraySet) -> <init>
    271:275:void <init>(java.util.Collection) -> <init>
    359:402:boolean add(java.lang.Object) -> add
    410:423:void addAll(androidx.collection.ArraySet) -> addAll
    719:724:boolean addAll(java.util.Collection) -> addAll
    160:196:void allocArrays(int) -> allocArrays
    282:288:void clear() -> clear
    315:315:boolean contains(java.lang.Object) -> contains
    705:710:boolean containsAll(java.util.Collection) -> containsAll
    295:305:void ensureCapacity(int) -> ensureCapacity
    559:582:boolean equals(java.lang.Object) -> equals
    200:233:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    634:682:androidx.collection.MapCollections getCollection() -> getCollection
    590:595:int hashCode() -> hashCode
    83:117:int indexOf(java.lang.Object,int) -> indexOf
    325:325:int indexOf(java.lang.Object) -> indexOf
    121:155:int indexOfNull() -> indexOfNull
    343:343:boolean isEmpty() -> isEmpty
    694:694:java.util.Iterator iterator() -> iterator
    433:438:boolean remove(java.lang.Object) -> remove
    506:514:boolean removeAll(androidx.collection.ArraySet) -> removeAll
    734:738:boolean removeAll(java.util.Collection) -> removeAll
    447:494:java.lang.Object removeAt(int) -> removeAt
    749:756:boolean retainAll(java.util.Collection) -> retainAll
    522:522:int size() -> size
    528:530:java.lang.Object[] toArray() -> toArray
    536:545:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    607:625:java.lang.String toString() -> toString
    335:335:java.lang.Object valueAt(int) -> valueAt
androidx.collection.ArraySet$1 -> androidx.collection.ArraySet$1:
    635:635:void <init>(androidx.collection.ArraySet) -> <init>
    678:679:void colClear() -> colClear
    643:643:java.lang.Object colGetEntry(int,int) -> colGetEntry
    658:658:java.util.Map colGetMap() -> colGetMap
    638:638:int colGetSize() -> colGetSize
    648:648:int colIndexOfKey(java.lang.Object) -> colIndexOfKey
    653:653:int colIndexOfValue(java.lang.Object) -> colIndexOfValue
    663:664:void colPut(java.lang.Object,java.lang.Object) -> colPut
    673:674:void colRemoveAt(int) -> colRemoveAt
    668:668:java.lang.Object colSetValue(int,java.lang.Object) -> colSetValue
androidx.collection.CircularArray -> androidx.collection.CircularArray:
    49:50:void <init>() -> <init>
    58:60:void <init>(int) -> <init>
    84:89:void addFirst(java.lang.Object) -> addFirst
    96:101:void addLast(java.lang.Object) -> addLast
    138:139:void clear() -> clear
    30:34:void doubleCapacity() -> doubleCapacity
    240:241:java.lang.Object get(int) -> get
    215:216:java.lang.Object getFirst() -> getFirst
    227:228:java.lang.Object getLast() -> getLast
    259:259:boolean isEmpty() -> isEmpty
    109:110:java.lang.Object popFirst() -> popFirst
    124:125:java.lang.Object popLast() -> popLast
    182:186:void removeFromEnd(int) -> removeFromEnd
    149:153:void removeFromStart(int) -> removeFromStart
    251:251:int size() -> size
androidx.collection.CircularIntArray -> androidx.collection.CircularIntArray:
    50:51:void <init>() -> <init>
    59:61:void <init>(int) -> <init>
    85:90:void addFirst(int) -> addFirst
    97:102:void addLast(int) -> addLast
    133:134:void clear() -> clear
    31:35:void doubleCapacity() -> doubleCapacity
    197:197:int get(int) -> get
    176:176:int getFirst() -> getFirst
    186:186:int getLast() -> getLast
    214:214:boolean isEmpty() -> isEmpty
    110:110:int popFirst() -> popFirst
    122:122:int popLast() -> popLast
    161:165:void removeFromEnd(int) -> removeFromEnd
    144:148:void removeFromStart(int) -> removeFromStart
    206:206:int size() -> size
androidx.collection.ContainerHelpers -> androidx.collection.ContainerHelpers:
    20:22:void <clinit>() -> <clinit>
    83:84:void <init>() -> <init>
    46:61:int binarySearch(int[],int,int) -> binarySearch
    65:80:int binarySearch(long[],int,long) -> binarySearch
    41:41:boolean equal(java.lang.Object,java.lang.Object) -> equal
    33:37:int idealByteArraySize(int) -> idealByteArraySize
    25:25:int idealIntArraySize(int) -> idealIntArraySize
    29:29:int idealLongArraySize(int) -> idealLongArraySize
androidx.collection.LongSparseArray -> androidx.collection.LongSparseArray:
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    72:81:void <init>(int) -> <init>
    456:483:void append(long,java.lang.Object) -> append
    440:449:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.LongSparseArray clone() -> clone
    428:428:boolean containsKey(long) -> containsKey
    433:433:boolean containsValue(java.lang.Object) -> containsValue
    132:133:void delete(long) -> delete
    217:240:void gc() -> gc
    109:109:java.lang.Object get(long) -> get
    118:121:java.lang.Object get(long,java.lang.Object) -> get
    399:403:int indexOfKey(long) -> indexOfKey
    415:423:int indexOfValue(java.lang.Object) -> indexOfValue
    339:339:boolean isEmpty() -> isEmpty
    353:357:long keyAt(int) -> keyAt
    248:292:void put(long,java.lang.Object) -> put
    300:303:void putAll(androidx.collection.LongSparseArray) -> putAll
    315:319:java.lang.Object putIfAbsent(long,java.lang.Object) -> putIfAbsent
    139:147:void remove(long) -> remove
    156:164:boolean remove(long,java.lang.Object) -> remove
    171:175:void removeAt(int) -> removeAt
    185:191:java.lang.Object replace(long,java.lang.Object) -> replace
    203:211:boolean replace(long,java.lang.Object,java.lang.Object) -> replace
    386:391:void setValueAt(int,java.lang.Object) -> setValueAt
    327:331:int size() -> size
    494:515:java.lang.String toString() -> toString
    373:377:java.lang.Object valueAt(int) -> valueAt
androidx.collection.LruCache -> androidx.collection.LruCache:
    51:53:void <init>(int) -> <init>
    255:255:java.lang.Object create(java.lang.Object) -> create
    322:322:int createCount() -> createCount
    236:236:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    281:282:void evictAll() -> evictAll
    336:336:int evictionCount() -> evictionCount
    83:84:java.lang.Object get(java.lang.Object) -> get
    307:307:int hitCount() -> hitCount
    299:299:int maxSize() -> maxSize
    315:315:int missCount() -> missCount
    138:139:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    329:329:int putCount() -> putCount
    200:201:java.lang.Object remove(java.lang.Object) -> remove
    65:66:void resize(int) -> resize
    259:261:int safeSizeOf(java.lang.Object,java.lang.Object) -> safeSizeOf
    290:290:int size() -> size
    274:274:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
    344:344:java.util.Map snapshot() -> snapshot
    348:347:java.lang.String toString() -> toString
    171:187:void trimToSize(int) -> trimToSize
androidx.collection.MapCollections -> androidx.collection.MapCollections:
    32:32:void <init>() -> <init>
    459:465:boolean containsAllHelper(java.util.Map,java.util.Collection) -> containsAllHelper
    515:529:boolean equalsSetHelper(java.util.Set,java.lang.Object) -> equalsSetHelper
    533:536:java.util.Set getEntrySet() -> getEntrySet
    540:543:java.util.Set getKeySet() -> getKeySet
    547:550:java.util.Collection getValues() -> getValues
    469:474:boolean removeAllHelper(java.util.Map,java.util.Collection) -> removeAllHelper
    478:485:boolean retainAllHelper(java.util.Map,java.util.Collection) -> retainAllHelper
    490:495:java.lang.Object[] toArrayHelper(int) -> toArrayHelper
    499:511:java.lang.Object[] toArrayHelper(java.lang.Object[],int) -> toArrayHelper
androidx.collection.MapCollections$ArrayIterator -> androidx.collection.MapCollections$ArrayIterator:
    43:46:void <init>(androidx.collection.MapCollections,int) -> <init>
    50:50:boolean hasNext() -> hasNext
    55:55:java.lang.Object next() -> next
    64:65:void remove() -> remove
androidx.collection.MapCollections$EntrySet -> androidx.collection.MapCollections$EntrySet:
    167:167:void <init>(androidx.collection.MapCollections) -> <init>
    167:167:boolean add(java.lang.Object) -> add
    170:170:boolean add(java.util.Map$Entry) -> add
    175:179:boolean addAll(java.util.Collection) -> addAll
    184:185:void clear() -> clear
    189:197:boolean contains(java.lang.Object) -> contains
    202:208:boolean containsAll(java.util.Collection) -> containsAll
    253:253:boolean equals(java.lang.Object) -> equals
    258:265:int hashCode() -> hashCode
    213:213:boolean isEmpty() -> isEmpty
    218:218:java.util.Iterator iterator() -> iterator
    223:223:boolean remove(java.lang.Object) -> remove
    228:228:boolean removeAll(java.util.Collection) -> removeAll
    233:233:boolean retainAll(java.util.Collection) -> retainAll
    238:238:int size() -> size
    243:243:java.lang.Object[] toArray() -> toArray
    248:248:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$KeySet -> androidx.collection.MapCollections$KeySet:
    269:269:void <init>(androidx.collection.MapCollections) -> <init>
    273:273:boolean add(java.lang.Object) -> add
    278:278:boolean addAll(java.util.Collection) -> addAll
    283:284:void clear() -> clear
    288:288:boolean contains(java.lang.Object) -> contains
    293:293:boolean containsAll(java.util.Collection) -> containsAll
    343:343:boolean equals(java.lang.Object) -> equals
    348:353:int hashCode() -> hashCode
    298:298:boolean isEmpty() -> isEmpty
    303:303:java.util.Iterator iterator() -> iterator
    308:313:boolean remove(java.lang.Object) -> remove
    318:318:boolean removeAll(java.util.Collection) -> removeAll
    323:323:boolean retainAll(java.util.Collection) -> retainAll
    328:328:int size() -> size
    333:333:java.lang.Object[] toArray() -> toArray
    338:338:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.MapCollections$MapIterator -> androidx.collection.MapCollections$MapIterator:
    79:82:void <init>(androidx.collection.MapCollections) -> <init>
    137:138:boolean equals(java.lang.Object) -> equals
    110:111:java.lang.Object getKey() -> getKey
    119:120:java.lang.Object getValue() -> getValue
    86:86:boolean hasNext() -> hasNext
    151:152:int hashCode() -> hashCode
    74:74:java.lang.Object next() -> next
    91:91:java.util.Map$Entry next() -> next
    99:100:void remove() -> remove
    128:129:java.lang.Object setValue(java.lang.Object) -> setValue
    163:163:java.lang.String toString() -> toString
androidx.collection.MapCollections$ValuesCollection -> androidx.collection.MapCollections$ValuesCollection:
    357:357:void <init>(androidx.collection.MapCollections) -> <init>
    361:361:boolean add(java.lang.Object) -> add
    366:366:boolean addAll(java.util.Collection) -> addAll
    371:372:void clear() -> clear
    376:376:boolean contains(java.lang.Object) -> contains
    381:387:boolean containsAll(java.util.Collection) -> containsAll
    392:392:boolean isEmpty() -> isEmpty
    397:397:java.util.Iterator iterator() -> iterator
    402:407:boolean remove(java.lang.Object) -> remove
    412:423:boolean removeAll(java.util.Collection) -> removeAll
    428:439:boolean retainAll(java.util.Collection) -> retainAll
    444:444:int size() -> size
    449:449:java.lang.Object[] toArray() -> toArray
    454:454:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
androidx.collection.SimpleArrayMap -> androidx.collection.SimpleArrayMap:
    236:240:void <init>() -> <init>
    246:254:void <init>(int) -> <init>
    260:264:void <init>(androidx.collection.SimpleArrayMap) -> <init>
    165:197:void allocArrays(int) -> allocArrays
    77:80:int binarySearchHashes(int[],int,int) -> binarySearchHashes
    270:280:void clear() -> clear
    312:312:boolean containsKey(java.lang.Object) -> containsKey
    352:352:boolean containsValue(java.lang.Object) -> containsValue
    289:301:void ensureCapacity(int) -> ensureCapacity
    681:735:boolean equals(java.lang.Object) -> equals
    201:230:void freeArrays(int[],java.lang.Object[],int) -> freeArrays
    369:369:java.lang.Object get(java.lang.Object) -> get
    380:381:java.lang.Object getOrDefault(java.lang.Object,java.lang.Object) -> getOrDefault
    743:750:int hashCode() -> hashCode
    88:122:int indexOf(java.lang.Object,int) -> indexOf
    322:322:int indexOfKey(java.lang.Object) -> indexOfKey
    126:160:int indexOfNull() -> indexOfNull
    326:341:int indexOfValue(java.lang.Object) -> indexOfValue
    419:419:boolean isEmpty() -> isEmpty
    390:390:java.lang.Object keyAt(int) -> keyAt
    432:482:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    498:511:void putAll(androidx.collection.SimpleArrayMap) -> putAll
    523:527:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    538:543:java.lang.Object remove(java.lang.Object) -> remove
    553:561:boolean remove(java.lang.Object,java.lang.Object) -> remove
    570:623:java.lang.Object removeAt(int) -> removeAt
    637:641:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    653:661:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    409:412:java.lang.Object setValueAt(int,java.lang.Object) -> setValueAt
    668:668:int size() -> size
    762:787:java.lang.String toString() -> toString
    399:399:java.lang.Object valueAt(int) -> valueAt
androidx.collection.SparseArrayCompat -> androidx.collection.SparseArrayCompat:
    51:51:void <clinit>() -> <clinit>
    62:63:void <init>() -> <init>
    72:81:void <init>(int) -> <init>
    460:487:void append(int,java.lang.Object) -> append
    444:453:void clear() -> clear
    50:50:java.lang.Object clone() -> clone
    88:92:androidx.collection.SparseArrayCompat clone() -> clone
    432:432:boolean containsKey(int) -> containsKey
    437:437:boolean containsValue(java.lang.Object) -> containsValue
    132:133:void delete(int) -> delete
    230:253:void gc() -> gc
    109:109:java.lang.Object get(int) -> get
    118:121:java.lang.Object get(int,java.lang.Object) -> get
    401:405:int indexOfKey(int) -> indexOfKey
    419:427:int indexOfValue(java.lang.Object) -> indexOfValue
    352:352:boolean isEmpty() -> isEmpty
    361:365:int keyAt(int) -> keyAt
    261:305:void put(int,java.lang.Object) -> put
    313:316:void putAll(androidx.collection.SparseArrayCompat) -> putAll
    328:332:java.lang.Object putIfAbsent(int,java.lang.Object) -> putIfAbsent
    139:147:void remove(int) -> remove
    156:164:boolean remove(int,java.lang.Object) -> remove
    171:175:void removeAt(int) -> removeAt
    184:188:void removeAtRange(int,int) -> removeAtRange
    198:204:java.lang.Object replace(int,java.lang.Object) -> replace
    216:224:boolean replace(int,java.lang.Object,java.lang.Object) -> replace
    388:393:void setValueAt(int,java.lang.Object) -> setValueAt
    340:344:int size() -> size
    498:519:java.lang.String toString() -> toString
    375:379:java.lang.Object valueAt(int) -> valueAt
androidx.core.accessibilityservice.AccessibilityServiceInfoCompat -> androidx.core.accessibilityservice.AccessibilityServiceInfoCompat:
    181:181:void <init>() -> <init>
    307:309:java.lang.String capabilityToString(int) -> capabilityToString
    215:242:java.lang.String feedbackTypeToString(int) -> feedbackTypeToString
    255:257:java.lang.String flagToString(int) -> flagToString
    287:288:int getCapabilities(android.accessibilityservice.AccessibilityServiceInfo) -> getCapabilities
    198:199:java.lang.String loadDescription(android.accessibilityservice.AccessibilityServiceInfo,android.content.pm.PackageManager) -> loadDescription
androidx.core.animation.AnimatorKt -> androidx.core.animation.AnimatorKt:
    88:95:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> addListener
    83:86:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addListener$default
    88:88:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> addListener$default
    88:88:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object):184 -> addListener$default
    94:94:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> addListener$default
    94:94:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object):190 -> addListener$default
    95:95:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> addListener$default
    95:95:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object):191 -> addListener$default
    108:113:android.animation.Animator$AnimatorPauseListener addPauseListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> addPauseListener
    105:106:android.animation.Animator$AnimatorPauseListener addPauseListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addPauseListener$default
    108:108:android.animation.Animator$AnimatorPauseListener addPauseListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> addPauseListener$default
    108:108:android.animation.Animator$AnimatorPauseListener addPauseListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object):192 -> addPauseListener$default
    112:112:android.animation.Animator$AnimatorPauseListener addPauseListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> addPauseListener$default
    112:112:android.animation.Animator$AnimatorPauseListener addPauseListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object):196 -> addPauseListener$default
    113:113:android.animation.Animator$AnimatorPauseListener addPauseListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> addPauseListener$default
    113:113:android.animation.Animator$AnimatorPauseListener addPauseListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object):197 -> addPauseListener$default
    47:47:android.animation.Animator$AnimatorListener doOnCancel(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnCancel
    83:83:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnCancel
    83:83:android.animation.Animator$AnimatorListener doOnCancel(android.animation.Animator,kotlin.jvm.functions.Function1):141 -> doOnCancel
    84:84:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnCancel
    84:84:android.animation.Animator$AnimatorListener doOnCancel(android.animation.Animator,kotlin.jvm.functions.Function1):142 -> doOnCancel
    86:86:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnCancel
    86:86:android.animation.Animator$AnimatorListener doOnCancel(android.animation.Animator,kotlin.jvm.functions.Function1):144 -> doOnCancel
    88:88:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnCancel
    88:88:android.animation.Animator$AnimatorListener doOnCancel(android.animation.Animator,kotlin.jvm.functions.Function1):146 -> doOnCancel
    94:94:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnCancel
    94:94:android.animation.Animator$AnimatorListener doOnCancel(android.animation.Animator,kotlin.jvm.functions.Function1):152 -> doOnCancel
    95:95:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnCancel
    95:95:android.animation.Animator$AnimatorListener doOnCancel(android.animation.Animator,kotlin.jvm.functions.Function1):153 -> doOnCancel
    47:47:android.animation.Animator$AnimatorListener doOnCancel(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnCancel
    29:29:android.animation.Animator$AnimatorListener doOnEnd(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnEnd
    84:84:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnEnd
    84:84:android.animation.Animator$AnimatorListener doOnEnd(android.animation.Animator,kotlin.jvm.functions.Function1):116 -> doOnEnd
    85:85:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnEnd
    85:85:android.animation.Animator$AnimatorListener doOnEnd(android.animation.Animator,kotlin.jvm.functions.Function1):117 -> doOnEnd
    86:86:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnEnd
    86:86:android.animation.Animator$AnimatorListener doOnEnd(android.animation.Animator,kotlin.jvm.functions.Function1):118 -> doOnEnd
    88:88:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnEnd
    88:88:android.animation.Animator$AnimatorListener doOnEnd(android.animation.Animator,kotlin.jvm.functions.Function1):120 -> doOnEnd
    94:94:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnEnd
    94:94:android.animation.Animator$AnimatorListener doOnEnd(android.animation.Animator,kotlin.jvm.functions.Function1):126 -> doOnEnd
    95:95:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnEnd
    95:95:android.animation.Animator$AnimatorListener doOnEnd(android.animation.Animator,kotlin.jvm.functions.Function1):127 -> doOnEnd
    29:29:android.animation.Animator$AnimatorListener doOnEnd(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnEnd
    75:75:android.animation.Animator$AnimatorPauseListener doOnPause(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnPause
    105:105:android.animation.Animator$AnimatorPauseListener addPauseListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnPause
    105:105:android.animation.Animator$AnimatorPauseListener doOnPause(android.animation.Animator,kotlin.jvm.functions.Function1):175 -> doOnPause
    108:108:android.animation.Animator$AnimatorPauseListener addPauseListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnPause
    108:108:android.animation.Animator$AnimatorPauseListener doOnPause(android.animation.Animator,kotlin.jvm.functions.Function1):178 -> doOnPause
    112:112:android.animation.Animator$AnimatorPauseListener addPauseListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnPause
    112:112:android.animation.Animator$AnimatorPauseListener doOnPause(android.animation.Animator,kotlin.jvm.functions.Function1):182 -> doOnPause
    113:113:android.animation.Animator$AnimatorPauseListener addPauseListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnPause
    113:113:android.animation.Animator$AnimatorPauseListener doOnPause(android.animation.Animator,kotlin.jvm.functions.Function1):183 -> doOnPause
    75:75:android.animation.Animator$AnimatorPauseListener doOnPause(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnPause
    55:55:android.animation.Animator$AnimatorListener doOnRepeat(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnRepeat
    83:83:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnRepeat
    83:83:android.animation.Animator$AnimatorListener doOnRepeat(android.animation.Animator,kotlin.jvm.functions.Function1):154 -> doOnRepeat
    84:84:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnRepeat
    84:84:android.animation.Animator$AnimatorListener doOnRepeat(android.animation.Animator,kotlin.jvm.functions.Function1):155 -> doOnRepeat
    85:85:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnRepeat
    85:85:android.animation.Animator$AnimatorListener doOnRepeat(android.animation.Animator,kotlin.jvm.functions.Function1):156 -> doOnRepeat
    88:88:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnRepeat
    88:88:android.animation.Animator$AnimatorListener doOnRepeat(android.animation.Animator,kotlin.jvm.functions.Function1):159 -> doOnRepeat
    94:94:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnRepeat
    94:94:android.animation.Animator$AnimatorListener doOnRepeat(android.animation.Animator,kotlin.jvm.functions.Function1):165 -> doOnRepeat
    95:95:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnRepeat
    95:95:android.animation.Animator$AnimatorListener doOnRepeat(android.animation.Animator,kotlin.jvm.functions.Function1):166 -> doOnRepeat
    55:55:android.animation.Animator$AnimatorListener doOnRepeat(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnRepeat
    65:65:android.animation.Animator$AnimatorPauseListener doOnResume(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnResume
    106:106:android.animation.Animator$AnimatorPauseListener addPauseListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnResume
    106:106:android.animation.Animator$AnimatorPauseListener doOnResume(android.animation.Animator,kotlin.jvm.functions.Function1):167 -> doOnResume
    108:108:android.animation.Animator$AnimatorPauseListener addPauseListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnResume
    108:108:android.animation.Animator$AnimatorPauseListener doOnResume(android.animation.Animator,kotlin.jvm.functions.Function1):169 -> doOnResume
    112:112:android.animation.Animator$AnimatorPauseListener addPauseListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnResume
    112:112:android.animation.Animator$AnimatorPauseListener doOnResume(android.animation.Animator,kotlin.jvm.functions.Function1):173 -> doOnResume
    113:113:android.animation.Animator$AnimatorPauseListener addPauseListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnResume
    113:113:android.animation.Animator$AnimatorPauseListener doOnResume(android.animation.Animator,kotlin.jvm.functions.Function1):174 -> doOnResume
    65:65:android.animation.Animator$AnimatorPauseListener doOnResume(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnResume
    38:38:android.animation.Animator$AnimatorListener doOnStart(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnStart
    83:83:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnStart
    83:83:android.animation.Animator$AnimatorListener doOnStart(android.animation.Animator,kotlin.jvm.functions.Function1):128 -> doOnStart
    85:85:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnStart
    85:85:android.animation.Animator$AnimatorListener doOnStart(android.animation.Animator,kotlin.jvm.functions.Function1):130 -> doOnStart
    86:86:android.animation.Animator$AnimatorListener addListener$default(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnStart
    86:86:android.animation.Animator$AnimatorListener doOnStart(android.animation.Animator,kotlin.jvm.functions.Function1):131 -> doOnStart
    88:88:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnStart
    88:88:android.animation.Animator$AnimatorListener doOnStart(android.animation.Animator,kotlin.jvm.functions.Function1):133 -> doOnStart
    94:94:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnStart
    94:94:android.animation.Animator$AnimatorListener doOnStart(android.animation.Animator,kotlin.jvm.functions.Function1):139 -> doOnStart
    95:95:android.animation.Animator$AnimatorListener addListener(android.animation.Animator,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnStart
    95:95:android.animation.Animator$AnimatorListener doOnStart(android.animation.Animator,kotlin.jvm.functions.Function1):140 -> doOnStart
    38:38:android.animation.Animator$AnimatorListener doOnStart(android.animation.Animator,kotlin.jvm.functions.Function1) -> doOnStart
androidx.core.animation.AnimatorKt$addListener$1 -> androidx.core.animation.AnimatorKt$addListener$1:
    83:83:void invoke(android.animation.Animator) -> invoke
androidx.core.animation.AnimatorKt$addListener$2 -> androidx.core.animation.AnimatorKt$addListener$2:
    84:84:void invoke(android.animation.Animator) -> invoke
androidx.core.animation.AnimatorKt$addListener$3 -> androidx.core.animation.AnimatorKt$addListener$3:
    85:85:void invoke(android.animation.Animator) -> invoke
androidx.core.animation.AnimatorKt$addListener$4 -> androidx.core.animation.AnimatorKt$addListener$4:
    86:86:void invoke(android.animation.Animator) -> invoke
androidx.core.animation.AnimatorKt$addListener$listener$1 -> androidx.core.animation.AnimatorKt$addListener$listener$1:
    88:88:void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    91:91:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    90:90:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    89:89:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    92:92:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.animation.AnimatorKt$addPauseListener$1 -> androidx.core.animation.AnimatorKt$addPauseListener$1:
    105:105:void invoke(android.animation.Animator) -> invoke
androidx.core.animation.AnimatorKt$addPauseListener$2 -> androidx.core.animation.AnimatorKt$addPauseListener$2:
    106:106:void invoke(android.animation.Animator) -> invoke
androidx.core.animation.AnimatorKt$addPauseListener$listener$1 -> androidx.core.animation.AnimatorKt$addPauseListener$listener$1:
    108:108:void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    109:109:void onAnimationPause(android.animation.Animator) -> onAnimationPause
    110:110:void onAnimationResume(android.animation.Animator) -> onAnimationResume
androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$1 -> androidx.core.animation.AnimatorKt$doOnCancel$$inlined$addListener$1:
    88:88:void androidx.core.animation.AnimatorKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    88:88:void <init>(kotlin.jvm.functions.Function1):88 -> <init>
    91:91:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    91:91:void onAnimationCancel(android.animation.Animator):91 -> onAnimationCancel
    90:90:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    90:90:void onAnimationEnd(android.animation.Animator):90 -> onAnimationEnd
    83:83:void androidx.core.animation.AnimatorKt$addListener$1.invoke(android.animation.Animator) -> onAnimationEnd
    83:83:void onAnimationEnd(android.animation.Animator):117 -> onAnimationEnd
    89:89:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    89:89:void onAnimationRepeat(android.animation.Animator):89 -> onAnimationRepeat
    86:86:void androidx.core.animation.AnimatorKt$addListener$4.invoke(android.animation.Animator) -> onAnimationRepeat
    86:86:void onAnimationRepeat(android.animation.Animator):116 -> onAnimationRepeat
    92:92:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationStart(android.animation.Animator) -> onAnimationStart
    92:92:void onAnimationStart(android.animation.Animator):92 -> onAnimationStart
    84:84:void androidx.core.animation.AnimatorKt$addListener$2.invoke(android.animation.Animator) -> onAnimationStart
    84:84:void onAnimationStart(android.animation.Animator):118 -> onAnimationStart
androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$1 -> androidx.core.animation.AnimatorKt$doOnEnd$$inlined$addListener$1:
    88:88:void androidx.core.animation.AnimatorKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    88:88:void <init>(kotlin.jvm.functions.Function1):88 -> <init>
    91:91:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    91:91:void onAnimationCancel(android.animation.Animator):91 -> onAnimationCancel
    85:85:void androidx.core.animation.AnimatorKt$addListener$3.invoke(android.animation.Animator) -> onAnimationCancel
    85:85:void onAnimationCancel(android.animation.Animator):117 -> onAnimationCancel
    90:90:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    90:90:void onAnimationEnd(android.animation.Animator):90 -> onAnimationEnd
    89:89:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    89:89:void onAnimationRepeat(android.animation.Animator):89 -> onAnimationRepeat
    86:86:void androidx.core.animation.AnimatorKt$addListener$4.invoke(android.animation.Animator) -> onAnimationRepeat
    86:86:void onAnimationRepeat(android.animation.Animator):116 -> onAnimationRepeat
    92:92:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationStart(android.animation.Animator) -> onAnimationStart
    92:92:void onAnimationStart(android.animation.Animator):92 -> onAnimationStart
    84:84:void androidx.core.animation.AnimatorKt$addListener$2.invoke(android.animation.Animator) -> onAnimationStart
    84:84:void onAnimationStart(android.animation.Animator):118 -> onAnimationStart
androidx.core.animation.AnimatorKt$doOnPause$$inlined$addPauseListener$1 -> androidx.core.animation.AnimatorKt$doOnPause$$inlined$addPauseListener$1:
    108:108:void androidx.core.animation.AnimatorKt$addPauseListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    108:108:void <init>(kotlin.jvm.functions.Function1):108 -> <init>
    109:109:void androidx.core.animation.AnimatorKt$addPauseListener$listener$1.onAnimationPause(android.animation.Animator) -> onAnimationPause
    109:109:void onAnimationPause(android.animation.Animator):109 -> onAnimationPause
    110:110:void androidx.core.animation.AnimatorKt$addPauseListener$listener$1.onAnimationResume(android.animation.Animator) -> onAnimationResume
    110:110:void onAnimationResume(android.animation.Animator):110 -> onAnimationResume
    105:105:void androidx.core.animation.AnimatorKt$addPauseListener$1.invoke(android.animation.Animator) -> onAnimationResume
    105:105:void onAnimationResume(android.animation.Animator):116 -> onAnimationResume
androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$1 -> androidx.core.animation.AnimatorKt$doOnRepeat$$inlined$addListener$1:
    88:88:void androidx.core.animation.AnimatorKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    88:88:void <init>(kotlin.jvm.functions.Function1):88 -> <init>
    91:91:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    91:91:void onAnimationCancel(android.animation.Animator):91 -> onAnimationCancel
    85:85:void androidx.core.animation.AnimatorKt$addListener$3.invoke(android.animation.Animator) -> onAnimationCancel
    85:85:void onAnimationCancel(android.animation.Animator):117 -> onAnimationCancel
    90:90:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    90:90:void onAnimationEnd(android.animation.Animator):90 -> onAnimationEnd
    83:83:void androidx.core.animation.AnimatorKt$addListener$1.invoke(android.animation.Animator) -> onAnimationEnd
    83:83:void onAnimationEnd(android.animation.Animator):116 -> onAnimationEnd
    89:89:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    89:89:void onAnimationRepeat(android.animation.Animator):89 -> onAnimationRepeat
    92:92:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationStart(android.animation.Animator) -> onAnimationStart
    92:92:void onAnimationStart(android.animation.Animator):92 -> onAnimationStart
    84:84:void androidx.core.animation.AnimatorKt$addListener$2.invoke(android.animation.Animator) -> onAnimationStart
    84:84:void onAnimationStart(android.animation.Animator):118 -> onAnimationStart
androidx.core.animation.AnimatorKt$doOnResume$$inlined$addPauseListener$1 -> androidx.core.animation.AnimatorKt$doOnResume$$inlined$addPauseListener$1:
    108:108:void androidx.core.animation.AnimatorKt$addPauseListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    108:108:void <init>(kotlin.jvm.functions.Function1):108 -> <init>
    109:109:void androidx.core.animation.AnimatorKt$addPauseListener$listener$1.onAnimationPause(android.animation.Animator) -> onAnimationPause
    109:109:void onAnimationPause(android.animation.Animator):109 -> onAnimationPause
    106:106:void androidx.core.animation.AnimatorKt$addPauseListener$2.invoke(android.animation.Animator) -> onAnimationPause
    106:106:void onAnimationPause(android.animation.Animator):116 -> onAnimationPause
    110:110:void androidx.core.animation.AnimatorKt$addPauseListener$listener$1.onAnimationResume(android.animation.Animator) -> onAnimationResume
    110:110:void onAnimationResume(android.animation.Animator):110 -> onAnimationResume
androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$1 -> androidx.core.animation.AnimatorKt$doOnStart$$inlined$addListener$1:
    88:88:void androidx.core.animation.AnimatorKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    88:88:void <init>(kotlin.jvm.functions.Function1):88 -> <init>
    91:91:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    91:91:void onAnimationCancel(android.animation.Animator):91 -> onAnimationCancel
    85:85:void androidx.core.animation.AnimatorKt$addListener$3.invoke(android.animation.Animator) -> onAnimationCancel
    85:85:void onAnimationCancel(android.animation.Animator):118 -> onAnimationCancel
    90:90:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    90:90:void onAnimationEnd(android.animation.Animator):90 -> onAnimationEnd
    83:83:void androidx.core.animation.AnimatorKt$addListener$1.invoke(android.animation.Animator) -> onAnimationEnd
    83:83:void onAnimationEnd(android.animation.Animator):117 -> onAnimationEnd
    89:89:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    89:89:void onAnimationRepeat(android.animation.Animator):89 -> onAnimationRepeat
    86:86:void androidx.core.animation.AnimatorKt$addListener$4.invoke(android.animation.Animator) -> onAnimationRepeat
    86:86:void onAnimationRepeat(android.animation.Animator):116 -> onAnimationRepeat
    92:92:void androidx.core.animation.AnimatorKt$addListener$listener$1.onAnimationStart(android.animation.Animator) -> onAnimationStart
    92:92:void onAnimationStart(android.animation.Animator):92 -> onAnimationStart
androidx.core.app.ActivityCompat -> androidx.core.app.ActivityCompat:
    149:151:void <init>() -> <init>
    287:292:void finishAffinity(android.app.Activity) -> finishAffinity
    304:309:void finishAfterTransition(android.app.Activity) -> finishAfterTransition
    169:169:androidx.core.app.ActivityCompat$PermissionCompatDelegate getPermissionCompatDelegate() -> getPermissionCompatDelegate
    329:341:android.net.Uri getReferrer(android.app.Activity) -> getReferrer
    207:208:boolean invalidateOptionsMenu(android.app.Activity) -> invalidateOptionsMenu
    411:414:void postponeEnterTransition(android.app.Activity) -> postponeEnterTransition
    577:585:void recreate(android.app.Activity) -> recreate
    565:565:androidx.core.view.DragAndDropPermissionsCompat requestDragAndDropPermissions(android.app.Activity,android.view.DragEvent) -> requestDragAndDropPermissions
    491:524:void requestPermissions(android.app.Activity,java.lang.String[],int) -> requestPermissions
    362:368:android.view.View requireViewById(android.app.Activity,int) -> requireViewById
    383:389:void setEnterSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    402:408:void setExitSharedElementCallback(android.app.Activity,androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    161:162:void setPermissionCompatDelegate(androidx.core.app.ActivityCompat$PermissionCompatDelegate) -> setPermissionCompatDelegate
    548:551:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String) -> shouldShowRequestPermissionRationale
    233:238:void startActivityForResult(android.app.Activity,android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    270:277:void startIntentSenderForResult(android.app.Activity,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    417:420:void startPostponedEnterTransition(android.app.Activity) -> startPostponedEnterTransition
androidx.core.app.ActivityCompat$1 -> androidx.core.app.ActivityCompat$1:
    505:505:void <init>(java.lang.String[],android.app.Activity,int) -> <init>
    508:521:void run() -> run
androidx.core.app.ActivityCompat$SharedElementCallback21Impl -> androidx.core.app.ActivityCompat$SharedElementCallback21Impl:
    591:593:void <init>(androidx.core.app.SharedElementCallback) -> <init>
    622:622:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    628:628:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    616:617:void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    611:612:void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    605:607:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    598:600:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    635:642:void onSharedElementsArrived(java.util.List,java.util.List,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1 -> androidx.core.app.ActivityCompat$SharedElementCallback21Impl$1:
    636:636:void <init>(androidx.core.app.ActivityCompat$SharedElementCallback21Impl,android.app.SharedElementCallback$OnSharedElementsReadyListener) -> <init>
    639:640:void onSharedElementsReady() -> onSharedElementsReady
androidx.core.app.ActivityManagerCompat -> androidx.core.app.ActivityManagerCompat:
    30:30:void <init>() -> <init>
    40:41:boolean isLowRamDevice(android.app.ActivityManager) -> isLowRamDevice
androidx.core.app.ActivityOptionsCompat -> androidx.core.app.ActivityOptionsCompat:
    300:301:void <init>() -> <init>
    325:325:android.graphics.Rect getLaunchBounds() -> getLaunchBounds
    246:249:androidx.core.app.ActivityOptionsCompat makeBasic() -> makeBasic
    122:126:androidx.core.app.ActivityOptionsCompat makeClipRevealAnimation(android.view.View,int,int,int,int) -> makeClipRevealAnimation
    68:69:androidx.core.app.ActivityOptionsCompat makeCustomAnimation(android.content.Context,int,int) -> makeCustomAnimation
    98:99:androidx.core.app.ActivityOptionsCompat makeScaleUpAnimation(android.view.View,int,int,int,int) -> makeScaleUpAnimation
    179:183:androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,android.view.View,java.lang.String) -> makeSceneTransitionAnimation
    207:219:androidx.core.app.ActivityOptionsCompat makeSceneTransitionAnimation(android.app.Activity,androidx.core.util.Pair[]) -> makeSceneTransitionAnimation
    234:237:androidx.core.app.ActivityOptionsCompat makeTaskLaunchBehind() -> makeTaskLaunchBehind
    151:152:androidx.core.app.ActivityOptionsCompat makeThumbnailScaleUpAnimation(android.view.View,android.graphics.Bitmap,int,int) -> makeThumbnailScaleUpAnimation
    375:375:void requestUsageTimeReport(android.app.PendingIntent) -> requestUsageTimeReport
    315:315:androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect) -> setLaunchBounds
    337:337:android.os.Bundle toBundle() -> toBundle
    347:347:void update(androidx.core.app.ActivityOptionsCompat) -> update
androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl -> androidx.core.app.ActivityOptionsCompat$ActivityOptionsCompatImpl:
    256:258:void <init>(android.app.ActivityOptions) -> <init>
    293:296:android.graphics.Rect getLaunchBounds() -> getLaunchBounds
    276:279:void requestUsageTimeReport(android.app.PendingIntent) -> requestUsageTimeReport
    284:287:androidx.core.app.ActivityOptionsCompat setLaunchBounds(android.graphics.Rect) -> setLaunchBounds
    262:262:android.os.Bundle toBundle() -> toBundle
    267:272:void update(androidx.core.app.ActivityOptionsCompat) -> update
androidx.core.app.ActivityRecreator -> androidx.core.app.ActivityRecreator:
    90:99:void <clinit>() -> <clinit>
    72:72:void <init>() -> <init>
    361:363:java.lang.Class getActivityThreadClass() -> getActivityThreadClass
    341:345:java.lang.reflect.Field getMainThreadField() -> getMainThreadField
    299:308:java.lang.reflect.Method getPerformStopActivity2Params(java.lang.Class) -> getPerformStopActivity2Params
    285:294:java.lang.reflect.Method getPerformStopActivity3Params(java.lang.Class) -> getPerformStopActivity3Params
    317:318:java.lang.reflect.Method getRequestRelaunchActivityMethod(java.lang.Class) -> getRequestRelaunchActivityMethod
    351:355:java.lang.reflect.Field getTokenField() -> getTokenField
    313:313:boolean needsRelaunchCall() -> needsRelaunchCall
    244:280:boolean queueOnStopIfNecessary(java.lang.Object,android.app.Activity) -> queueOnStopIfNecessary
    108:170:boolean recreate(android.app.Activity) -> recreate
androidx.core.app.ActivityRecreator$1 -> androidx.core.app.ActivityRecreator$1:
    142:142:void <init>(androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks,java.lang.Object) -> <init>
    145:146:void run() -> run
androidx.core.app.ActivityRecreator$2 -> androidx.core.app.ActivityRecreator$2:
    158:158:void <init>(android.app.Application,androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks) -> <init>
    165:166:void run() -> run
androidx.core.app.ActivityRecreator$3 -> androidx.core.app.ActivityRecreator$3:
    252:252:void <init>(java.lang.Object,java.lang.Object) -> <init>
    256:275:void run() -> run
androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks -> androidx.core.app.ActivityRecreator$LifecycleCheckCallbacks:
    182:184:void <init>(android.app.Activity) -> <init>
    188:188:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    228:235:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
    206:215:void onActivityPaused(android.app.Activity) -> onActivityPaused
    202:202:void onActivityResumed(android.app.Activity) -> onActivityResumed
    219:219:void onActivitySaveInstanceState(android.app.Activity,android.os.Bundle) -> onActivitySaveInstanceState
    195:198:void onActivityStarted(android.app.Activity) -> onActivityStarted
    224:224:void onActivityStopped(android.app.Activity) -> onActivityStopped
androidx.core.app.AlarmManagerCompat -> androidx.core.app.AlarmManagerCompat:
    229:230:void <init>() -> <init>
    59:66:void setAlarmClock(android.app.AlarmManager,long,android.app.PendingIntent,android.app.PendingIntent) -> setAlarmClock
    117:122:void setAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent) -> setAndAllowWhileIdle
    162:167:void setExact(android.app.AlarmManager,int,long,android.app.PendingIntent) -> setExact
    222:227:void setExactAndAllowWhileIdle(android.app.AlarmManager,int,long,android.app.PendingIntent) -> setExactAndAllowWhileIdle
androidx.core.app.AppComponentFactory -> androidx.core.app.AppComponentFactory:
    40:40:void <init>() -> <init>
    50:50:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    137:140:android.app.Activity instantiateActivityCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivityCompat
    61:61:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    113:116:android.app.Application instantiateApplicationCompat(java.lang.ClassLoader,java.lang.String) -> instantiateApplicationCompat
    83:83:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    204:207:android.content.ContentProvider instantiateProviderCompat(java.lang.ClassLoader,java.lang.String) -> instantiateProviderCompat
    72:72:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    157:160:android.content.BroadcastReceiver instantiateReceiverCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiverCompat
    94:94:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
    181:184:android.app.Service instantiateServiceCompat(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateServiceCompat
androidx.core.app.AppLaunchChecker -> androidx.core.app.AppLaunchChecker:
    87:88:void <init>() -> <init>
    51:51:boolean hasStartedFromLauncher(android.content.Context) -> hasStartedFromLauncher
    67:82:void onActivityCreate(android.app.Activity) -> onActivityCreate
androidx.core.app.AppOpsManagerCompat -> androidx.core.app.AppOpsManagerCompat:
    60:60:void <init>() -> <init>
    104:107:int noteOp(android.content.Context,java.lang.String,int,java.lang.String) -> noteOp
    124:127:int noteOpNoThrow(android.content.Context,java.lang.String,int,java.lang.String) -> noteOpNoThrow
    156:160:int noteProxyOp(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOp
    175:179:int noteProxyOpNoThrow(android.content.Context,java.lang.String,java.lang.String) -> noteProxyOpNoThrow
    75:78:java.lang.String permissionToOp(java.lang.String) -> permissionToOp
androidx.core.app.BundleCompat -> androidx.core.app.BundleCompat:
    94:94:void <init>() -> <init>
    105:106:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    121:126:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
androidx.core.app.BundleCompat$BundleCompatBaseImpl -> androidx.core.app.BundleCompat$BundleCompatBaseImpl:
    44:45:void <init>() -> <init>
    48:67:android.os.IBinder getBinder(android.os.Bundle,java.lang.String) -> getBinder
    71:91:void putBinder(android.os.Bundle,java.lang.String,android.os.IBinder) -> putBinder
androidx.core.app.ComponentActivity -> androidx.core.app.ComponentActivity:
    48:63:void <init>() -> <init>
    136:140:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    127:131:boolean dispatchKeyShortcutEvent(android.view.KeyEvent) -> dispatchKeyShortcutEvent
    107:107:androidx.core.app.ComponentActivity$ExtraData getExtraData(java.lang.Class) -> getExtraData
    113:113:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    85:87:void onCreate(android.os.Bundle) -> onCreate
    92:94:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    79:80:void putExtraData(androidx.core.app.ComponentActivity$ExtraData) -> putExtraData
    122:122:boolean superDispatchKeyEvent(android.view.KeyEvent) -> superDispatchKeyEvent
androidx.core.app.ComponentActivity$ExtraData -> androidx.core.app.ComponentActivity$ExtraData:
    151:151:void <init>() -> <init>
androidx.core.app.CoreComponentFactory -> androidx.core.app.CoreComponentFactory:
    39:39:void <init>() -> <init>
    80:86:java.lang.Object checkCompatWrapper(java.lang.Object) -> checkCompatWrapper
    45:45:android.app.Activity instantiateActivity(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateActivity
    52:52:android.app.Application instantiateApplication(java.lang.ClassLoader,java.lang.String) -> instantiateApplication
    67:67:android.content.ContentProvider instantiateProvider(java.lang.ClassLoader,java.lang.String) -> instantiateProvider
    60:60:android.content.BroadcastReceiver instantiateReceiver(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateReceiver
    75:75:android.app.Service instantiateService(java.lang.ClassLoader,java.lang.String,android.content.Intent) -> instantiateService
androidx.core.app.DialogCompat -> androidx.core.app.DialogCompat:
    32:33:void <init>() -> <init>
    55:60:android.view.View requireViewById(android.app.Dialog,int) -> requireViewById
androidx.core.app.FrameMetricsAggregator -> androidx.core.app.FrameMetricsAggregator:
    199:200:void <init>() -> <init>
    212:218:void <init>(int) -> <init>
    226:227:void add(android.app.Activity) -> add
    301:301:android.util.SparseIntArray[] getMetrics() -> getMetrics
    243:243:android.util.SparseIntArray[] remove(android.app.Activity) -> remove
    273:273:android.util.SparseIntArray[] reset() -> reset
    260:260:android.util.SparseIntArray[] stop() -> stop
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl -> androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl:
    341:342:void <clinit>() -> <clinit>
    344:346:void <init>(int) -> <init>
    411:423:void add(android.app.Activity) -> add
    399:407:void addDurationItem(android.util.SparseIntArray,long) -> addDurationItem
    453:453:android.util.SparseIntArray[] getMetrics() -> getMetrics
    427:434:android.util.SparseIntArray[] remove(android.app.Activity) -> remove
    458:460:android.util.SparseIntArray[] reset() -> reset
    439:448:android.util.SparseIntArray[] stop() -> stop
androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1 -> androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl$1:
    349:349:void <init>(androidx.core.app.FrameMetricsAggregator$FrameMetricsApi24Impl) -> <init>
    353:395:void onFrameMetricsAvailable(android.view.Window,android.view.FrameMetrics,int) -> onFrameMetricsAvailable
androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl -> androidx.core.app.FrameMetricsAggregator$FrameMetricsBaseImpl:
    309:310:void <init>() -> <init>
    313:313:void add(android.app.Activity) -> add
    324:324:android.util.SparseIntArray[] getMetrics() -> getMetrics
    316:316:android.util.SparseIntArray[] remove(android.app.Activity) -> remove
    328:328:android.util.SparseIntArray[] reset() -> reset
    320:320:android.util.SparseIntArray[] stop() -> stop
androidx.core.app.JobIntentService -> androidx.core.app.JobIntentService:
    105:106:void <clinit>() -> <clinit>
    416:422:void <init>() -> <init>
    639:648:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> dequeueWork
    599:603:boolean doStopCurrentWork() -> doStopCurrentWork
    501:502:void enqueueWork(android.content.Context,java.lang.Class,int,android.content.Intent) -> enqueueWork
    517:518:void enqueueWork(android.content.Context,android.content.ComponentName,int,android.content.Intent) -> enqueueWork
    607:615:void ensureProcessorRunningLocked(boolean) -> ensureProcessorRunningLocked
    529:541:androidx.core.app.JobIntentService$WorkEnqueuer getWorkEnqueuer(android.content.Context,android.content.ComponentName,boolean,int) -> getWorkEnqueuer
    580:580:boolean isStopped() -> isStopped
    465:470:android.os.IBinder onBind(android.content.Intent) -> onBind
    426:436:void onCreate() -> onCreate
    476:483:void onDestroy() -> onDestroy
    444:455:int onStartCommand(android.content.Intent,int,int) -> onStartCommand
    595:595:boolean onStopCurrentWork() -> onStopCurrentWork
    618:636:void processorFinished() -> processorFinished
    572:573:void setInterruptIfStopped(boolean) -> setInterruptIfStopped
androidx.core.app.JobIntentService$CommandProcessor -> androidx.core.app.JobIntentService$CommandProcessor:
    383:383:void <init>(androidx.core.app.JobIntentService) -> <init>
    383:383:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    390:399:java.lang.Void doInBackground(java.lang.Void[]) -> doInBackground
    383:383:void onCancelled(java.lang.Object) -> onCancelled
    404:405:void onCancelled(java.lang.Void) -> onCancelled
    383:383:void onPostExecute(java.lang.Object) -> onPostExecute
    409:410:void onPostExecute(java.lang.Void) -> onPostExecute
androidx.core.app.JobIntentService$CompatWorkEnqueuer -> androidx.core.app.JobIntentService$CompatWorkEnqueuer:
    163:175:void <init>(android.content.Context,android.content.ComponentName) -> <init>
    179:197:void enqueueWork(android.content.Intent) -> enqueueWork
    224:234:void serviceProcessingFinished() -> serviceProcessingFinished
    210:219:void serviceProcessingStarted() -> serviceProcessingStarted
    201:205:void serviceStartReceived() -> serviceStartReceived
androidx.core.app.JobIntentService$CompatWorkItem -> androidx.core.app.JobIntentService$CompatWorkItem:
    363:366:void <init>(androidx.core.app.JobIntentService,android.content.Intent,int) -> <init>
    376:377:void complete() -> complete
    370:370:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$JobServiceEngineImpl -> androidx.core.app.JobIntentService$JobServiceEngineImpl:
    275:277:void <init>(androidx.core.app.JobIntentService) -> <init>
    281:281:android.os.IBinder compatGetBinder() -> compatGetBinder
    311:316:androidx.core.app.JobIntentService$GenericWorkItem dequeueWork() -> dequeueWork
    287:290:boolean onStartJob(android.app.job.JobParameters) -> onStartJob
    296:301:boolean onStopJob(android.app.job.JobParameters) -> onStopJob
androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem -> androidx.core.app.JobIntentService$JobServiceEngineImpl$WrapperWorkItem:
    255:257:void <init>(androidx.core.app.JobIntentService$JobServiceEngineImpl,android.app.job.JobWorkItem) -> <init>
    266:270:void complete() -> complete
    261:261:android.content.Intent getIntent() -> getIntent
androidx.core.app.JobIntentService$JobWorkEnqueuer -> androidx.core.app.JobIntentService$JobWorkEnqueuer:
    332:338:void <init>(android.content.Context,android.content.ComponentName,int) -> <init>
    343:344:void enqueueWork(android.content.Intent) -> enqueueWork
androidx.core.app.JobIntentService$WorkEnqueuer -> androidx.core.app.JobIntentService$WorkEnqueuer:
    118:120:void <init>(android.content.ComponentName) -> <init>
    123:127:void ensureJobId(int) -> ensureJobId
    141:141:void serviceProcessingFinished() -> serviceProcessingFinished
    138:138:void serviceProcessingStarted() -> serviceProcessingStarted
    135:135:void serviceStartReceived() -> serviceStartReceived
androidx.core.app.NavUtils -> androidx.core.app.NavUtils:
    282:283:void <init>() -> <init>
    129:150:android.content.Intent getParentActivityIntent(android.app.Activity) -> getParentActivityIntent
    168:178:android.content.Intent getParentActivityIntent(android.content.Context,java.lang.Class) -> getParentActivityIntent
    195:205:android.content.Intent getParentActivityIntent(android.content.Context,android.content.ComponentName) -> getParentActivityIntent
    220:223:java.lang.String getParentActivityName(android.app.Activity) -> getParentActivityName
    240:278:java.lang.String getParentActivityName(android.content.Context,android.content.ComponentName) -> getParentActivityName
    81:85:void navigateUpFromSameTask(android.app.Activity) -> navigateUpFromSameTask
    108:115:void navigateUpTo(android.app.Activity,android.content.Intent) -> navigateUpTo
    60:61:boolean shouldUpRecreateTask(android.app.Activity,android.content.Intent) -> shouldUpRecreateTask
androidx.core.app.NotificationCompat -> androidx.core.app.NotificationCompat:
    6091:6092:void <init>() -> <init>
    5795:5805:androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    5834:5889:androidx.core.app.NotificationCompat$Action getActionCompatFromAction(android.app.Notification$Action) -> getActionCompatFromAction
    5778:5779:int getActionCount(android.app.Notification) -> getActionCount
    6081:6084:boolean getAllowSystemGeneratedContextualActions(android.app.Notification) -> getAllowSystemGeneratedContextualActions
    6043:6046:int getBadgeIconType(android.app.Notification) -> getBadgeIconType
    5823:5826:androidx.core.app.NotificationCompat$BubbleMetadata getBubbleMetadata(android.app.Notification) -> getBubbleMetadata
    5927:5930:java.lang.String getCategory(android.app.Notification) -> getCategory
    6018:6021:java.lang.String getChannelId(android.app.Notification) -> getChannelId
    5918:5918:java.lang.CharSequence getContentTitle(android.app.Notification) -> getContentTitle
    5764:5765:android.os.Bundle getExtras(android.app.Notification) -> getExtras
    5958:5961:java.lang.String getGroup(android.app.Notification) -> getGroup
    6069:6072:int getGroupAlertBehavior(android.app.Notification) -> getGroupAlertBehavior
    5898:5912:java.util.List getInvisibleActions(android.app.Notification) -> getInvisibleActions
    5941:5944:boolean getLocalOnly(android.app.Notification) -> getLocalOnly
    5745:5747:android.app.Notification[] getNotificationArrayFromBundle(android.os.Bundle,java.lang.String) -> getNotificationArrayFromBundle
    6055:6058:java.lang.String getShortcutId(android.app.Notification) -> getShortcutId
    6002:6005:java.lang.String getSortKey(android.app.Notification) -> getSortKey
    6030:6033:long getTimeoutAfter(android.app.Notification) -> getTimeoutAfter
    5977:5980:boolean isGroupSummary(android.app.Notification) -> isGroupSummary
androidx.core.app.NotificationCompat$Action -> androidx.core.app.NotificationCompat$Action:
    3303:3304:void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    3312:3314:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    3320:3323:void <init>(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean) -> <init>
    3331:3345:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],androidx.core.app.RemoteInput[],boolean,int,boolean,boolean) -> <init>
    3372:3372:android.app.PendingIntent getActionIntent() -> getActionIntent
    3387:3387:boolean getAllowGeneratedReplies() -> getAllowGeneratedReplies
    3430:3430:androidx.core.app.RemoteInput[] getDataOnlyRemoteInputs() -> getDataOnlyRemoteInputs
    3379:3379:android.os.Bundle getExtras() -> getExtras
    3353:3353:int getIcon() -> getIcon
    3361:3364:androidx.core.graphics.drawable.IconCompat getIconCompat() -> getIconCompat
    3396:3396:androidx.core.app.RemoteInput[] getRemoteInputs() -> getRemoteInputs
    3407:3407:int getSemanticAction() -> getSemanticAction
    3438:3438:boolean getShowsUserInterface() -> getShowsUserInterface
    3368:3368:java.lang.CharSequence getTitle() -> getTitle
    3416:3416:boolean isContextual() -> isContextual
androidx.core.app.NotificationCompat$Action$Builder -> androidx.core.app.NotificationCompat$Action$Builder:
    3466:3468:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    3477:3485:void <init>(int,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    3493:3498:void <init>(androidx.core.app.NotificationCompat$Action) -> <init>
    3504:3515:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle,androidx.core.app.RemoteInput[],boolean,int,boolean,boolean) -> <init>
    3525:3528:androidx.core.app.NotificationCompat$Action$Builder addExtras(android.os.Bundle) -> addExtras
    3548:3552:androidx.core.app.NotificationCompat$Action$Builder addRemoteInput(androidx.core.app.RemoteInput) -> addRemoteInput
    3636:3653:androidx.core.app.NotificationCompat$Action build() -> build
    3620:3623:void checkContextualActionNullFields() -> checkContextualActionNullFields
    3611:3612:androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Extender) -> extend
    3537:3537:android.os.Bundle getExtras() -> getExtras
    3565:3566:androidx.core.app.NotificationCompat$Action$Builder setAllowGeneratedReplies(boolean) -> setAllowGeneratedReplies
    3589:3590:androidx.core.app.NotificationCompat$Action$Builder setContextual(boolean) -> setContextual
    3578:3579:androidx.core.app.NotificationCompat$Action$Builder setSemanticAction(int) -> setSemanticAction
    3602:3603:androidx.core.app.NotificationCompat$Action$Builder setShowsUserInterface(boolean) -> setShowsUserInterface
androidx.core.app.NotificationCompat$Action$WearableExtender -> androidx.core.app.NotificationCompat$Action$WearableExtender:
    3715:3716:void <init>() -> <init>
    3723:3731:void <init>(androidx.core.app.NotificationCompat$Action) -> <init>
    3687:3687:java.lang.Object clone() -> clone
    3761:3766:androidx.core.app.NotificationCompat$Action$WearableExtender clone() -> clone
    3740:3756:androidx.core.app.NotificationCompat$Action$Builder extend(androidx.core.app.NotificationCompat$Action$Builder) -> extend
    3879:3879:java.lang.CharSequence getCancelLabel() -> getCancelLabel
    3851:3851:java.lang.CharSequence getConfirmLabel() -> getConfirmLabel
    3930:3930:boolean getHintDisplayActionInline() -> getHintDisplayActionInline
    3903:3903:boolean getHintLaunchesActivity() -> getHintLaunchesActivity
    3823:3823:java.lang.CharSequence getInProgressLabel() -> getInProgressLabel
    3787:3787:boolean isAvailableOffline() -> isAvailableOffline
    3776:3777:androidx.core.app.NotificationCompat$Action$WearableExtender setAvailableOffline(boolean) -> setAvailableOffline
    3865:3866:androidx.core.app.NotificationCompat$Action$WearableExtender setCancelLabel(java.lang.CharSequence) -> setCancelLabel
    3837:3838:androidx.core.app.NotificationCompat$Action$WearableExtender setConfirmLabel(java.lang.CharSequence) -> setConfirmLabel
    3791:3796:void setFlag(int,boolean) -> setFlag
    3917:3918:androidx.core.app.NotificationCompat$Action$WearableExtender setHintDisplayActionInline(boolean) -> setHintDisplayActionInline
    3891:3892:androidx.core.app.NotificationCompat$Action$WearableExtender setHintLaunchesActivity(boolean) -> setHintLaunchesActivity
    3809:3810:androidx.core.app.NotificationCompat$Action$WearableExtender setInProgressLabel(java.lang.CharSequence) -> setInProgressLabel
androidx.core.app.NotificationCompat$BigPictureStyle -> androidx.core.app.NotificationCompat$BigPictureStyle:
    2111:2112:void <init>() -> <init>
    2114:2116:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    2159:2171:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    2148:2150:androidx.core.app.NotificationCompat$BigPictureStyle bigLargeIcon(android.graphics.Bitmap) -> bigLargeIcon
    2140:2141:androidx.core.app.NotificationCompat$BigPictureStyle bigPicture(android.graphics.Bitmap) -> bigPicture
    2123:2124:androidx.core.app.NotificationCompat$BigPictureStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    2131:2133:androidx.core.app.NotificationCompat$BigPictureStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
androidx.core.app.NotificationCompat$BigTextStyle -> androidx.core.app.NotificationCompat$BigTextStyle:
    2198:2199:void <init>() -> <init>
    2201:2203:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    2238:2247:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    2228:2229:androidx.core.app.NotificationCompat$BigTextStyle bigText(java.lang.CharSequence) -> bigText
    2210:2211:androidx.core.app.NotificationCompat$BigTextStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    2218:2220:androidx.core.app.NotificationCompat$BigTextStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
androidx.core.app.NotificationCompat$BubbleMetadata -> androidx.core.app.NotificationCompat$BubbleMetadata:
    5396:5396:void <init>(android.app.PendingIntent,android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat,int,int,int,androidx.core.app.NotificationCompat$1) -> <init>
    5430:5437:void <init>(android.app.PendingIntent,android.app.PendingIntent,androidx.core.graphics.drawable.IconCompat,int,int,int) -> <init>
    5548:5568:androidx.core.app.NotificationCompat$BubbleMetadata fromPlatform(android.app.Notification$BubbleMetadata) -> fromPlatform
    5489:5489:boolean getAutoExpandBubble() -> getAutoExpandBubble
    5452:5452:android.app.PendingIntent getDeleteIntent() -> getDeleteIntent
    5470:5470:int getDesiredHeight() -> getDesiredHeight
    5480:5480:int getDesiredHeightResId() -> getDesiredHeightResId
    5460:5460:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    5444:5444:android.app.PendingIntent getIntent() -> getIntent
    5498:5498:boolean isNotificationSuppressed() -> isNotificationSuppressed
    5512:5534:android.app.Notification$BubbleMetadata toPlatform(androidx.core.app.NotificationCompat$BubbleMetadata) -> toPlatform
androidx.core.app.NotificationCompat$BubbleMetadata$Builder -> androidx.core.app.NotificationCompat$BubbleMetadata$Builder:
    5586:5587:void <init>() -> <init>
    5716:5717:androidx.core.app.NotificationCompat$BubbleMetadata build() -> build
    5677:5678:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setAutoExpandBubble(boolean) -> setAutoExpandBubble
    5704:5705:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    5642:5644:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setDesiredHeight(int) -> setDesiredHeight
    5659:5661:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setDesiredHeightResId(int) -> setDesiredHeightResId
    5728:5733:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setFlag(int,boolean) -> setFlag
    5619:5620:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setIcon(androidx.core.graphics.drawable.IconCompat) -> setIcon
    5595:5596:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setIntent(android.app.PendingIntent) -> setIntent
    5695:5696:androidx.core.app.NotificationCompat$BubbleMetadata$Builder setSuppressNotification(boolean) -> setSuppressNotification
androidx.core.app.NotificationCompat$Builder -> androidx.core.app.NotificationCompat$Builder:
    773:783:void <init>(android.content.Context,java.lang.String) -> <init>
    791:792:void <init>(android.content.Context) -> <init>
    1421:1422:androidx.core.app.NotificationCompat$Builder addAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addAction
    1440:1441:androidx.core.app.NotificationCompat$Builder addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    1360:1367:androidx.core.app.NotificationCompat$Builder addExtras(android.os.Bundle) -> addExtras
    1456:1456:androidx.core.app.NotificationCompat$Builder addInvisibleAction(int,java.lang.CharSequence,android.app.PendingIntent) -> addInvisibleAction
    1469:1470:androidx.core.app.NotificationCompat$Builder addInvisibleAction(androidx.core.app.NotificationCompat$Action) -> addInvisibleAction
    1303:1304:androidx.core.app.NotificationCompat$Builder addPerson(java.lang.String) -> addPerson
    1677:1677:android.app.Notification build() -> build
    1650:1651:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Extender) -> extend
    1701:1701:android.widget.RemoteViews getBigContentView() -> getBigContentView
    1749:1749:androidx.core.app.NotificationCompat$BubbleMetadata getBubbleMetadata() -> getBubbleMetadata
    1739:1739:int getColor() -> getColor
    1693:1693:android.widget.RemoteViews getContentView() -> getContentView
    1398:1401:android.os.Bundle getExtras() -> getExtras
    1709:1709:android.widget.RemoteViews getHeadsUpContentView() -> getHeadsUpContentView
    1669:1669:android.app.Notification getNotification() -> getNotification
    1729:1729:int getPriority() -> getPriority
    1719:1719:long getWhenIfShowing() -> getWhenIfShowing
    1681:1685:java.lang.CharSequence limitCharSequenceLength(java.lang.CharSequence) -> limitCharSequenceLength
    1051:1052:android.graphics.Bitmap reduceLargeIconSize(android.graphics.Bitmap) -> reduceLargeIconSize
    1660:1661:androidx.core.app.NotificationCompat$Builder setAllowSystemGeneratedContextualActions(boolean) -> setAllowSystemGeneratedContextualActions
    1204:1205:androidx.core.app.NotificationCompat$Builder setAutoCancel(boolean) -> setAutoCancel
    1610:1611:androidx.core.app.NotificationCompat$Builder setBadgeIconType(int) -> setBadgeIconType
    1641:1642:androidx.core.app.NotificationCompat$Builder setBubbleMetadata(androidx.core.app.NotificationCompat$BubbleMetadata) -> setBubbleMetadata
    1227:1228:androidx.core.app.NotificationCompat$Builder setCategory(java.lang.String) -> setCategory
    1571:1572:androidx.core.app.NotificationCompat$Builder setChannelId(java.lang.String) -> setChannelId
    838:840:androidx.core.app.NotificationCompat$Builder setChronometerCountDown(boolean) -> setChronometerCountDown
    1499:1500:androidx.core.app.NotificationCompat$Builder setColor(int) -> setColor
    1183:1185:androidx.core.app.NotificationCompat$Builder setColorized(boolean) -> setColorized
    962:963:androidx.core.app.NotificationCompat$Builder setContent(android.widget.RemoteViews) -> setContent
    943:944:androidx.core.app.NotificationCompat$Builder setContentInfo(java.lang.CharSequence) -> setContentInfo
    975:976:androidx.core.app.NotificationCompat$Builder setContentIntent(android.app.PendingIntent) -> setContentIntent
    892:893:androidx.core.app.NotificationCompat$Builder setContentText(java.lang.CharSequence) -> setContentText
    884:885:androidx.core.app.NotificationCompat$Builder setContentTitle(java.lang.CharSequence) -> setContentTitle
    1548:1549:androidx.core.app.NotificationCompat$Builder setCustomBigContentView(android.widget.RemoteViews) -> setCustomBigContentView
    1535:1536:androidx.core.app.NotificationCompat$Builder setCustomContentView(android.widget.RemoteViews) -> setCustomContentView
    1561:1562:androidx.core.app.NotificationCompat$Builder setCustomHeadsUpContentView(android.widget.RemoteViews) -> setCustomHeadsUpContentView
    1242:1246:androidx.core.app.NotificationCompat$Builder setDefaults(int) -> setDefaults
    987:988:androidx.core.app.NotificationCompat$Builder setDeleteIntent(android.app.PendingIntent) -> setDeleteIntent
    1383:1384:androidx.core.app.NotificationCompat$Builder setExtras(android.os.Bundle) -> setExtras
    1250:1255:void setFlag(int,boolean) -> setFlag
    1011:1013:androidx.core.app.NotificationCompat$Builder setFullScreenIntent(android.app.PendingIntent,boolean) -> setFullScreenIntent
    1319:1320:androidx.core.app.NotificationCompat$Builder setGroup(java.lang.String) -> setGroup
    1625:1626:androidx.core.app.NotificationCompat$Builder setGroupAlertBehavior(int) -> setGroupAlertBehavior
    1331:1332:androidx.core.app.NotificationCompat$Builder setGroupSummary(boolean) -> setGroupSummary
    1042:1043:androidx.core.app.NotificationCompat$Builder setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    1139:1145:androidx.core.app.NotificationCompat$Builder setLights(int,int,int) -> setLights
    1215:1216:androidx.core.app.NotificationCompat$Builder setLocalOnly(boolean) -> setLocalOnly
    876:877:androidx.core.app.NotificationCompat$Builder setNotificationSilent() -> setNotificationSilent
    935:936:androidx.core.app.NotificationCompat$Builder setNumber(int) -> setNumber
    1160:1161:androidx.core.app.NotificationCompat$Builder setOngoing(boolean) -> setOngoing
    1193:1194:androidx.core.app.NotificationCompat$Builder setOnlyAlertOnce(boolean) -> setOnlyAlertOnce
    1275:1276:androidx.core.app.NotificationCompat$Builder setPriority(int) -> setPriority
    952:955:androidx.core.app.NotificationCompat$Builder setProgress(int,int,boolean) -> setProgress
    1524:1525:androidx.core.app.NotificationCompat$Builder setPublicVersion(android.app.Notification) -> setPublicVersion
    925:926:androidx.core.app.NotificationCompat$Builder setRemoteInputHistory(java.lang.CharSequence[]) -> setRemoteInputHistory
    1596:1597:androidx.core.app.NotificationCompat$Builder setShortcutId(java.lang.String) -> setShortcutId
    808:809:androidx.core.app.NotificationCompat$Builder setShowWhen(boolean) -> setShowWhen
    851:852:androidx.core.app.NotificationCompat$Builder setSmallIcon(int) -> setSmallIcon
    866:868:androidx.core.app.NotificationCompat$Builder setSmallIcon(int,int) -> setSmallIcon
    1348:1349:androidx.core.app.NotificationCompat$Builder setSortKey(java.lang.String) -> setSortKey
    1083:1091:androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri) -> setSound
    1106:1114:androidx.core.app.NotificationCompat$Builder setSound(android.net.Uri,int) -> setSound
    1482:1488:androidx.core.app.NotificationCompat$Builder setStyle(androidx.core.app.NotificationCompat$Style) -> setStyle
    906:907:androidx.core.app.NotificationCompat$Builder setSubText(java.lang.CharSequence) -> setSubText
    1022:1023:androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence) -> setTicker
    1033:1035:androidx.core.app.NotificationCompat$Builder setTicker(java.lang.CharSequence,android.widget.RemoteViews) -> setTicker
    1580:1581:androidx.core.app.NotificationCompat$Builder setTimeoutAfter(long) -> setTimeoutAfter
    824:825:androidx.core.app.NotificationCompat$Builder setUsesChronometer(boolean) -> setUsesChronometer
    1129:1130:androidx.core.app.NotificationCompat$Builder setVibrate(long[]) -> setVibrate
    1511:1512:androidx.core.app.NotificationCompat$Builder setVisibility(int) -> setVisibility
    799:800:androidx.core.app.NotificationCompat$Builder setWhen(long) -> setWhen
androidx.core.app.NotificationCompat$CarExtender -> androidx.core.app.NotificationCompat$CarExtender:
    4994:4995:void <init>() -> <init>
    5002:5016:void <init>(android.app.Notification) -> <init>
    5112:5131:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder) -> extend
    5074:5102:android.os.Bundle getBundleForUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation) -> getBundleForUnreadConversation
    5154:5154:int getColor() -> getColor
    5178:5178:android.graphics.Bitmap getLargeIcon() -> getLargeIcon
    5205:5205:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversation() -> getUnreadConversation
    5020:5053:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation getUnreadConversationFromBundle(android.os.Bundle) -> getUnreadConversationFromBundle
    5143:5144:androidx.core.app.NotificationCompat$CarExtender setColor(int) -> setColor
    5167:5168:androidx.core.app.NotificationCompat$CarExtender setLargeIcon(android.graphics.Bitmap) -> setLargeIcon
    5192:5193:androidx.core.app.NotificationCompat$CarExtender setUnreadConversation(androidx.core.app.NotificationCompat$CarExtender$UnreadConversation) -> setUnreadConversation
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation -> androidx.core.app.NotificationCompat$CarExtender$UnreadConversation:
    5225:5232:void <init>(java.lang.String[],androidx.core.app.RemoteInput,android.app.PendingIntent,android.app.PendingIntent,java.lang.String[],long) -> <init>
    5283:5283:long getLatestTimestamp() -> getLatestTimestamp
    5238:5238:java.lang.String[] getMessages() -> getMessages
    5276:5276:java.lang.String getParticipant() -> getParticipant
    5269:5269:java.lang.String[] getParticipants() -> getParticipants
    5262:5262:android.app.PendingIntent getReadPendingIntent() -> getReadPendingIntent
    5246:5246:androidx.core.app.RemoteInput getRemoteInput() -> getRemoteInput
    5254:5254:android.app.PendingIntent getReplyPendingIntent() -> getReplyPendingIntent
androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder -> androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder:
    5302:5304:void <init>(java.lang.String) -> <init>
    5315:5316:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder addMessage(java.lang.String) -> addMessage
    5372:5374:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation build() -> build
    5362:5363:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setLatestTimestamp(long) -> setLatestTimestamp
    5346:5347:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReadPendingIntent(android.app.PendingIntent) -> setReadPendingIntent
    5332:5335:androidx.core.app.NotificationCompat$CarExtender$UnreadConversation$Builder setReplyAction(android.app.PendingIntent,androidx.core.app.RemoteInput) -> setReplyAction
androidx.core.app.NotificationCompat$DecoratedCustomViewStyle -> androidx.core.app.NotificationCompat$DecoratedCustomViewStyle:
    3057:3058:void <init>() -> <init>
    3066:3069:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    3129:3154:android.widget.RemoteViews createRemoteViews(android.widget.RemoteViews,boolean) -> createRemoteViews
    3170:3184:android.widget.RemoteViews generateActionButton(androidx.core.app.NotificationCompat$Action) -> generateActionButton
    3159:3166:java.util.List getNonContextualActions(java.util.List) -> getNonContextualActions
    3094:3106:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    3077:3085:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    3115:3125:android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
androidx.core.app.NotificationCompat$InboxStyle -> androidx.core.app.NotificationCompat$InboxStyle:
    2972:2973:void <init>() -> <init>
    2975:2977:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    3001:3002:androidx.core.app.NotificationCompat$InboxStyle addLine(java.lang.CharSequence) -> addLine
    3011:3022:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    2984:2985:androidx.core.app.NotificationCompat$InboxStyle setBigContentTitle(java.lang.CharSequence) -> setBigContentTitle
    2992:2994:androidx.core.app.NotificationCompat$InboxStyle setSummaryText(java.lang.CharSequence) -> setSummaryText
androidx.core.app.NotificationCompat$MessagingStyle -> androidx.core.app.NotificationCompat$MessagingStyle:
    2296:2296:void <init>() -> <init>
    2306:2308:void <init>(java.lang.CharSequence) -> <init>
    2318:2320:void <init>(androidx.core.app.Person) -> <init>
    2659:2674:void addCompatExtras(android.os.Bundle) -> addCompatExtras
    2386:2391:androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,java.lang.CharSequence) -> addMessage
    2403:2404:androidx.core.app.NotificationCompat$MessagingStyle addMessage(java.lang.CharSequence,long,androidx.core.app.Person) -> addMessage
    2415:2419:androidx.core.app.NotificationCompat$MessagingStyle addMessage(androidx.core.app.NotificationCompat$MessagingStyle$Message) -> addMessage
    2507:2599:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    2481:2493:androidx.core.app.NotificationCompat$MessagingStyle extractMessagingStyleFromNotification(android.app.Notification) -> extractMessagingStyleFromNotification
    2603:2615:androidx.core.app.NotificationCompat$MessagingStyle$Message findLatestIncomingMessage() -> findLatestIncomingMessage
    2363:2363:java.lang.CharSequence getConversationTitle() -> getConversationTitle
    2426:2426:java.util.List getMessages() -> getMessages
    2337:2337:androidx.core.app.Person getUser() -> getUser
    2332:2332:java.lang.CharSequence getUserDisplayName() -> getUserDisplayName
    2619:2625:boolean hasMessagesWithoutSender() -> hasMessagesWithoutSender
    2458:2466:boolean isGroupConversation() -> isGroupConversation
    2654:2654:android.text.style.TextAppearanceSpan makeFontColorSpan(int) -> makeFontColorSpan
    2629:2649:java.lang.CharSequence makeMessageLine(androidx.core.app.NotificationCompat$MessagingStyle$Message) -> makeMessageLine
    2682:2705:void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
    2354:2355:androidx.core.app.NotificationCompat$MessagingStyle setConversationTitle(java.lang.CharSequence) -> setConversationTitle
    2436:2437:androidx.core.app.NotificationCompat$MessagingStyle setGroupConversation(boolean) -> setGroupConversation
androidx.core.app.NotificationCompat$MessagingStyle$Message -> androidx.core.app.NotificationCompat$MessagingStyle$Message:
    2736:2740:void <init>(java.lang.CharSequence,long,androidx.core.app.Person) -> <init>
    2757:2758:void <init>(java.lang.CharSequence,long,java.lang.CharSequence) -> <init>
    2879:2884:android.os.Bundle[] getBundleArrayForMessages(java.util.List) -> getBundleArrayForMessages
    2835:2835:java.lang.String getDataMimeType() -> getDataMimeType
    2844:2844:android.net.Uri getDataUri() -> getDataUri
    2812:2812:android.os.Bundle getExtras() -> getExtras
    2904:2939:androidx.core.app.NotificationCompat$MessagingStyle$Message getMessageFromBundle(android.os.Bundle) -> getMessageFromBundle
    2889:2898:java.util.List getMessagesFromBundleArray(android.os.Parcelable[]) -> getMessagesFromBundleArray
    2829:2829:androidx.core.app.Person getPerson() -> getPerson
    2823:2823:java.lang.CharSequence getSender() -> getSender
    2801:2801:java.lang.CharSequence getText() -> getText
    2806:2806:long getTimestamp() -> getTimestamp
    2790:2792:androidx.core.app.NotificationCompat$MessagingStyle$Message setData(java.lang.String,android.net.Uri) -> setData
    2848:2874:android.os.Bundle toBundle() -> toBundle
androidx.core.app.NotificationCompat$Style -> androidx.core.app.NotificationCompat$Style:
    1760:1768:void <init>() -> <init>
    1828:1828:void addCompatExtras(android.os.Bundle) -> addCompatExtras
    1796:1796:void apply(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> apply
    1844:1987:android.widget.RemoteViews applyStandardTemplate(boolean,int,boolean) -> applyStandardTemplate
    1780:1784:android.app.Notification build() -> build
    2051:2060:void buildIntoRemoteViews(android.widget.RemoteViews,android.widget.RemoteViews) -> buildIntoRemoteViews
    2069:2078:int calculateTopPadding() -> calculateTopPadding
    2082:2082:float constrain(float,float,float) -> constrain
    1998:1998:android.graphics.Bitmap createColoredBitmap(int,int) -> createColoredBitmap
    2006:2006:android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int) -> createColoredBitmap
    2010:2010:android.graphics.Bitmap createColoredBitmap(int,int,int) -> createColoredBitmap
    2015:2026:android.graphics.Bitmap createColoredBitmap(androidx.core.graphics.drawable.IconCompat,int,int) -> createColoredBitmap
    2031:2040:android.graphics.Bitmap createIconWithBackground(int,int,int,int) -> createIconWithBackground
    2063:2066:void hideNormalContent(android.widget.RemoteViews) -> hideNormalContent
    1811:1811:android.widget.RemoteViews makeBigContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeBigContentView
    1803:1803:android.widget.RemoteViews makeContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeContentView
    1819:1819:android.widget.RemoteViews makeHeadsUpContentView(androidx.core.app.NotificationBuilderWithBuilderAccessor) -> makeHeadsUpContentView
    1836:1836:void restoreFromCompatExtras(android.os.Bundle) -> restoreFromCompatExtras
    1771:1777:void setBuilder(androidx.core.app.NotificationCompat$Builder) -> setBuilder
androidx.core.app.NotificationCompat$WearableExtender -> androidx.core.app.NotificationCompat$WearableExtender:
    4155:4156:void <init>() -> <init>
    4159:4203:void <init>(android.app.Notification) -> <init>
    4349:4350:androidx.core.app.NotificationCompat$WearableExtender addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    4366:4367:androidx.core.app.NotificationCompat$WearableExtender addActions(java.util.List) -> addActions
    4448:4449:androidx.core.app.NotificationCompat$WearableExtender addPage(android.app.Notification) -> addPage
    4465:4466:androidx.core.app.NotificationCompat$WearableExtender addPages(java.util.List) -> addPages
    4376:4377:androidx.core.app.NotificationCompat$WearableExtender clearActions() -> clearActions
    4477:4478:androidx.core.app.NotificationCompat$WearableExtender clearPages() -> clearPages
    4010:4010:java.lang.Object clone() -> clone
    4318:4333:androidx.core.app.NotificationCompat$WearableExtender clone() -> clone
    4213:4274:androidx.core.app.NotificationCompat$Builder extend(androidx.core.app.NotificationCompat$Builder) -> extend
    4280:4313:android.app.Notification$Action getActionFromActionCompat(androidx.core.app.NotificationCompat$Action) -> getActionFromActionCompat
    4384:4384:java.util.List getActions() -> getActions
    4521:4521:android.graphics.Bitmap getBackground() -> getBackground
    4926:4926:java.lang.String getBridgeTag() -> getBridgeTag
    4597:4597:int getContentAction() -> getContentAction
    4542:4542:int getContentIcon() -> getContentIcon
    4569:4569:int getContentIconGravity() -> getContentIconGravity
    4725:4725:boolean getContentIntentAvailableOffline() -> getContentIntentAvailableOffline
    4684:4684:int getCustomContentHeight() -> getCustomContentHeight
    4656:4656:int getCustomSizePreset() -> getCustomSizePreset
    4905:4905:java.lang.String getDismissalId() -> getDismissalId
    4432:4432:android.app.PendingIntent getDisplayIntent() -> getDisplayIntent
    4624:4624:int getGravity() -> getGravity
    4860:4860:boolean getHintAmbientBigPicture() -> getHintAmbientBigPicture
    4805:4805:boolean getHintAvoidBackgroundClipping() -> getHintAvoidBackgroundClipping
    4883:4883:boolean getHintContentIntentLaunchesActivity() -> getHintContentIntentLaunchesActivity
    4750:4750:boolean getHintHideIcon() -> getHintHideIcon
    4833:4833:int getHintScreenTimeout() -> getHintScreenTimeout
    4775:4775:boolean getHintShowBackgroundOnly() -> getHintShowBackgroundOnly
    4491:4491:java.util.List getPages() -> getPages
    4703:4703:boolean getStartScrollBottom() -> getStartScrollBottom
    4506:4507:androidx.core.app.NotificationCompat$WearableExtender setBackground(android.graphics.Bitmap) -> setBackground
    4917:4918:androidx.core.app.NotificationCompat$WearableExtender setBridgeTag(java.lang.String) -> setBridgeTag
    4583:4584:androidx.core.app.NotificationCompat$WearableExtender setContentAction(int) -> setContentAction
    4531:4532:androidx.core.app.NotificationCompat$WearableExtender setContentIcon(int) -> setContentIcon
    4555:4556:androidx.core.app.NotificationCompat$WearableExtender setContentIconGravity(int) -> setContentIconGravity
    4714:4715:androidx.core.app.NotificationCompat$WearableExtender setContentIntentAvailableOffline(boolean) -> setContentIntentAvailableOffline
    4670:4671:androidx.core.app.NotificationCompat$WearableExtender setCustomContentHeight(int) -> setCustomContentHeight
    4640:4641:androidx.core.app.NotificationCompat$WearableExtender setCustomSizePreset(int) -> setCustomSizePreset
    4896:4897:androidx.core.app.NotificationCompat$WearableExtender setDismissalId(java.lang.String) -> setDismissalId
    4420:4421:androidx.core.app.NotificationCompat$WearableExtender setDisplayIntent(android.app.PendingIntent) -> setDisplayIntent
    4930:4935:void setFlag(int,boolean) -> setFlag
    4610:4611:androidx.core.app.NotificationCompat$WearableExtender setGravity(int) -> setGravity
    4846:4847:androidx.core.app.NotificationCompat$WearableExtender setHintAmbientBigPicture(boolean) -> setHintAmbientBigPicture
    4790:4791:androidx.core.app.NotificationCompat$WearableExtender setHintAvoidBackgroundClipping(boolean) -> setHintAvoidBackgroundClipping
    4872:4873:androidx.core.app.NotificationCompat$WearableExtender setHintContentIntentLaunchesActivity(boolean) -> setHintContentIntentLaunchesActivity
    4737:4738:androidx.core.app.NotificationCompat$WearableExtender setHintHideIcon(boolean) -> setHintHideIcon
    4819:4820:androidx.core.app.NotificationCompat$WearableExtender setHintScreenTimeout(int) -> setHintScreenTimeout
    4762:4763:androidx.core.app.NotificationCompat$WearableExtender setHintShowBackgroundOnly(boolean) -> setHintShowBackgroundOnly
    4693:4694:androidx.core.app.NotificationCompat$WearableExtender setStartScrollBottom(boolean) -> setStartScrollBottom
androidx.core.app.NotificationCompatBuilder -> androidx.core.app.NotificationCompatBuilder:
    64:237:void <init>(androidx.core.app.NotificationCompat$Builder) -> <init>
    284:334:void addAction(androidx.core.app.NotificationCompat$Action) -> addAction
    245:280:android.app.Notification build() -> build
    338:429:android.app.Notification buildInternal() -> buildInternal
    241:241:android.app.Notification$Builder getBuilder() -> getBuilder
    462:466:void removeSoundAndVibration(android.app.Notification) -> removeSoundAndVibration
androidx.core.app.NotificationCompatExtras -> androidx.core.app.NotificationCompatExtras:
    66:66:void <init>() -> <init>
androidx.core.app.NotificationCompatJellybean -> androidx.core.app.NotificationCompatJellybean:
    59:63:void <clinit>() -> <clinit>
    349:350:void <init>() -> <init>
    72:82:android.util.SparseArray buildActionExtrasMap(java.util.List) -> buildActionExtrasMap
    212:231:boolean ensureActionReflectionReadyLocked() -> ensureActionReflectionReadyLocked
    276:283:androidx.core.app.RemoteInput fromBundle(android.os.Bundle) -> fromBundle
    312:319:androidx.core.app.RemoteInput[] fromBundleArray(android.os.Bundle[]) -> fromBundleArray
    168:191:androidx.core.app.NotificationCompat$Action getAction(android.app.Notification,int) -> getAction
    161:164:int getActionCount(android.app.Notification) -> getActionCount
    235:240:androidx.core.app.NotificationCompat$Action getActionFromBundle(android.os.Bundle) -> getActionFromBundle
    196:207:java.lang.Object[] getActionObjectsLocked(android.app.Notification) -> getActionObjectsLocked
    339:341:android.os.Bundle[] getBundleArrayFromBundle(android.os.Bundle,java.lang.String) -> getBundleArrayFromBundle
    254:271:android.os.Bundle getBundleForAction(androidx.core.app.NotificationCompat$Action) -> getBundleForAction
    90:118:android.os.Bundle getExtras(android.app.Notification) -> getExtras
    123:134:androidx.core.app.NotificationCompat$Action readAction(int,java.lang.CharSequence,android.app.PendingIntent,android.os.Bundle) -> readAction
    293:308:android.os.Bundle toBundle(androidx.core.app.RemoteInput) -> toBundle
    323:330:android.os.Bundle[] toBundleArray(androidx.core.app.RemoteInput[]) -> toBundleArray
    141:157:android.os.Bundle writeActionAndGetExtras(android.app.Notification$Builder,androidx.core.app.NotificationCompat$Action) -> writeActionAndGetExtras
androidx.core.app.NotificationCompatSideChannelService -> androidx.core.app.NotificationCompatSideChannelService:
    45:45:void <init>() -> <init>
    114:119:void checkPermission(int,java.lang.String) -> checkPermission
    48:56:android.os.IBinder onBind(android.content.Intent) -> onBind
androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub -> androidx.core.app.NotificationCompatSideChannelService$NotificationSideChannelStub:
    75:76:void <init>(androidx.core.app.NotificationCompatSideChannelService) -> <init>
    92:98:void cancel(java.lang.String,int,java.lang.String) -> cancel
    103:109:void cancelAll(java.lang.String) -> cancelAll
    81:87:void notify(java.lang.String,int,java.lang.String,android.app.Notification) -> notify
androidx.core.app.NotificationManagerCompat -> androidx.core.app.NotificationManagerCompat:
    100:109:void <clinit>() -> <clinit>
    159:163:void <init>(android.content.Context) -> <init>
    223:241:boolean areNotificationsEnabled() -> areNotificationsEnabled
    170:171:void cancel(int) -> cancel
    179:183:void cancel(java.lang.String,int) -> cancel
    187:191:void cancelAll() -> cancelAll
    282:285:void createNotificationChannel(android.app.NotificationChannel) -> createNotificationChannel
    297:300:void createNotificationChannelGroup(android.app.NotificationChannelGroup) -> createNotificationChannelGroup
    325:328:void createNotificationChannelGroups(java.util.List) -> createNotificationChannelGroups
    311:314:void createNotificationChannels(java.util.List) -> createNotificationChannels
    340:343:void deleteNotificationChannel(java.lang.String) -> deleteNotificationChannel
    352:355:void deleteNotificationChannelGroup(java.lang.String) -> deleteNotificationChannelGroup
    156:156:androidx.core.app.NotificationManagerCompat from(android.content.Context) -> from
    420:439:java.util.Set getEnabledListenerPackages(android.content.Context) -> getEnabledListenerPackages
    254:257:int getImportance() -> getImportance
    364:367:android.app.NotificationChannel getNotificationChannel(java.lang.String) -> getNotificationChannel
    377:387:android.app.NotificationChannelGroup getNotificationChannelGroup(java.lang.String) -> getNotificationChannelGroup
    409:412:java.util.List getNotificationChannelGroups() -> getNotificationChannelGroups
    397:400:java.util.List getNotificationChannels() -> getNotificationChannels
    199:200:void notify(int,android.app.Notification) -> notify
    209:217:void notify(java.lang.String,int,android.app.Notification) -> notify
    454:459:void pushSideChannelQueue(androidx.core.app.NotificationManagerCompat$Task) -> pushSideChannelQueue
    446:447:boolean useSideChannelForNotification(android.app.Notification) -> useSideChannelForNotification
androidx.core.app.NotificationManagerCompat$CancelTask -> androidx.core.app.NotificationManagerCompat$CancelTask:
    783:788:void <init>(java.lang.String) -> <init>
    790:795:void <init>(java.lang.String,int,java.lang.String) -> <init>
    799:804:void send(android.support.v4.app.INotificationSideChannel) -> send
    809:815:java.lang.String toString() -> toString
androidx.core.app.NotificationManagerCompat$NotifyTask -> androidx.core.app.NotificationManagerCompat$NotifyTask:
    753:758:void <init>(java.lang.String,int,java.lang.String,android.app.Notification) -> <init>
    762:763:void send(android.support.v4.app.INotificationSideChannel) -> send
    768:773:java.lang.String toString() -> toString
androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent -> androidx.core.app.NotificationManagerCompat$ServiceConnectedEvent:
    737:740:void <init>(android.content.ComponentName,android.os.IBinder) -> <init>
androidx.core.app.NotificationManagerCompat$SideChannelManager -> androidx.core.app.NotificationManagerCompat$SideChannelManager:
    479:484:void <init>(android.content.Context) -> <init>
    619:631:boolean ensureServiceBound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceBound
    638:643:void ensureServiceUnbound(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> ensureServiceUnbound
    496:499:boolean handleMessage(android.os.Message) -> handleMessage
    515:520:void handleQueueTask(androidx.core.app.NotificationManagerCompat$Task) -> handleQueueTask
    539:543:void handleRetryListenerQueue(android.content.ComponentName) -> handleRetryListenerQueue
    523:529:void handleServiceConnected(android.content.ComponentName,android.os.IBinder) -> handleServiceConnected
    532:536:void handleServiceDisconnected(android.content.ComponentName) -> handleServiceDisconnected
    547:553:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    557:561:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    674:684:void processListenerQueue(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> processListenerQueue
    491:492:void queueTask(androidx.core.app.NotificationManagerCompat$Task) -> queueTask
    651:667:void scheduleListenerRetry(androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord) -> scheduleListenerRetry
    568:612:void updateListenerMap() -> updateListenerMap
androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord -> androidx.core.app.NotificationManagerCompat$SideChannelManager$ListenerRecord:
    726:728:void <init>(android.content.ComponentName) -> <init>
androidx.core.app.Person -> androidx.core.app.Person:
    115:122:void <init>(androidx.core.app.Person$Builder) -> <init>
    88:88:androidx.core.app.Person fromAndroidPerson(android.app.Person) -> fromAndroidPerson
    48:49:androidx.core.app.Person fromBundle(android.os.Bundle) -> fromBundle
    70:70:androidx.core.app.Person fromPersistableBundle(android.os.PersistableBundle) -> fromPersistableBundle
    197:197:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    224:224:java.lang.String getKey() -> getKey
    191:191:java.lang.CharSequence getName() -> getName
    215:215:java.lang.String getUri() -> getUri
    232:232:boolean isBot() -> isBot
    240:240:boolean isImportant() -> isImportant
    175:175:android.app.Person toAndroidPerson() -> toAndroidPerson
    163:163:androidx.core.app.Person$Builder toBuilder() -> toBuilder
    130:137:android.os.Bundle toBundle() -> toBundle
    151:157:android.os.PersistableBundle toPersistableBundle() -> toPersistableBundle
androidx.core.app.Person$Builder -> androidx.core.app.Person$Builder:
    253:253:void <init>() -> <init>
    255:262:void <init>(androidx.core.app.Person) -> <init>
    340:340:androidx.core.app.Person build() -> build
    321:322:androidx.core.app.Person$Builder setBot(boolean) -> setBot
    282:283:androidx.core.app.Person$Builder setIcon(androidx.core.graphics.drawable.IconCompat) -> setIcon
    333:334:androidx.core.app.Person$Builder setImportant(boolean) -> setImportant
    311:312:androidx.core.app.Person$Builder setKey(java.lang.String) -> setKey
    270:271:androidx.core.app.Person$Builder setName(java.lang.CharSequence) -> setName
    300:301:androidx.core.app.Person$Builder setUri(java.lang.String) -> setUri
androidx.core.app.RemoteActionCompat -> androidx.core.app.RemoteActionCompat:
    80:87:void <init>(androidx.core.graphics.drawable.IconCompat,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent) -> <init>
    94:94:void <init>() -> <init>
    99:107:void <init>(androidx.core.app.RemoteActionCompat) -> <init>
    115:123:androidx.core.app.RemoteActionCompat createFromRemoteAction(android.app.RemoteAction) -> createFromRemoteAction
    179:179:android.app.PendingIntent getActionIntent() -> getActionIntent
    172:172:java.lang.CharSequence getContentDescription() -> getContentDescription
    158:158:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    165:165:java.lang.CharSequence getTitle() -> getTitle
    137:137:boolean isEnabled() -> isEnabled
    130:131:void setEnabled(boolean) -> setEnabled
    144:145:void setShouldShowIcon(boolean) -> setShouldShowIcon
    151:151:boolean shouldShowIcon() -> shouldShowIcon
    190:196:android.app.RemoteAction toRemoteAction() -> toRemoteAction
androidx.core.app.RemoteActionCompatParcelizer -> androidx.core.app.RemoteActionCompatParcelizer:
    11:11:void <init>() -> <init>
    14:21:androidx.core.app.RemoteActionCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    26:33:void write(androidx.core.app.RemoteActionCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.app.RemoteInput -> androidx.core.app.RemoteInput:
    96:109:void <init>(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[],boolean,int,android.os.Bundle,java.util.Set) -> <init>
    466:489:void addDataResultToIntent(androidx.core.app.RemoteInput,android.content.Intent,java.util.Map) -> addDataResultToIntent
    402:454:void addResultsToIntent(androidx.core.app.RemoteInput[],android.content.Intent,android.os.Bundle) -> addResultsToIntent
    549:556:android.app.RemoteInput[] fromCompat(androidx.core.app.RemoteInput[]) -> fromCompat
    561:570:android.app.RemoteInput fromCompat(androidx.core.app.RemoteInput) -> fromCompat
    156:156:boolean getAllowFreeFormInput() -> getAllowFreeFormInput
    134:134:java.util.Set getAllowedDataTypes() -> getAllowedDataTypes
    130:130:java.lang.CharSequence[] getChoices() -> getChoices
    575:586:android.content.Intent getClipDataIntentFromIntent(android.content.Intent) -> getClipDataIntentFromIntent
    338:361:java.util.Map getDataResultsFromIntent(android.content.Intent,java.lang.String) -> getDataResultsFromIntent
    164:164:int getEditChoicesBeforeSending() -> getEditChoicesBeforeSending
    544:544:java.lang.String getExtraResultsKeyForData(java.lang.String) -> getExtraResultsKeyForData
    171:171:android.os.Bundle getExtras() -> getExtras
    123:123:java.lang.CharSequence getLabel() -> getLabel
    116:116:java.lang.String getResultKey() -> getResultKey
    376:383:android.os.Bundle getResultsFromIntent(android.content.Intent) -> getResultsFromIntent
    530:537:int getResultsSource(android.content.Intent) -> getResultsSource
    143:143:boolean isDataOnly() -> isDataOnly
    505:515:void setResultsSource(android.content.Intent,int) -> setResultsSource
androidx.core.app.RemoteInput$Builder -> androidx.core.app.RemoteInput$Builder:
    192:194:void <init>(java.lang.String) -> <init>
    287:290:androidx.core.app.RemoteInput$Builder addExtras(android.os.Bundle) -> addExtras
    309:309:androidx.core.app.RemoteInput build() -> build
    300:300:android.os.Bundle getExtras() -> getExtras
    241:246:androidx.core.app.RemoteInput$Builder setAllowDataType(java.lang.String,boolean) -> setAllowDataType
    261:262:androidx.core.app.RemoteInput$Builder setAllowFreeFormInput(boolean) -> setAllowFreeFormInput
    225:226:androidx.core.app.RemoteInput$Builder setChoices(java.lang.CharSequence[]) -> setChoices
    274:275:androidx.core.app.RemoteInput$Builder setEditChoicesBeforeSending(int) -> setEditChoicesBeforeSending
    207:208:androidx.core.app.RemoteInput$Builder setLabel(java.lang.CharSequence) -> setLabel
androidx.core.app.ServiceCompat -> androidx.core.app.ServiceCompat:
    37:39:void <init>() -> <init>
    98:103:void stopForeground(android.app.Service,int) -> stopForeground
androidx.core.app.ShareCompat -> androidx.core.app.ShareCompat:
    115:115:void <init>() -> <init>
    233:250:void configureMenuItem(android.view.MenuItem,androidx.core.app.ShareCompat$IntentBuilder) -> configureMenuItem
    262:264:void configureMenuItem(android.view.Menu,int,androidx.core.app.ShareCompat$IntentBuilder) -> configureMenuItem
    175:180:android.content.ComponentName getCallingActivity(android.app.Activity) -> getCallingActivity
    198:202:android.content.ComponentName getCallingActivity(android.content.Intent) -> getCallingActivity
    131:136:java.lang.String getCallingPackage(android.app.Activity) -> getCallingPackage
    154:158:java.lang.String getCallingPackage(android.content.Intent) -> getCallingPackage
androidx.core.app.ShareCompat$IntentBuilder -> androidx.core.app.ShareCompat$IntentBuilder:
    311:319:void <init>(android.content.Context,android.content.ComponentName) -> <init>
    658:662:androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String) -> addEmailBcc
    674:675:androidx.core.app.ShareCompat$IntentBuilder addEmailBcc(java.lang.String[]) -> addEmailBcc
    615:619:androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String) -> addEmailCc
    631:632:androidx.core.app.ShareCompat$IntentBuilder addEmailCc(java.lang.String[]) -> addEmailCc
    572:576:androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String) -> addEmailTo
    588:589:androidx.core.app.ShareCompat$IntentBuilder addEmailTo(java.lang.String[]) -> addEmailTo
    531:543:androidx.core.app.ShareCompat$IntentBuilder addStream(android.net.Uri) -> addStream
    381:389:void combineArrayExtra(java.lang.String,java.util.ArrayList) -> combineArrayExtra
    393:400:void combineArrayExtra(java.lang.String,java.lang.String[]) -> combineArrayExtra
    411:411:android.content.Intent createChooserIntent() -> createChooserIntent
    294:294:androidx.core.app.ShareCompat$IntentBuilder from(android.app.Activity) -> from
    307:307:androidx.core.app.ShareCompat$IntentBuilder from(android.content.Context,android.content.ComponentName) -> from
    377:377:android.content.Context getContext() -> getContext
    332:372:android.content.Intent getIntent() -> getIntent
    435:436:androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(java.lang.CharSequence) -> setChooserTitle
    447:447:androidx.core.app.ShareCompat$IntentBuilder setChooserTitle(int) -> setChooserTitle
    645:646:androidx.core.app.ShareCompat$IntentBuilder setEmailBcc(java.lang.String[]) -> setEmailBcc
    602:603:androidx.core.app.ShareCompat$IntentBuilder setEmailCc(java.lang.String[]) -> setEmailCc
    556:560:androidx.core.app.ShareCompat$IntentBuilder setEmailTo(java.lang.String[]) -> setEmailTo
    490:495:androidx.core.app.ShareCompat$IntentBuilder setHtmlText(java.lang.String) -> setHtmlText
    510:515:androidx.core.app.ShareCompat$IntentBuilder setStream(android.net.Uri) -> setStream
    687:688:androidx.core.app.ShareCompat$IntentBuilder setSubject(java.lang.String) -> setSubject
    473:474:androidx.core.app.ShareCompat$IntentBuilder setText(java.lang.CharSequence) -> setText
    459:460:androidx.core.app.ShareCompat$IntentBuilder setType(java.lang.String) -> setType
    424:425:void startChooser() -> startChooser
androidx.core.app.ShareCompat$IntentReader -> androidx.core.app.ShareCompat$IntentReader:
    744:749:void <init>(android.content.Context,android.content.Intent) -> <init>
    728:728:androidx.core.app.ShareCompat$IntentReader from(android.app.Activity) -> from
    741:741:androidx.core.app.ShareCompat$IntentReader from(android.content.Context,android.content.Intent) -> from
    1001:1001:android.content.ComponentName getCallingActivity() -> getCallingActivity
    1016:1024:android.graphics.drawable.Drawable getCallingActivityIcon() -> getCallingActivityIcon
    1039:1047:android.graphics.drawable.Drawable getCallingApplicationIcon() -> getCallingApplicationIcon
    1062:1070:java.lang.CharSequence getCallingApplicationLabel() -> getCallingApplicationLabel
    982:982:java.lang.String getCallingPackage() -> getCallingPackage
    952:952:java.lang.String[] getEmailBcc() -> getEmailBcc
    941:941:java.lang.String[] getEmailCc() -> getEmailCc
    930:930:java.lang.String[] getEmailTo() -> getEmailTo
    821:836:java.lang.String getHtmlText() -> getHtmlText
    878:878:android.net.Uri getStream() -> getStream
    892:901:android.net.Uri getStream(int) -> getStream
    913:919:int getStreamCount() -> getStreamCount
    963:963:java.lang.String getSubject() -> getSubject
    806:806:java.lang.CharSequence getText() -> getText
    795:795:java.lang.String getType() -> getType
    784:784:boolean isMultipleShare() -> isMultipleShare
    760:761:boolean isShareIntent() -> isShareIntent
    773:773:boolean isSingleShare() -> isSingleShare
    841:863:void withinStyle(java.lang.StringBuilder,java.lang.CharSequence,int,int) -> withinStyle
androidx.core.app.SharedElementCallback -> androidx.core.app.SharedElementCallback:
    42:42:void <init>() -> <init>
    214:217:android.graphics.Bitmap createDrawableBitmap(android.graphics.drawable.Drawable) -> createDrawableBitmap
    168:207:android.os.Parcelable onCaptureSharedElementSnapshot(android.view.View,android.graphics.Matrix,android.graphics.RectF) -> onCaptureSharedElementSnapshot
    257:280:android.view.View onCreateSnapshotView(android.content.Context,android.os.Parcelable) -> onCreateSnapshotView
    144:144:void onMapSharedElements(java.util.List,java.util.Map) -> onMapSharedElements
    133:133:void onRejectSharedElements(java.util.List) -> onRejectSharedElements
    109:109:void onSharedElementEnd(java.util.List,java.util.List,java.util.List) -> onSharedElementEnd
    78:78:void onSharedElementStart(java.util.List,java.util.List,java.util.List) -> onSharedElementStart
    301:302:void onSharedElementsArrived(java.util.List,java.util.List,androidx.core.app.SharedElementCallback$OnSharedElementsReadyListener) -> onSharedElementsArrived
androidx.core.app.TaskStackBuilder -> androidx.core.app.TaskStackBuilder:
    82:84:void <init>(android.content.Context) -> <init>
    121:122:androidx.core.app.TaskStackBuilder addNextIntent(android.content.Intent) -> addNextIntent
    139:147:androidx.core.app.TaskStackBuilder addNextIntentWithParentStack(android.content.Intent) -> addNextIntentWithParentStack
    159:177:androidx.core.app.TaskStackBuilder addParentStack(android.app.Activity) -> addParentStack
    189:189:androidx.core.app.TaskStackBuilder addParentStack(java.lang.Class) -> addParentStack
    201:210:androidx.core.app.TaskStackBuilder addParentStack(android.content.ComponentName) -> addParentStack
    95:95:androidx.core.app.TaskStackBuilder create(android.content.Context) -> create
    247:247:android.content.Intent editIntentAt(int) -> editIntentAt
    109:109:androidx.core.app.TaskStackBuilder from(android.content.Context) -> from
    234:234:android.content.Intent getIntent(int) -> getIntent
    219:219:int getIntentCount() -> getIntentCount
    357:365:android.content.Intent[] getIntents() -> getIntents
    312:312:android.app.PendingIntent getPendingIntent(int,int) -> getPendingIntent
    331:332:android.app.PendingIntent getPendingIntent(int,int,android.os.Bundle) -> getPendingIntent
    256:256:java.util.Iterator iterator() -> iterator
    268:269:void startActivities() -> startActivities
    283:284:void startActivities(android.os.Bundle) -> startActivities
androidx.core.content.ContentProviderCompat -> androidx.core.content.ContentProviderCompat:
    29:31:void <init>() -> <init>
    45:47:android.content.Context requireContext(android.content.ContentProvider) -> requireContext
androidx.core.content.ContentResolverCompat -> androidx.core.content.ContentResolverCompat:
    33:35:void <init>() -> <init>
    74:90:android.database.Cursor query(android.content.ContentResolver,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String,androidx.core.os.CancellationSignal) -> query
androidx.core.content.ContentValuesKt -> androidx.core.content.ContentValuesKt:
    26:45:android.content.ContentValues contentValuesOf(kotlin.Pair[]) -> contentValuesOf
androidx.core.content.ContextCompat -> androidx.core.content.ContextCompat:
    153:153:void <clinit>() -> <clinit>
    161:163:void <init>() -> <init>
    534:535:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
    636:639:android.content.Context createDeviceProtectedStorageContext(android.content.Context) -> createDeviceProtectedStorageContext
    590:589:java.io.File createFilesDir(java.io.File) -> createFilesDir
    581:585:java.io.File getCodeCacheDir(android.content.Context) -> getCodeCacheDir
    516:519:int getColor(android.content.Context,int) -> getColor
    493:496:android.content.res.ColorStateList getColorStateList(android.content.Context,int) -> getColorStateList
    274:278:java.io.File getDataDir(android.content.Context) -> getDataDir
    454:457:android.graphics.drawable.Drawable getDrawable(android.content.Context,int) -> getDrawable
    433:434:java.io.File[] getExternalCacheDirs(android.content.Context) -> getExternalCacheDirs
    380:381:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> getExternalFilesDirs
    663:666:java.util.concurrent.Executor getMainExecutor(android.content.Context) -> getMainExecutor
    557:561:java.io.File getNoBackupFilesDir(android.content.Context) -> getNoBackupFilesDir
    327:328:java.io.File[] getObbDirs(android.content.Context) -> getObbDirs
    715:720:java.lang.Object getSystemService(android.content.Context,java.lang.Class) -> getSystemService
    735:738:java.lang.String getSystemServiceName(android.content.Context,java.lang.Class) -> getSystemServiceName
    650:653:boolean isDeviceProtectedStorage(android.content.Context) -> isDeviceProtectedStorage
    191:191:boolean startActivities(android.content.Context,android.content.Intent[]) -> startActivities
    223:228:boolean startActivities(android.content.Context,android.content.Intent[],android.os.Bundle) -> startActivities
    250:255:void startActivity(android.content.Context,android.content.Intent,android.os.Bundle) -> startActivity
    695:701:void startForegroundService(android.content.Context,android.content.Intent) -> startForegroundService
androidx.core.content.ContextCompat$LegacyServiceMapHolder -> androidx.core.content.ContextCompat$LegacyServiceMapHolder:
    743:809:void <clinit>() -> <clinit>
    742:742:void <init>() -> <init>
androidx.core.content.ContextCompat$MainHandlerExecutor -> androidx.core.content.ContextCompat$MainHandlerExecutor:
    672:674:void <init>(android.os.Handler) -> <init>
    678:679:void execute(java.lang.Runnable) -> execute
androidx.core.content.ContextKt -> androidx.core.content.ContextKt:
    31:31:java.lang.Object getSystemService(android.content.Context) -> getSystemService
    59:60:void withStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1) -> withStyledAttributes
    76:77:void withStyledAttributes(android.content.Context,int,int[],kotlin.jvm.functions.Function1) -> withStyledAttributes
    53:56:void withStyledAttributes$default(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1,int,java.lang.Object) -> withStyledAttributes$default
    59:59:void withStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1) -> withStyledAttributes$default
    59:59:void withStyledAttributes$default(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1,int,java.lang.Object):79 -> withStyledAttributes$default
    60:60:void withStyledAttributes(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1) -> withStyledAttributes$default
    60:60:void withStyledAttributes$default(android.content.Context,android.util.AttributeSet,int[],int,int,kotlin.jvm.functions.Function1,int,java.lang.Object):80 -> withStyledAttributes$default
androidx.core.content.FileProvider -> androidx.core.content.FileProvider:
    340:360:void <clinit>() -> <clinit>
    339:339:void <init>() -> <init>
    382:386:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    819:825:java.io.File buildPath(java.io.File,java.lang.String[]) -> buildPath
    829:831:java.lang.String[] copyOf(java.lang.String[],int) -> copyOf
    835:837:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    541:542:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    575:589:androidx.core.content.FileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> getPathStrategy
    493:504:java.lang.String getType(android.net.Uri) -> getType
    417:418:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> getUriForFile
    513:513:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    795:815:int modeToMode(java.lang.String) -> modeToMode
    370:370:boolean onCreate() -> onCreate
    564:566:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    601:606:androidx.core.content.FileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> parsePathStrategy
    454:478:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    523:523:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
androidx.core.content.FileProvider$SimplePathStrategy -> androidx.core.content.FileProvider$SimplePathStrategy:
    700:702:void <init>(java.lang.String) -> <init>
    709:710:void addRoot(java.lang.String,java.io.File) -> addRoot
    764:772:java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    728:730:android.net.Uri getUriForFile(java.io.File) -> getUriForFile
androidx.core.content.IntentCompat -> androidx.core.content.IntentCompat:
    28:30:void <init>() -> <init>
    77:78:android.content.Intent makeMainSelectorActivity(java.lang.String,java.lang.String) -> makeMainSelectorActivity
androidx.core.content.MimeTypeFilter -> androidx.core.content.MimeTypeFilter:
    43:44:void <init>() -> <init>
    76:83:boolean matches(java.lang.String,java.lang.String) -> matches
    93:105:java.lang.String matches(java.lang.String,java.lang.String[]) -> matches
    115:127:java.lang.String matches(java.lang.String[],java.lang.String) -> matches
    137:150:java.lang.String[] matchesMany(java.lang.String[],java.lang.String) -> matchesMany
    48:49:boolean mimeTypeAgainstFilter(java.lang.String[],java.lang.String[]) -> mimeTypeAgainstFilter
androidx.core.content.PermissionChecker -> androidx.core.content.PermissionChecker:
    77:79:void <init>() -> <init>
    171:173:int checkCallingOrSelfPermission(android.content.Context,java.lang.String) -> checkCallingOrSelfPermission
    152:155:int checkCallingPermission(android.content.Context,java.lang.String,java.lang.String) -> checkCallingPermission
    97:119:int checkPermission(android.content.Context,java.lang.String,int,int,java.lang.String) -> checkPermission
    134:134:int checkSelfPermission(android.content.Context,java.lang.String) -> checkSelfPermission
androidx.core.content.SharedPreferencesCompat -> androidx.core.content.SharedPreferencesCompat:
    84:84:void <init>() -> <init>
androidx.core.content.SharedPreferencesCompat$EditorCompat -> androidx.core.content.SharedPreferencesCompat$EditorCompat:
    57:59:void <init>() -> <init>
    80:81:void apply(android.content.SharedPreferences$Editor) -> apply
    66:69:androidx.core.content.SharedPreferencesCompat$EditorCompat getInstance() -> getInstance
androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper -> androidx.core.content.SharedPreferencesCompat$EditorCompat$Helper:
    40:41:void <init>() -> <init>
    45:52:void apply(android.content.SharedPreferences$Editor) -> apply
androidx.core.content.SharedPreferencesKt -> androidx.core.content.SharedPreferencesKt:
    43:50:void edit(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1) -> edit
    40:40:void edit$default(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> edit$default
    43:43:void edit(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1) -> edit$default
    43:43:void edit$default(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):52 -> edit$default
    44:44:void edit(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1) -> edit$default
    44:44:void edit$default(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):53 -> edit$default
    45:45:void edit(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1) -> edit$default
    45:45:void edit$default(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):54 -> edit$default
    46:46:void edit(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1) -> edit$default
    46:46:void edit$default(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):55 -> edit$default
    48:48:void edit(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1) -> edit$default
    48:48:void edit$default(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):57 -> edit$default
    49:49:void edit(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1) -> edit$default
    49:49:void edit$default(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):58 -> edit$default
    50:50:void edit(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1) -> edit$default
    50:50:void edit$default(android.content.SharedPreferences,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):59 -> edit$default
androidx.core.content.pm.ActivityInfoCompat -> androidx.core.content.pm.ActivityInfoCompat:
    27:29:void <init>() -> <init>
androidx.core.content.pm.PackageInfoCompat -> androidx.core.content.pm.PackageInfoCompat:
    41:42:void <init>() -> <init>
    35:38:long getLongVersionCode(android.content.pm.PackageInfo) -> getLongVersionCode
androidx.core.content.pm.PermissionInfoCompat -> androidx.core.content.pm.PermissionInfoCompat:
    34:35:void <init>() -> <init>
    74:77:int getProtection(android.content.pm.PermissionInfo) -> getProtection
    88:91:int getProtectionFlags(android.content.pm.PermissionInfo) -> getProtectionFlags
androidx.core.content.pm.ShortcutInfoCompat -> androidx.core.content.pm.ShortcutInfoCompat:
    72:72:void <init>() -> <init>
    136:155:android.content.Intent addToIntent(android.content.Intent) -> addToIntent
    123:132:android.os.PersistableBundle buildLegacyExtrasBundle() -> buildLegacyExtrasBundle
    181:181:android.content.ComponentName getActivity() -> getActivity
    243:243:java.util.Set getCategories() -> getCategories
    212:212:java.lang.CharSequence getDisabledMessage() -> getDisabledMessage
    260:260:androidx.core.graphics.drawable.IconCompat getIcon() -> getIcon
    167:167:java.lang.String getId() -> getId
    223:223:android.content.Intent getIntent() -> getIntent
    233:233:android.content.Intent[] getIntents() -> getIntents
    201:201:java.lang.CharSequence getLongLabel() -> getLongLabel
    291:292:boolean getLongLivedFromExtra(android.os.PersistableBundle) -> getLongLivedFromExtra
    271:272:androidx.core.app.Person[] getPersonsFromExtra(android.os.PersistableBundle) -> getPersonsFromExtra
    252:252:int getRank() -> getRank
    191:191:java.lang.CharSequence getShortLabel() -> getShortLabel
    79:114:android.content.pm.ShortcutInfo toShortcutInfo() -> toShortcutInfo
androidx.core.content.pm.ShortcutInfoCompat$Builder -> androidx.core.content.pm.ShortcutInfoCompat$Builder:
    304:308:void <init>(android.content.Context,java.lang.String) -> <init>
    314:333:void <init>(androidx.core.content.pm.ShortcutInfoCompat) -> <init>
    340:353:void <init>(android.content.Context,android.content.pm.ShortcutInfo) -> <init>
    535:536:androidx.core.content.pm.ShortcutInfoCompat build() -> build
    440:441:androidx.core.content.pm.ShortcutInfoCompat$Builder setActivity(android.content.ComponentName) -> setActivity
    458:459:androidx.core.content.pm.ShortcutInfoCompat$Builder setAlwaysBadged() -> setAlwaysBadged
    492:493:androidx.core.content.pm.ShortcutInfoCompat$Builder setCategories(java.util.Set) -> setCategories
    392:393:androidx.core.content.pm.ShortcutInfoCompat$Builder setDisabledMessage(java.lang.CharSequence) -> setDisabledMessage
    427:428:androidx.core.content.pm.ShortcutInfoCompat$Builder setIcon(androidx.core.graphics.drawable.IconCompat) -> setIcon
    407:407:androidx.core.content.pm.ShortcutInfoCompat$Builder setIntent(android.content.Intent) -> setIntent
    418:419:androidx.core.content.pm.ShortcutInfoCompat$Builder setIntents(android.content.Intent[]) -> setIntents
    380:381:androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLabel(java.lang.CharSequence) -> setLongLabel
    502:503:androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLived() -> setLongLived
    513:514:androidx.core.content.pm.ShortcutInfoCompat$Builder setLongLived(boolean) -> setLongLived
    472:472:androidx.core.content.pm.ShortcutInfoCompat$Builder setPerson(androidx.core.app.Person) -> setPerson
    480:481:androidx.core.content.pm.ShortcutInfoCompat$Builder setPersons(androidx.core.app.Person[]) -> setPersons
    525:526:androidx.core.content.pm.ShortcutInfoCompat$Builder setRank(int) -> setRank
    366:367:androidx.core.content.pm.ShortcutInfoCompat$Builder setShortLabel(java.lang.CharSequence) -> setShortLabel
androidx.core.content.pm.ShortcutInfoCompatSaver -> androidx.core.content.pm.ShortcutInfoCompatSaver:
    36:36:void <init>() -> <init>
    48:48:java.util.List getShortcuts() -> getShortcuts
androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl -> androidx.core.content.pm.ShortcutInfoCompatSaver$NoopImpl:
    57:57:void <init>() -> <init>
    56:56:java.lang.Object addShortcuts(java.util.List) -> addShortcuts
    60:60:java.lang.Void addShortcuts(java.util.List) -> addShortcuts
    56:56:java.lang.Object removeAllShortcuts() -> removeAllShortcuts
    70:70:java.lang.Void removeAllShortcuts() -> removeAllShortcuts
    56:56:java.lang.Object removeShortcuts(java.util.List) -> removeShortcuts
    65:65:java.lang.Void removeShortcuts(java.util.List) -> removeShortcuts
androidx.core.content.pm.ShortcutManagerCompat -> androidx.core.content.pm.ShortcutManagerCompat:
    65:65:void <clinit>() -> <clinit>
    67:69:void <init>() -> <init>
    181:192:boolean addDynamicShortcuts(android.content.Context,java.util.List) -> addDynamicShortcuts
    156:164:android.content.Intent createShortcutResultIntent(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat) -> createShortcutResultIntent
    217:233:java.util.List getDynamicShortcuts(android.content.Context) -> getDynamicShortcuts
    200:205:int getMaxShortcutCountPerActivity(android.content.Context) -> getMaxShortcutCountPerActivity
    287:304:androidx.core.content.pm.ShortcutInfoCompatSaver getShortcutInfoSaverInstance(android.content.Context) -> getShortcutInfoSaverInstance
    76:91:boolean isRequestPinShortcutSupported(android.content.Context) -> isRequestPinShortcutSupported
    279:284:void removeAllDynamicShortcuts(android.content.Context) -> removeAllDynamicShortcuts
    268:273:void removeDynamicShortcuts(android.content.Context,java.util.List) -> removeDynamicShortcuts
    113:140:boolean requestPinShortcut(android.content.Context,androidx.core.content.pm.ShortcutInfoCompat,android.content.IntentSender) -> requestPinShortcut
    249:260:boolean updateShortcuts(android.content.Context,java.util.List) -> updateShortcuts
androidx.core.content.pm.ShortcutManagerCompat$1 -> androidx.core.content.pm.ShortcutManagerCompat$1:
    130:130:void <init>(android.content.IntentSender) -> <init>
    134:138:void onReceive(android.content.Context,android.content.Intent) -> onReceive
androidx.core.content.res.ColorStateListInflaterCompat -> androidx.core.content.res.ColorStateListInflaterCompat:
    49:50:void <init>() -> <init>
    86:95:android.content.res.ColorStateList createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    113:116:android.content.res.ColorStateList createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    65:70:android.content.res.ColorStateList inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    128:186:android.content.res.ColorStateList inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    198:199:int modulateColorAlpha(int,float) -> modulateColorAlpha
    191:191:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
androidx.core.content.res.ComplexColorCompat -> androidx.core.content.res.ComplexColorCompat:
    61:65:void <init>(android.graphics.Shader,android.content.res.ColorStateList,int) -> <init>
    152:160:androidx.core.content.res.ComplexColorCompat createFromXml(android.content.res.Resources,int,android.content.res.Resources$Theme) -> createFromXml
    68:68:androidx.core.content.res.ComplexColorCompat from(android.graphics.Shader) -> from
    72:72:androidx.core.content.res.ComplexColorCompat from(android.content.res.ColorStateList) -> from
    76:76:androidx.core.content.res.ComplexColorCompat from(int) -> from
    86:86:int getColor() -> getColor
    81:81:android.graphics.Shader getShader() -> getShader
    140:144:androidx.core.content.res.ComplexColorCompat inflate(android.content.res.Resources,int,android.content.res.Resources$Theme) -> inflate
    94:94:boolean isGradient() -> isGradient
    98:98:boolean isStateful() -> isStateful
    108:117:boolean onStateChanged(int[]) -> onStateChanged
    90:91:void setColor(int) -> setColor
    124:124:boolean willDraw() -> willDraw
androidx.core.content.res.ConfigurationHelper -> androidx.core.content.res.ConfigurationHelper:
    31:32:void <init>() -> <init>
    41:42:int getDensityDpi(android.content.res.Resources) -> getDensityDpi
androidx.core.content.res.FontResourcesParserCompat -> androidx.core.content.res.FontResourcesParserCompat:
    331:332:void <init>() -> <init>
    230:235:int getType(android.content.res.TypedArray,int) -> getType
    168:174:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry parse(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> parse
    246:271:java.util.List readCerts(android.content.res.Resources,int) -> readCerts
    181:187:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamilies(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamilies
    193:225:androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry readFamily(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFamily
    285:313:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry readFont(org.xmlpull.v1.XmlPullParser,android.content.res.Resources) -> readFont
    318:329:void skip(org.xmlpull.v1.XmlPullParser) -> skip
    276:280:java.util.List toByteArrayList(java.lang.String[]) -> toByteArrayList
androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry:
    153:155:void <init>(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[]) -> <init>
    158:158:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry[] getEntries() -> getEntries
androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry:
    113:120:void <init>(java.lang.String,int,boolean,java.lang.String,int,int) -> <init>
    123:123:java.lang.String getFileName() -> getFileName
    143:143:int getResourceId() -> getResourceId
    139:139:int getTtcIndex() -> getTtcIndex
    135:135:java.lang.String getVariationSettings() -> getVariationSettings
    127:127:int getWeight() -> getWeight
    131:131:boolean isItalic() -> isItalic
androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry -> androidx.core.content.res.FontResourcesParserCompat$ProviderResourceEntry:
    82:86:void <init>(androidx.core.provider.FontRequest,int,int) -> <init>
    93:93:int getFetchStrategy() -> getFetchStrategy
    89:89:androidx.core.provider.FontRequest getRequest() -> getRequest
    97:97:int getTimeout() -> getTimeout
androidx.core.content.res.GradientColorInflaterCompat -> androidx.core.content.res.GradientColorInflaterCompat:
    66:67:void <init>() -> <init>
    192:197:androidx.core.content.res.GradientColorInflaterCompat$ColorStops checkColors(androidx.core.content.res.GradientColorInflaterCompat$ColorStops,int,int,boolean,int) -> checkColors
    71:80:android.graphics.Shader createFromXml(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> createFromXml
    90:93:android.graphics.Shader createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    150:186:androidx.core.content.res.GradientColorInflaterCompat$ColorStops inflateChildElements(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateChildElements
    202:204:android.graphics.Shader$TileMode parseTileMode(int) -> parseTileMode
androidx.core.content.res.GradientColorInflaterCompat$ColorStops -> androidx.core.content.res.GradientColorInflaterCompat$ColorStops:
    217:225:void <init>(java.util.List,java.util.List) -> <init>
    227:230:void <init>(int,int) -> <init>
    232:235:void <init>(int,int,int) -> <init>
androidx.core.content.res.GrowingArrayUtils -> androidx.core.content.res.GrowingArrayUtils:
    179:179:void <init>() -> <init>
    42:49:java.lang.Object[] append(java.lang.Object[],int,java.lang.Object) -> append
    56:62:int[] append(int[],int,int) -> append
    69:75:long[] append(long[],int,long) -> append
    82:88:boolean[] append(boolean[],int,boolean) -> append
    175:175:int growSize(int) -> growSize
    104:115:java.lang.Object[] insert(java.lang.Object[],int,int,java.lang.Object) -> insert
    122:132:int[] insert(int[],int,int,int) -> insert
    139:149:long[] insert(long[],int,int,long) -> insert
    156:166:boolean[] insert(boolean[],int,int,boolean) -> insert
androidx.core.content.res.ResourcesCompat -> androidx.core.content.res.ResourcesCompat:
    452:452:void <init>() -> <init>
    156:159:int getColor(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColor
    186:189:android.content.res.ColorStateList getColorStateList(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getColorStateList
    93:96:android.graphics.drawable.Drawable getDrawable(android.content.res.Resources,int,android.content.res.Resources$Theme) -> getDrawable
    126:129:android.graphics.drawable.Drawable getDrawableForDensity(android.content.res.Resources,int,int,android.content.res.Resources$Theme) -> getDrawableForDensity
    206:212:float getFloat(android.content.res.Resources,int) -> getFloat
    238:241:android.graphics.Typeface getFont(android.content.Context,int) -> getFont
    329:337:void getFont(android.content.Context,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> getFont
    347:350:android.graphics.Typeface getFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback) -> getFont
    370:378:android.graphics.Typeface loadFont(android.content.Context,int,android.util.TypedValue,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> loadFont
    390:392:android.graphics.Typeface loadFont(android.content.Context,android.content.res.Resources,android.util.TypedValue,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> loadFont
androidx.core.content.res.ResourcesCompat$FontCallback -> androidx.core.content.res.ResourcesCompat$FontCallback:
    248:248:void <init>() -> <init>
    297:306:void callbackFailAsync(int,android.os.Handler) -> callbackFailAsync
    278:287:void callbackSuccessAsync(android.graphics.Typeface,android.os.Handler) -> callbackSuccessAsync
androidx.core.content.res.ResourcesCompat$FontCallback$1 -> androidx.core.content.res.ResourcesCompat$FontCallback$1:
    281:281:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.graphics.Typeface) -> <init>
    284:285:void run() -> run
androidx.core.content.res.ResourcesCompat$FontCallback$2 -> androidx.core.content.res.ResourcesCompat$FontCallback$2:
    300:300:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,int) -> <init>
    303:304:void run() -> run
androidx.core.content.res.ResourcesCompat$ThemeCompat -> androidx.core.content.res.ResourcesCompat$ThemeCompat:
    458:458:void <init>() -> <init>
    474:479:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23 -> androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi23:
    492:492:void <clinit>() -> <clinit>
    491:491:void <init>() -> <init>
    498:516:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29 -> androidx.core.content.res.ResourcesCompat$ThemeCompat$ImplApi29:
    483:483:void <init>() -> <init>
    485:486:void rebase(android.content.res.Resources$Theme) -> rebase
androidx.core.content.res.TypedArrayKt -> androidx.core.content.res.TypedArrayKt:
    30:31:void checkAttribute(android.content.res.TypedArray,int) -> checkAttribute
    43:44:boolean getBooleanOrThrow(android.content.res.TypedArray,int) -> getBooleanOrThrow
    56:57:int getColorOrThrow(android.content.res.TypedArray,int) -> getColorOrThrow
    68:69:android.content.res.ColorStateList getColorStateListOrThrow(android.content.res.TypedArray,int) -> getColorStateListOrThrow
    82:83:float getDimensionOrThrow(android.content.res.TypedArray,int) -> getDimensionOrThrow
    95:96:int getDimensionPixelOffsetOrThrow(android.content.res.TypedArray,int) -> getDimensionPixelOffsetOrThrow
    108:109:int getDimensionPixelSizeOrThrow(android.content.res.TypedArray,int) -> getDimensionPixelSizeOrThrow
    120:121:android.graphics.drawable.Drawable getDrawableOrThrow(android.content.res.TypedArray,int) -> getDrawableOrThrow
    132:133:float getFloatOrThrow(android.content.res.TypedArray,int) -> getFloatOrThrow
    145:146:android.graphics.Typeface getFontOrThrow(android.content.res.TypedArray,int) -> getFontOrThrow
    157:158:int getIntOrThrow(android.content.res.TypedArray,int) -> getIntOrThrow
    169:170:int getIntegerOrThrow(android.content.res.TypedArray,int) -> getIntegerOrThrow
    182:183:int getResourceIdOrThrow(android.content.res.TypedArray,int) -> getResourceIdOrThrow
    194:195:java.lang.String getStringOrThrow(android.content.res.TypedArray,int) -> getStringOrThrow
    222:223:java.lang.CharSequence[] getTextArrayOrThrow(android.content.res.TypedArray,int) -> getTextArrayOrThrow
    208:209:java.lang.CharSequence getTextOrThrow(android.content.res.TypedArray,int) -> getTextOrThrow
    232:232:java.lang.Object use(android.content.res.TypedArray,kotlin.jvm.functions.Function1) -> use
androidx.core.content.res.TypedArrayUtils -> androidx.core.content.res.TypedArrayUtils:
    362:363:void <init>() -> <init>
    354:359:int getAttr(android.content.Context,int,int) -> getAttr
    264:265:boolean getBoolean(android.content.res.TypedArray,int,int,boolean) -> getBoolean
    275:279:android.graphics.drawable.Drawable getDrawable(android.content.res.TypedArray,int,int) -> getDrawable
    288:289:int getInt(android.content.res.TypedArray,int,int,int) -> getInt
    87:91:boolean getNamedBoolean(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,boolean) -> getNamedBoolean
    122:126:int getNamedColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedColor
    168:182:android.content.res.ColorStateList getNamedColorStateList(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int) -> getNamedColorStateList
    190:190:android.content.res.ColorStateList getNamedColorStateListFromInt(android.util.TypedValue) -> getNamedColorStateListFromInt
    140:154:androidx.core.content.res.ComplexColorCompat getNamedComplexColor(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme,java.lang.String,int,int) -> getNamedComplexColor
    70:74:float getNamedFloat(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,float) -> getNamedFloat
    104:108:int getNamedInt(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedInt
    203:207:int getNamedResourceId(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int,int) -> getNamedResourceId
    221:225:java.lang.String getNamedString(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> getNamedString
    299:300:int getResourceId(android.content.res.TypedArray,int,int,int) -> getResourceId
    310:314:java.lang.String getString(android.content.res.TypedArray,int,int) -> getString
    326:330:java.lang.CharSequence getText(android.content.res.TypedArray,int,int) -> getText
    342:346:java.lang.CharSequence[] getTextArray(android.content.res.TypedArray,int,int) -> getTextArray
    58:58:boolean hasAttribute(org.xmlpull.v1.XmlPullParser,java.lang.String) -> hasAttribute
    252:255:android.content.res.TypedArray obtainAttributes(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int[]) -> obtainAttributes
    237:241:android.util.TypedValue peekNamedValue(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> peekNamedValue
androidx.core.database.CursorKt -> androidx.core.database.CursorKt:
    32:32:byte[] getBlobOrNull(android.database.Cursor,int) -> getBlobOrNull
    43:43:java.lang.Double getDoubleOrNull(android.database.Cursor,int) -> getDoubleOrNull
    54:54:java.lang.Float getFloatOrNull(android.database.Cursor,int) -> getFloatOrNull
    65:65:java.lang.Integer getIntOrNull(android.database.Cursor,int) -> getIntOrNull
    76:76:java.lang.Long getLongOrNull(android.database.Cursor,int) -> getLongOrNull
    87:87:java.lang.Short getShortOrNull(android.database.Cursor,int) -> getShortOrNull
    98:98:java.lang.String getStringOrNull(android.database.Cursor,int) -> getStringOrNull
androidx.core.database.CursorWindowCompat -> androidx.core.database.CursorWindowCompat:
    30:32:void <init>() -> <init>
    42:45:android.database.CursorWindow create(java.lang.String,long) -> create
androidx.core.database.DatabaseUtilsCompat -> androidx.core.database.DatabaseUtilsCompat:
    29:31:void <init>() -> <init>
    60:61:java.lang.String[] appendSelectionArgs(java.lang.String[],java.lang.String[]) -> appendSelectionArgs
    41:48:java.lang.String concatenateWhere(java.lang.String,java.lang.String) -> concatenateWhere
androidx.core.database.sqlite.SQLiteCursorCompat -> androidx.core.database.sqlite.SQLiteCursorCompat:
    29:31:void <init>() -> <init>
    45:48:void setFillWindowForwardOnly(android.database.sqlite.SQLiteCursor,boolean) -> setFillWindowForwardOnly
androidx.core.database.sqlite.SQLiteDatabaseKt -> androidx.core.database.sqlite.SQLiteDatabaseKt:
    30:40:java.lang.Object transaction(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1) -> transaction
    27:27:java.lang.Object transaction$default(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object) -> transaction$default
    30:30:java.lang.Object transaction(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1) -> transaction$default
    30:30:java.lang.Object transaction$default(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):44 -> transaction$default
    31:31:java.lang.Object transaction(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1) -> transaction$default
    31:31:java.lang.Object transaction$default(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):45 -> transaction$default
    33:33:java.lang.Object transaction(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1) -> transaction$default
    33:33:java.lang.Object transaction$default(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):47 -> transaction$default
    34:34:java.lang.Object transaction(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1) -> transaction$default
    34:34:java.lang.Object transaction$default(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):48 -> transaction$default
    35:35:java.lang.Object transaction(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1) -> transaction$default
    35:35:java.lang.Object transaction$default(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):49 -> transaction$default
    36:36:java.lang.Object transaction(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1) -> transaction$default
    36:36:java.lang.Object transaction$default(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):50 -> transaction$default
    37:37:java.lang.Object transaction(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1) -> transaction$default
    37:37:java.lang.Object transaction$default(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):51 -> transaction$default
    38:38:java.lang.Object transaction(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1) -> transaction$default
    38:38:java.lang.Object transaction$default(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):52 -> transaction$default
    40:40:java.lang.Object transaction(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1) -> transaction$default
    40:40:java.lang.Object transaction$default(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):54 -> transaction$default
    41:41:java.lang.Object transaction(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1) -> transaction$default
    41:41:java.lang.Object transaction$default(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):55 -> transaction$default
    40:40:java.lang.Object transaction(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1) -> transaction$default
    40:40:java.lang.Object transaction$default(android.database.sqlite.SQLiteDatabase,boolean,kotlin.jvm.functions.Function1,int,java.lang.Object):54 -> transaction$default
androidx.core.graphics.BitmapCompat -> androidx.core.graphics.BitmapCompat:
    54:54:void <init>() -> <init>
    48:49:int getAllocationByteCount(android.graphics.Bitmap) -> getAllocationByteCount
    28:29:boolean hasMipMap(android.graphics.Bitmap) -> hasMipMap
    35:38:void setHasMipMap(android.graphics.Bitmap,boolean) -> setHasMipMap
androidx.core.graphics.BitmapKt -> androidx.core.graphics.BitmapKt:
    42:44:android.graphics.Bitmap applyCanvas(android.graphics.Bitmap,kotlin.jvm.functions.Function1) -> applyCanvas
    122:122:boolean contains(android.graphics.Bitmap,android.graphics.Point) -> contains
    129:129:boolean contains(android.graphics.Bitmap,android.graphics.PointF) -> contains
    90:90:android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config) -> createBitmap
    114:114:android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace) -> createBitmap
    88:88:android.graphics.Bitmap createBitmap$default(int,int,android.graphics.Bitmap$Config,int,java.lang.Object) -> createBitmap$default
    90:90:android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config) -> createBitmap$default
    90:90:android.graphics.Bitmap createBitmap$default(int,int,android.graphics.Bitmap$Config,int,java.lang.Object):132 -> createBitmap$default
    110:112:android.graphics.Bitmap createBitmap$default(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace,int,java.lang.Object) -> createBitmap$default
    114:114:android.graphics.Bitmap createBitmap(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace) -> createBitmap$default
    114:114:android.graphics.Bitmap createBitmap$default(int,int,android.graphics.Bitmap$Config,boolean,android.graphics.ColorSpace,int,java.lang.Object):133 -> createBitmap$default
    51:51:int get(android.graphics.Bitmap,int,int) -> get
    72:72:android.graphics.Bitmap scale(android.graphics.Bitmap,int,int,boolean) -> scale
    71:71:android.graphics.Bitmap scale$default(android.graphics.Bitmap,int,int,boolean,int,java.lang.Object) -> scale$default
    72:72:android.graphics.Bitmap scale(android.graphics.Bitmap,int,int,boolean) -> scale$default
    72:72:android.graphics.Bitmap scale$default(android.graphics.Bitmap,int,int,boolean,int,java.lang.Object):131 -> scale$default
    58:58:void set(android.graphics.Bitmap,int,int,int) -> set
androidx.core.graphics.BlendModeColorFilterCompat -> androidx.core.graphics.BlendModeColorFilterCompat:
    54:54:void <init>() -> <init>
    42:49:android.graphics.ColorFilter createBlendModeColorFilterCompat(int,androidx.core.graphics.BlendModeCompat) -> createBlendModeColorFilterCompat
androidx.core.graphics.BlendModeCompat -> androidx.core.graphics.BlendModeCompat:
    37:27:void <clinit>() -> <clinit>
    27:27:void <init>(java.lang.String,int) -> <init>
    27:27:androidx.core.graphics.BlendModeCompat valueOf(java.lang.String) -> valueOf
    27:27:androidx.core.graphics.BlendModeCompat[] values() -> values
androidx.core.graphics.BlendModeUtils -> androidx.core.graphics.BlendModeUtils:
    148:148:void <init>() -> <init>
    35:37:android.graphics.BlendMode obtainBlendModeFromCompat(androidx.core.graphics.BlendModeCompat) -> obtainBlendModeFromCompat
    101:144:android.graphics.PorterDuff$Mode obtainPorterDuffFromCompat(androidx.core.graphics.BlendModeCompat) -> obtainPorterDuffFromCompat
androidx.core.graphics.BlendModeUtils$1 -> androidx.core.graphics.BlendModeUtils$1:
    35:35:void <clinit>() -> <clinit>
androidx.core.graphics.CanvasKt -> androidx.core.graphics.CanvasKt:
    138:143:void withClip(android.graphics.Canvas,android.graphics.Rect,kotlin.jvm.functions.Function1) -> withClip
    155:160:void withClip(android.graphics.Canvas,android.graphics.RectF,kotlin.jvm.functions.Function1) -> withClip
    175:180:void withClip(android.graphics.Canvas,int,int,int,int,kotlin.jvm.functions.Function1) -> withClip
    195:200:void withClip(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1) -> withClip
    212:217:void withClip(android.graphics.Canvas,android.graphics.Path,kotlin.jvm.functions.Function1) -> withClip
    121:126:void withMatrix(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1) -> withMatrix
    118:118:void withMatrix$default(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1,int,java.lang.Object) -> withMatrix$default
    121:121:void withMatrix(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1) -> withMatrix$default
    121:121:void withMatrix$default(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1,int,java.lang.Object):262 -> withMatrix$default
    122:122:void withMatrix(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1) -> withMatrix$default
    122:122:void withMatrix$default(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1,int,java.lang.Object):263 -> withMatrix$default
    123:123:void withMatrix(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1) -> withMatrix$default
    123:123:void withMatrix$default(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1,int,java.lang.Object):264 -> withMatrix$default
    124:124:void withMatrix(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1) -> withMatrix$default
    124:124:void withMatrix$default(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1,int,java.lang.Object):265 -> withMatrix$default
    126:126:void withMatrix(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1) -> withMatrix$default
    126:126:void withMatrix$default(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1,int,java.lang.Object):267 -> withMatrix$default
    127:127:void withMatrix(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1) -> withMatrix$default
    127:127:void withMatrix$default(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1,int,java.lang.Object):268 -> withMatrix$default
    128:128:void withMatrix(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1) -> withMatrix$default
    128:128:void withMatrix$default(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1,int,java.lang.Object):269 -> withMatrix$default
    127:127:void withMatrix(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1) -> withMatrix$default
    127:127:void withMatrix$default(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1,int,java.lang.Object):268 -> withMatrix$default
    126:126:void withMatrix(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1) -> withMatrix$default
    126:126:void withMatrix$default(android.graphics.Canvas,android.graphics.Matrix,kotlin.jvm.functions.Function1,int,java.lang.Object):267 -> withMatrix$default
    66:71:void withRotation(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1) -> withRotation
    61:63:void withRotation$default(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object) -> withRotation$default
    66:66:void withRotation(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1) -> withRotation$default
    66:66:void withRotation$default(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):229 -> withRotation$default
    67:67:void withRotation(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1) -> withRotation$default
    67:67:void withRotation$default(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):230 -> withRotation$default
    68:68:void withRotation(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1) -> withRotation$default
    68:68:void withRotation$default(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):231 -> withRotation$default
    69:69:void withRotation(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1) -> withRotation$default
    69:69:void withRotation$default(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):232 -> withRotation$default
    71:71:void withRotation(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1) -> withRotation$default
    71:71:void withRotation$default(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):234 -> withRotation$default
    72:72:void withRotation(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1) -> withRotation$default
    72:72:void withRotation$default(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):235 -> withRotation$default
    73:73:void withRotation(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1) -> withRotation$default
    73:73:void withRotation$default(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):236 -> withRotation$default
    72:72:void withRotation(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1) -> withRotation$default
    72:72:void withRotation$default(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):235 -> withRotation$default
    71:71:void withRotation(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1) -> withRotation$default
    71:71:void withRotation$default(android.graphics.Canvas,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):234 -> withRotation$default
    30:34:void withSave(android.graphics.Canvas,kotlin.jvm.functions.Function1) -> withSave
    86:91:void withScale(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1) -> withScale
    80:83:void withScale$default(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object) -> withScale$default
    86:86:void withScale(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1) -> withScale$default
    86:86:void withScale$default(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):237 -> withScale$default
    87:87:void withScale(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1) -> withScale$default
    87:87:void withScale$default(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):238 -> withScale$default
    88:88:void withScale(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1) -> withScale$default
    88:88:void withScale$default(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):239 -> withScale$default
    89:89:void withScale(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1) -> withScale$default
    89:89:void withScale$default(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):240 -> withScale$default
    91:91:void withScale(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1) -> withScale$default
    91:91:void withScale$default(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):242 -> withScale$default
    92:92:void withScale(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1) -> withScale$default
    92:92:void withScale$default(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):243 -> withScale$default
    93:93:void withScale(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1) -> withScale$default
    93:93:void withScale$default(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):244 -> withScale$default
    92:92:void withScale(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1) -> withScale$default
    92:92:void withScale$default(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):243 -> withScale$default
    91:91:void withScale(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1) -> withScale$default
    91:91:void withScale$default(android.graphics.Canvas,float,float,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):242 -> withScale$default
    104:109:void withSkew(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withSkew
    100:101:void withSkew$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object) -> withSkew$default
    104:104:void withSkew(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withSkew$default
    104:104:void withSkew$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):245 -> withSkew$default
    105:105:void withSkew(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withSkew$default
    105:105:void withSkew$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):246 -> withSkew$default
    106:106:void withSkew(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withSkew$default
    106:106:void withSkew$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):247 -> withSkew$default
    107:107:void withSkew(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withSkew$default
    107:107:void withSkew$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):248 -> withSkew$default
    109:109:void withSkew(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withSkew$default
    109:109:void withSkew$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):250 -> withSkew$default
    110:110:void withSkew(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withSkew$default
    110:110:void withSkew$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):251 -> withSkew$default
    111:111:void withSkew(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withSkew$default
    111:111:void withSkew$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):252 -> withSkew$default
    110:110:void withSkew(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withSkew$default
    110:110:void withSkew$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):251 -> withSkew$default
    109:109:void withSkew(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withSkew$default
    109:109:void withSkew$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):250 -> withSkew$default
    47:52:void withTranslation(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withTranslation
    43:44:void withTranslation$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object) -> withTranslation$default
    47:47:void withTranslation(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withTranslation$default
    47:47:void withTranslation$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):221 -> withTranslation$default
    48:48:void withTranslation(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withTranslation$default
    48:48:void withTranslation$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):222 -> withTranslation$default
    49:49:void withTranslation(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withTranslation$default
    49:49:void withTranslation$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):223 -> withTranslation$default
    50:50:void withTranslation(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withTranslation$default
    50:50:void withTranslation$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):224 -> withTranslation$default
    52:52:void withTranslation(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withTranslation$default
    52:52:void withTranslation$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):226 -> withTranslation$default
    53:53:void withTranslation(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withTranslation$default
    53:53:void withTranslation$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):227 -> withTranslation$default
    54:54:void withTranslation(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withTranslation$default
    54:54:void withTranslation$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):228 -> withTranslation$default
    53:53:void withTranslation(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withTranslation$default
    53:53:void withTranslation$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):227 -> withTranslation$default
    52:52:void withTranslation(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1) -> withTranslation$default
    52:52:void withTranslation$default(android.graphics.Canvas,float,float,kotlin.jvm.functions.Function1,int,java.lang.Object):226 -> withTranslation$default
androidx.core.graphics.ColorKt -> androidx.core.graphics.ColorKt:
    39:39:float component1(android.graphics.Color) -> component1
    149:149:int component1(int) -> component1
    228:228:float component1(long) -> component1
    53:53:float component2(android.graphics.Color) -> component2
    163:163:int component2(int) -> component2
    242:242:float component2(long) -> component2
    67:67:float component3(android.graphics.Color) -> component3
    177:177:int component3(int) -> component3
    256:256:float component3(long) -> component3
    81:81:float component4(android.graphics.Color) -> component4
    191:191:int component4(int) -> component4
    270:270:float component4(long) -> component4
    357:357:long convertTo(int,android.graphics.ColorSpace$Named) -> convertTo
    369:369:long convertTo(int,android.graphics.ColorSpace) -> convertTo
    381:381:long convertTo(long,android.graphics.ColorSpace$Named) -> convertTo
    393:393:long convertTo(long,android.graphics.ColorSpace) -> convertTo
    403:403:android.graphics.Color convertTo(android.graphics.Color,android.graphics.ColorSpace$Named) -> convertTo
    413:413:android.graphics.Color convertTo(android.graphics.Color,android.graphics.ColorSpace) -> convertTo
    111:111:int getAlpha(int) -> getAlpha
    279:279:float getAlpha(long) -> getAlpha
    135:135:int getBlue(int) -> getBlue
    306:306:float getBlue(long) -> getBlue
    345:345:android.graphics.ColorSpace getColorSpace(long) -> getColorSpace
    127:127:int getGreen(int) -> getGreen
    297:297:float getGreen(long) -> getGreen
    199:199:float getLuminance(int) -> getLuminance
    313:313:float getLuminance(long) -> getLuminance
    119:119:int getRed(int) -> getRed
    288:288:float getRed(long) -> getRed
    333:333:boolean isSrgb(long) -> isSrgb
    339:339:boolean isWideGamut(long) -> isWideGamut
    103:103:android.graphics.Color plus(android.graphics.Color,android.graphics.Color) -> plus
    206:206:android.graphics.Color toColor(int) -> toColor
    319:319:android.graphics.Color toColor(long) -> toColor
    326:326:int toColorInt(long) -> toColorInt
    432:432:int toColorInt(java.lang.String) -> toColorInt
    214:214:long toColorLong(int) -> toColorLong
androidx.core.graphics.ColorUtils -> androidx.core.graphics.ColorUtils:
    45:45:void <clinit>() -> <clinit>
    47:47:void <init>() -> <init>
    306:356:int HSLToColor(float[]) -> HSLToColor
    570:572:int LABToColor(double,double,double) -> LABToColor
    513:527:void LABToXYZ(double,double,double,double[]) -> LABToXYZ
    241:275:void RGBToHSL(int,int,int,float[]) -> RGBToHSL
    399:403:void RGBToLAB(int,int,int,double[]) -> RGBToLAB
    444:445:void RGBToXYZ(int,int,int,double[]) -> RGBToXYZ
    544:552:int XYZToColor(double,double,double) -> XYZToColor
    481:482:void XYZToLAB(double,double,double,double[]) -> XYZToLAB
    611:616:int blendARGB(int,int,float) -> blendARGB
    633:634:void blendHSL(float[],float[],float,float[]) -> blendHSL
    656:657:void blendLAB(double[],double[],double,double[]) -> blendLAB
    159:161:double calculateContrast(int,int) -> calculateContrast
    145:148:double calculateLuminance(int) -> calculateLuminance
    187:189:int calculateMinimumAlpha(int,int,float) -> calculateMinimumAlpha
    667:674:float circularInterpolate(float,float,float) -> circularInterpolate
    289:290:void colorToHSL(int,float[]) -> colorToHSL
    378:379:void colorToLAB(int,double[]) -> colorToLAB
    421:422:void colorToXYZ(int,double[]) -> colorToXYZ
    131:131:int compositeAlpha(int,int) -> compositeAlpha
    53:64:int compositeColors(int,int) -> compositeColors
    92:95:android.graphics.Color compositeColors(android.graphics.Color,android.graphics.Color) -> compositeColors
    135:136:int compositeComponent(int,int,int,int,int) -> compositeComponent
    585:585:float constrain(float,float,float) -> constrain
    589:589:int constrain(int,int,int) -> constrain
    579:579:double distanceEuclidean(double[],double[]) -> distanceEuclidean
    678:683:double[] getTempDouble3Array() -> getTempDouble3Array
    593:593:double pivotXyzComponent(double) -> pivotXyzComponent
    365:366:int setAlphaComponent(int,int) -> setAlphaComponent
androidx.core.graphics.ImageDecoderKt -> androidx.core.graphics.ImageDecoderKt:
    35:35:android.graphics.Bitmap decodeBitmap(android.graphics.ImageDecoder$Source,kotlin.jvm.functions.Function3) -> decodeBitmap
    49:49:android.graphics.drawable.Drawable decodeDrawable(android.graphics.ImageDecoder$Source,kotlin.jvm.functions.Function3) -> decodeDrawable
androidx.core.graphics.ImageDecoderKt$decodeBitmap$1 -> androidx.core.graphics.ImageDecoderKt$decodeBitmap$1:
    36:37:void onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source) -> onHeaderDecoded
androidx.core.graphics.ImageDecoderKt$decodeDrawable$1 -> androidx.core.graphics.ImageDecoderKt$decodeDrawable$1:
    50:51:void onHeaderDecoded(android.graphics.ImageDecoder,android.graphics.ImageDecoder$ImageInfo,android.graphics.ImageDecoder$Source) -> onHeaderDecoded
androidx.core.graphics.Insets -> androidx.core.graphics.Insets:
    36:36:void <clinit>() -> <clinit>
    43:48:void <init>(int,int,int,int) -> <init>
    89:90:boolean equals(java.lang.Object) -> equals
    104:108:int hashCode() -> hashCode
    63:66:androidx.core.graphics.Insets of(int,int,int,int) -> of
    77:77:androidx.core.graphics.Insets of(android.graphics.Rect) -> of
    136:136:androidx.core.graphics.Insets toCompatInsets(android.graphics.Insets) -> toCompatInsets
    146:146:android.graphics.Insets toPlatformInsets() -> toPlatformInsets
    113:113:java.lang.String toString() -> toString
    126:126:androidx.core.graphics.Insets wrap(android.graphics.Insets) -> wrap
androidx.core.graphics.MatrixKt -> androidx.core.graphics.MatrixKt:
    51:51:android.graphics.Matrix rotationMatrix(float,float,float) -> rotationMatrix
    50:50:android.graphics.Matrix rotationMatrix$default(float,float,float,int,java.lang.Object) -> rotationMatrix$default
    44:44:android.graphics.Matrix scaleMatrix$default(float,float,int,java.lang.Object) -> scaleMatrix
    44:44:android.graphics.Matrix scaleMatrix(float,float):44 -> scaleMatrix
    44:44:android.graphics.Matrix scaleMatrix$default(float,float,int,java.lang.Object) -> scaleMatrix$default
    27:27:android.graphics.Matrix times(android.graphics.Matrix,android.graphics.Matrix) -> times
    38:38:android.graphics.Matrix translationMatrix$default(float,float,int,java.lang.Object) -> translationMatrix
    38:38:android.graphics.Matrix translationMatrix(float,float):38 -> translationMatrix
    38:38:android.graphics.Matrix translationMatrix$default(float,float,int,java.lang.Object) -> translationMatrix$default
    32:32:float[] values(android.graphics.Matrix) -> values
androidx.core.graphics.PaintCompat -> androidx.core.graphics.PaintCompat:
    40:40:void <clinit>() -> <clinit>
    156:156:void <init>() -> <init>
    51:110:boolean hasGlyph(android.graphics.Paint,java.lang.String) -> hasGlyph
    145:153:androidx.core.util.Pair obtainEmptyRects() -> obtainEmptyRects
    126:140:boolean setBlendMode(android.graphics.Paint,androidx.core.graphics.BlendModeCompat) -> setBlendMode
androidx.core.graphics.PaintKt -> androidx.core.graphics.PaintKt:
    29:29:boolean setBlendMode(android.graphics.Paint,androidx.core.graphics.BlendModeCompat) -> setBlendMode
androidx.core.graphics.PathKt -> androidx.core.graphics.PathKt:
    68:68:android.graphics.Path and(android.graphics.Path,android.graphics.Path) -> and
    34:34:java.lang.Iterable flatten$default(android.graphics.Path,float,int,java.lang.Object) -> flatten
    34:34:java.lang.Iterable flatten(android.graphics.Path,float):34 -> flatten
    34:34:java.lang.Iterable flatten$default(android.graphics.Path,float,int,java.lang.Object) -> flatten$default
    51:51:android.graphics.Path minus(android.graphics.Path,android.graphics.Path) -> minus
    60:60:android.graphics.Path or(android.graphics.Path,android.graphics.Path) -> or
    41:41:android.graphics.Path plus(android.graphics.Path,android.graphics.Path) -> or
    41:41:android.graphics.Path or(android.graphics.Path,android.graphics.Path):83 -> or
    42:42:android.graphics.Path plus(android.graphics.Path,android.graphics.Path) -> or
    42:42:android.graphics.Path or(android.graphics.Path,android.graphics.Path):84 -> or
    43:43:android.graphics.Path plus(android.graphics.Path,android.graphics.Path) -> or
    43:43:android.graphics.Path or(android.graphics.Path,android.graphics.Path):85 -> or
    41:41:android.graphics.Path plus(android.graphics.Path,android.graphics.Path) -> or
    41:41:android.graphics.Path or(android.graphics.Path,android.graphics.Path):83 -> or
    60:60:android.graphics.Path or(android.graphics.Path,android.graphics.Path) -> or
    41:41:android.graphics.Path plus(android.graphics.Path,android.graphics.Path) -> plus
    78:78:android.graphics.Path xor(android.graphics.Path,android.graphics.Path) -> xor
androidx.core.graphics.PathParser -> androidx.core.graphics.PathParser:
    795:796:void <init>() -> <init>
    190:191:void addNode(java.util.ArrayList,char,float[]) -> addNode
    137:138:boolean canMorph(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> canMorph
    54:55:float[] copyOfRange(float[],int,int) -> copyOfRange
    91:112:androidx.core.graphics.PathParser$PathDataNode[] createNodesFromPathData(java.lang.String) -> createNodesFromPathData
    73:83:android.graphics.Path createPathFromPathData(java.lang.String) -> createPathFromPathData
    120:127:androidx.core.graphics.PathParser$PathDataNode[] deepCopyNodes(androidx.core.graphics.PathParser$PathDataNode[]) -> deepCopyNodes
    258:300:void extract(java.lang.String,int,androidx.core.graphics.PathParser$ExtractFloatResult) -> extract
    211:212:float[] getFloats(java.lang.String) -> getFloats
    315:316:boolean interpolatePathDataNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[],float) -> interpolatePathDataNodes
    174:186:int nextStart(java.lang.String,int) -> nextStart
    163:169:void updateNodes(androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> updateNodes
androidx.core.graphics.PathParser$ExtractFloatResult -> androidx.core.graphics.PathParser$ExtractFloatResult:
    199:200:void <init>() -> <init>
androidx.core.graphics.PathParser$PathDataNode -> androidx.core.graphics.PathParser$PathDataNode:
    352:355:void <init>(char,float[]) -> <init>
    357:360:void <init>(androidx.core.graphics.PathParser$PathDataNode) -> <init>
    398:643:void addCommand(android.graphics.Path,float[],char,char,float[]) -> addCommand
    750:792:void arcToBezier(android.graphics.Path,double,double,double,double,double,double,double,double,double) -> arcToBezier
    657:720:void drawArc(android.graphics.Path,float,float,float,float,float,float,float,boolean,boolean) -> drawArc
    388:393:void interpolatePathDataNode(androidx.core.graphics.PathParser$PathDataNode,androidx.core.graphics.PathParser$PathDataNode,float) -> interpolatePathDataNode
    369:375:void nodesToPath(androidx.core.graphics.PathParser$PathDataNode[],android.graphics.Path) -> nodesToPath
androidx.core.graphics.PathSegment -> androidx.core.graphics.PathSegment:
    37:42:void <init>(android.graphics.PointF,float,android.graphics.PointF,float) -> <init>
    72:75:boolean equals(java.lang.Object) -> equals
    60:60:android.graphics.PointF getEnd() -> getEnd
    67:67:float getEndFraction() -> getEndFraction
    47:47:android.graphics.PointF getStart() -> getStart
    54:54:float getStartFraction() -> getStartFraction
    83:87:int hashCode() -> hashCode
    92:92:java.lang.String toString() -> toString
androidx.core.graphics.PathUtils -> androidx.core.graphics.PathUtils:
    82:83:void <init>() -> <init>
    43:43:java.util.Collection flatten(android.graphics.Path) -> flatten
    60:79:java.util.Collection flatten(android.graphics.Path,float) -> flatten
androidx.core.graphics.PictureKt -> androidx.core.graphics.PictureKt:
    36:40:android.graphics.Picture record(android.graphics.Picture,int,int,kotlin.jvm.functions.Function1) -> record
androidx.core.graphics.PointKt -> androidx.core.graphics.PointKt:
    33:33:int component1(android.graphics.Point) -> component1
    55:55:float component1(android.graphics.PointF) -> component1
    44:44:int component2(android.graphics.Point) -> component2
    66:66:float component2(android.graphics.PointF) -> component2
    111:111:android.graphics.Point minus(android.graphics.Point,android.graphics.Point) -> minus
    121:121:android.graphics.PointF minus(android.graphics.PointF,android.graphics.PointF) -> minus
    131:131:android.graphics.Point minus(android.graphics.Point,int) -> minus
    141:141:android.graphics.PointF minus(android.graphics.PointF,float) -> minus
    72:72:android.graphics.Point plus(android.graphics.Point,android.graphics.Point) -> plus
    81:81:android.graphics.PointF plus(android.graphics.PointF,android.graphics.PointF) -> plus
    91:91:android.graphics.Point plus(android.graphics.Point,int) -> plus
    101:101:android.graphics.PointF plus(android.graphics.PointF,float) -> plus
    164:164:android.graphics.Point toPoint(android.graphics.PointF) -> toPoint
    159:159:android.graphics.PointF toPointF(android.graphics.Point) -> toPointF
    149:149:android.graphics.Point unaryMinus(android.graphics.Point) -> unaryMinus
    154:154:android.graphics.PointF unaryMinus(android.graphics.PointF) -> unaryMinus
androidx.core.graphics.PorterDuffKt -> androidx.core.graphics.PorterDuffKt:
    35:35:android.graphics.PorterDuffColorFilter toColorFilter(android.graphics.PorterDuff$Mode,int) -> toColorFilter
    29:29:android.graphics.PorterDuffXfermode toXfermode(android.graphics.PorterDuff$Mode) -> toXfermode
androidx.core.graphics.RectKt -> androidx.core.graphics.RectKt:
    282:282:android.graphics.Rect and(android.graphics.Rect,android.graphics.Rect) -> and
    294:294:android.graphics.RectF and(android.graphics.RectF,android.graphics.RectF) -> and
    38:38:int component1(android.graphics.Rect) -> component1
    82:82:float component1(android.graphics.RectF) -> component1
    49:49:int component2(android.graphics.Rect) -> component2
    93:93:float component2(android.graphics.RectF) -> component2
    60:60:int component3(android.graphics.Rect) -> component3
    104:104:float component3(android.graphics.RectF) -> component3
    71:71:int component4(android.graphics.Rect) -> component4
    115:115:float component4(android.graphics.RectF) -> component4
    324:324:boolean contains(android.graphics.Rect,android.graphics.Point) -> contains
    332:332:boolean contains(android.graphics.RectF,android.graphics.PointF) -> contains
    181:181:android.graphics.Region minus(android.graphics.Rect,android.graphics.Rect) -> minus
    191:191:android.graphics.Region minus(android.graphics.RectF,android.graphics.RectF) -> minus
    344:344:android.graphics.Rect toRect(android.graphics.RectF) -> minus
    344:344:android.graphics.Region minus(android.graphics.RectF,android.graphics.RectF):366 -> minus
    345:345:android.graphics.Rect toRect(android.graphics.RectF) -> minus
    345:345:android.graphics.Region minus(android.graphics.RectF,android.graphics.RectF):367 -> minus
    346:346:android.graphics.Rect toRect(android.graphics.RectF) -> minus
    346:346:android.graphics.Region minus(android.graphics.RectF,android.graphics.RectF):368 -> minus
    191:192:android.graphics.Region minus(android.graphics.RectF,android.graphics.RectF) -> minus
    344:344:android.graphics.Rect toRect(android.graphics.RectF) -> minus
    344:344:android.graphics.Region minus(android.graphics.RectF,android.graphics.RectF):369 -> minus
    345:345:android.graphics.Rect toRect(android.graphics.RectF) -> minus
    345:345:android.graphics.Region minus(android.graphics.RectF,android.graphics.RectF):370 -> minus
    346:346:android.graphics.Rect toRect(android.graphics.RectF) -> minus
    346:346:android.graphics.Region minus(android.graphics.RectF,android.graphics.RectF):371 -> minus
    192:191:android.graphics.Region minus(android.graphics.RectF,android.graphics.RectF) -> minus
    201:201:android.graphics.Rect minus(android.graphics.Rect,int) -> minus
    211:211:android.graphics.RectF minus(android.graphics.RectF,float) -> minus
    221:221:android.graphics.Rect minus(android.graphics.Rect,android.graphics.Point) -> minus
    231:231:android.graphics.RectF minus(android.graphics.RectF,android.graphics.PointF) -> minus
    268:268:android.graphics.Rect or(android.graphics.Rect,android.graphics.Rect) -> or
    122:122:android.graphics.Rect plus(android.graphics.Rect,android.graphics.Rect) -> or
    122:122:android.graphics.Rect or(android.graphics.Rect,android.graphics.Rect):378 -> or
    123:123:android.graphics.Rect plus(android.graphics.Rect,android.graphics.Rect) -> or
    123:123:android.graphics.Rect or(android.graphics.Rect,android.graphics.Rect):379 -> or
    124:124:android.graphics.Rect plus(android.graphics.Rect,android.graphics.Rect) -> or
    124:124:android.graphics.Rect or(android.graphics.Rect,android.graphics.Rect):380 -> or
    122:122:android.graphics.Rect plus(android.graphics.Rect,android.graphics.Rect) -> or
    122:122:android.graphics.Rect or(android.graphics.Rect,android.graphics.Rect):378 -> or
    268:268:android.graphics.Rect or(android.graphics.Rect,android.graphics.Rect) -> or
    273:273:android.graphics.RectF or(android.graphics.RectF,android.graphics.RectF) -> or
    132:132:android.graphics.RectF plus(android.graphics.RectF,android.graphics.RectF) -> or
    132:132:android.graphics.RectF or(android.graphics.RectF,android.graphics.RectF):381 -> or
    133:133:android.graphics.RectF plus(android.graphics.RectF,android.graphics.RectF) -> or
    133:133:android.graphics.RectF or(android.graphics.RectF,android.graphics.RectF):382 -> or
    134:134:android.graphics.RectF plus(android.graphics.RectF,android.graphics.RectF) -> or
    134:134:android.graphics.RectF or(android.graphics.RectF,android.graphics.RectF):383 -> or
    132:132:android.graphics.RectF plus(android.graphics.RectF,android.graphics.RectF) -> or
    132:132:android.graphics.RectF or(android.graphics.RectF,android.graphics.RectF):381 -> or
    273:273:android.graphics.RectF or(android.graphics.RectF,android.graphics.RectF) -> or
    122:122:android.graphics.Rect plus(android.graphics.Rect,android.graphics.Rect) -> plus
    132:132:android.graphics.RectF plus(android.graphics.RectF,android.graphics.RectF) -> plus
    142:142:android.graphics.Rect plus(android.graphics.Rect,int) -> plus
    152:152:android.graphics.RectF plus(android.graphics.RectF,float) -> plus
    162:162:android.graphics.Rect plus(android.graphics.Rect,android.graphics.Point) -> plus
    172:172:android.graphics.RectF plus(android.graphics.RectF,android.graphics.PointF) -> plus
    240:240:android.graphics.Rect times(android.graphics.Rect,int) -> times
    251:251:android.graphics.RectF times(android.graphics.RectF,int) -> times
    257:257:android.graphics.RectF times(android.graphics.RectF,float) -> times
    257:257:android.graphics.RectF times(android.graphics.RectF,int):372 -> times
    258:258:android.graphics.RectF times(android.graphics.RectF,float) -> times
    258:258:android.graphics.RectF times(android.graphics.RectF,int):373 -> times
    259:259:android.graphics.RectF times(android.graphics.RectF,float) -> times
    259:259:android.graphics.RectF times(android.graphics.RectF,int):374 -> times
    260:260:android.graphics.RectF times(android.graphics.RectF,float) -> times
    260:260:android.graphics.RectF times(android.graphics.RectF,int):375 -> times
    261:261:android.graphics.RectF times(android.graphics.RectF,float) -> times
    261:261:android.graphics.RectF times(android.graphics.RectF,int):376 -> times
    262:262:android.graphics.RectF times(android.graphics.RectF,float) -> times
    262:262:android.graphics.RectF times(android.graphics.RectF,int):377 -> times
    257:257:android.graphics.RectF times(android.graphics.RectF,float) -> times
    257:257:android.graphics.RectF times(android.graphics.RectF,int):372 -> times
    251:251:android.graphics.RectF times(android.graphics.RectF,int) -> times
    257:257:android.graphics.RectF times(android.graphics.RectF,float) -> times
    344:346:android.graphics.Rect toRect(android.graphics.RectF) -> toRect
    337:337:android.graphics.RectF toRectF(android.graphics.Rect) -> toRectF
    352:352:android.graphics.Region toRegion(android.graphics.Rect) -> toRegion
    358:358:android.graphics.Region toRegion(android.graphics.RectF) -> toRegion
    344:344:android.graphics.Rect toRect(android.graphics.RectF) -> toRegion
    344:344:android.graphics.Region toRegion(android.graphics.RectF):390 -> toRegion
    345:345:android.graphics.Rect toRect(android.graphics.RectF) -> toRegion
    345:345:android.graphics.Region toRegion(android.graphics.RectF):391 -> toRegion
    346:346:android.graphics.Rect toRect(android.graphics.RectF) -> toRegion
    346:346:android.graphics.Region toRegion(android.graphics.RectF):392 -> toRegion
    358:358:android.graphics.Region toRegion(android.graphics.RectF) -> toRegion
    364:364:android.graphics.RectF transform(android.graphics.RectF,android.graphics.Matrix) -> transform
    303:303:android.graphics.Region xor(android.graphics.Rect,android.graphics.Rect) -> xor
    313:313:android.graphics.Region xor(android.graphics.RectF,android.graphics.RectF) -> xor
    344:344:android.graphics.Rect toRect(android.graphics.RectF) -> xor
    344:344:android.graphics.Region xor(android.graphics.RectF,android.graphics.RectF):384 -> xor
    345:345:android.graphics.Rect toRect(android.graphics.RectF) -> xor
    345:345:android.graphics.Region xor(android.graphics.RectF,android.graphics.RectF):385 -> xor
    346:346:android.graphics.Rect toRect(android.graphics.RectF) -> xor
    346:346:android.graphics.Region xor(android.graphics.RectF,android.graphics.RectF):386 -> xor
    313:314:android.graphics.Region xor(android.graphics.RectF,android.graphics.RectF) -> xor
    344:344:android.graphics.Rect toRect(android.graphics.RectF) -> xor
    344:344:android.graphics.Region xor(android.graphics.RectF,android.graphics.RectF):387 -> xor
    345:345:android.graphics.Rect toRect(android.graphics.RectF) -> xor
    345:345:android.graphics.Region xor(android.graphics.RectF,android.graphics.RectF):388 -> xor
    346:346:android.graphics.Rect toRect(android.graphics.RectF) -> xor
    346:346:android.graphics.Region xor(android.graphics.RectF,android.graphics.RectF):389 -> xor
    314:313:android.graphics.Region xor(android.graphics.RectF,android.graphics.RectF) -> xor
androidx.core.graphics.RegionKt -> androidx.core.graphics.RegionKt:
    95:95:android.graphics.Region and(android.graphics.Region,android.graphics.Rect) -> and
    104:104:android.graphics.Region and(android.graphics.Region,android.graphics.Region) -> and
    29:29:boolean contains(android.graphics.Region,android.graphics.Point) -> contains
    131:132:void forEach(android.graphics.Region,kotlin.jvm.functions.Function1) -> forEach
    142:157:java.util.Iterator iterator(android.graphics.Region) -> iterator
    53:53:android.graphics.Region minus(android.graphics.Region,android.graphics.Rect) -> minus
    62:62:android.graphics.Region minus(android.graphics.Region,android.graphics.Region) -> minus
    79:79:android.graphics.Region not(android.graphics.Region) -> not
    71:71:android.graphics.Region unaryMinus(android.graphics.Region) -> not
    71:71:android.graphics.Region not(android.graphics.Region):159 -> not
    72:72:android.graphics.Region unaryMinus(android.graphics.Region) -> not
    72:72:android.graphics.Region not(android.graphics.Region):160 -> not
    73:73:android.graphics.Region unaryMinus(android.graphics.Region) -> not
    73:73:android.graphics.Region not(android.graphics.Region):161 -> not
    71:71:android.graphics.Region unaryMinus(android.graphics.Region) -> not
    71:71:android.graphics.Region not(android.graphics.Region):159 -> not
    79:79:android.graphics.Region not(android.graphics.Region) -> not
    84:84:android.graphics.Region or(android.graphics.Region,android.graphics.Rect) -> or
    35:35:android.graphics.Region plus(android.graphics.Region,android.graphics.Rect) -> or
    35:35:android.graphics.Region or(android.graphics.Region,android.graphics.Rect):162 -> or
    36:36:android.graphics.Region plus(android.graphics.Region,android.graphics.Rect) -> or
    36:36:android.graphics.Region or(android.graphics.Region,android.graphics.Rect):163 -> or
    37:37:android.graphics.Region plus(android.graphics.Region,android.graphics.Rect) -> or
    37:37:android.graphics.Region or(android.graphics.Region,android.graphics.Rect):164 -> or
    35:35:android.graphics.Region plus(android.graphics.Region,android.graphics.Rect) -> or
    35:35:android.graphics.Region or(android.graphics.Region,android.graphics.Rect):162 -> or
    84:84:android.graphics.Region or(android.graphics.Region,android.graphics.Rect) -> or
    89:89:android.graphics.Region or(android.graphics.Region,android.graphics.Region) -> or
    44:44:android.graphics.Region plus(android.graphics.Region,android.graphics.Region) -> or
    44:44:android.graphics.Region or(android.graphics.Region,android.graphics.Region):165 -> or
    45:45:android.graphics.Region plus(android.graphics.Region,android.graphics.Region) -> or
    45:45:android.graphics.Region or(android.graphics.Region,android.graphics.Region):166 -> or
    46:46:android.graphics.Region plus(android.graphics.Region,android.graphics.Region) -> or
    46:46:android.graphics.Region or(android.graphics.Region,android.graphics.Region):167 -> or
    44:44:android.graphics.Region plus(android.graphics.Region,android.graphics.Region) -> or
    44:44:android.graphics.Region or(android.graphics.Region,android.graphics.Region):165 -> or
    89:89:android.graphics.Region or(android.graphics.Region,android.graphics.Region) -> or
    35:35:android.graphics.Region plus(android.graphics.Region,android.graphics.Rect) -> plus
    44:44:android.graphics.Region plus(android.graphics.Region,android.graphics.Region) -> plus
    71:71:android.graphics.Region unaryMinus(android.graphics.Region) -> unaryMinus
    114:114:android.graphics.Region xor(android.graphics.Region,android.graphics.Rect) -> xor
    124:124:android.graphics.Region xor(android.graphics.Region,android.graphics.Region) -> xor
androidx.core.graphics.RegionKt$iterator$1 -> androidx.core.graphics.RegionKt$iterator$1:
    142:145:void <init>(android.graphics.Region) -> <init>
    147:147:boolean hasNext() -> hasNext
    142:142:java.lang.Object next() -> next
    150:155:android.graphics.Rect next() -> next
androidx.core.graphics.ShaderKt -> androidx.core.graphics.ShaderKt:
    26:30:void transform(android.graphics.Shader,kotlin.jvm.functions.Function1) -> transform
androidx.core.graphics.TypefaceCompat -> androidx.core.graphics.TypefaceCompat:
    48:67:void <clinit>() -> <clinit>
    69:69:void <init>() -> <init>
    194:195:android.graphics.Typeface create(android.content.Context,android.graphics.Typeface,int) -> create
    164:164:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    109:135:android.graphics.Typeface createFromResourcesFamilyXml(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FamilyResourceEntry,android.content.res.Resources,int,int,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean) -> createFromResourcesFamilyXml
    147:153:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    92:92:java.lang.String createResourceUid(android.content.res.Resources,int,int) -> createResourceUid
    80:80:android.graphics.Typeface findFromCache(android.content.res.Resources,int,int) -> findFromCache
    173:178:android.graphics.Typeface getBestFontFromFamily(android.content.Context,android.graphics.Typeface,int) -> getBestFontFromFamily
androidx.core.graphics.TypefaceCompatApi21Impl -> androidx.core.graphics.TypefaceCompatApi21Impl:
    65:65:void <clinit>() -> <clinit>
    54:54:void <init>() -> <init>
    136:142:boolean addFontWeightStyle(java.lang.Object,java.lang.String,int,boolean) -> addFontWeightStyle
    123:130:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    176:199:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    149:169:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    101:109:java.io.File getFile(android.os.ParcelFileDescriptor) -> getFile
    68:97:void init() -> init
    114:118:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi24Impl -> androidx.core.graphics.TypefaceCompatApi24Impl:
    69:88:void <clinit>() -> <clinit>
    51:51:void <init>() -> <init>
    112:116:boolean addFontWeightStyle(java.lang.Object,java.nio.ByteBuffer,int,int,boolean) -> addFontWeightStyle
    122:127:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    167:181:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    135:160:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    94:98:boolean isUsable() -> isUsable
    103:105:java.lang.Object newFamily() -> newFamily
androidx.core.graphics.TypefaceCompatApi26Impl -> androidx.core.graphics.TypefaceCompatApi26Impl:
    74:108:void <init>() -> <init>
    194:196:void abortCreation(java.lang.Object) -> abortCreation
    140:144:boolean addFontFromAssetManager(android.content.Context,java.lang.Object,java.lang.String,int,int,int,android.graphics.fonts.FontVariationAxis[]) -> addFontFromAssetManager
    155:158:boolean addFontFromBuffer(java.lang.Object,java.nio.ByteBuffer,int,int,int) -> addFontFromBuffer
    169:174:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    203:221:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    229:281:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    291:307:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    183:185:boolean freeze(java.lang.Object) -> freeze
    114:118:boolean isFontFamilyPrivateAPIAvailable() -> isFontFamilyPrivateAPIAvailable
    127:129:java.lang.Object newFamily() -> newFamily
    343:343:java.lang.reflect.Method obtainAbortCreationMethod(java.lang.Class) -> obtainAbortCreationMethod
    326:326:java.lang.reflect.Method obtainAddFontFromAssetManagerMethod(java.lang.Class) -> obtainAddFontFromAssetManagerMethod
    333:333:java.lang.reflect.Method obtainAddFontFromBufferMethod(java.lang.Class) -> obtainAddFontFromBufferMethod
    348:352:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
    316:316:java.lang.Class obtainFontFamily() -> obtainFontFamily
    321:321:java.lang.reflect.Constructor obtainFontFamilyCtor(java.lang.Class) -> obtainFontFamilyCtor
    339:339:java.lang.reflect.Method obtainFreezeMethod(java.lang.Class) -> obtainFreezeMethod
androidx.core.graphics.TypefaceCompatApi28Impl -> androidx.core.graphics.TypefaceCompatApi28Impl:
    36:36:void <init>() -> <init>
    49:54:android.graphics.Typeface createFromFamiliesWithDefault(java.lang.Object) -> createFromFamiliesWithDefault
    61:65:java.lang.reflect.Method obtainCreateFromFamiliesWithDefaultMethod(java.lang.Class) -> obtainCreateFromFamiliesWithDefaultMethod
androidx.core.graphics.TypefaceCompatApi29Impl -> androidx.core.graphics.TypefaceCompatApi29Impl:
    44:44:void <init>() -> <init>
    104:132:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    62:94:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    54:54:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    144:148:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    48:48:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
androidx.core.graphics.TypefaceCompatBaseImpl -> androidx.core.graphics.TypefaceCompatBaseImpl:
    45:52:void <init>() -> <init>
    219:223:void addFontFamily(android.graphics.Typeface,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry) -> addFontFamily
    169:178:android.graphics.Typeface createFromFontFamilyFilesResourceEntry(android.content.Context,androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,android.content.res.Resources,int) -> createFromFontFamilyFilesResourceEntry
    137:146:android.graphics.Typeface createFromFontInfo(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[],int) -> createFromFontInfo
    114:127:android.graphics.Typeface createFromInputStream(android.content.Context,java.io.InputStream) -> createFromInputStream
    187:200:android.graphics.Typeface createFromResourcesFontFile(android.content.Context,android.content.res.Resources,int,java.lang.String,int) -> createFromResourcesFontFile
    153:153:androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry findBestEntry(androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry,int) -> findBestEntry
    61:76:java.lang.Object findBestFont(java.lang.Object[],int,androidx.core.graphics.TypefaceCompatBaseImpl$StyleExtractor) -> findBestFont
    99:99:androidx.core.provider.FontsContractCompat$FontInfo findBestInfo(androidx.core.provider.FontsContractCompat$FontInfo[],int) -> findBestInfo
    211:215:androidx.core.content.res.FontResourcesParserCompat$FontFamilyFilesResourceEntry getFontFamily(android.graphics.Typeface) -> getFontFamily
    80:91:long getUniqueKey(android.graphics.Typeface) -> getUniqueKey
androidx.core.graphics.TypefaceCompatBaseImpl$1 -> androidx.core.graphics.TypefaceCompatBaseImpl$1:
    99:99:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    99:99:int getWeight(java.lang.Object) -> getWeight
    102:102:int getWeight(androidx.core.provider.FontsContractCompat$FontInfo) -> getWeight
    99:99:boolean isItalic(java.lang.Object) -> isItalic
    107:107:boolean isItalic(androidx.core.provider.FontsContractCompat$FontInfo) -> isItalic
androidx.core.graphics.TypefaceCompatBaseImpl$2 -> androidx.core.graphics.TypefaceCompatBaseImpl$2:
    153:153:void <init>(androidx.core.graphics.TypefaceCompatBaseImpl) -> <init>
    153:153:int getWeight(java.lang.Object) -> getWeight
    156:156:int getWeight(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> getWeight
    153:153:boolean isItalic(java.lang.Object) -> isItalic
    161:161:boolean isItalic(androidx.core.content.res.FontResourcesParserCompat$FontFileResourceEntry) -> isItalic
androidx.core.graphics.TypefaceCompatUtil -> androidx.core.graphics.TypefaceCompatUtil:
    52:52:void <init>() -> <init>
    175:181:void closeQuietly(java.io.Closeable) -> closeQuietly
    124:135:java.nio.ByteBuffer copyToDirectBuffer(android.content.Context,android.content.res.Resources,int) -> copyToDirectBuffer
    142:158:boolean copyToFile(java.io.File,java.io.InputStream) -> copyToFile
    165:171:boolean copyToFile(java.io.File,android.content.res.Resources,int) -> copyToFile
    63:79:java.io.File getTempFile(android.content.Context) -> getTempFile
    88:93:java.nio.ByteBuffer mmap(java.io.File) -> mmap
    103:114:java.nio.ByteBuffer mmap(android.content.Context,android.os.CancellationSignal,android.net.Uri) -> mmap
androidx.core.graphics.drawable.BitmapDrawableKt -> androidx.core.graphics.drawable.BitmapDrawableKt:
    26:26:android.graphics.drawable.BitmapDrawable toDrawable(android.graphics.Bitmap,android.content.res.Resources) -> toDrawable
androidx.core.graphics.drawable.ColorDrawableKt -> androidx.core.graphics.drawable.ColorDrawableKt:
    27:27:android.graphics.drawable.ColorDrawable toDrawable(int) -> toDrawable
    31:31:android.graphics.drawable.ColorDrawable toDrawable(android.graphics.Color) -> toDrawable
androidx.core.graphics.drawable.DrawableCompat -> androidx.core.graphics.drawable.DrawableCompat:
    419:419:void <init>() -> <init>
    188:191:void applyTheme(android.graphics.drawable.Drawable,android.content.res.Resources$Theme) -> applyTheme
    197:200:boolean canApplyTheme(android.graphics.drawable.Drawable) -> canApplyTheme
    221:252:void clearColorFilter(android.graphics.drawable.Drawable) -> clearColorFilter
    177:178:int getAlpha(android.graphics.drawable.Drawable) -> getAlpha
    210:213:android.graphics.ColorFilter getColorFilter(android.graphics.drawable.Drawable) -> getColorFilter
    391:413:int getLayoutDirection(android.graphics.drawable.Drawable) -> getLayoutDirection
    268:273:void inflate(android.graphics.drawable.Drawable,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    95:96:boolean isAutoMirrored(android.graphics.drawable.Drawable) -> isAutoMirrored
    62:63:void jumpToCurrentState(android.graphics.drawable.Drawable) -> jumpToCurrentState
    78:81:void setAutoMirrored(android.graphics.drawable.Drawable,boolean) -> setAutoMirrored
    110:113:void setHotspot(android.graphics.drawable.Drawable,float,float) -> setHotspot
    123:126:void setHotspotBounds(android.graphics.drawable.Drawable,int,int,int,int) -> setHotspotBounds
    354:377:boolean setLayoutDirection(android.graphics.drawable.Drawable,int) -> setLayoutDirection
    135:140:void setTint(android.graphics.drawable.Drawable,int) -> setTint
    149:154:void setTintList(android.graphics.drawable.Drawable,android.content.res.ColorStateList) -> setTintList
    163:168:void setTintMode(android.graphics.drawable.Drawable,android.graphics.PorterDuff$Mode) -> setTintMode
    334:337:android.graphics.drawable.Drawable unwrap(android.graphics.drawable.Drawable) -> unwrap
    307:318:android.graphics.drawable.Drawable wrap(android.graphics.drawable.Drawable) -> wrap
androidx.core.graphics.drawable.DrawableKt -> androidx.core.graphics.drawable.DrawableKt:
    47:58:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config) -> toBitmap
    38:38:int androidx.core.graphics.RectKt.component1(android.graphics.Rect) -> toBitmap
    38:38:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config):83 -> toBitmap
    58:58:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config) -> toBitmap
    49:49:int androidx.core.graphics.RectKt.component2(android.graphics.Rect) -> toBitmap
    49:49:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config):84 -> toBitmap
    58:58:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config) -> toBitmap
    60:60:int androidx.core.graphics.RectKt.component3(android.graphics.Rect) -> toBitmap
    60:60:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config):85 -> toBitmap
    58:58:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config) -> toBitmap
    71:71:int androidx.core.graphics.RectKt.component4(android.graphics.Rect) -> toBitmap
    71:71:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config):86 -> toBitmap
    58:65:android.graphics.Bitmap toBitmap(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config) -> toBitmap
    43:45:android.graphics.Bitmap toBitmap$default(android.graphics.drawable.Drawable,int,int,android.graphics.Bitmap$Config,int,java.lang.Object) -> toBitmap$default
    80:81:void updateBounds(android.graphics.drawable.Drawable,int,int,int,int) -> updateBounds
    75:78:void updateBounds$default(android.graphics.drawable.Drawable,int,int,int,int,int,java.lang.Object) -> updateBounds$default
androidx.core.graphics.drawable.IconCompat -> androidx.core.graphics.drawable.IconCompat:
    198:198:void <clinit>() -> <clinit>
    363:364:void <init>() -> <init>
    366:368:void <init>(int) -> <init>
    723:772:void addToShortcutIntent(android.content.Intent,android.graphics.drawable.Drawable,android.content.Context) -> addToShortcutIntent
    576:593:void checkResource(android.content.Context) -> checkResource
    942:971:androidx.core.graphics.drawable.IconCompat createFromBundle(android.os.Bundle) -> createFromBundle
    980:988:androidx.core.graphics.drawable.IconCompat createFromIcon(android.content.Context,android.graphics.drawable.Icon) -> createFromIcon
    1008:1011:androidx.core.graphics.drawable.IconCompat createFromIcon(android.graphics.drawable.Icon) -> createFromIcon
    1031:1034:androidx.core.graphics.drawable.IconCompat createFromIconOrNullIfZeroResId(android.graphics.drawable.Icon) -> createFromIconOrNullIfZeroResId
    1158:1193:android.graphics.Bitmap createLegacyIconFromAdaptiveIcon(android.graphics.Bitmap,boolean) -> createLegacyIconFromAdaptiveIcon
    268:269:androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmap(android.graphics.Bitmap) -> createWithAdaptiveBitmap
    334:335:androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(java.lang.String) -> createWithAdaptiveBitmapContentUri
    352:353:androidx.core.graphics.drawable.IconCompat createWithAdaptiveBitmapContentUri(android.net.Uri) -> createWithAdaptiveBitmapContentUri
    253:254:androidx.core.graphics.drawable.IconCompat createWithBitmap(android.graphics.Bitmap) -> createWithBitmap
    303:304:androidx.core.graphics.drawable.IconCompat createWithContentUri(java.lang.String) -> createWithContentUri
    318:319:androidx.core.graphics.drawable.IconCompat createWithContentUri(android.net.Uri) -> createWithContentUri
    286:287:androidx.core.graphics.drawable.IconCompat createWithData(byte[],int,int) -> createWithData
    216:217:androidx.core.graphics.drawable.IconCompat createWithResource(android.content.Context,int) -> createWithResource
    227:228:androidx.core.graphics.drawable.IconCompat createWithResource(android.content.res.Resources,java.lang.String,int) -> createWithResource
    433:444:android.graphics.Bitmap getBitmap() -> getBitmap
    412:416:int getResId() -> getResId
    1104:1111:int getResId(android.graphics.drawable.Icon) -> getResId
    394:398:java.lang.String getResPackage() -> getResPackage
    1075:1082:java.lang.String getResPackage(android.graphics.drawable.Icon) -> getResPackage
    695:710:android.content.res.Resources getResources(android.content.Context,java.lang.String) -> getResources
    379:382:int getType() -> getType
    1047:1054:int getType(android.graphics.drawable.Icon) -> getType
    457:463:android.net.Uri getUri() -> getUri
    1132:1139:android.net.Uri getUri(android.graphics.drawable.Icon) -> getUri
    675:691:java.io.InputStream getUriInputStream(android.content.Context) -> getUriInputStream
    605:615:android.graphics.drawable.Drawable loadDrawable(android.content.Context) -> loadDrawable
    622:671:android.graphics.drawable.Drawable loadDrawableInner(android.content.Context) -> loadDrawableInner
    894:924:void onPostParceling() -> onPostParceling
    857:890:void onPreParceling(boolean) -> onPreParceling
    473:473:androidx.core.graphics.drawable.IconCompat setTint(int) -> setTint
    483:484:androidx.core.graphics.drawable.IconCompat setTintList(android.content.res.ColorStateList) -> setTintList
    494:495:androidx.core.graphics.drawable.IconCompat setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    779:809:android.os.Bundle toBundle() -> toBundle
    505:505:android.graphics.drawable.Icon toIcon() -> toIcon
    517:520:android.graphics.drawable.Icon toIcon(android.content.Context) -> toIcon
    815:852:java.lang.String toString() -> toString
    927:928:java.lang.String typeToString(int) -> typeToString
androidx.core.graphics.drawable.IconCompatParcelizer -> androidx.core.graphics.drawable.IconCompatParcelizer:
    11:11:void <init>() -> <init>
    14:23:androidx.core.graphics.drawable.IconCompat read(androidx.versionedparcelable.VersionedParcel) -> read
    28:51:void write(androidx.core.graphics.drawable.IconCompat,androidx.versionedparcelable.VersionedParcel) -> write
androidx.core.graphics.drawable.IconKt -> androidx.core.graphics.drawable.IconKt:
    32:32:android.graphics.drawable.Icon toAdaptiveIcon(android.graphics.Bitmap) -> toAdaptiveIcon
    40:40:android.graphics.drawable.Icon toIcon(android.graphics.Bitmap) -> toIcon
    48:48:android.graphics.drawable.Icon toIcon(android.net.Uri) -> toIcon
    56:56:android.graphics.drawable.Icon toIcon(byte[]) -> toIcon
androidx.core.graphics.drawable.RoundedBitmapDrawable -> androidx.core.graphics.drawable.RoundedBitmapDrawable:
    382:395:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    84:86:void computeBitmapSize() -> computeBitmapSize
    260:271:void draw(android.graphics.Canvas) -> draw
    284:284:int getAlpha() -> getAlpha
    80:80:android.graphics.Bitmap getBitmap() -> getBitmap
    295:295:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    356:356:float getCornerRadius() -> getCornerRadius
    140:140:int getGravity() -> getGravity
    366:366:int getIntrinsicHeight() -> getIntrinsicHeight
    361:361:int getIntrinsicWidth() -> getIntrinsicWidth
    371:372:int getOpacity() -> getOpacity
    72:72:android.graphics.Paint getPaint() -> getPaint
    223:223:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    206:206:boolean hasAntiAlias() -> hasAntiAlias
    182:182:boolean hasMipMap() -> hasMipMap
    323:323:boolean isCircular() -> isCircular
    398:398:boolean isGreaterThanZero(float) -> isGreaterThanZero
    345:350:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    275:280:void setAlpha(int) -> setAlpha
    194:196:void setAntiAlias(boolean) -> setAntiAlias
    303:312:void setCircular(boolean) -> setCircular
    289:291:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    330:341:void setCornerRadius(float) -> setCornerRadius
    217:219:void setDither(boolean) -> setDither
    211:213:void setFilterBitmap(boolean) -> setFilterBitmap
    151:156:void setGravity(int) -> setGravity
    170:170:void setMipMap(boolean) -> setMipMap
    99:100:void setTargetDensity(android.graphics.Canvas) -> setTargetDensity
    111:112:void setTargetDensity(android.util.DisplayMetrics) -> setTargetDensity
    123:130:void setTargetDensity(int) -> setTargetDensity
    315:317:void updateCircularCornerRadius() -> updateCircularCornerRadius
    227:256:void updateDstRect() -> updateDstRect
androidx.core.graphics.drawable.RoundedBitmapDrawable21 -> androidx.core.graphics.drawable.RoundedBitmapDrawable21:
    32:33:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    37:39:void getOutline(android.graphics.Outline) -> getOutline
    57:59:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    51:51:boolean hasMipMap() -> hasMipMap
    43:47:void setMipMap(boolean) -> setMipMap
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory -> androidx.core.graphics.drawable.RoundedBitmapDrawableFactory:
    104:104:void <init>() -> <init>
    73:76:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,android.graphics.Bitmap) -> create
    84:88:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.lang.String) -> create
    97:101:androidx.core.graphics.drawable.RoundedBitmapDrawable create(android.content.res.Resources,java.io.InputStream) -> create
androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable -> androidx.core.graphics.drawable.RoundedBitmapDrawableFactory$DefaultRoundedBitmapDrawable:
    43:44:void <init>(android.content.res.Resources,android.graphics.Bitmap) -> <init>
    62:64:void gravityCompatApply(int,int,int,android.graphics.Rect,android.graphics.Rect) -> gravityCompatApply
    56:56:boolean hasMipMap() -> hasMipMap
    48:52:void setMipMap(boolean) -> setMipMap
androidx.core.graphics.drawable.WrappedDrawableApi14 -> androidx.core.graphics.drawable.WrappedDrawableApi14:
    41:41:void <clinit>() -> <clinit>
    52:55:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    62:66:void <init>(android.graphics.drawable.Drawable) -> <init>
    86:87:void draw(android.graphics.Canvas) -> draw
    103:103:int getChangingConfigurations() -> getChangingConfigurations
    210:214:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    152:152:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    177:177:int getIntrinsicHeight() -> getIntrinsicHeight
    172:172:int getIntrinsicWidth() -> getIntrinsicWidth
    187:187:int getMinimumHeight() -> getMinimumHeight
    182:182:int getMinimumWidth() -> getMinimumWidth
    162:162:int getOpacity() -> getOpacity
    192:192:boolean getPadding(android.graphics.Rect) -> getPadding
    146:146:int[] getState() -> getState
    167:167:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    322:322:android.graphics.drawable.Drawable getWrappedDrawable() -> getWrappedDrawable
    251:252:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    204:204:boolean isAutoMirrored() -> isAutoMirrored
    353:353:boolean isCompatTintEnabled() -> isCompatTintEnabled
    130:133:boolean isStateful() -> isStateful
    81:82:void jumpToCurrentState() -> jumpToCurrentState
    220:230:android.graphics.drawable.Drawable mutate() -> mutate
    243:243:androidx.core.graphics.drawable.WrappedDrawableState mutateConstantState() -> mutateConstantState
    91:94:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    272:272:boolean onLevelChange(int) -> onLevelChange
    259:260:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    120:121:void setAlpha(int) -> setAlpha
    198:199:void setAutoMirrored(boolean) -> setAutoMirrored
    98:99:void setChangingConfigurations(int) -> setChangingConfigurations
    125:126:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    110:111:void setDither(boolean) -> setDither
    115:116:void setFilterBitmap(boolean) -> setFilterBitmap
    138:140:boolean setState(int[]) -> setState
    277:278:void setTint(int) -> setTint
    282:284:void setTintList(android.content.res.ColorStateList) -> setTintList
    288:290:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    157:157:boolean setVisible(boolean,boolean) -> setVisible
    330:349:void setWrappedDrawable(android.graphics.drawable.Drawable) -> setWrappedDrawable
    267:268:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
    74:77:void updateLocalState(android.content.res.Resources) -> updateLocalState
    293:314:boolean updateTint(int[]) -> updateTint
androidx.core.graphics.drawable.WrappedDrawableApi21 -> androidx.core.graphics.drawable.WrappedDrawableApi21:
    43:45:void <init>(android.graphics.drawable.Drawable) -> <init>
    48:50:void <init>(androidx.core.graphics.drawable.WrappedDrawableState,android.content.res.Resources) -> <init>
    141:148:void findAndCacheIsProjectedDrawableMethod() -> findAndCacheIsProjectedDrawableMethod
    70:70:android.graphics.Rect getDirtyBounds() -> getDirtyBounds
    64:65:void getOutline(android.graphics.Outline) -> getOutline
    113:120:boolean isCompatTintEnabled() -> isCompatTintEnabled
    129:137:boolean isProjected() -> isProjected
    54:55:void setHotspot(float,float) -> setHotspot
    59:60:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    102:108:boolean setState(int[]) -> setState
    84:89:void setTint(int) -> setTint
    75:80:void setTintList(android.content.res.ColorStateList) -> setTintList
    93:98:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
androidx.core.graphics.drawable.WrappedDrawableState -> androidx.core.graphics.drawable.WrappedDrawableState:
    35:42:void <init>(androidx.core.graphics.drawable.WrappedDrawableState) -> <init>
    66:66:boolean canConstantState() -> canConstantState
    61:61:int getChangingConfigurations() -> getChangingConfigurations
    47:47:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    53:56:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
androidx.core.hardware.display.DisplayManagerCompat -> androidx.core.hardware.display.DisplayManagerCompat:
    34:34:void <clinit>() -> <clinit>
    53:55:void <init>(android.content.Context) -> <init>
    83:84:android.view.Display getDisplay(int) -> getDisplay
    103:104:android.view.Display[] getDisplays() -> getDisplays
    131:132:android.view.Display[] getDisplays(java.lang.String) -> getDisplays
    62:69:androidx.core.hardware.display.DisplayManagerCompat getInstance(android.content.Context) -> getInstance
androidx.core.hardware.fingerprint.FingerprintManagerCompat -> androidx.core.hardware.fingerprint.FingerprintManagerCompat:
    55:57:void <init>(android.content.Context) -> <init>
    107:121:void authenticate(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject,int,androidx.core.os.CancellationSignal,androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback,android.os.Handler) -> authenticate
    52:52:androidx.core.hardware.fingerprint.FingerprintManagerCompat from(android.content.Context) -> from
    126:132:android.hardware.fingerprint.FingerprintManager getFingerprintManagerOrNull(android.content.Context) -> getFingerprintManagerOrNull
    66:70:boolean hasEnrolledFingerprints() -> hasEnrolledFingerprints
    81:85:boolean isHardwareDetected() -> isHardwareDetected
    153:162:androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject unwrapCryptoObject(android.hardware.fingerprint.FingerprintManager$CryptoObject) -> unwrapCryptoObject
    169:169:android.hardware.fingerprint.FingerprintManager$AuthenticationCallback wrapCallback(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> wrapCallback
    138:147:android.hardware.fingerprint.FingerprintManager$CryptoObject wrapCryptoObject(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> wrapCryptoObject
androidx.core.hardware.fingerprint.FingerprintManagerCompat$1 -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$1:
    169:169:void <init>(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback) -> <init>
    172:173:void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    188:189:void onAuthenticationFailed() -> onAuthenticationFailed
    177:178:void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    182:184:void onAuthenticationSucceeded(android.hardware.fingerprint.FingerprintManager$AuthenticationResult) -> onAuthenticationSucceeded
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationCallback:
    270:270:void <init>() -> <init>
    277:277:void onAuthenticationError(int,java.lang.CharSequence) -> onAuthenticationError
    297:297:void onAuthenticationFailed() -> onAuthenticationFailed
    286:286:void onAuthenticationHelp(int,java.lang.CharSequence) -> onAuthenticationHelp
    292:292:void onAuthenticationSucceeded(androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult) -> onAuthenticationSucceeded
androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$AuthenticationResult:
    251:253:void <init>(androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject) -> <init>
    260:260:androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject getCryptoObject() -> getCryptoObject
androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject -> androidx.core.hardware.fingerprint.FingerprintManagerCompat$CryptoObject:
    203:208:void <init>(java.security.Signature) -> <init>
    210:214:void <init>(javax.crypto.Cipher) -> <init>
    216:220:void <init>(javax.crypto.Mac) -> <init>
    234:234:javax.crypto.Cipher getCipher() -> getCipher
    241:241:javax.crypto.Mac getMac() -> getMac
    227:227:java.security.Signature getSignature() -> getSignature
androidx.core.location.LocationKt -> androidx.core.location.LocationKt:
    32:32:double component1(android.location.Location) -> component1
    43:43:double component2(android.location.Location) -> component2
androidx.core.location.LocationManagerCompat -> androidx.core.location.LocationManagerCompat:
    50:50:void <init>() -> <init>
    36:45:boolean isLocationEnabled(android.location.LocationManager) -> isLocationEnabled
androidx.core.math.MathUtils -> androidx.core.math.MathUtils:
    24:24:void <init>() -> <init>
    39:44:float clamp(float,float,float) -> clamp
    60:65:double clamp(double,double,double) -> clamp
    81:86:int clamp(int,int,int) -> clamp
    102:107:long clamp(long,long,long) -> clamp
androidx.core.net.ConnectivityManagerCompat -> androidx.core.net.ConnectivityManagerCompat:
    166:166:void <init>() -> <init>
    141:145:android.net.NetworkInfo getNetworkInfoFromBroadcast(android.net.ConnectivityManager,android.content.Intent) -> getNetworkInfoFromBroadcast
    159:162:int getRestrictBackgroundStatus(android.net.ConnectivityManager) -> getRestrictBackgroundStatus
    100:101:boolean isActiveNetworkMetered(android.net.ConnectivityManager) -> isActiveNetworkMetered
androidx.core.net.DatagramSocketWrapper -> androidx.core.net.DatagramSocketWrapper:
    32:33:void <init>(java.net.DatagramSocket,java.io.FileDescriptor) -> <init>
androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper -> androidx.core.net.DatagramSocketWrapper$DatagramSocketImplWrapper:
    40:43:void <init>(java.net.DatagramSocket,java.io.FileDescriptor) -> <init>
    47:47:void accept(java.net.SocketImpl) -> accept
    52:52:int available() -> available
    57:57:void bind(java.net.InetAddress,int) -> bind
    62:62:void close() -> close
    67:67:void connect(java.lang.String,int) -> connect
    72:72:void connect(java.net.InetAddress,int) -> connect
    97:97:void connect(java.net.SocketAddress,int) -> connect
    77:77:void create(boolean) -> create
    82:82:java.io.InputStream getInputStream() -> getInputStream
    107:107:java.lang.Object getOption(int) -> getOption
    87:87:java.io.OutputStream getOutputStream() -> getOutputStream
    92:92:void listen(int) -> listen
    102:102:void sendUrgentData(int) -> sendUrgentData
    112:112:void setOption(int,java.lang.Object) -> setOption
androidx.core.net.TrafficStatsCompat -> androidx.core.net.TrafficStatsCompat:
    167:167:void <init>() -> <init>
    41:42:void clearThreadStatsTag() -> clearThreadStatsTag
    53:53:int getThreadStatsTag() -> getThreadStatsTag
    67:68:void incrementOperationCount(int) -> incrementOperationCount
    81:82:void incrementOperationCount(int,int) -> incrementOperationCount
    99:100:void setThreadStatsTag(int) -> setThreadStatsTag
    137:148:void tagDatagramSocket(java.net.DatagramSocket) -> tagDatagramSocket
    114:115:void tagSocket(java.net.Socket) -> tagSocket
    154:165:void untagDatagramSocket(java.net.DatagramSocket) -> untagDatagramSocket
    124:125:void untagSocket(java.net.Socket) -> untagSocket
androidx.core.net.UriCompat -> androidx.core.net.UriCompat:
    28:28:void <init>() -> <init>
    40:78:java.lang.String toSafeString(android.net.Uri) -> toSafeString
androidx.core.net.UriKt -> androidx.core.net.UriKt:
    40:40:java.io.File toFile(android.net.Uri) -> toFile
    29:29:android.net.Uri toUri(java.lang.String) -> toUri
    36:36:android.net.Uri toUri(java.io.File) -> toUri
androidx.core.os.BuildCompat -> androidx.core.os.BuildCompat:
    26:27:void <init>() -> <init>
    39:39:boolean isAtLeastN() -> isAtLeastN
    52:52:boolean isAtLeastNMR1() -> isAtLeastNMR1
    65:65:boolean isAtLeastO() -> isAtLeastO
    78:78:boolean isAtLeastOMR1() -> isAtLeastOMR1
    91:91:boolean isAtLeastP() -> isAtLeastP
    104:104:boolean isAtLeastQ() -> isAtLeastQ
    117:117:boolean isAtLeastR() -> isAtLeastR
androidx.core.os.BundleKt -> androidx.core.os.BundleKt:
    32:104:android.os.Bundle bundleOf(kotlin.Pair[]) -> bundleOf
androidx.core.os.CancellationSignal -> androidx.core.os.CancellationSignal:
    37:38:void <init>() -> <init>
    69:77:void cancel() -> cancel
    138:149:java.lang.Object getCancellationSignalObject() -> getCancellationSignalObject
    46:48:boolean isCanceled() -> isCanceled
    111:121:void setOnCancelListener(androidx.core.os.CancellationSignal$OnCancelListener) -> setOnCancelListener
    57:58:void throwIfCanceled() -> throwIfCanceled
    153:159:void waitForCancelFinishedLocked() -> waitForCancelFinishedLocked
androidx.core.os.ConfigurationCompat -> androidx.core.os.ConfigurationCompat:
    30:31:void <init>() -> <init>
    41:44:androidx.core.os.LocaleListCompat getLocales(android.content.res.Configuration) -> getLocales
androidx.core.os.EnvironmentCompat -> androidx.core.os.EnvironmentCompat:
    81:81:void <init>() -> <init>
    59:62:java.lang.String getStorageState(java.io.File) -> getStorageState
androidx.core.os.HandlerCompat -> androidx.core.os.HandlerCompat:
    153:154:void <init>() -> <init>
    52:75:android.os.Handler createAsync(android.os.Looper) -> createAsync
    93:116:android.os.Handler createAsync(android.os.Looper,android.os.Handler$Callback) -> createAsync
    144:150:boolean postDelayed(android.os.Handler,java.lang.Runnable,java.lang.Object,long) -> postDelayed
androidx.core.os.HandlerKt -> androidx.core.os.HandlerKt:
    65:67:java.lang.Runnable postAtTime(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0) -> postAtTime
    62:62:java.lang.Runnable postAtTime$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object) -> postAtTime$default
    65:65:java.lang.Runnable postAtTime(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0) -> postAtTime$default
    65:65:java.lang.Runnable postAtTime$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object):77 -> postAtTime$default
    66:66:java.lang.Runnable postAtTime(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0) -> postAtTime$default
    66:66:java.lang.Runnable postAtTime$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object):78 -> postAtTime$default
    67:67:java.lang.Runnable postAtTime(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0) -> postAtTime$default
    67:67:java.lang.Runnable postAtTime$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object):79 -> postAtTime$default
    38:44:java.lang.Runnable postDelayed(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0) -> postDelayed
    35:35:java.lang.Runnable postDelayed$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object) -> postDelayed$default
    38:38:java.lang.Runnable postDelayed(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0) -> postDelayed$default
    38:38:java.lang.Runnable postDelayed$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object):70 -> postDelayed$default
    39:39:java.lang.Runnable postDelayed(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0) -> postDelayed$default
    39:39:java.lang.Runnable postDelayed$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object):71 -> postDelayed$default
    40:40:java.lang.Runnable postDelayed(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0) -> postDelayed$default
    40:40:java.lang.Runnable postDelayed$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object):72 -> postDelayed$default
    42:42:java.lang.Runnable postDelayed(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0) -> postDelayed$default
    42:42:java.lang.Runnable postDelayed$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object):74 -> postDelayed$default
    43:43:java.lang.Runnable postDelayed(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0) -> postDelayed$default
    43:43:java.lang.Runnable postDelayed$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object):75 -> postDelayed$default
    44:44:java.lang.Runnable postDelayed(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0) -> postDelayed$default
    44:44:java.lang.Runnable postDelayed$default(android.os.Handler,long,java.lang.Object,kotlin.jvm.functions.Function0,int,java.lang.Object):76 -> postDelayed$default
androidx.core.os.HandlerKt$postAtTime$runnable$1 -> androidx.core.os.HandlerKt$postAtTime$runnable$1:
    65:65:void run() -> run
androidx.core.os.HandlerKt$postDelayed$runnable$1 -> androidx.core.os.HandlerKt$postDelayed$runnable$1:
    38:38:void run() -> run
androidx.core.os.LocaleListCompat -> androidx.core.os.LocaleListCompat:
    34:34:void <clinit>() -> <clinit>
    38:40:void <init>(androidx.core.os.LocaleListInterface) -> <init>
    73:76:androidx.core.os.LocaleListCompat create(java.util.Locale[]) -> create
    234:234:boolean equals(java.lang.Object) -> equals
    174:193:java.util.Locale forLanguageTagCompat(java.lang.String) -> forLanguageTagCompat
    158:159:androidx.core.os.LocaleListCompat forLanguageTags(java.lang.String) -> forLanguageTags
    86:86:java.util.Locale get(int) -> get
    205:208:androidx.core.os.LocaleListCompat getAdjustedDefault() -> getAdjustedDefault
    225:228:androidx.core.os.LocaleListCompat getDefault() -> getDefault
    145:145:androidx.core.os.LocaleListCompat getEmptyLocaleList() -> getEmptyLocaleList
    137:137:java.util.Locale getFirstMatch(java.lang.String[]) -> getFirstMatch
    239:239:int hashCode() -> hashCode
    117:117:int indexOf(java.util.Locale) -> indexOf
    96:96:boolean isEmpty() -> isEmpty
    104:104:int size() -> size
    125:125:java.lang.String toLanguageTags() -> toLanguageTags
    244:244:java.lang.String toString() -> toString
    65:65:java.lang.Object unwrap() -> unwrap
    46:46:androidx.core.os.LocaleListCompat wrap(java.lang.Object) -> wrap
    55:55:androidx.core.os.LocaleListCompat wrap(android.os.LocaleList) -> wrap
androidx.core.os.LocaleListCompatWrapper -> androidx.core.os.LocaleListCompatWrapper:
    39:217:void <clinit>() -> <clinit>
    120:147:void <init>(java.util.Locale[]) -> <init>
    259:260:java.util.Locale computeFirstMatch(java.util.Collection,boolean) -> computeFirstMatch
    221:253:int computeFirstMatchIndex(java.util.Collection,boolean) -> computeFirstMatchIndex
    74:89:boolean equals(java.lang.Object) -> equals
    208:214:int findFirstMatchIndex(java.util.Locale) -> findFirstMatchIndex
    49:49:java.util.Locale get(int) -> get
    265:265:java.util.Locale getFirstMatch(java.lang.String[]) -> getFirstMatch
    160:168:java.lang.String getLikelyScript(java.util.Locale) -> getLikelyScript
    44:44:java.lang.Object getLocaleList() -> getLocaleList
    94:98:int hashCode() -> hashCode
    64:69:int indexOf(java.util.Locale) -> indexOf
    54:54:boolean isEmpty() -> isEmpty
    175:175:boolean isPseudoLocale(java.util.Locale) -> isPseudoLocale
    180:189:int matchScore(java.util.Locale,java.util.Locale) -> matchScore
    59:59:int size() -> size
    151:157:void toLanguageTag(java.lang.StringBuilder,java.util.Locale) -> toLanguageTag
    117:117:java.lang.String toLanguageTags() -> toLanguageTags
    103:112:java.lang.String toString() -> toString
androidx.core.os.LocaleListPlatformWrapper -> androidx.core.os.LocaleListPlatformWrapper:
    31:33:void <init>(android.os.LocaleList) -> <init>
    62:62:boolean equals(java.lang.Object) -> equals
    42:42:java.util.Locale get(int) -> get
    83:83:java.util.Locale getFirstMatch(java.lang.String[]) -> getFirstMatch
    37:37:java.lang.Object getLocaleList() -> getLocaleList
    67:67:int hashCode() -> hashCode
    57:57:int indexOf(java.util.Locale) -> indexOf
    47:47:boolean isEmpty() -> isEmpty
    52:52:int size() -> size
    77:77:java.lang.String toLanguageTags() -> toLanguageTags
    72:72:java.lang.String toString() -> toString
androidx.core.os.MessageCompat -> androidx.core.os.MessageCompat:
    34:39:void <clinit>() -> <clinit>
    112:113:void <init>() -> <init>
    97:109:boolean isAsynchronous(android.os.Message) -> isAsynchronous
    71:84:void setAsynchronous(android.os.Message,boolean) -> setAsynchronous
androidx.core.os.OperationCanceledException -> androidx.core.os.OperationCanceledException:
    27:28:void <init>() -> <init>
    31:32:void <init>(java.lang.String) -> <init>
androidx.core.os.ParcelCompat -> androidx.core.os.ParcelCompat:
    46:46:void <init>() -> <init>
    32:32:boolean readBoolean(android.os.Parcel) -> readBoolean
    43:44:void writeBoolean(android.os.Parcel,boolean) -> writeBoolean
androidx.core.os.ParcelableCompat -> androidx.core.os.ParcelableCompat:
    68:68:void <init>() -> <init>
    41:41:android.os.Parcelable$Creator newCreator(androidx.core.os.ParcelableCompatCreatorCallbacks) -> newCreator
androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2 -> androidx.core.os.ParcelableCompat$ParcelableCompatCreatorHoneycombMR2:
    48:50:void <init>(androidx.core.os.ParcelableCompatCreatorCallbacks) -> <init>
    54:54:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    64:64:java.lang.Object[] newArray(int) -> newArray
androidx.core.os.PersistableBundleKt -> androidx.core.os.PersistableBundleKt:
    29:83:android.os.PersistableBundle persistableBundleOf(kotlin.Pair[]) -> persistableBundleOf
androidx.core.os.TraceCompat -> androidx.core.os.TraceCompat:
    46:62:void <clinit>() -> <clinit>
    179:179:void <init>() -> <init>
    129:138:void beginAsyncSection(java.lang.String,int) -> beginAsyncSection
    100:103:void beginSection(java.lang.String) -> beginSection
    149:158:void endAsyncSection(java.lang.String,int) -> endAsyncSection
    113:116:void endSection() -> endSection
    74:85:boolean isEnabled() -> isEnabled
    168:177:void setCounter(java.lang.String,int) -> setCounter
androidx.core.os.TraceKt -> androidx.core.os.TraceKt:
    26:30:java.lang.Object trace(java.lang.String,kotlin.jvm.functions.Function0) -> trace
androidx.core.os.UserManagerCompat -> androidx.core.os.UserManagerCompat:
    31:32:void <init>() -> <init>
    41:44:boolean isUserUnlocked(android.content.Context) -> isUserUnlocked
androidx.core.provider.FontRequest -> androidx.core.provider.FontRequest:
    56:64:void <init>(java.lang.String,java.lang.String,java.lang.String,java.util.List) -> <init>
    78:87:void <init>(java.lang.String,java.lang.String,java.lang.String,int) -> <init>
    125:125:java.util.List getCertificates() -> getCertificates
    137:137:int getCertificatesArrayResId() -> getCertificatesArrayResId
    143:143:java.lang.String getIdentifier() -> getIdentifier
    95:95:java.lang.String getProviderAuthority() -> getProviderAuthority
    104:104:java.lang.String getProviderPackage() -> getProviderPackage
    113:113:java.lang.String getQuery() -> getQuery
    148:167:java.lang.String toString() -> toString
androidx.core.provider.FontsContractCompat -> androidx.core.provider.FontsContractCompat:
    172:784:void <clinit>() -> <clinit>
    73:73:void <init>() -> <init>
    670:670:android.graphics.Typeface buildTypeface(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontsContractCompat$FontInfo[]) -> buildTypeface
    813:817:java.util.List convertToByteArrayList(android.content.pm.Signature[]) -> convertToByteArrayList
    801:809:boolean equalsByteArrayList(java.util.List,java.util.List) -> equalsByteArrayList
    727:735:androidx.core.provider.FontsContractCompat$FontFamilyResult fetchFonts(android.content.Context,android.os.CancellationSignal,androidx.core.provider.FontRequest) -> fetchFonts
    777:781:java.util.List getCertificates(androidx.core.provider.FontRequest,android.content.res.Resources) -> getCertificates
    824:880:androidx.core.provider.FontsContractCompat$FontInfo[] getFontFromProvider(android.content.Context,androidx.core.provider.FontRequest,java.lang.String,android.os.CancellationSignal) -> getFontFromProvider
    184:186:androidx.core.provider.FontsContractCompat$TypefaceResult getFontInternal(android.content.Context,androidx.core.provider.FontRequest,int) -> getFontInternal
    232:302:android.graphics.Typeface getFontSync(android.content.Context,androidx.core.provider.FontRequest,androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler,boolean,int,int) -> getFontSync
    744:747:android.content.pm.ProviderInfo getProvider(android.content.pm.PackageManager,androidx.core.provider.FontRequest,android.content.res.Resources) -> getProvider
    689:704:java.util.Map prepareFontData(android.content.Context,androidx.core.provider.FontsContractCompat$FontInfo[],android.os.CancellationSignal) -> prepareFontData
    531:532:void requestFont(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> requestFont
    540:653:void requestFontInternal(android.content.Context,androidx.core.provider.FontRequest,androidx.core.provider.FontsContractCompat$FontRequestCallback,android.os.Handler) -> requestFontInternal
    223:224:void resetCache() -> resetCache
androidx.core.provider.FontsContractCompat$1 -> androidx.core.provider.FontsContractCompat$1:
    254:254:void <init>(android.content.Context,androidx.core.provider.FontRequest,int,java.lang.String) -> <init>
    254:254:java.lang.Object call() -> call
    257:261:androidx.core.provider.FontsContractCompat$TypefaceResult call() -> call
androidx.core.provider.FontsContractCompat$2 -> androidx.core.provider.FontsContractCompat$2:
    273:273:void <init>(androidx.core.content.res.ResourcesCompat$FontCallback,android.os.Handler) -> <init>
    273:273:void onReply(java.lang.Object) -> onReply
    276:284:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> onReply
androidx.core.provider.FontsContractCompat$3 -> androidx.core.provider.FontsContractCompat$3:
    303:303:void <init>(java.lang.String) -> <init>
    303:303:void onReply(java.lang.Object) -> onReply
    307:313:void onReply(androidx.core.provider.FontsContractCompat$TypefaceResult) -> onReply
androidx.core.provider.FontsContractCompat$4 -> androidx.core.provider.FontsContractCompat$4:
    541:541:void <init>(android.content.Context,androidx.core.provider.FontRequest,android.os.Handler,androidx.core.provider.FontsContractCompat$FontRequestCallback) -> <init>
    547:556:void run() -> run
androidx.core.provider.FontsContractCompat$4$1 -> androidx.core.provider.FontsContractCompat$4$1:
    549:549:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    552:554:void run() -> run
androidx.core.provider.FontsContractCompat$4$2 -> androidx.core.provider.FontsContractCompat$4$2:
    562:562:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    565:567:void run() -> run
androidx.core.provider.FontsContractCompat$4$3 -> androidx.core.provider.FontsContractCompat$4$3:
    571:571:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    574:576:void run() -> run
androidx.core.provider.FontsContractCompat$4$4 -> androidx.core.provider.FontsContractCompat$4$4:
    581:581:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    584:586:void run() -> run
androidx.core.provider.FontsContractCompat$4$5 -> androidx.core.provider.FontsContractCompat$4$5:
    594:594:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    597:599:void run() -> run
androidx.core.provider.FontsContractCompat$4$6 -> androidx.core.provider.FontsContractCompat$4$6:
    611:611:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    614:616:void run() -> run
androidx.core.provider.FontsContractCompat$4$7 -> androidx.core.provider.FontsContractCompat$4$7:
    619:619:void <init>(androidx.core.provider.FontsContractCompat$4,int) -> <init>
    622:623:void run() -> run
androidx.core.provider.FontsContractCompat$4$8 -> androidx.core.provider.FontsContractCompat$4$8:
    635:635:void <init>(androidx.core.provider.FontsContractCompat$4) -> <init>
    638:640:void run() -> run
androidx.core.provider.FontsContractCompat$4$9 -> androidx.core.provider.FontsContractCompat$4$9:
    645:645:void <init>(androidx.core.provider.FontsContractCompat$4,android.graphics.Typeface) -> <init>
    648:649:void run() -> run
androidx.core.provider.FontsContractCompat$5 -> androidx.core.provider.FontsContractCompat$5:
    784:784:void <init>() -> <init>
    784:784:int compare(java.lang.Object,java.lang.Object) -> compare
    787:795:int compare(byte[],byte[]) -> compare
androidx.core.provider.FontsContractCompat$Columns -> androidx.core.provider.FontsContractCompat$Columns:
    82:82:void <init>() -> <init>
androidx.core.provider.FontsContractCompat$FontFamilyResult -> androidx.core.provider.FontsContractCompat$FontFamilyResult:
    427:430:void <init>(int,androidx.core.provider.FontsContractCompat$FontInfo[]) -> <init>
    437:437:androidx.core.provider.FontsContractCompat$FontInfo[] getFonts() -> getFonts
    433:433:int getStatusCode() -> getStatusCode
androidx.core.provider.FontsContractCompat$FontInfo -> androidx.core.provider.FontsContractCompat$FontInfo:
    346:352:void <init>(android.net.Uri,int,int,boolean,int) -> <init>
    388:388:int getResultCode() -> getResultCode
    365:365:int getTtcIndex() -> getTtcIndex
    358:358:android.net.Uri getUri() -> getUri
    372:372:int getWeight() -> getWeight
    379:379:boolean isItalic() -> isItalic
androidx.core.provider.FontsContractCompat$FontRequestCallback -> androidx.core.provider.FontsContractCompat$FontRequestCallback:
    493:493:void <init>() -> <init>
    514:514:void onTypefaceRequestFailed(int) -> onTypefaceRequestFailed
    501:501:void onTypefaceRetrieved(android.graphics.Typeface) -> onTypefaceRetrieved
androidx.core.provider.FontsContractCompat$TypefaceResult -> androidx.core.provider.FontsContractCompat$TypefaceResult:
    211:214:void <init>(android.graphics.Typeface,int) -> <init>
androidx.core.provider.SelfDestructiveThread -> androidx.core.provider.SelfDestructiveThread:
    79:84:void <init>(java.lang.String,int,int) -> <init>
    101:103:int getGeneration() -> getGeneration
    91:93:boolean isRunning() -> isRunning
    223:232:void onDestruction() -> onDestruction
    214:219:void onInvokeRunnable(java.lang.Runnable) -> onInvokeRunnable
    107:116:void post(java.lang.Runnable) -> post
    136:155:void postAndReply(java.util.concurrent.Callable,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> postAndReply
    166:210:java.lang.Object postAndWait(java.util.concurrent.Callable,int) -> postAndWait
androidx.core.provider.SelfDestructiveThread$1 -> androidx.core.provider.SelfDestructiveThread$1:
    58:58:void <init>(androidx.core.provider.SelfDestructiveThread) -> <init>
    61:67:boolean handleMessage(android.os.Message) -> handleMessage
androidx.core.provider.SelfDestructiveThread$2 -> androidx.core.provider.SelfDestructiveThread$2:
    137:137:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.Callable,android.os.Handler,androidx.core.provider.SelfDestructiveThread$ReplyCallback) -> <init>
    142:153:void run() -> run
androidx.core.provider.SelfDestructiveThread$2$1 -> androidx.core.provider.SelfDestructiveThread$2$1:
    147:147:void <init>(androidx.core.provider.SelfDestructiveThread$2,java.lang.Object) -> <init>
    150:151:void run() -> run
androidx.core.provider.SelfDestructiveThread$3 -> androidx.core.provider.SelfDestructiveThread$3:
    171:171:void <init>(androidx.core.provider.SelfDestructiveThread,java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Callable,java.util.concurrent.locks.ReentrantLock,java.util.concurrent.atomic.AtomicBoolean,java.util.concurrent.locks.Condition) -> <init>
    175:185:void run() -> run
androidx.core.telephony.mbms.MbmsHelper -> androidx.core.telephony.mbms.MbmsHelper:
    36:36:void <init>() -> <init>
    57:75:java.lang.CharSequence getBestNameForService(android.content.Context,android.telephony.mbms.ServiceInfo) -> getBestNameForService
androidx.core.text.BidiFormatter -> androidx.core.text.BidiFormatter:
    85:222:void <clinit>() -> <clinit>
    262:266:void <init>(boolean,int,androidx.core.text.TextDirectionHeuristicCompat) -> <init>
    558:558:int getEntryDir(java.lang.CharSequence) -> getEntryDir
    541:541:int getExitDir(java.lang.CharSequence) -> getExitDir
    236:236:androidx.core.text.BidiFormatter getInstance() -> getInstance
    245:245:androidx.core.text.BidiFormatter getInstance(boolean) -> getInstance
    254:254:androidx.core.text.BidiFormatter getInstance(java.util.Locale) -> getInstance
    280:280:boolean getStereoReset() -> getStereoReset
    347:347:boolean isRtl(java.lang.String) -> isRtl
    358:358:boolean isRtl(java.lang.CharSequence) -> isRtl
    272:272:boolean isRtlContext() -> isRtlContext
    516:516:boolean isRtlLocale(java.util.Locale) -> isRtlLocale
    300:308:java.lang.String markAfter(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markAfter
    328:336:java.lang.String markBefore(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> markBefore
    391:392:java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    411:429:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat,boolean) -> unicodeWrap
    441:441:java.lang.String unicodeWrap(java.lang.String,androidx.core.text.TextDirectionHeuristicCompat) -> unicodeWrap
    456:456:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,androidx.core.text.TextDirectionHeuristicCompat) -> unicodeWrap
    469:469:java.lang.String unicodeWrap(java.lang.String,boolean) -> unicodeWrap
    483:483:java.lang.CharSequence unicodeWrap(java.lang.CharSequence,boolean) -> unicodeWrap
    494:494:java.lang.String unicodeWrap(java.lang.String) -> unicodeWrap
    506:506:java.lang.CharSequence unicodeWrap(java.lang.CharSequence) -> unicodeWrap
androidx.core.text.BidiFormatter$Builder -> androidx.core.text.BidiFormatter$Builder:
    139:141:void <init>() -> <init>
    148:150:void <init>(boolean) -> <init>
    157:159:void <init>(java.util.Locale) -> <init>
    205:209:androidx.core.text.BidiFormatter build() -> build
    198:198:androidx.core.text.BidiFormatter getDefaultInstanceFromContext(boolean) -> getDefaultInstanceFromContext
    167:170:void initialize(boolean) -> initialize
    193:194:androidx.core.text.BidiFormatter$Builder setTextDirectionHeuristic(androidx.core.text.TextDirectionHeuristicCompat) -> setTextDirectionHeuristic
    177:182:androidx.core.text.BidiFormatter$Builder stereoReset(boolean) -> stereoReset
androidx.core.text.BidiFormatter$DirectionalityEstimator -> androidx.core.text.BidiFormatter$DirectionalityEstimator:
    584:588:void <clinit>() -> <clinit>
    628:632:void <init>(java.lang.CharSequence,boolean) -> <init>
    846:862:byte dirTypeBackward() -> dirTypeBackward
    816:832:byte dirTypeForward() -> dirTypeForward
    803:803:byte getCachedDirectionality(char) -> getCachedDirectionality
    646:728:int getEntryDir() -> getEntryDir
    744:792:int getExitDir() -> getExitDir
    944:956:byte skipEntityBackward() -> skipEntityBackward
    929:930:byte skipEntityForward() -> skipEntityForward
    901:920:byte skipTagBackward() -> skipTagBackward
    872:888:byte skipTagForward() -> skipTagForward
androidx.core.text.CharSequenceKt -> androidx.core.text.CharSequenceKt:
    28:28:boolean isDigitsOnly(java.lang.CharSequence) -> isDigitsOnly
    36:36:int trimmedLength(java.lang.CharSequence) -> trimmedLength
androidx.core.text.HtmlCompat -> androidx.core.text.HtmlCompat:
    181:182:void <init>() -> <init>
    147:150:android.text.Spanned fromHtml(java.lang.String,int) -> fromHtml
    162:165:android.text.Spanned fromHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler) -> fromHtml
    175:178:java.lang.String toHtml(android.text.Spanned,int) -> toHtml
androidx.core.text.HtmlKt -> androidx.core.text.HtmlKt:
    43:43:android.text.Spanned parseAsHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler) -> parseAsHtml
    40:42:android.text.Spanned parseAsHtml$default(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler,int,java.lang.Object) -> parseAsHtml$default
    43:43:android.text.Spanned parseAsHtml(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler) -> parseAsHtml$default
    43:43:android.text.Spanned parseAsHtml$default(java.lang.String,int,android.text.Html$ImageGetter,android.text.Html$TagHandler,int,java.lang.Object):54 -> parseAsHtml$default
    52:52:java.lang.String toHtml(android.text.Spanned,int) -> toHtml
    51:51:java.lang.String toHtml$default(android.text.Spanned,int,int,java.lang.Object) -> toHtml$default
    52:52:java.lang.String toHtml(android.text.Spanned,int) -> toHtml$default
    52:52:java.lang.String toHtml$default(android.text.Spanned,int,int,java.lang.Object):63 -> toHtml$default
androidx.core.text.ICUCompat -> androidx.core.text.ICUCompat:
    36:62:void <clinit>() -> <clinit>
    146:146:void <init>() -> <init>
    129:143:java.lang.String addLikelySubtags(java.util.Locale) -> addLikelySubtags
    114:125:java.lang.String getScript(java.lang.String) -> getScript
    89:108:java.lang.String maximizeAndGetScript(java.util.Locale) -> maximizeAndGetScript
androidx.core.text.LocaleKt -> androidx.core.text.LocaleKt:
    30:30:int getLayoutDirection(java.util.Locale) -> getLayoutDirection
androidx.core.text.PrecomputedTextCompat -> androidx.core.text.PrecomputedTextCompat:
    73:74:void <clinit>() -> <clinit>
    490:495:void <init>(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,int[]) -> <init>
    498:503:void <init>(android.text.PrecomputedText,androidx.core.text.PrecomputedTextCompat$Params) -> <init>
    754:754:char charAt(int) -> charAt
    432:485:androidx.core.text.PrecomputedTextCompat create(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params) -> create
    531:534:int getParagraphCount() -> getParagraphCount
    556:560:int getParagraphEnd(int) -> getParagraphEnd
    543:547:int getParagraphStart(int) -> getParagraphStart
    523:523:androidx.core.text.PrecomputedTextCompat$Params getParams() -> getParams
    512:515:android.text.PrecomputedText getPrecomputedText() -> getPrecomputedText
    729:729:int getSpanEnd(java.lang.Object) -> getSpanEnd
    734:734:int getSpanFlags(java.lang.Object) -> getSpanFlags
    724:724:int getSpanStart(java.lang.Object) -> getSpanStart
    714:717:java.lang.Object[] getSpans(int,int,java.lang.Class) -> getSpans
    653:663:java.util.concurrent.Future getTextFuture(java.lang.CharSequence,androidx.core.text.PrecomputedTextCompat$Params,java.util.concurrent.Executor) -> getTextFuture
    749:749:int length() -> length
    739:739:int nextSpanTransition(int,int,java.lang.Class) -> nextSpanTransition
    695:696:void removeSpan(java.lang.Object) -> removeSpan
    678:679:void setSpan(java.lang.Object,int,int,int) -> setSpan
    759:759:java.lang.CharSequence subSequence(int,int) -> subSequence
    765:765:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params -> androidx.core.text.PrecomputedTextCompat$Params:
    197:211:void <init>(android.text.TextPaint,android.text.TextDirectionHeuristic,int,int) -> <init>
    214:220:void <init>(android.text.PrecomputedText$Params) -> <init>
    332:347:boolean equals(java.lang.Object) -> equals
    275:322:boolean equalsWithoutTextDirection(androidx.core.text.PrecomputedTextCompat$Params) -> equalsWithoutTextDirection
    253:253:int getBreakStrategy() -> getBreakStrategy
    265:265:int getHyphenationFrequency() -> getHyphenationFrequency
    241:241:android.text.TextDirectionHeuristic getTextDirection() -> getTextDirection
    228:228:android.text.TextPaint getTextPaint() -> getTextPaint
    352:363:int hashCode() -> hashCode
    379:400:java.lang.String toString() -> toString
androidx.core.text.PrecomputedTextCompat$Params$Builder -> androidx.core.text.PrecomputedTextCompat$Params$Builder:
    116:129:void <init>(android.text.TextPaint) -> <init>
    191:191:androidx.core.text.PrecomputedTextCompat$Params build() -> build
    145:146:androidx.core.text.PrecomputedTextCompat$Params$Builder setBreakStrategy(int) -> setBreakStrategy
    163:164:androidx.core.text.PrecomputedTextCompat$Params$Builder setHyphenationFrequency(int) -> setHyphenationFrequency
    181:182:androidx.core.text.PrecomputedTextCompat$Params$Builder setTextDirection(android.text.TextDirectionHeuristic) -> setTextDirection
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask -> androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask:
    586:587:void <init>(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence) -> <init>
androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback -> androidx.core.text.PrecomputedTextCompat$PrecomputedTextFutureTask$PrecomputedTextCallback:
    573:576:void <init>(androidx.core.text.PrecomputedTextCompat$Params,java.lang.CharSequence) -> <init>
    568:568:java.lang.Object call() -> call
    580:580:androidx.core.text.PrecomputedTextCompat call() -> call
androidx.core.text.SpannableStringBuilderKt -> androidx.core.text.SpannableStringBuilderKt:
    120:120:android.text.SpannableStringBuilder backgroundColor(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1) -> backgroundColor
    72:72:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> backgroundColor
    72:72:android.text.SpannableStringBuilder backgroundColor(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1):172 -> backgroundColor
    73:73:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> backgroundColor
    73:73:android.text.SpannableStringBuilder backgroundColor(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1):173 -> backgroundColor
    74:74:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> backgroundColor
    74:74:android.text.SpannableStringBuilder backgroundColor(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1):174 -> backgroundColor
    75:75:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> backgroundColor
    75:75:android.text.SpannableStringBuilder backgroundColor(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1):175 -> backgroundColor
    120:120:android.text.SpannableStringBuilder backgroundColor(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1) -> backgroundColor
    84:84:android.text.SpannableStringBuilder bold(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> bold
    72:72:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> bold
    72:72:android.text.SpannableStringBuilder bold(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):156 -> bold
    73:73:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> bold
    73:73:android.text.SpannableStringBuilder bold(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):157 -> bold
    74:74:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> bold
    74:74:android.text.SpannableStringBuilder bold(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):158 -> bold
    75:75:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> bold
    75:75:android.text.SpannableStringBuilder bold(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):159 -> bold
    84:84:android.text.SpannableStringBuilder bold(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> bold
    39:41:android.text.SpannedString buildSpannedString(kotlin.jvm.functions.Function1) -> buildSpannedString
    110:110:android.text.SpannableStringBuilder color(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1) -> color
    72:72:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> color
    72:72:android.text.SpannableStringBuilder color(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1):168 -> color
    73:73:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> color
    73:73:android.text.SpannableStringBuilder color(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1):169 -> color
    74:74:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> color
    74:74:android.text.SpannableStringBuilder color(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1):170 -> color
    75:75:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> color
    75:75:android.text.SpannableStringBuilder color(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1):171 -> color
    110:110:android.text.SpannableStringBuilder color(android.text.SpannableStringBuilder,int,kotlin.jvm.functions.Function1) -> color
    55:58:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object[],kotlin.jvm.functions.Function1) -> inSpans
    72:75:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> inSpans
    92:92:android.text.SpannableStringBuilder italic(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> italic
    72:72:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> italic
    72:72:android.text.SpannableStringBuilder italic(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):160 -> italic
    73:73:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> italic
    73:73:android.text.SpannableStringBuilder italic(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):161 -> italic
    74:74:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> italic
    74:74:android.text.SpannableStringBuilder italic(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):162 -> italic
    75:75:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> italic
    75:75:android.text.SpannableStringBuilder italic(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):163 -> italic
    92:92:android.text.SpannableStringBuilder italic(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> italic
    138:138:android.text.SpannableStringBuilder scale(android.text.SpannableStringBuilder,float,kotlin.jvm.functions.Function1) -> scale
    72:72:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> scale
    72:72:android.text.SpannableStringBuilder scale(android.text.SpannableStringBuilder,float,kotlin.jvm.functions.Function1):180 -> scale
    73:73:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> scale
    73:73:android.text.SpannableStringBuilder scale(android.text.SpannableStringBuilder,float,kotlin.jvm.functions.Function1):181 -> scale
    74:74:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> scale
    74:74:android.text.SpannableStringBuilder scale(android.text.SpannableStringBuilder,float,kotlin.jvm.functions.Function1):182 -> scale
    75:75:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> scale
    75:75:android.text.SpannableStringBuilder scale(android.text.SpannableStringBuilder,float,kotlin.jvm.functions.Function1):183 -> scale
    138:138:android.text.SpannableStringBuilder scale(android.text.SpannableStringBuilder,float,kotlin.jvm.functions.Function1) -> scale
    128:128:android.text.SpannableStringBuilder strikeThrough(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> strikeThrough
    72:72:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> strikeThrough
    72:72:android.text.SpannableStringBuilder strikeThrough(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):176 -> strikeThrough
    73:73:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> strikeThrough
    73:73:android.text.SpannableStringBuilder strikeThrough(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):177 -> strikeThrough
    74:74:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> strikeThrough
    74:74:android.text.SpannableStringBuilder strikeThrough(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):178 -> strikeThrough
    75:75:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> strikeThrough
    75:75:android.text.SpannableStringBuilder strikeThrough(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):179 -> strikeThrough
    128:128:android.text.SpannableStringBuilder strikeThrough(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> strikeThrough
    154:154:android.text.SpannableStringBuilder subscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> subscript
    72:72:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> subscript
    72:72:android.text.SpannableStringBuilder subscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):188 -> subscript
    73:73:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> subscript
    73:73:android.text.SpannableStringBuilder subscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):189 -> subscript
    74:74:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> subscript
    74:74:android.text.SpannableStringBuilder subscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):190 -> subscript
    75:75:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> subscript
    75:75:android.text.SpannableStringBuilder subscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):191 -> subscript
    154:154:android.text.SpannableStringBuilder subscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> subscript
    146:146:android.text.SpannableStringBuilder superscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> superscript
    72:72:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> superscript
    72:72:android.text.SpannableStringBuilder superscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):184 -> superscript
    73:73:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> superscript
    73:73:android.text.SpannableStringBuilder superscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):185 -> superscript
    74:74:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> superscript
    74:74:android.text.SpannableStringBuilder superscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):186 -> superscript
    75:75:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> superscript
    75:75:android.text.SpannableStringBuilder superscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):187 -> superscript
    146:146:android.text.SpannableStringBuilder superscript(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> superscript
    100:100:android.text.SpannableStringBuilder underline(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> underline
    72:72:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> underline
    72:72:android.text.SpannableStringBuilder underline(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):164 -> underline
    73:73:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> underline
    73:73:android.text.SpannableStringBuilder underline(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):165 -> underline
    74:74:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> underline
    74:74:android.text.SpannableStringBuilder underline(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):166 -> underline
    75:75:android.text.SpannableStringBuilder inSpans(android.text.SpannableStringBuilder,java.lang.Object,kotlin.jvm.functions.Function1) -> underline
    75:75:android.text.SpannableStringBuilder underline(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1):167 -> underline
    100:100:android.text.SpannableStringBuilder underline(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> underline
androidx.core.text.SpannableStringKt -> androidx.core.text.SpannableStringKt:
    34:34:void clearSpans(android.text.Spannable) -> clearSpans
    31:31:java.lang.Object[] androidx.core.text.SpannedStringKt.getSpans$default(android.text.Spanned,int,int,int,java.lang.Object) -> clearSpans
    31:31:void clearSpans(android.text.Spannable):69 -> clearSpans
    32:32:java.lang.Object[] androidx.core.text.SpannedStringKt.getSpans(android.text.Spanned,int,int) -> clearSpans
    32:32:void clearSpans(android.text.Spannable):70 -> clearSpans
    34:34:void clearSpans(android.text.Spannable) -> clearSpans
    49:50:void set(android.text.Spannable,int,int,java.lang.Object) -> set
    66:67:void set(android.text.Spannable,kotlin.ranges.IntRange,java.lang.Object) -> set
    30:30:android.text.Spannable toSpannable(java.lang.CharSequence) -> toSpannable
androidx.core.text.SpannedStringKt -> androidx.core.text.SpannedStringKt:
    32:32:java.lang.Object[] getSpans(android.text.Spanned,int,int) -> getSpans
    31:31:java.lang.Object[] getSpans$default(android.text.Spanned,int,int,int,java.lang.Object) -> getSpans$default
    32:32:java.lang.Object[] getSpans(android.text.Spanned,int,int) -> getSpans$default
    32:32:java.lang.Object[] getSpans$default(android.text.Spanned,int,int,int,java.lang.Object):34 -> getSpans$default
    28:28:android.text.Spanned toSpanned(java.lang.CharSequence) -> toSpanned
androidx.core.text.StringKt -> androidx.core.text.StringKt:
    28:28:java.lang.String htmlEncode(java.lang.String) -> htmlEncode
androidx.core.text.TextDirectionHeuristicsCompat -> androidx.core.text.TextDirectionHeuristicsCompat:
    33:68:void <clinit>() -> <clinit>
    257:257:void <init>() -> <init>
    79:81:int isRtlText(int) -> isRtlText
    91:95:int isRtlTextOrFormat(int) -> isRtlTextOrFormat
androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong -> androidx.core.text.TextDirectionHeuristicsCompat$AnyStrong:
    235:235:void <clinit>() -> <clinit>
    231:233:void <init>(boolean) -> <init>
    206:228:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong -> androidx.core.text.TextDirectionHeuristicsCompat$FirstStrong:
    193:193:void <clinit>() -> <clinit>
    190:191:void <init>() -> <init>
    183:187:int checkRtl(java.lang.CharSequence,int,int) -> checkRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicImpl:
    114:116:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm) -> <init>
    140:142:boolean doCheck(java.lang.CharSequence,int,int) -> doCheck
    125:125:boolean isRtl(char[],int,int) -> isRtl
    130:131:boolean isRtl(java.lang.CharSequence,int,int) -> isRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicInternal:
    156:158:void <init>(androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionAlgorithm,boolean) -> <init>
    162:162:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale -> androidx.core.text.TextDirectionHeuristicsCompat$TextDirectionHeuristicLocale:
    253:253:void <clinit>() -> <clinit>
    244:245:void <init>() -> <init>
    249:250:boolean defaultIsRtl() -> defaultIsRtl
androidx.core.text.TextUtilsCompat -> androidx.core.text.TextUtilsCompat:
    33:33:void <clinit>() -> <clinit>
    130:130:void <init>() -> <init>
    119:122:int getLayoutDirectionFromFirstChar(java.util.Locale) -> getLayoutDirectionFromFirstChar
    90:91:int getLayoutDirectionFromLocale(java.util.Locale) -> getLayoutDirectionFromLocale
    45:46:java.lang.String htmlEncode(java.lang.String) -> htmlEncode
androidx.core.text.util.FindAddress -> androidx.core.text.util.FindAddress:
    72:267:void <clinit>() -> <clinit>
    517:518:void <init>() -> <init>
    401:490:int attemptMatch(java.lang.String,java.util.regex.MatchResult) -> attemptMatch
    272:297:boolean checkHouseNumber(java.lang.String) -> checkHouseNumber
    500:514:java.lang.String findAddress(java.lang.String) -> findAddress
    388:388:boolean isValidLocationName(java.lang.String) -> isValidLocationName
    345:351:boolean isValidZipCode(java.lang.String,java.util.regex.MatchResult) -> isValidZipCode
    366:366:boolean isValidZipCode(java.lang.String,java.lang.String) -> isValidZipCode
    377:377:boolean isValidZipCode(java.lang.String) -> isValidZipCode
    310:316:java.util.regex.MatchResult matchHouseNumber(java.lang.String,int) -> matchHouseNumber
    330:332:java.util.regex.MatchResult matchState(java.lang.String,int) -> matchState
androidx.core.text.util.FindAddress$ZipRange -> androidx.core.text.util.FindAddress$ZipRange:
    43:48:void <init>(int,int,int,int) -> <init>
    51:52:boolean matches(java.lang.String) -> matches
androidx.core.text.util.LinkifyCompat -> androidx.core.text.util.LinkifyCompat:
    57:59:void <clinit>() -> <clinit>
    542:542:void <init>() -> <init>
    380:387:void addLinkMovementMethod(android.widget.TextView) -> addLinkMovementMethod
    102:149:boolean addLinks(android.text.Spannable,int) -> addLinks
    164:190:boolean addLinks(android.widget.TextView,int) -> addLinks
    207:212:void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String) -> addLinks
    231:236:void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    259:271:void addLinks(android.widget.TextView,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    284:287:boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String) -> addLinks
    308:311:boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    335:372:boolean addLinks(android.text.Spannable,java.util.regex.Pattern,java.lang.String,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> addLinks
    440:443:void applyLink(java.lang.String,int,int,android.text.Spannable) -> applyLink
    487:490:java.lang.String findAddress(java.lang.String) -> findAddress
    420:437:void gatherLinks(java.util.ArrayList,android.text.Spannable,java.util.regex.Pattern,java.lang.String[],android.text.util.Linkify$MatchFilter,android.text.util.Linkify$TransformFilter) -> gatherLinks
    446:482:void gatherMapLinks(java.util.ArrayList,android.text.Spannable) -> gatherMapLinks
    391:414:java.lang.String makeUrl(java.lang.String,java.lang.String[],java.util.regex.Matcher,android.text.util.Linkify$TransformFilter) -> makeUrl
    495:537:void pruneOverlaps(java.util.ArrayList,android.text.Spannable) -> pruneOverlaps
    376:376:boolean shouldAddLinksFallbackToFramework() -> shouldAddLinksFallbackToFramework
androidx.core.text.util.LinkifyCompat$1 -> androidx.core.text.util.LinkifyCompat$1:
    59:59:void <init>() -> <init>
    59:59:int compare(java.lang.Object,java.lang.Object) -> compare
    62:78:int compare(androidx.core.text.util.LinkifyCompat$LinkSpec,androidx.core.text.util.LinkifyCompat$LinkSpec) -> compare
androidx.core.text.util.LinkifyCompat$LinkSpec -> androidx.core.text.util.LinkifyCompat$LinkSpec:
    550:551:void <init>() -> <init>
androidx.core.transition.TransitionKt -> androidx.core.transition.TransitionKt:
    68:76:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> addListener
    62:66:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addListener$default
    68:68:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> addListener$default
    68:68:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object):153 -> addListener$default
    75:75:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> addListener$default
    75:75:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object):160 -> addListener$default
    76:76:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> addListener$default
    76:76:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object):161 -> addListener$default
    41:41:android.transition.Transition$TransitionListener doOnCancel(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnCancel
    62:62:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnCancel
    62:62:android.transition.Transition$TransitionListener doOnCancel(android.transition.Transition,kotlin.jvm.functions.Function1):108 -> doOnCancel
    63:63:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnCancel
    63:63:android.transition.Transition$TransitionListener doOnCancel(android.transition.Transition,kotlin.jvm.functions.Function1):109 -> doOnCancel
    65:65:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnCancel
    65:65:android.transition.Transition$TransitionListener doOnCancel(android.transition.Transition,kotlin.jvm.functions.Function1):111 -> doOnCancel
    66:66:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnCancel
    66:66:android.transition.Transition$TransitionListener doOnCancel(android.transition.Transition,kotlin.jvm.functions.Function1):112 -> doOnCancel
    68:68:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnCancel
    68:68:android.transition.Transition$TransitionListener doOnCancel(android.transition.Transition,kotlin.jvm.functions.Function1):114 -> doOnCancel
    75:75:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnCancel
    75:75:android.transition.Transition$TransitionListener doOnCancel(android.transition.Transition,kotlin.jvm.functions.Function1):121 -> doOnCancel
    76:76:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnCancel
    76:76:android.transition.Transition$TransitionListener doOnCancel(android.transition.Transition,kotlin.jvm.functions.Function1):122 -> doOnCancel
    41:41:android.transition.Transition$TransitionListener doOnCancel(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnCancel
    27:27:android.transition.Transition$TransitionListener doOnEnd(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnEnd
    63:63:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnEnd
    63:63:android.transition.Transition$TransitionListener doOnEnd(android.transition.Transition,kotlin.jvm.functions.Function1):79 -> doOnEnd
    64:64:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnEnd
    64:64:android.transition.Transition$TransitionListener doOnEnd(android.transition.Transition,kotlin.jvm.functions.Function1):80 -> doOnEnd
    65:65:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnEnd
    65:65:android.transition.Transition$TransitionListener doOnEnd(android.transition.Transition,kotlin.jvm.functions.Function1):81 -> doOnEnd
    66:66:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnEnd
    66:66:android.transition.Transition$TransitionListener doOnEnd(android.transition.Transition,kotlin.jvm.functions.Function1):82 -> doOnEnd
    68:68:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnEnd
    68:68:android.transition.Transition$TransitionListener doOnEnd(android.transition.Transition,kotlin.jvm.functions.Function1):84 -> doOnEnd
    75:75:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnEnd
    75:75:android.transition.Transition$TransitionListener doOnEnd(android.transition.Transition,kotlin.jvm.functions.Function1):91 -> doOnEnd
    76:76:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnEnd
    76:76:android.transition.Transition$TransitionListener doOnEnd(android.transition.Transition,kotlin.jvm.functions.Function1):92 -> doOnEnd
    27:27:android.transition.Transition$TransitionListener doOnEnd(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnEnd
    55:55:android.transition.Transition$TransitionListener doOnPause(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnPause
    62:62:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnPause
    62:62:android.transition.Transition$TransitionListener doOnPause(android.transition.Transition,kotlin.jvm.functions.Function1):138 -> doOnPause
    63:63:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnPause
    63:63:android.transition.Transition$TransitionListener doOnPause(android.transition.Transition,kotlin.jvm.functions.Function1):139 -> doOnPause
    64:64:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnPause
    64:64:android.transition.Transition$TransitionListener doOnPause(android.transition.Transition,kotlin.jvm.functions.Function1):140 -> doOnPause
    65:65:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnPause
    65:65:android.transition.Transition$TransitionListener doOnPause(android.transition.Transition,kotlin.jvm.functions.Function1):141 -> doOnPause
    68:68:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnPause
    68:68:android.transition.Transition$TransitionListener doOnPause(android.transition.Transition,kotlin.jvm.functions.Function1):144 -> doOnPause
    75:75:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnPause
    75:75:android.transition.Transition$TransitionListener doOnPause(android.transition.Transition,kotlin.jvm.functions.Function1):151 -> doOnPause
    76:76:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnPause
    76:76:android.transition.Transition$TransitionListener doOnPause(android.transition.Transition,kotlin.jvm.functions.Function1):152 -> doOnPause
    55:55:android.transition.Transition$TransitionListener doOnPause(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnPause
    48:48:android.transition.Transition$TransitionListener doOnResume(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnResume
    62:62:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnResume
    62:62:android.transition.Transition$TransitionListener doOnResume(android.transition.Transition,kotlin.jvm.functions.Function1):123 -> doOnResume
    63:63:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnResume
    63:63:android.transition.Transition$TransitionListener doOnResume(android.transition.Transition,kotlin.jvm.functions.Function1):124 -> doOnResume
    64:64:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnResume
    64:64:android.transition.Transition$TransitionListener doOnResume(android.transition.Transition,kotlin.jvm.functions.Function1):125 -> doOnResume
    66:66:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnResume
    66:66:android.transition.Transition$TransitionListener doOnResume(android.transition.Transition,kotlin.jvm.functions.Function1):127 -> doOnResume
    68:68:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnResume
    68:68:android.transition.Transition$TransitionListener doOnResume(android.transition.Transition,kotlin.jvm.functions.Function1):129 -> doOnResume
    75:75:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnResume
    75:75:android.transition.Transition$TransitionListener doOnResume(android.transition.Transition,kotlin.jvm.functions.Function1):136 -> doOnResume
    76:76:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnResume
    76:76:android.transition.Transition$TransitionListener doOnResume(android.transition.Transition,kotlin.jvm.functions.Function1):137 -> doOnResume
    48:48:android.transition.Transition$TransitionListener doOnResume(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnResume
    34:34:android.transition.Transition$TransitionListener doOnStart(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnStart
    62:62:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnStart
    62:62:android.transition.Transition$TransitionListener doOnStart(android.transition.Transition,kotlin.jvm.functions.Function1):93 -> doOnStart
    64:64:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnStart
    64:64:android.transition.Transition$TransitionListener doOnStart(android.transition.Transition,kotlin.jvm.functions.Function1):95 -> doOnStart
    65:65:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnStart
    65:65:android.transition.Transition$TransitionListener doOnStart(android.transition.Transition,kotlin.jvm.functions.Function1):96 -> doOnStart
    66:66:android.transition.Transition$TransitionListener addListener$default(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnStart
    66:66:android.transition.Transition$TransitionListener doOnStart(android.transition.Transition,kotlin.jvm.functions.Function1):97 -> doOnStart
    68:68:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnStart
    68:68:android.transition.Transition$TransitionListener doOnStart(android.transition.Transition,kotlin.jvm.functions.Function1):99 -> doOnStart
    75:75:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnStart
    75:75:android.transition.Transition$TransitionListener doOnStart(android.transition.Transition,kotlin.jvm.functions.Function1):106 -> doOnStart
    76:76:android.transition.Transition$TransitionListener addListener(android.transition.Transition,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> doOnStart
    76:76:android.transition.Transition$TransitionListener doOnStart(android.transition.Transition,kotlin.jvm.functions.Function1):107 -> doOnStart
    34:34:android.transition.Transition$TransitionListener doOnStart(android.transition.Transition,kotlin.jvm.functions.Function1) -> doOnStart
androidx.core.transition.TransitionKt$addListener$1 -> androidx.core.transition.TransitionKt$addListener$1:
    62:62:void invoke(android.transition.Transition) -> invoke
androidx.core.transition.TransitionKt$addListener$2 -> androidx.core.transition.TransitionKt$addListener$2:
    63:63:void invoke(android.transition.Transition) -> invoke
androidx.core.transition.TransitionKt$addListener$3 -> androidx.core.transition.TransitionKt$addListener$3:
    64:64:void invoke(android.transition.Transition) -> invoke
androidx.core.transition.TransitionKt$addListener$4 -> androidx.core.transition.TransitionKt$addListener$4:
    65:65:void invoke(android.transition.Transition) -> invoke
androidx.core.transition.TransitionKt$addListener$5 -> androidx.core.transition.TransitionKt$addListener$5:
    66:66:void invoke(android.transition.Transition) -> invoke
androidx.core.transition.TransitionKt$addListener$listener$1 -> androidx.core.transition.TransitionKt$addListener$listener$1:
    68:68:void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    72:72:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    69:69:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    71:71:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    70:70:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    73:73:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$1 -> androidx.core.transition.TransitionKt$doOnCancel$$inlined$addListener$1:
    68:68:void androidx.core.transition.TransitionKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    68:68:void <init>(kotlin.jvm.functions.Function1):68 -> <init>
    72:72:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    72:72:void onTransitionCancel(android.transition.Transition):72 -> onTransitionCancel
    69:69:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    69:69:void onTransitionEnd(android.transition.Transition):69 -> onTransitionEnd
    62:62:void androidx.core.transition.TransitionKt$addListener$1.invoke(android.transition.Transition) -> onTransitionEnd
    62:62:void onTransitionEnd(android.transition.Transition):79 -> onTransitionEnd
    71:71:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionPause(android.transition.Transition) -> onTransitionPause
    71:71:void onTransitionPause(android.transition.Transition):71 -> onTransitionPause
    66:66:void androidx.core.transition.TransitionKt$addListener$5.invoke(android.transition.Transition) -> onTransitionPause
    66:66:void onTransitionPause(android.transition.Transition):81 -> onTransitionPause
    70:70:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionResume(android.transition.Transition) -> onTransitionResume
    70:70:void onTransitionResume(android.transition.Transition):70 -> onTransitionResume
    65:65:void androidx.core.transition.TransitionKt$addListener$4.invoke(android.transition.Transition) -> onTransitionResume
    65:65:void onTransitionResume(android.transition.Transition):80 -> onTransitionResume
    73:73:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionStart(android.transition.Transition) -> onTransitionStart
    73:73:void onTransitionStart(android.transition.Transition):73 -> onTransitionStart
    63:63:void androidx.core.transition.TransitionKt$addListener$2.invoke(android.transition.Transition) -> onTransitionStart
    63:63:void onTransitionStart(android.transition.Transition):82 -> onTransitionStart
androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$1 -> androidx.core.transition.TransitionKt$doOnEnd$$inlined$addListener$1:
    68:68:void androidx.core.transition.TransitionKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    68:68:void <init>(kotlin.jvm.functions.Function1):68 -> <init>
    72:72:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    72:72:void onTransitionCancel(android.transition.Transition):72 -> onTransitionCancel
    64:64:void androidx.core.transition.TransitionKt$addListener$3.invoke(android.transition.Transition) -> onTransitionCancel
    64:64:void onTransitionCancel(android.transition.Transition):81 -> onTransitionCancel
    69:69:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    69:69:void onTransitionEnd(android.transition.Transition):69 -> onTransitionEnd
    71:71:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionPause(android.transition.Transition) -> onTransitionPause
    71:71:void onTransitionPause(android.transition.Transition):71 -> onTransitionPause
    66:66:void androidx.core.transition.TransitionKt$addListener$5.invoke(android.transition.Transition) -> onTransitionPause
    66:66:void onTransitionPause(android.transition.Transition):80 -> onTransitionPause
    70:70:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionResume(android.transition.Transition) -> onTransitionResume
    70:70:void onTransitionResume(android.transition.Transition):70 -> onTransitionResume
    65:65:void androidx.core.transition.TransitionKt$addListener$4.invoke(android.transition.Transition) -> onTransitionResume
    65:65:void onTransitionResume(android.transition.Transition):79 -> onTransitionResume
    73:73:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionStart(android.transition.Transition) -> onTransitionStart
    73:73:void onTransitionStart(android.transition.Transition):73 -> onTransitionStart
    63:63:void androidx.core.transition.TransitionKt$addListener$2.invoke(android.transition.Transition) -> onTransitionStart
    63:63:void onTransitionStart(android.transition.Transition):82 -> onTransitionStart
androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$1 -> androidx.core.transition.TransitionKt$doOnPause$$inlined$addListener$1:
    68:68:void androidx.core.transition.TransitionKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    68:68:void <init>(kotlin.jvm.functions.Function1):68 -> <init>
    72:72:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    72:72:void onTransitionCancel(android.transition.Transition):72 -> onTransitionCancel
    64:64:void androidx.core.transition.TransitionKt$addListener$3.invoke(android.transition.Transition) -> onTransitionCancel
    64:64:void onTransitionCancel(android.transition.Transition):81 -> onTransitionCancel
    69:69:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    69:69:void onTransitionEnd(android.transition.Transition):69 -> onTransitionEnd
    62:62:void androidx.core.transition.TransitionKt$addListener$1.invoke(android.transition.Transition) -> onTransitionEnd
    62:62:void onTransitionEnd(android.transition.Transition):79 -> onTransitionEnd
    71:71:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionPause(android.transition.Transition) -> onTransitionPause
    71:71:void onTransitionPause(android.transition.Transition):71 -> onTransitionPause
    70:70:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionResume(android.transition.Transition) -> onTransitionResume
    70:70:void onTransitionResume(android.transition.Transition):70 -> onTransitionResume
    65:65:void androidx.core.transition.TransitionKt$addListener$4.invoke(android.transition.Transition) -> onTransitionResume
    65:65:void onTransitionResume(android.transition.Transition):80 -> onTransitionResume
    73:73:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionStart(android.transition.Transition) -> onTransitionStart
    73:73:void onTransitionStart(android.transition.Transition):73 -> onTransitionStart
    63:63:void androidx.core.transition.TransitionKt$addListener$2.invoke(android.transition.Transition) -> onTransitionStart
    63:63:void onTransitionStart(android.transition.Transition):82 -> onTransitionStart
androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$1 -> androidx.core.transition.TransitionKt$doOnResume$$inlined$addListener$1:
    68:68:void androidx.core.transition.TransitionKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    68:68:void <init>(kotlin.jvm.functions.Function1):68 -> <init>
    72:72:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    72:72:void onTransitionCancel(android.transition.Transition):72 -> onTransitionCancel
    64:64:void androidx.core.transition.TransitionKt$addListener$3.invoke(android.transition.Transition) -> onTransitionCancel
    64:64:void onTransitionCancel(android.transition.Transition):81 -> onTransitionCancel
    69:69:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    69:69:void onTransitionEnd(android.transition.Transition):69 -> onTransitionEnd
    62:62:void androidx.core.transition.TransitionKt$addListener$1.invoke(android.transition.Transition) -> onTransitionEnd
    62:62:void onTransitionEnd(android.transition.Transition):79 -> onTransitionEnd
    71:71:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionPause(android.transition.Transition) -> onTransitionPause
    71:71:void onTransitionPause(android.transition.Transition):71 -> onTransitionPause
    66:66:void androidx.core.transition.TransitionKt$addListener$5.invoke(android.transition.Transition) -> onTransitionPause
    66:66:void onTransitionPause(android.transition.Transition):80 -> onTransitionPause
    70:70:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionResume(android.transition.Transition) -> onTransitionResume
    70:70:void onTransitionResume(android.transition.Transition):70 -> onTransitionResume
    73:73:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionStart(android.transition.Transition) -> onTransitionStart
    73:73:void onTransitionStart(android.transition.Transition):73 -> onTransitionStart
    63:63:void androidx.core.transition.TransitionKt$addListener$2.invoke(android.transition.Transition) -> onTransitionStart
    63:63:void onTransitionStart(android.transition.Transition):82 -> onTransitionStart
androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$1 -> androidx.core.transition.TransitionKt$doOnStart$$inlined$addListener$1:
    68:68:void androidx.core.transition.TransitionKt$addListener$listener$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    68:68:void <init>(kotlin.jvm.functions.Function1):68 -> <init>
    72:72:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    72:72:void onTransitionCancel(android.transition.Transition):72 -> onTransitionCancel
    64:64:void androidx.core.transition.TransitionKt$addListener$3.invoke(android.transition.Transition) -> onTransitionCancel
    64:64:void onTransitionCancel(android.transition.Transition):82 -> onTransitionCancel
    69:69:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    69:69:void onTransitionEnd(android.transition.Transition):69 -> onTransitionEnd
    62:62:void androidx.core.transition.TransitionKt$addListener$1.invoke(android.transition.Transition) -> onTransitionEnd
    62:62:void onTransitionEnd(android.transition.Transition):79 -> onTransitionEnd
    71:71:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionPause(android.transition.Transition) -> onTransitionPause
    71:71:void onTransitionPause(android.transition.Transition):71 -> onTransitionPause
    66:66:void androidx.core.transition.TransitionKt$addListener$5.invoke(android.transition.Transition) -> onTransitionPause
    66:66:void onTransitionPause(android.transition.Transition):81 -> onTransitionPause
    70:70:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionResume(android.transition.Transition) -> onTransitionResume
    70:70:void onTransitionResume(android.transition.Transition):70 -> onTransitionResume
    65:65:void androidx.core.transition.TransitionKt$addListener$4.invoke(android.transition.Transition) -> onTransitionResume
    65:65:void onTransitionResume(android.transition.Transition):80 -> onTransitionResume
    73:73:void androidx.core.transition.TransitionKt$addListener$listener$1.onTransitionStart(android.transition.Transition) -> onTransitionStart
    73:73:void onTransitionStart(android.transition.Transition):73 -> onTransitionStart
androidx.core.util.AtomicFile -> androidx.core.util.AtomicFile:
    54:57:void <init>(java.io.File) -> <init>
    72:74:void delete() -> delete
    144:154:void failWrite(java.io.FileOutputStream) -> failWrite
    127:136:void finishWrite(java.io.FileOutputStream) -> finishWrite
    65:65:java.io.File getBaseFile() -> getBaseFile
    170:174:java.io.FileInputStream openRead() -> openRead
    183:207:byte[] readFully() -> readFully
    93:109:java.io.FileOutputStream startWrite() -> startWrite
    212:216:boolean sync(java.io.FileOutputStream) -> sync
androidx.core.util.AtomicFileKt -> androidx.core.util.AtomicFileKt:
    71:71:byte[] readBytes(android.util.AtomicFile) -> readBytes
    80:80:java.lang.String readText(android.util.AtomicFile,java.nio.charset.Charset) -> readText
    79:79:java.lang.String readText$default(android.util.AtomicFile,java.nio.charset.Charset,int,java.lang.Object) -> readText$default
    32:42:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> tryWrite
    51:51:void writeBytes(android.util.AtomicFile,byte[]) -> writeBytes
    32:32:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    32:32:void writeBytes(android.util.AtomicFile,byte[]):83 -> writeBytes
    33:33:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    33:33:void writeBytes(android.util.AtomicFile,byte[]):84 -> writeBytes
    34:34:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    34:34:void writeBytes(android.util.AtomicFile,byte[]):85 -> writeBytes
    35:35:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    35:35:void writeBytes(android.util.AtomicFile,byte[]):86 -> writeBytes
    52:53:void writeBytes(android.util.AtomicFile,byte[]) -> writeBytes
    36:36:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    36:36:void writeBytes(android.util.AtomicFile,byte[]):87 -> writeBytes
    38:38:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    38:38:void writeBytes(android.util.AtomicFile,byte[]):89 -> writeBytes
    39:39:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    39:39:void writeBytes(android.util.AtomicFile,byte[]):90 -> writeBytes
    42:42:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    42:42:void writeBytes(android.util.AtomicFile,byte[]):93 -> writeBytes
    43:43:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    43:43:void writeBytes(android.util.AtomicFile,byte[]):94 -> writeBytes
    44:44:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    44:44:void writeBytes(android.util.AtomicFile,byte[]):95 -> writeBytes
    54:54:void writeBytes(android.util.AtomicFile,byte[]) -> writeBytes
    43:43:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    43:43:void writeBytes(android.util.AtomicFile,byte[]):94 -> writeBytes
    38:38:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    38:38:void writeBytes(android.util.AtomicFile,byte[]):89 -> writeBytes
    41:41:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    41:41:void writeBytes(android.util.AtomicFile,byte[]):92 -> writeBytes
    42:42:void tryWrite(android.util.AtomicFile,kotlin.jvm.functions.Function1) -> writeBytes
    42:42:void writeBytes(android.util.AtomicFile,byte[]):93 -> writeBytes
    62:63:void writeText(android.util.AtomicFile,java.lang.String,java.nio.charset.Charset) -> writeText
    61:61:void writeText$default(android.util.AtomicFile,java.lang.String,java.nio.charset.Charset,int,java.lang.Object) -> writeText$default
androidx.core.util.DebugUtils -> androidx.core.util.DebugUtils:
    49:50:void <init>() -> <init>
    32:47:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> buildShortClassTag
androidx.core.util.HalfKt -> androidx.core.util.HalfKt:
    33:33:android.util.Half toHalf(short) -> toHalf
    41:41:android.util.Half toHalf(float) -> toHalf
    49:49:android.util.Half toHalf(double) -> toHalf
    41:41:android.util.Half toHalf(float) -> toHalf
    41:41:android.util.Half toHalf(double):59 -> toHalf
    49:49:android.util.Half toHalf(double) -> toHalf
    57:57:android.util.Half toHalf(java.lang.String) -> toHalf
androidx.core.util.LogWriter -> androidx.core.util.LogWriter:
    43:45:void <init>(java.lang.String) -> <init>
    48:49:void close() -> close
    52:53:void flush() -> flush
    68:72:void flushBuilder() -> flushBuilder
    56:65:void write(char[],int,int) -> write
androidx.core.util.LongSparseArrayKt -> androidx.core.util.LongSparseArrayKt:
    30:30:boolean contains(android.util.LongSparseArray,long) -> contains
    47:47:boolean containsKey(android.util.LongSparseArray,long) -> containsKey
    51:51:boolean containsValue(android.util.LongSparseArray,java.lang.Object) -> containsValue
    89:92:void forEach(android.util.LongSparseArray,kotlin.jvm.functions.Function2) -> forEach
    56:56:java.lang.Object getOrDefault(android.util.LongSparseArray,long,java.lang.Object) -> getOrDefault
    61:61:java.lang.Object getOrElse(android.util.LongSparseArray,long,kotlin.jvm.functions.Function0) -> getOrElse
    26:26:int getSize(android.util.LongSparseArray) -> getSize
    65:65:boolean isEmpty(android.util.LongSparseArray) -> isEmpty
    69:69:boolean isNotEmpty(android.util.LongSparseArray) -> isNotEmpty
    96:100:kotlin.collections.LongIterator keyIterator(android.util.LongSparseArray) -> keyIterator
    39:42:android.util.LongSparseArray plus(android.util.LongSparseArray,android.util.LongSparseArray) -> plus
    84:84:void putAll(android.util.LongSparseArray,android.util.LongSparseArray) -> putAll
    89:89:void forEach(android.util.LongSparseArray,kotlin.jvm.functions.Function2) -> putAll
    89:89:void putAll(android.util.LongSparseArray,android.util.LongSparseArray):110 -> putAll
    90:90:void forEach(android.util.LongSparseArray,kotlin.jvm.functions.Function2) -> putAll
    90:90:void putAll(android.util.LongSparseArray,android.util.LongSparseArray):111 -> putAll
    84:84:void putAll(android.util.LongSparseArray,android.util.LongSparseArray) -> putAll
    89:89:void forEach(android.util.LongSparseArray,kotlin.jvm.functions.Function2) -> putAll
    89:89:void putAll(android.util.LongSparseArray,android.util.LongSparseArray):110 -> putAll
    92:92:void forEach(android.util.LongSparseArray,kotlin.jvm.functions.Function2) -> putAll
    92:92:void putAll(android.util.LongSparseArray,android.util.LongSparseArray):113 -> putAll
    84:84:void putAll(android.util.LongSparseArray,android.util.LongSparseArray) -> putAll
    74:79:boolean remove(android.util.LongSparseArray,long,java.lang.Object) -> remove
    34:34:void set(android.util.LongSparseArray,long,java.lang.Object) -> set
    104:108:java.util.Iterator valueIterator(android.util.LongSparseArray) -> valueIterator
androidx.core.util.LongSparseArrayKt$keyIterator$1 -> androidx.core.util.LongSparseArrayKt$keyIterator$1:
    96:96:void <init>(android.util.LongSparseArray) -> <init>
    97:97:int getIndex() -> getIndex
    98:98:boolean hasNext() -> hasNext
    99:99:long nextLong() -> nextLong
    97:97:void setIndex(int) -> setIndex
androidx.core.util.LongSparseArrayKt$valueIterator$1 -> androidx.core.util.LongSparseArrayKt$valueIterator$1:
    104:104:void <init>(android.util.LongSparseArray) -> <init>
    105:105:int getIndex() -> getIndex
    106:106:boolean hasNext() -> hasNext
    107:107:java.lang.Object next() -> next
    105:105:void setIndex(int) -> setIndex
androidx.core.util.LruCacheKt -> androidx.core.util.LruCacheKt:
    46:46:android.util.LruCache lruCache(int,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4) -> lruCache
    40:44:android.util.LruCache lruCache$default(int,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,int,java.lang.Object) -> lruCache$default
    46:46:android.util.LruCache lruCache(int,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4) -> lruCache$default
    46:46:android.util.LruCache lruCache$default(int,kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,int,java.lang.Object):55 -> lruCache$default
androidx.core.util.LruCacheKt$lruCache$1 -> androidx.core.util.LruCacheKt$lruCache$1:
    40:40:int invoke(java.lang.Object,java.lang.Object) -> invoke
androidx.core.util.LruCacheKt$lruCache$2 -> androidx.core.util.LruCacheKt$lruCache$2:
    42:42:java.lang.Object invoke(java.lang.Object) -> invoke
androidx.core.util.LruCacheKt$lruCache$3 -> androidx.core.util.LruCacheKt$lruCache$3:
    44:44:void invoke(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> invoke
androidx.core.util.LruCacheKt$lruCache$4 -> androidx.core.util.LruCacheKt$lruCache$4:
    46:46:void <init>(kotlin.jvm.functions.Function2,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,int,int) -> <init>
    48:48:java.lang.Object create(java.lang.Object) -> create
    50:51:void entryRemoved(boolean,java.lang.Object,java.lang.Object,java.lang.Object) -> entryRemoved
    47:47:int sizeOf(java.lang.Object,java.lang.Object) -> sizeOf
androidx.core.util.ObjectsCompat -> androidx.core.util.ObjectsCompat:
    29:31:void <init>() -> <init>
    50:51:boolean equals(java.lang.Object,java.lang.Object) -> equals
    92:93:int hash(java.lang.Object[]) -> hash
    65:65:int hashCode(java.lang.Object) -> hashCode
androidx.core.util.Pair -> androidx.core.util.Pair:
    37:40:void <init>(java.lang.Object,java.lang.Object) -> <init>
    83:83:androidx.core.util.Pair create(java.lang.Object,java.lang.Object) -> create
    52:56:boolean equals(java.lang.Object) -> equals
    66:66:int hashCode() -> hashCode
    72:72:java.lang.String toString() -> toString
androidx.core.util.PairKt -> androidx.core.util.PairKt:
    34:34:java.lang.Object component1(android.util.Pair) -> component1
    46:46:java.lang.Object component2(android.util.Pair) -> component2
    53:53:android.util.Pair toAndroidPair(kotlin.Pair) -> toAndroidPair
    49:49:kotlin.Pair toKotlinPair(android.util.Pair) -> toKotlinPair
androidx.core.util.PatternsCompat -> androidx.core.util.PatternsCompat:
    153:337:void <clinit>() -> <clinit>
    351:351:void <init>() -> <init>
androidx.core.util.Pools -> androidx.core.util.Pools:
    73:75:void <init>() -> <init>
androidx.core.util.Pools$SimplePool -> androidx.core.util.Pools$SimplePool:
    94:96:void <init>(int) -> <init>
    104:111:java.lang.Object acquire() -> acquire
    128:133:boolean isInPool(java.lang.Object) -> isInPool
    116:117:boolean release(java.lang.Object) -> release
androidx.core.util.Pools$SynchronizedPool -> androidx.core.util.Pools$SynchronizedPool:
    153:154:void <init>(int) -> <init>
    158:160:java.lang.Object acquire() -> acquire
    165:167:boolean release(java.lang.Object) -> release
androidx.core.util.Preconditions -> androidx.core.util.Preconditions:
    171:172:void <init>() -> <init>
    35:36:void checkArgument(boolean) -> checkArgument
    49:50:void checkArgument(boolean,java.lang.Object) -> checkArgument
    158:160:int checkArgumentInRange(int,int,int,java.lang.String) -> checkArgumentInRange
    121:122:int checkArgumentNonnegative(int,java.lang.String) -> checkArgumentNonnegative
    137:138:int checkArgumentNonnegative(int) -> checkArgumentNonnegative
    63:64:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    80:81:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    95:96:void checkState(boolean,java.lang.String) -> checkState
    108:109:void checkState(boolean) -> checkState
androidx.core.util.RangeKt -> androidx.core.util.RangeKt:
    46:46:android.util.Range and(android.util.Range,android.util.Range) -> and
    34:34:android.util.Range plus(android.util.Range,java.lang.Comparable) -> plus
    38:38:android.util.Range plus(android.util.Range,android.util.Range) -> plus
    30:30:android.util.Range rangeTo(java.lang.Comparable,java.lang.Comparable) -> rangeTo
    50:53:kotlin.ranges.ClosedRange toClosedRange(android.util.Range) -> toClosedRange
    57:57:android.util.Range toRange(kotlin.ranges.ClosedRange) -> toRange
androidx.core.util.RangeKt$toClosedRange$1 -> androidx.core.util.RangeKt$toClosedRange$1:
    50:50:void <init>(android.util.Range) -> <init>
    50:50:boolean contains(java.lang.Comparable) -> contains
    51:51:java.lang.Comparable getEndInclusive() -> getEndInclusive
    52:52:java.lang.Comparable getStart() -> getStart
    50:50:boolean isEmpty() -> isEmpty
androidx.core.util.SizeKt -> androidx.core.util.SizeKt:
    35:35:int component1(android.util.Size) -> component1
    59:59:float component1(android.util.SizeF) -> component1
    47:47:int component2(android.util.Size) -> component2
    71:71:float component2(android.util.SizeF) -> component2
androidx.core.util.SparseArrayKt -> androidx.core.util.SparseArrayKt:
    27:27:boolean contains(android.util.SparseArray,int) -> contains
    41:41:boolean containsKey(android.util.SparseArray,int) -> containsKey
    44:44:boolean containsValue(android.util.SparseArray,java.lang.Object) -> containsValue
    74:77:void forEach(android.util.SparseArray,kotlin.jvm.functions.Function2) -> forEach
    47:47:java.lang.Object getOrDefault(android.util.SparseArray,int,java.lang.Object) -> getOrDefault
    51:51:java.lang.Object getOrElse(android.util.SparseArray,int,kotlin.jvm.functions.Function0) -> getOrElse
    24:24:int getSize(android.util.SparseArray) -> getSize
    54:54:boolean isEmpty(android.util.SparseArray) -> isEmpty
    57:57:boolean isNotEmpty(android.util.SparseArray) -> isNotEmpty
    80:84:kotlin.collections.IntIterator keyIterator(android.util.SparseArray) -> keyIterator
    34:37:android.util.SparseArray plus(android.util.SparseArray,android.util.SparseArray) -> plus
    70:70:void putAll(android.util.SparseArray,android.util.SparseArray) -> putAll
    74:74:void forEach(android.util.SparseArray,kotlin.jvm.functions.Function2) -> putAll
    74:74:void putAll(android.util.SparseArray,android.util.SparseArray):93 -> putAll
    75:75:void forEach(android.util.SparseArray,kotlin.jvm.functions.Function2) -> putAll
    75:75:void putAll(android.util.SparseArray,android.util.SparseArray):94 -> putAll
    70:70:void putAll(android.util.SparseArray,android.util.SparseArray) -> putAll
    74:74:void forEach(android.util.SparseArray,kotlin.jvm.functions.Function2) -> putAll
    74:74:void putAll(android.util.SparseArray,android.util.SparseArray):93 -> putAll
    77:77:void forEach(android.util.SparseArray,kotlin.jvm.functions.Function2) -> putAll
    77:77:void putAll(android.util.SparseArray,android.util.SparseArray):96 -> putAll
    70:70:void putAll(android.util.SparseArray,android.util.SparseArray) -> putAll
    61:66:boolean remove(android.util.SparseArray,int,java.lang.Object) -> remove
    30:30:void set(android.util.SparseArray,int,java.lang.Object) -> set
    87:91:java.util.Iterator valueIterator(android.util.SparseArray) -> valueIterator
androidx.core.util.SparseArrayKt$keyIterator$1 -> androidx.core.util.SparseArrayKt$keyIterator$1:
    80:80:void <init>(android.util.SparseArray) -> <init>
    81:81:int getIndex() -> getIndex
    82:82:boolean hasNext() -> hasNext
    83:83:int nextInt() -> nextInt
    81:81:void setIndex(int) -> setIndex
androidx.core.util.SparseArrayKt$valueIterator$1 -> androidx.core.util.SparseArrayKt$valueIterator$1:
    87:87:void <init>(android.util.SparseArray) -> <init>
    88:88:int getIndex() -> getIndex
    89:89:boolean hasNext() -> hasNext
    90:90:java.lang.Object next() -> next
    88:88:void setIndex(int) -> setIndex
androidx.core.util.SparseBooleanArrayKt -> androidx.core.util.SparseBooleanArrayKt:
    27:27:boolean contains(android.util.SparseBooleanArray,int) -> contains
    41:41:boolean containsKey(android.util.SparseBooleanArray,int) -> containsKey
    44:44:boolean containsValue(android.util.SparseBooleanArray,boolean) -> containsValue
    75:78:void forEach(android.util.SparseBooleanArray,kotlin.jvm.functions.Function2) -> forEach
    47:47:boolean getOrDefault(android.util.SparseBooleanArray,int,boolean) -> getOrDefault
    51:51:boolean getOrElse(android.util.SparseBooleanArray,int,kotlin.jvm.functions.Function0) -> getOrElse
    24:24:int getSize(android.util.SparseBooleanArray) -> getSize
    54:54:boolean isEmpty(android.util.SparseBooleanArray) -> isEmpty
    57:57:boolean isNotEmpty(android.util.SparseBooleanArray) -> isNotEmpty
    81:85:kotlin.collections.IntIterator keyIterator(android.util.SparseBooleanArray) -> keyIterator
    34:37:android.util.SparseBooleanArray plus(android.util.SparseBooleanArray,android.util.SparseBooleanArray) -> plus
    71:71:void putAll(android.util.SparseBooleanArray,android.util.SparseBooleanArray) -> putAll
    75:75:void forEach(android.util.SparseBooleanArray,kotlin.jvm.functions.Function2) -> putAll
    75:75:void putAll(android.util.SparseBooleanArray,android.util.SparseBooleanArray):94 -> putAll
    76:76:void forEach(android.util.SparseBooleanArray,kotlin.jvm.functions.Function2) -> putAll
    76:76:void putAll(android.util.SparseBooleanArray,android.util.SparseBooleanArray):95 -> putAll
    71:71:void putAll(android.util.SparseBooleanArray,android.util.SparseBooleanArray) -> putAll
    75:75:void forEach(android.util.SparseBooleanArray,kotlin.jvm.functions.Function2) -> putAll
    75:75:void putAll(android.util.SparseBooleanArray,android.util.SparseBooleanArray):94 -> putAll
    78:78:void forEach(android.util.SparseBooleanArray,kotlin.jvm.functions.Function2) -> putAll
    78:78:void putAll(android.util.SparseBooleanArray,android.util.SparseBooleanArray):97 -> putAll
    71:71:void putAll(android.util.SparseBooleanArray,android.util.SparseBooleanArray) -> putAll
    61:67:boolean remove(android.util.SparseBooleanArray,int,boolean) -> remove
    30:30:void set(android.util.SparseBooleanArray,int,boolean) -> set
    88:92:kotlin.collections.BooleanIterator valueIterator(android.util.SparseBooleanArray) -> valueIterator
androidx.core.util.SparseBooleanArrayKt$keyIterator$1 -> androidx.core.util.SparseBooleanArrayKt$keyIterator$1:
    81:81:void <init>(android.util.SparseBooleanArray) -> <init>
    82:82:int getIndex() -> getIndex
    83:83:boolean hasNext() -> hasNext
    84:84:int nextInt() -> nextInt
    82:82:void setIndex(int) -> setIndex
androidx.core.util.SparseBooleanArrayKt$valueIterator$1 -> androidx.core.util.SparseBooleanArrayKt$valueIterator$1:
    88:88:void <init>(android.util.SparseBooleanArray) -> <init>
    89:89:int getIndex() -> getIndex
    90:90:boolean hasNext() -> hasNext
    91:91:boolean nextBoolean() -> nextBoolean
    89:89:void setIndex(int) -> setIndex
androidx.core.util.SparseIntArrayKt -> androidx.core.util.SparseIntArrayKt:
    27:27:boolean contains(android.util.SparseIntArray,int) -> contains
    41:41:boolean containsKey(android.util.SparseIntArray,int) -> containsKey
    44:44:boolean containsValue(android.util.SparseIntArray,int) -> containsValue
    74:77:void forEach(android.util.SparseIntArray,kotlin.jvm.functions.Function2) -> forEach
    47:47:int getOrDefault(android.util.SparseIntArray,int,int) -> getOrDefault
    51:51:int getOrElse(android.util.SparseIntArray,int,kotlin.jvm.functions.Function0) -> getOrElse
    24:24:int getSize(android.util.SparseIntArray) -> getSize
    54:54:boolean isEmpty(android.util.SparseIntArray) -> isEmpty
    57:57:boolean isNotEmpty(android.util.SparseIntArray) -> isNotEmpty
    80:84:kotlin.collections.IntIterator keyIterator(android.util.SparseIntArray) -> keyIterator
    34:37:android.util.SparseIntArray plus(android.util.SparseIntArray,android.util.SparseIntArray) -> plus
    70:70:void putAll(android.util.SparseIntArray,android.util.SparseIntArray) -> putAll
    74:74:void forEach(android.util.SparseIntArray,kotlin.jvm.functions.Function2) -> putAll
    74:74:void putAll(android.util.SparseIntArray,android.util.SparseIntArray):93 -> putAll
    75:75:void forEach(android.util.SparseIntArray,kotlin.jvm.functions.Function2) -> putAll
    75:75:void putAll(android.util.SparseIntArray,android.util.SparseIntArray):94 -> putAll
    70:70:void putAll(android.util.SparseIntArray,android.util.SparseIntArray) -> putAll
    74:74:void forEach(android.util.SparseIntArray,kotlin.jvm.functions.Function2) -> putAll
    74:74:void putAll(android.util.SparseIntArray,android.util.SparseIntArray):93 -> putAll
    77:77:void forEach(android.util.SparseIntArray,kotlin.jvm.functions.Function2) -> putAll
    77:77:void putAll(android.util.SparseIntArray,android.util.SparseIntArray):96 -> putAll
    70:70:void putAll(android.util.SparseIntArray,android.util.SparseIntArray) -> putAll
    61:66:boolean remove(android.util.SparseIntArray,int,int) -> remove
    30:30:void set(android.util.SparseIntArray,int,int) -> set
    87:91:kotlin.collections.IntIterator valueIterator(android.util.SparseIntArray) -> valueIterator
androidx.core.util.SparseIntArrayKt$keyIterator$1 -> androidx.core.util.SparseIntArrayKt$keyIterator$1:
    80:80:void <init>(android.util.SparseIntArray) -> <init>
    81:81:int getIndex() -> getIndex
    82:82:boolean hasNext() -> hasNext
    83:83:int nextInt() -> nextInt
    81:81:void setIndex(int) -> setIndex
androidx.core.util.SparseIntArrayKt$valueIterator$1 -> androidx.core.util.SparseIntArrayKt$valueIterator$1:
    87:87:void <init>(android.util.SparseIntArray) -> <init>
    88:88:int getIndex() -> getIndex
    89:89:boolean hasNext() -> hasNext
    90:90:int nextInt() -> nextInt
    88:88:void setIndex(int) -> setIndex
androidx.core.util.SparseLongArrayKt -> androidx.core.util.SparseLongArrayKt:
    30:30:boolean contains(android.util.SparseLongArray,int) -> contains
    47:47:boolean containsKey(android.util.SparseLongArray,int) -> containsKey
    51:51:boolean containsValue(android.util.SparseLongArray,long) -> containsValue
    88:91:void forEach(android.util.SparseLongArray,kotlin.jvm.functions.Function2) -> forEach
    55:55:long getOrDefault(android.util.SparseLongArray,int,long) -> getOrDefault
    60:60:long getOrElse(android.util.SparseLongArray,int,kotlin.jvm.functions.Function0) -> getOrElse
    26:26:int getSize(android.util.SparseLongArray) -> getSize
    64:64:boolean isEmpty(android.util.SparseLongArray) -> isEmpty
    68:68:boolean isNotEmpty(android.util.SparseLongArray) -> isNotEmpty
    95:99:kotlin.collections.IntIterator keyIterator(android.util.SparseLongArray) -> keyIterator
    39:42:android.util.SparseLongArray plus(android.util.SparseLongArray,android.util.SparseLongArray) -> plus
    83:83:void putAll(android.util.SparseLongArray,android.util.SparseLongArray) -> putAll
    88:88:void forEach(android.util.SparseLongArray,kotlin.jvm.functions.Function2) -> putAll
    88:88:void putAll(android.util.SparseLongArray,android.util.SparseLongArray):109 -> putAll
    89:89:void forEach(android.util.SparseLongArray,kotlin.jvm.functions.Function2) -> putAll
    89:89:void putAll(android.util.SparseLongArray,android.util.SparseLongArray):110 -> putAll
    83:83:void putAll(android.util.SparseLongArray,android.util.SparseLongArray) -> putAll
    88:88:void forEach(android.util.SparseLongArray,kotlin.jvm.functions.Function2) -> putAll
    88:88:void putAll(android.util.SparseLongArray,android.util.SparseLongArray):109 -> putAll
    91:91:void forEach(android.util.SparseLongArray,kotlin.jvm.functions.Function2) -> putAll
    91:91:void putAll(android.util.SparseLongArray,android.util.SparseLongArray):112 -> putAll
    83:83:void putAll(android.util.SparseLongArray,android.util.SparseLongArray) -> putAll
    73:78:boolean remove(android.util.SparseLongArray,int,long) -> remove
    34:34:void set(android.util.SparseLongArray,int,long) -> set
    103:107:kotlin.collections.LongIterator valueIterator(android.util.SparseLongArray) -> valueIterator
androidx.core.util.SparseLongArrayKt$keyIterator$1 -> androidx.core.util.SparseLongArrayKt$keyIterator$1:
    95:95:void <init>(android.util.SparseLongArray) -> <init>
    96:96:int getIndex() -> getIndex
    97:97:boolean hasNext() -> hasNext
    98:98:int nextInt() -> nextInt
    96:96:void setIndex(int) -> setIndex
androidx.core.util.SparseLongArrayKt$valueIterator$1 -> androidx.core.util.SparseLongArrayKt$valueIterator$1:
    103:103:void <init>(android.util.SparseLongArray) -> <init>
    104:104:int getIndex() -> getIndex
    105:105:boolean hasNext() -> hasNext
    106:106:long nextLong() -> nextLong
    104:104:void setIndex(int) -> setIndex
androidx.core.util.TimeUtils -> androidx.core.util.TimeUtils:
    40:41:void <clinit>() -> <clinit>
    185:185:void <init>() -> <init>
    44:45:int accumField(int,int,boolean,int) -> accumField
    154:157:void formatDuration(long,java.lang.StringBuilder) -> formatDuration
    163:166:void formatDuration(long,java.io.PrintWriter,int) -> formatDuration
    172:173:void formatDuration(long,java.io.PrintWriter) -> formatDuration
    178:183:void formatDuration(long,long,java.io.PrintWriter) -> formatDuration
    81:148:int formatDurationLocked(long,int) -> formatDurationLocked
    58:77:int printField(char[],int,char,int,boolean,int) -> printField
androidx.core.view.AccessibilityDelegateCompat -> androidx.core.view.AccessibilityDelegateCompat:
    130:130:void <clinit>() -> <clinit>
    139:140:void <init>() -> <init>
    146:149:void <init>(android.view.View$AccessibilityDelegate) -> <init>
    216:216:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    318:324:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    396:398:java.util.List getActionList(android.view.View) -> getActionList
    155:155:android.view.View$AccessibilityDelegate getBridge() -> getBridge
    382:391:boolean isSpanStillValid(android.text.style.ClickableSpan,android.view.View) -> isSpanStillValid
    256:257:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    275:277:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    236:237:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    300:300:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    344:360:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    365:378:boolean performClickableSpanAction(int,android.view.View) -> performClickableSpanAction
    173:174:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    195:196:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter -> androidx.core.view.AccessibilityDelegateCompat$AccessibilityDelegateAdapter:
    64:66:void <init>(androidx.core.view.AccessibilityDelegateCompat) -> <init>
    71:71:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    118:120:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    76:77:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    82:92:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    96:97:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    102:102:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    126:126:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    107:108:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    112:113:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.core.view.ActionProvider -> androidx.core.view.ActionProvider:
    139:141:void <init>(android.content.Context) -> <init>
    147:147:android.content.Context getContext() -> getContext
    256:256:boolean hasSubMenu() -> hasSubMenu
    196:196:boolean isVisible() -> isVisible
    170:170:android.view.View onCreateActionView(android.view.MenuItem) -> onCreateActionView
    243:243:boolean onPerformDefaultAction() -> onPerformDefaultAction
    269:269:void onPrepareSubMenu(android.view.SubMenu) -> onPrepareSubMenu
    182:182:boolean overridesItemVisibility() -> overridesItemVisibility
    206:209:void refreshVisibility() -> refreshVisibility
    312:314:void reset() -> reset
    289:290:void setSubUiVisibilityListener(androidx.core.view.ActionProvider$SubUiVisibilityListener) -> setSubUiVisibilityListener
    299:305:void setVisibilityListener(androidx.core.view.ActionProvider$VisibilityListener) -> setVisibilityListener
    279:282:void subUiVisibilityChanged(boolean) -> subUiVisibilityChanged
androidx.core.view.DisplayCompat -> androidx.core.view.DisplayCompat:
    49:51:void <init>() -> <init>
    201:224:android.graphics.Point getPhysicalDisplaySize(android.content.Context,android.view.Display) -> getPhysicalDisplaySize
    65:91:androidx.core.view.DisplayCompat$ModeCompat[] getSupportedModes(android.content.Context,android.view.Display) -> getSupportedModes
    127:131:java.lang.String getSystemProperty(java.lang.String) -> getSystemProperty
    233:233:boolean isSonyBravia4kTv(android.content.Context) -> isSonyBravia4kTv
    154:155:boolean isTv(android.content.Context) -> isTv
    106:114:android.graphics.Point parseDisplaySize(java.lang.String) -> parseDisplaySize
    171:185:android.graphics.Point parsePhysicalDisplaySizeFromSystemProperties(java.lang.String,android.view.Display) -> parsePhysicalDisplaySizeFromSystemProperties
    143:143:boolean physicalSizeEquals(android.view.Display$Mode,android.graphics.Point) -> physicalSizeEquals
androidx.core.view.DisplayCompat$ModeCompat -> androidx.core.view.DisplayCompat$ModeCompat:
    258:263:void <init>(android.graphics.Point) -> <init>
    272:278:void <init>(android.view.Display$Mode,boolean) -> <init>
    295:295:int getPhysicalHeight() -> getPhysicalHeight
    286:286:int getPhysicalWidth() -> getPhysicalWidth
    317:317:boolean isNative() -> isNative
    307:307:android.view.Display$Mode toMode() -> toMode
androidx.core.view.DisplayCutoutCompat -> androidx.core.view.DisplayCutoutCompat:
    48:49:void <init>(android.graphics.Rect,java.util.List) -> <init>
    51:53:void <init>(java.lang.Object) -> <init>
    110:114:boolean equals(java.lang.Object) -> equals
    101:104:java.util.List getBoundingRects() -> getBoundingRects
    66:69:int getSafeInsetBottom() -> getSafeInsetBottom
    75:78:int getSafeInsetLeft() -> getSafeInsetLeft
    84:87:int getSafeInsetRight() -> getSafeInsetRight
    57:60:int getSafeInsetTop() -> getSafeInsetTop
    123:123:int hashCode() -> hashCode
    128:128:java.lang.String toString() -> toString
    137:137:android.view.DisplayCutout unwrap() -> unwrap
    132:132:androidx.core.view.DisplayCutoutCompat wrap(java.lang.Object) -> wrap
androidx.core.view.DragAndDropPermissionsCompat -> androidx.core.view.DragAndDropPermissionsCompat:
    42:44:void <init>(java.lang.Object) -> <init>
    64:67:void release() -> release
    50:57:androidx.core.view.DragAndDropPermissionsCompat request(android.app.Activity,android.view.DragEvent) -> request
androidx.core.view.DragStartHelper -> androidx.core.view.DragStartHelper:
    96:99:void <init>(android.view.View,androidx.core.view.DragStartHelper$OnDragStartListener) -> <init>
    107:109:void attach() -> attach
    117:119:void detach() -> detach
    178:179:void getTouchPosition(android.graphics.Point) -> getTouchPosition
    170:170:boolean onLongClick(android.view.View) -> onLongClick
    129:161:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.core.view.DragStartHelper$1 -> androidx.core.view.DragStartHelper$1:
    181:181:void <init>(androidx.core.view.DragStartHelper) -> <init>
    184:184:boolean onLongClick(android.view.View) -> onLongClick
androidx.core.view.DragStartHelper$2 -> androidx.core.view.DragStartHelper$2:
    188:188:void <init>(androidx.core.view.DragStartHelper) -> <init>
    191:191:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
androidx.core.view.GestureDetectorCompat -> androidx.core.view.GestureDetectorCompat:
    506:507:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener) -> <init>
    519:525:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    531:531:boolean isLongpressEnabled() -> isLongpressEnabled
    543:543:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    556:557:void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    567:568:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase:
    62:64:void <clinit>() -> <clinit>
    152:163:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    414:427:void cancel() -> cancel
    430:440:void cancelTaps() -> cancelTaps
    458:462:void dispatchLongPress() -> dispatchLongPress
    166:167:void init(android.content.Context) -> init
    444:454:boolean isConsideredDoubleTap(android.view.MotionEvent,android.view.MotionEvent,android.view.MotionEvent) -> isConsideredDoubleTap
    215:215:boolean isLongpressEnabled() -> isLongpressEnabled
    228:410:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    207:208:void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    193:194:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase$GestureHandler:
    103:105:void <init>(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase) -> <init>
    107:109:void <init>(androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplBase,android.os.Handler) -> <init>
    113:136:void handleMessage(android.os.Message) -> handleMessage
androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2 -> androidx.core.view.GestureDetectorCompat$GestureDetectorCompatImplJellybeanMr2:
    469:471:void <init>(android.content.Context,android.view.GestureDetector$OnGestureListener,android.os.Handler) -> <init>
    475:475:boolean isLongpressEnabled() -> isLongpressEnabled
    480:480:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    485:486:void setIsLongpressEnabled(boolean) -> setIsLongpressEnabled
    490:491:void setOnDoubleTapListener(android.view.GestureDetector$OnDoubleTapListener) -> setOnDoubleTapListener
androidx.core.view.GravityCompat -> androidx.core.view.GravityCompat:
    153:153:void <init>() -> <init>
    64:69:void apply(int,int,int,android.graphics.Rect,android.graphics.Rect,int) -> apply
    98:103:void apply(int,int,int,android.graphics.Rect,int,int,android.graphics.Rect,int) -> apply
    126:131:void applyDisplay(int,android.graphics.Rect,android.graphics.Rect,int) -> applyDisplay
    145:146:int getAbsoluteGravity(int,int) -> getAbsoluteGravity
androidx.core.view.InputDeviceCompat -> androidx.core.view.InputDeviceCompat:
    220:220:void <init>() -> <init>
androidx.core.view.KeyEventDispatcher -> androidx.core.view.KeyEventDispatcher:
    46:49:void <clinit>() -> <clinit>
    51:53:void <init>() -> <init>
    96:111:boolean actionBarOnMenuKeyEventPre28(android.app.ActionBar,android.view.KeyEvent) -> actionBarOnMenuKeyEventPre28
    115:137:boolean activitySuperDispatchKeyEventPre28(android.app.Activity,android.view.KeyEvent) -> activitySuperDispatchKeyEventPre28
    161:173:boolean dialogSuperDispatchKeyEventPre28(android.app.Dialog,android.view.KeyEvent) -> dialogSuperDispatchKeyEventPre28
    63:63:boolean dispatchBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchBeforeHierarchy
    80:91:boolean dispatchKeyEvent(androidx.core.view.KeyEventDispatcher$Component,android.view.View,android.view.Window$Callback,android.view.KeyEvent) -> dispatchKeyEvent
    142:157:android.content.DialogInterface$OnKeyListener getDialogKeyListenerPre28(android.app.Dialog) -> getDialogKeyListenerPre28
androidx.core.view.LayoutInflaterCompat -> androidx.core.view.LayoutInflaterCompat:
    96:97:void <init>() -> <init>
    72:91:void forceSetFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> forceSetFactory2
    170:174:androidx.core.view.LayoutInflaterFactory getFactory(android.view.LayoutInflater) -> getFactory
    112:129:void setFactory(android.view.LayoutInflater,androidx.core.view.LayoutInflaterFactory) -> setFactory
    140:153:void setFactory2(android.view.LayoutInflater,android.view.LayoutInflater$Factory2) -> setFactory2
androidx.core.view.LayoutInflaterCompat$Factory2Wrapper -> androidx.core.view.LayoutInflaterCompat$Factory2Wrapper:
    43:45:void <init>(androidx.core.view.LayoutInflaterFactory) -> <init>
    49:49:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    55:55:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    61:61:java.lang.String toString() -> toString
androidx.core.view.MarginLayoutParamsCompat -> androidx.core.view.MarginLayoutParamsCompat:
    166:166:void <init>() -> <init>
    127:139:int getLayoutDirection(android.view.ViewGroup$MarginLayoutParams) -> getLayoutDirection
    61:62:int getMarginEnd(android.view.ViewGroup$MarginLayoutParams) -> getMarginEnd
    42:43:int getMarginStart(android.view.ViewGroup$MarginLayoutParams) -> getMarginStart
    112:113:boolean isMarginRelative(android.view.ViewGroup$MarginLayoutParams) -> isMarginRelative
    161:164:void resolveLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> resolveLayoutDirection
    150:153:void setLayoutDirection(android.view.ViewGroup$MarginLayoutParams,int) -> setLayoutDirection
    99:104:void setMarginEnd(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginEnd
    80:85:void setMarginStart(android.view.ViewGroup$MarginLayoutParams,int) -> setMarginStart
androidx.core.view.MenuCompat -> androidx.core.view.MenuCompat:
    55:55:void <init>() -> <init>
    48:53:void setGroupDividerEnabled(android.view.Menu,boolean) -> setGroupDividerEnabled
    37:38:void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
androidx.core.view.MenuItemCompat -> androidx.core.view.MenuItemCompat:
    557:557:void <init>() -> <init>
    268:268:boolean collapseActionView(android.view.MenuItem) -> collapseActionView
    249:249:boolean expandActionView(android.view.MenuItem) -> expandActionView
    224:230:androidx.core.view.ActionProvider getActionProvider(android.view.MenuItem) -> getActionProvider
    188:188:android.view.View getActionView(android.view.MenuItem) -> getActionView
    481:487:int getAlphabeticModifiers(android.view.MenuItem) -> getAlphabeticModifiers
    335:341:java.lang.CharSequence getContentDescription(android.view.MenuItem) -> getContentDescription
    515:521:android.content.res.ColorStateList getIconTintList(android.view.MenuItem) -> getIconTintList
    548:554:android.graphics.PorterDuff$Mode getIconTintMode(android.view.MenuItem) -> getIconTintMode
    436:442:int getNumericModifiers(android.view.MenuItem) -> getNumericModifiers
    364:370:java.lang.CharSequence getTooltipText(android.view.MenuItem) -> getTooltipText
    284:284:boolean isActionViewExpanded(android.view.MenuItem) -> isActionViewExpanded
    207:212:android.view.MenuItem setActionProvider(android.view.MenuItem,androidx.core.view.ActionProvider) -> setActionProvider
    153:153:android.view.MenuItem setActionView(android.view.MenuItem,android.view.View) -> setActionView
    175:175:android.view.MenuItem setActionView(android.view.MenuItem,int) -> setActionView
    463:468:void setAlphabeticShortcut(android.view.MenuItem,char,int) -> setAlphabeticShortcut
    322:327:void setContentDescription(android.view.MenuItem,java.lang.CharSequence) -> setContentDescription
    503:508:void setIconTintList(android.view.MenuItem,android.content.res.ColorStateList) -> setIconTintList
    534:539:void setIconTintMode(android.view.MenuItem,android.graphics.PorterDuff$Mode) -> setIconTintMode
    418:423:void setNumericShortcut(android.view.MenuItem,char,int) -> setNumericShortcut
    302:302:android.view.MenuItem setOnActionExpandListener(android.view.MenuItem,androidx.core.view.MenuItemCompat$OnActionExpandListener) -> setOnActionExpandListener
    397:403:void setShortcut(android.view.MenuItem,char,char,int,int) -> setShortcut
    135:136:void setShowAsAction(android.view.MenuItem,int) -> setShowAsAction
    351:356:void setTooltipText(android.view.MenuItem,java.lang.CharSequence) -> setTooltipText
androidx.core.view.MenuItemCompat$1 -> androidx.core.view.MenuItemCompat$1:
    302:302:void <init>(androidx.core.view.MenuItemCompat$OnActionExpandListener) -> <init>
    310:310:boolean onMenuItemActionCollapse(android.view.MenuItem) -> onMenuItemActionCollapse
    305:305:boolean onMenuItemActionExpand(android.view.MenuItem) -> onMenuItemActionExpand
androidx.core.view.MenuKt -> androidx.core.view.MenuKt:
    33:39:boolean contains(android.view.Menu,android.view.MenuItem) -> contains
    56:59:void forEach(android.view.Menu,kotlin.jvm.functions.Function1) -> forEach
    63:66:void forEachIndexed(android.view.Menu,kotlin.jvm.functions.Function2) -> forEachIndexed
    29:29:android.view.MenuItem get(android.view.Menu,int) -> get
    78:80:kotlin.sequences.Sequence getChildren(android.view.Menu) -> getChildren
    46:46:int getSize(android.view.Menu) -> getSize
    49:49:boolean isEmpty(android.view.Menu) -> isEmpty
    52:52:boolean isNotEmpty(android.view.Menu) -> isNotEmpty
    69:74:java.util.Iterator iterator(android.view.Menu) -> iterator
    43:43:void minusAssign(android.view.Menu,android.view.MenuItem) -> minusAssign
androidx.core.view.MenuKt$children$1 -> androidx.core.view.MenuKt$children$1:
    78:78:void <init>(android.view.Menu) -> <init>
    79:79:java.util.Iterator iterator() -> iterator
androidx.core.view.MenuKt$iterator$1 -> androidx.core.view.MenuKt$iterator$1:
    69:69:void <init>(android.view.Menu) -> <init>
    71:71:boolean hasNext() -> hasNext
    69:69:java.lang.Object next() -> next
    72:72:android.view.MenuItem next() -> next
    73:73:void remove() -> remove
androidx.core.view.MotionEventCompat -> androidx.core.view.MotionEventCompat:
    602:602:void <init>() -> <init>
    488:488:int findPointerIndex(android.view.MotionEvent,int) -> findPointerIndex
    477:477:int getActionIndex(android.view.MotionEvent) -> getActionIndex
    465:465:int getActionMasked(android.view.MotionEvent) -> getActionMasked
    570:570:float getAxisValue(android.view.MotionEvent,int) -> getAxisValue
    590:590:float getAxisValue(android.view.MotionEvent,int,int) -> getAxisValue
    599:599:int getButtonState(android.view.MotionEvent) -> getButtonState
    532:532:int getPointerCount(android.view.MotionEvent) -> getPointerCount
    499:499:int getPointerId(android.view.MotionEvent,int) -> getPointerId
    544:544:int getSource(android.view.MotionEvent) -> getSource
    510:510:float getX(android.view.MotionEvent,int) -> getX
    521:521:float getY(android.view.MotionEvent,int) -> getY
    553:553:boolean isFromSource(android.view.MotionEvent,int) -> isFromSource
androidx.core.view.NestedScrollingChildHelper -> androidx.core.view.NestedScrollingChildHelper:
    56:58:void <init>(android.view.View) -> <init>
    348:355:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    368:375:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    288:288:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    302:335:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    204:204:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    218:218:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    231:233:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    238:274:boolean dispatchNestedScrollInternal(int,int,int,int,int[],int,int[]) -> dispatchNestedScrollInternal
    404:406:android.view.ViewParent getNestedScrollingParentForType(int) -> getNestedScrollingParentForType
    425:428:int[] getTempNestedScrollConsumed() -> getTempNestedScrollConsumed
    100:100:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    114:114:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    86:86:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    387:388:void onDetachedFromWindow() -> onDetachedFromWindow
    400:401:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    70:74:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    414:422:void setNestedScrollingParentForType(int,android.view.ViewParent) -> setNestedScrollingParentForType
    129:129:boolean startNestedScroll(int) -> startNestedScroll
    145:164:boolean startNestedScroll(int,int) -> startNestedScroll
    175:176:void stopNestedScroll() -> stopNestedScroll
    186:191:void stopNestedScroll(int) -> stopNestedScroll
androidx.core.view.NestedScrollingParentHelper -> androidx.core.view.NestedScrollingParentHelper:
    50:51:void <init>(android.view.ViewGroup) -> <init>
    92:92:int getNestedScrollAxes() -> getNestedScrollAxes
    63:64:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    76:81:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    103:104:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    114:119:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
androidx.core.view.OneShotPreDrawListener -> androidx.core.view.OneShotPreDrawListener:
    43:47:void <init>(android.view.View,java.lang.Runnable) -> <init>
    59:59:androidx.core.view.OneShotPreDrawListener add(android.view.View,java.lang.Runnable) -> add
    70:72:boolean onPreDraw() -> onPreDraw
    90:91:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    95:96:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    80:86:void removeListener() -> removeListener
androidx.core.view.PointerIconCompat -> androidx.core.view.PointerIconCompat:
    107:109:void <init>(java.lang.Object) -> <init>
    151:154:androidx.core.view.PointerIconCompat create(android.graphics.Bitmap,float,float) -> create
    116:116:java.lang.Object getPointerIcon() -> getPointerIcon
    130:133:androidx.core.view.PointerIconCompat getSystemIcon(android.content.Context,int) -> getSystemIcon
    180:183:androidx.core.view.PointerIconCompat load(android.content.res.Resources,int) -> load
androidx.core.view.ScaleGestureDetectorCompat -> androidx.core.view.ScaleGestureDetectorCompat:
    26:26:void <init>() -> <init>
    68:68:boolean isQuickScaleEnabled(java.lang.Object) -> isQuickScaleEnabled
    78:79:boolean isQuickScaleEnabled(android.view.ScaleGestureDetector) -> isQuickScaleEnabled
    40:42:void setQuickScaleEnabled(java.lang.Object,boolean) -> setQuickScaleEnabled
    53:56:void setQuickScaleEnabled(android.view.ScaleGestureDetector,boolean) -> setQuickScaleEnabled
androidx.core.view.VelocityTrackerCompat -> androidx.core.view.VelocityTrackerCompat:
    52:52:void <init>() -> <init>
    37:37:float getXVelocity(android.view.VelocityTracker,int) -> getXVelocity
    49:49:float getYVelocity(android.view.VelocityTracker,int) -> getYVelocity
androidx.core.view.ViewCompat -> androidx.core.view.ViewCompat:
    461:4171:void <clinit>() -> <clinit>
    3851:3851:void <init>() -> <init>
    4056:4056:androidx.core.view.ViewCompat$AccessibilityViewProperty accessibilityHeadingProperty() -> accessibilityHeadingProperty
    1217:1223:int addAccessibilityAction(android.view.View,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> addAccessibilityAction
    1304:1311:void addAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAccessibilityAction
    3709:3712:void addKeyboardNavigationClusters(android.view.View,java.util.Collection,int) -> addKeyboardNavigationClusters
    3782:3814:void addOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> addOnUnhandledKeyEventListener
    2014:2022:androidx.core.view.ViewPropertyAnimatorCompat animate(android.view.View) -> animate
    1832:1840:void bindTempDetach() -> bindTempDetach
    530:530:boolean canScrollHorizontally(android.view.View,int) -> canScrollHorizontally
    544:544:boolean canScrollVertically(android.view.View,int) -> canScrollVertically
    3580:3583:void cancelDragAndDrop(android.view.View) -> cancelDragAndDrop
    1722:1722:int combineMeasuredStates(int,int) -> combineMeasuredStates
    3374:3383:void compatOffsetLeftAndRight(android.view.View,int) -> compatOffsetLeftAndRight
    3326:3335:void compatOffsetTopAndBottom(android.view.View,int) -> compatOffsetTopAndBottom
    2601:2604:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
    2524:2534:androidx.core.view.WindowInsetsCompat dispatchApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> dispatchApplyWindowInsets
    1869:1886:void dispatchFinishTemporaryDetach(android.view.View) -> dispatchFinishTemporaryDetach
    3158:3165:boolean dispatchNestedFling(android.view.View,float,float,boolean) -> dispatchNestedFling
    3201:3207:boolean dispatchNestedPreFling(android.view.View,float,float) -> dispatchNestedPreFling
    2934:2941:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[]) -> dispatchNestedPreScroll
    3128:3134:boolean dispatchNestedPreScroll(android.view.View,int,int,int[],int[],int) -> dispatchNestedPreScroll
    2903:2911:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[]) -> dispatchNestedScroll
    3060:3067:void dispatchNestedScroll(android.view.View,int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    3096:3103:boolean dispatchNestedScroll(android.view.View,int,int,int,int,int[],int) -> dispatchNestedScroll
    1846:1863:void dispatchStartTemporaryDetach(android.view.View) -> dispatchStartTemporaryDetach
    3879:3882:boolean dispatchUnhandledKeyEventBeforeCallback(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeCallback
    3871:3874:boolean dispatchUnhandledKeyEventBeforeHierarchy(android.view.View,android.view.KeyEvent) -> dispatchUnhandledKeyEventBeforeHierarchy
    1360:1363:void enableAccessibleClickableSpanSupport(android.view.View) -> enableAccessibleClickableSpanSupport
    3758:3759:int generateViewId() -> generateViewId
    912:919:androidx.core.view.AccessibilityDelegateCompat getAccessibilityDelegate(android.view.View) -> getAccessibilityDelegate
    935:938:android.view.View$AccessibilityDelegate getAccessibilityDelegateInternal(android.view.View) -> getAccessibilityDelegateInternal
    944:965:android.view.View$AccessibilityDelegate getAccessibilityDelegateThroughReflection(android.view.View) -> getAccessibilityDelegateThroughReflection
    1735:1736:int getAccessibilityLiveRegion(android.view.View) -> getAccessibilityLiveRegion
    1389:1395:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    3995:3995:java.lang.CharSequence getAccessibilityPaneTitle(android.view.View) -> getAccessibilityPaneTitle
    1340:1346:java.util.List getActionList(android.view.View) -> getActionList
    1409:1409:float getAlpha(android.view.View) -> getAlpha
    1261:1274:int getAvailableActionIdFromResources(android.view.View) -> getAvailableActionIdFromResources
    2692:2695:android.content.res.ColorStateList getBackgroundTintList(android.view.View) -> getBackgroundTintList
    2737:2740:android.graphics.PorterDuff$Mode getBackgroundTintMode(android.view.View) -> getBackgroundTintMode
    3418:3419:android.graphics.Rect getClipBounds(android.view.View) -> getClipBounds
    3539:3540:android.view.Display getDisplay(android.view.View) -> getDisplay
    2298:2301:float getElevation(android.view.View) -> getElevation
    482:491:android.graphics.Rect getEmptyTempRect() -> getEmptyTempRect
    2424:2425:boolean getFitsSystemWindows(android.view.View) -> getFitsSystemWindows
    1091:1092:int getImportantForAccessibility(android.view.View) -> getImportantForAccessibility
    772:775:int getImportantForAutofill(android.view.View) -> getImportantForAutofill
    1484:1485:int getLabelFor(android.view.View) -> getLabelFor
    1473:1473:int getLayerType(android.view.View) -> getLayerType
    1557:1558:int getLayoutDirection(android.view.View) -> getLayoutDirection
    1935:1935:android.graphics.Matrix getMatrix(android.view.View) -> getMatrix
    1693:1693:int getMeasuredHeightAndState(android.view.View) -> getMeasuredHeightAndState
    1707:1707:int getMeasuredState(android.view.View) -> getMeasuredState
    1676:1676:int getMeasuredWidthAndState(android.view.View) -> getMeasuredWidthAndState
    1980:1981:int getMinimumHeight(android.view.View) -> getMinimumHeight
    1946:1947:int getMinimumWidth(android.view.View) -> getMinimumWidth
    3601:3604:int getNextClusterForwardId(android.view.View) -> getNextClusterForwardId
    924:929:androidx.core.view.AccessibilityDelegateCompat getOrCreateAccessibilityDelegateCompat(android.view.View) -> getOrCreateAccessibilityDelegateCompat
    562:562:int getOverScrollMode(android.view.View) -> getOverScrollMode
    1802:1803:int getPaddingEnd(android.view.View) -> getPaddingEnd
    1786:1787:int getPaddingStart(android.view.View) -> getPaddingStart
    1595:1596:android.view.ViewParent getParentForAccessibility(android.view.View) -> getParentForAccessibility
    2179:2179:float getPivotX(android.view.View) -> getPivotX
    2208:2208:float getPivotY(android.view.View) -> getPivotY
    2581:2584:androidx.core.view.WindowInsetsCompat getRootWindowInsets(android.view.View) -> getRootWindowInsets
    2232:2232:float getRotation(android.view.View) -> getRotation
    2240:2240:float getRotationX(android.view.View) -> getRotationX
    2248:2248:float getRotationY(android.view.View) -> getRotationY
    2256:2256:float getScaleX(android.view.View) -> getScaleX
    2264:2264:float getScaleY(android.view.View) -> getScaleY
    3510:3513:int getScrollIndicators(android.view.View) -> getScrollIndicators
    2565:2568:java.util.List getSystemGestureExclusionRects(android.view.View) -> getSystemGestureExclusionRects
    2355:2361:java.lang.String getTransitionName(android.view.View) -> getTransitionName
    1899:1899:float getTranslationX(android.view.View) -> getTranslationX
    1913:1913:float getTranslationY(android.view.View) -> getTranslationY
    2319:2322:float getTranslationZ(android.view.View) -> getTranslationZ
    2368:2369:int getWindowSystemUiVisibility(android.view.View) -> getWindowSystemUiVisibility
    2272:2272:float getX(android.view.View) -> getX
    2280:2280:float getY(android.view.View) -> getY
    3265:3268:float getZ(android.view.View) -> getZ
    898:898:boolean hasAccessibilityDelegate(android.view.View) -> hasAccessibilityDelegate
    3745:3748:boolean hasExplicitFocusable(android.view.View) -> hasExplicitFocusable
    2874:2880:boolean hasNestedScrollingParent(android.view.View) -> hasNestedScrollingParent
    3019:3024:boolean hasNestedScrollingParent(android.view.View,int) -> hasNestedScrollingParent
    3440:3441:boolean hasOnClickListeners(android.view.View) -> hasOnClickListeners
    2652:2653:boolean hasOverlappingRendering(android.view.View) -> hasOverlappingRendering
    978:979:boolean hasTransientState(android.view.View) -> hasTransientState
    4035:4036:boolean isAccessibilityHeading(android.view.View) -> isAccessibilityHeading
    3428:3429:boolean isAttachedToWindow(android.view.View) -> isAttachedToWindow
    3656:3659:boolean isFocusedByDefault(android.view.View) -> isFocusedByDefault
    1169:1172:boolean isImportantForAccessibility(android.view.View) -> isImportantForAccessibility
    885:888:boolean isImportantForAutofill(android.view.View) -> isImportantForAutofill
    3223:3224:boolean isInLayout(android.view.View) -> isInLayout
    3627:3630:boolean isKeyboardNavigationCluster(android.view.View) -> isKeyboardNavigationCluster
    3234:3235:boolean isLaidOut(android.view.View) -> isLaidOut
    3251:3252:boolean isLayoutDirectionResolved(android.view.View) -> isLayoutDirectionResolved
    2816:2822:boolean isNestedScrollingEnabled(android.view.View) -> isNestedScrollingEnabled
    1639:1639:boolean isOpaque(android.view.View) -> isOpaque
    2665:2666:boolean isPaddingRelative(android.view.View) -> isPaddingRelative
    3922:3923:boolean isScreenReaderFocusable(android.view.View) -> isScreenReaderFocusable
    2454:2455:void jumpDrawablesToCurrentState(android.view.View) -> jumpDrawablesToCurrentState
    3693:3696:android.view.View keyboardNavigationClusterSearch(android.view.View,android.view.View,int) -> keyboardNavigationClusterSearch
    4146:4169:void notifyViewAccessibilityStateChangedIfNeeded(android.view.View,int) -> notifyViewAccessibilityStateChangedIfNeeded
    3343:3371:void offsetLeftAndRight(android.view.View,int) -> offsetLeftAndRight
    3295:3323:void offsetTopAndBottom(android.view.View,int) -> offsetTopAndBottom
    2496:2506:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
    653:654:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    684:685:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    621:622:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    3999:3999:androidx.core.view.ViewCompat$AccessibilityViewProperty paneTitleProperty() -> paneTitleProperty
    1191:1192:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    1007:1012:void postInvalidateOnAnimation(android.view.View) -> postInvalidateOnAnimation
    1029:1034:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> postInvalidateOnAnimation
    1047:1052:void postOnAnimation(android.view.View,java.lang.Runnable) -> postOnAnimation
    1069:1074:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> postOnAnimationDelayed
    1321:1326:void removeAccessibilityAction(android.view.View,int) -> removeAccessibilityAction
    1329:1336:void removeActionWithId(int,android.view.View) -> removeActionWithId
    3826:3849:void removeOnUnhandledKeyEventListener(android.view.View,androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> removeOnUnhandledKeyEventListener
    1295:1300:void replaceAccessibilityAction(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> replaceAccessibilityAction
    2379:2384:void requestApplyInsets(android.view.View) -> requestApplyInsets
    1618:1624:android.view.View requireViewById(android.view.View,int) -> requireViewById
    1659:1659:int resolveSizeAndState(int,int,int) -> resolveSizeAndState
    3723:3726:boolean restoreDefaultFocus(android.view.View) -> restoreDefaultFocus
    513:517:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
    3927:3927:androidx.core.view.ViewCompat$AccessibilityViewProperty screenReaderFocusableProperty() -> screenReaderFocusableProperty
    714:719:void setAccessibilityDelegate(android.view.View,androidx.core.view.AccessibilityDelegateCompat) -> setAccessibilityDelegate
    4052:4053:void setAccessibilityHeading(android.view.View,boolean) -> setAccessibilityHeading
    1771:1774:void setAccessibilityLiveRegion(android.view.View,int) -> setAccessibilityLiveRegion
    3969:3977:void setAccessibilityPaneTitle(android.view.View,java.lang.CharSequence) -> setAccessibilityPaneTitle
    2634:2635:void setActivated(android.view.View,boolean) -> setActivated
    2071:2072:void setAlpha(android.view.View,float) -> setAlpha
    751:754:void setAutofillHints(android.view.View,java.lang.String[]) -> setAutofillHints
    2678:2683:void setBackground(android.view.View,android.graphics.drawable.Drawable) -> setBackground
    2708:2727:void setBackgroundTintList(android.view.View,android.content.res.ColorStateList) -> setBackgroundTintList
    2755:2774:void setBackgroundTintMode(android.view.View,android.graphics.PorterDuff$Mode) -> setBackgroundTintMode
    2399:2417:void setChildrenDrawingOrderEnabled(android.view.ViewGroup,boolean) -> setChildrenDrawingOrderEnabled
    3403:3406:void setClipBounds(android.view.View,android.graphics.Rect) -> setClipBounds
    2287:2290:void setElevation(android.view.View,float) -> setElevation
    2440:2441:void setFitsSystemWindows(android.view.View,boolean) -> setFitsSystemWindows
    3675:3678:void setFocusedByDefault(android.view.View,boolean) -> setFocusedByDefault
    992:995:void setHasTransientState(android.view.View,boolean) -> setHasTransientState
    1118:1130:void setImportantForAccessibility(android.view.View,int) -> setImportantForAccessibility
    816:819:void setImportantForAutofill(android.view.View,int) -> setImportantForAutofill
    3641:3644:void setKeyboardNavigationCluster(android.view.View,boolean) -> setKeyboardNavigationCluster
    1498:1501:void setLabelFor(android.view.View,int) -> setLabelFor
    1534:1543:void setLayerPaint(android.view.View,android.graphics.Paint) -> setLayerPaint
    1448:1449:void setLayerType(android.view.View,int,android.graphics.Paint) -> setLayerType
    1581:1584:void setLayoutDirection(android.view.View,int) -> setLayoutDirection
    2793:2800:void setNestedScrollingEnabled(android.view.View,boolean) -> setNestedScrollingEnabled
    3615:3618:void setNextClusterForwardId(android.view.View,int) -> setNextClusterForwardId
    2463:2479:void setOnApplyWindowInsetsListener(android.view.View,androidx.core.view.OnApplyWindowInsetsListener) -> setOnApplyWindowInsetsListener
    581:582:void setOverScrollMode(android.view.View,int) -> setOverScrollMode
    1823:1828:void setPaddingRelative(android.view.View,int,int,int,int) -> setPaddingRelative
    2195:2196:void setPivotX(android.view.View,float) -> setPivotX
    2224:2225:void setPivotY(android.view.View,float) -> setPivotY
    3521:3525:void setPointerIcon(android.view.View,androidx.core.view.PointerIconCompat) -> setPointerIcon
    2114:2115:void setRotation(android.view.View,float) -> setRotation
    2128:2129:void setRotationX(android.view.View,float) -> setRotationX
    2142:2143:void setRotationY(android.view.View,float) -> setRotationY
    2618:2619:void setSaveFromParentEnabled(android.view.View,boolean) -> setSaveFromParentEnabled
    2155:2156:void setScaleX(android.view.View,float) -> setScaleX
    2168:2169:void setScaleY(android.view.View,float) -> setScaleY
    3903:3904:void setScreenReaderFocusable(android.view.View,boolean) -> setScreenReaderFocusable
    3458:3461:void setScrollIndicators(android.view.View,int) -> setScrollIndicators
    3492:3495:void setScrollIndicators(android.view.View,int,int) -> setScrollIndicators
    2550:2553:void setSystemGestureExclusionRects(android.view.View,java.util.List) -> setSystemGestureExclusionRects
    3559:3562:void setTooltipText(android.view.View,java.lang.CharSequence) -> setTooltipText
    2333:2341:void setTransitionName(android.view.View,java.lang.String) -> setTransitionName
    2037:2038:void setTranslationX(android.view.View,float) -> setTranslationX
    2054:2055:void setTranslationY(android.view.View,float) -> setTranslationY
    2308:2311:void setTranslationZ(android.view.View,float) -> setTranslationZ
    2086:2087:void setX(android.view.View,float) -> setX
    2101:2102:void setY(android.view.View,float) -> setY
    3284:3287:void setZ(android.view.View,float) -> setZ
    3569:3572:boolean startDragAndDrop(android.view.View,android.content.ClipData,android.view.View$DragShadowBuilder,java.lang.Object,int) -> startDragAndDrop
    2838:2844:boolean startNestedScroll(android.view.View,int) -> startNestedScroll
    2985:2990:boolean startNestedScroll(android.view.View,int,int) -> startNestedScroll
    2857:2862:void stopNestedScroll(android.view.View) -> stopNestedScroll
    3002:3007:void stopNestedScroll(android.view.View,int) -> stopNestedScroll
    3386:3389:void tickleInvalidationFlag(android.view.View) -> tickleInvalidationFlag
    3589:3592:void updateDragShadow(android.view.View,android.view.View$DragShadowBuilder) -> updateDragShadow
androidx.core.view.ViewCompat$1 -> androidx.core.view.ViewCompat$1:
    2469:2469:void <init>(androidx.core.view.OnApplyWindowInsetsListener) -> <init>
    2472:2475:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.core.view.ViewCompat$2 -> androidx.core.view.ViewCompat$2:
    3792:3792:void <init>(androidx.core.view.ViewCompat$OnUnhandledKeyEventListenerCompat) -> <init>
    3795:3795:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
androidx.core.view.ViewCompat$3 -> androidx.core.view.ViewCompat$3:
    3928:3928:void <init>(int,java.lang.Class,int) -> <init>
    3928:3928:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    3933:3933:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    3928:3928:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    3939:3940:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    3928:3928:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    3944:3944:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$4 -> androidx.core.view.ViewCompat$4:
    4000:4000:void <init>(int,java.lang.Class,int,int) -> <init>
    4000:4000:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4005:4005:java.lang.CharSequence frameworkGet(android.view.View) -> frameworkGet
    4000:4000:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4011:4012:void frameworkSet(android.view.View,java.lang.CharSequence) -> frameworkSet
    4000:4000:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4016:4016:boolean shouldUpdate(java.lang.CharSequence,java.lang.CharSequence) -> shouldUpdate
androidx.core.view.ViewCompat$5 -> androidx.core.view.ViewCompat$5:
    4057:4057:void <init>(int,java.lang.Class,int) -> <init>
    4057:4057:java.lang.Object frameworkGet(android.view.View) -> frameworkGet
    4062:4062:java.lang.Boolean frameworkGet(android.view.View) -> frameworkGet
    4057:4057:void frameworkSet(android.view.View,java.lang.Object) -> frameworkSet
    4068:4069:void frameworkSet(android.view.View,java.lang.Boolean) -> frameworkSet
    4057:4057:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
    4073:4073:boolean shouldUpdate(java.lang.Boolean,java.lang.Boolean) -> shouldUpdate
androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager -> androidx.core.view.ViewCompat$AccessibilityPaneVisibilityManager:
    4174:4176:void <init>() -> <init>
    4200:4205:void addAccessibilityPane(android.view.View) -> addAccessibilityPane
    4216:4224:void checkPaneVisibility(android.view.View,boolean) -> checkPaneVisibility
    4181:4184:void onGlobalLayout() -> onGlobalLayout
    4190:4191:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    4196:4196:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
    4228:4229:void registerForLayoutCallback(android.view.View) -> registerForLayoutCallback
    4209:4212:void removeAccessibilityPane(android.view.View) -> removeAccessibilityPane
    4233:4234:void unregisterForLayoutCallback(android.view.View) -> unregisterForLayoutCallback
androidx.core.view.ViewCompat$AccessibilityViewProperty -> androidx.core.view.ViewCompat$AccessibilityViewProperty:
    4085:4087:void <init>(int,java.lang.Class,int) -> <init>
    4090:4094:void <init>(int,java.lang.Class,int,int) -> <init>
    4138:4140:boolean booleanNullToFalseEquals(java.lang.Boolean,java.lang.Boolean) -> booleanNullToFalseEquals
    4127:4127:boolean extrasAvailable() -> extrasAvailable
    4123:4123:boolean frameworkAvailable() -> frameworkAvailable
    4112:4120:java.lang.Object get(android.view.View) -> get
    4097:4108:void set(android.view.View,java.lang.Object) -> set
    4131:4131:boolean shouldUpdate(java.lang.Object,java.lang.Object) -> shouldUpdate
androidx.core.view.ViewCompat$Api21Impl -> androidx.core.view.ViewCompat$Api21Impl:
    4424:4426:void <init>() -> <init>
    4430:4436:androidx.core.view.WindowInsetsCompat computeSystemWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat,android.graphics.Rect) -> computeSystemWindowInsets
androidx.core.view.ViewCompat$Api23Impl -> androidx.core.view.ViewCompat$Api23Impl:
    4443:4445:void <init>() -> <init>
    4448:4448:android.view.WindowInsets getRootWindowInsets(android.view.View) -> getRootWindowInsets
androidx.core.view.ViewCompat$Api29Impl -> androidx.core.view.ViewCompat$Api29Impl:
    4454:4456:void <init>() -> <init>
    4461:4463:void saveAttributeDataForStyleable(android.view.View,android.content.Context,int[],android.util.AttributeSet,android.content.res.TypedArray,int,int) -> saveAttributeDataForStyleable
androidx.core.view.ViewCompat$UnhandledKeyEventManager -> androidx.core.view.ViewCompat$UnhandledKeyEventManager:
    4241:4241:void <clinit>() -> <clinit>
    4237:4256:void <init>() -> <init>
    4266:4272:androidx.core.view.ViewCompat$UnhandledKeyEventManager at(android.view.View) -> at
    4276:4290:boolean dispatch(android.view.View,android.view.KeyEvent) -> dispatch
    4295:4296:android.view.View dispatchInOrder(android.view.View,android.view.KeyEvent) -> dispatchInOrder
    4259:4262:android.util.SparseArray getCapturedKeys() -> getCapturedKeys
    4354:4364:boolean onUnhandledKeyEvent(android.view.View,android.view.KeyEvent) -> onUnhandledKeyEvent
    4321:4349:boolean preDispatch(android.view.KeyEvent) -> preDispatch
    4394:4418:void recalcViewsWithUnhandled() -> recalcViewsWithUnhandled
    4372:4379:void registerListeningView(android.view.View) -> registerListeningView
    4383:4390:void unregisterListeningView(android.view.View) -> unregisterListeningView
androidx.core.view.ViewConfigurationCompat -> androidx.core.view.ViewConfigurationCompat:
    39:47:void <clinit>() -> <clinit>
    150:150:void <init>() -> <init>
    106:119:float getLegacyScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getLegacyScrollFactor
    81:84:float getScaledHorizontalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledHorizontalScrollFactor
    128:131:int getScaledHoverSlop(android.view.ViewConfiguration) -> getScaledHoverSlop
    57:57:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> getScaledPagingTouchSlop
    98:101:float getScaledVerticalScrollFactor(android.view.ViewConfiguration,android.content.Context) -> getScaledVerticalScrollFactor
    68:68:boolean hasPermanentMenuKey(android.view.ViewConfiguration) -> hasPermanentMenuKey
    141:147:boolean shouldShowMenuShortcutsWhenKeyboardPresent(android.view.ViewConfiguration,android.content.Context) -> shouldShowMenuShortcutsWhenKeyboardPresent
androidx.core.view.ViewGroupCompat -> androidx.core.view.ViewGroupCompat:
    52:52:void <init>() -> <init>
    114:115:int getLayoutMode(android.view.ViewGroup) -> getLayoutMode
    181:187:int getNestedScrollAxes(android.view.ViewGroup) -> getNestedScrollAxes
    157:161:boolean isTransitionGroup(android.view.ViewGroup) -> isTransitionGroup
    75:75:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    130:133:void setLayoutMode(android.view.ViewGroup,int) -> setLayoutMode
    98:99:void setMotionEventSplittingEnabled(android.view.ViewGroup,boolean) -> setMotionEventSplittingEnabled
    144:149:void setTransitionGroup(android.view.ViewGroup,boolean) -> setTransitionGroup
androidx.core.view.ViewGroupKt -> androidx.core.view.ViewGroupKt:
    35:35:boolean contains(android.view.ViewGroup,android.view.View) -> contains
    54:57:void forEach(android.view.ViewGroup,kotlin.jvm.functions.Function1) -> forEach
    61:64:void forEachIndexed(android.view.ViewGroup,kotlin.jvm.functions.Function2) -> forEachIndexed
    32:32:android.view.View get(android.view.ViewGroup,int) -> get
    76:78:kotlin.sequences.Sequence getChildren(android.view.ViewGroup) -> getChildren
    44:44:int getSize(android.view.ViewGroup) -> getSize
    47:47:boolean isEmpty(android.view.ViewGroup) -> isEmpty
    50:50:boolean isNotEmpty(android.view.ViewGroup) -> isNotEmpty
    67:72:java.util.Iterator iterator(android.view.ViewGroup) -> iterator
    41:41:void minusAssign(android.view.ViewGroup,android.view.View) -> minusAssign
    38:38:void plusAssign(android.view.ViewGroup,android.view.View) -> plusAssign
    87:88:void setMargins(android.view.ViewGroup$MarginLayoutParams,int) -> setMargins
    102:103:void updateMargins(android.view.ViewGroup$MarginLayoutParams,int,int,int,int) -> updateMargins
    97:100:void updateMargins$default(android.view.ViewGroup$MarginLayoutParams,int,int,int,int,int,java.lang.Object) -> updateMargins$default
    102:102:void updateMargins(android.view.ViewGroup$MarginLayoutParams,int,int,int,int) -> updateMargins$default
    102:102:void updateMargins$default(android.view.ViewGroup$MarginLayoutParams,int,int,int,int,int,java.lang.Object):124 -> updateMargins$default
    103:103:void updateMargins(android.view.ViewGroup$MarginLayoutParams,int,int,int,int) -> updateMargins$default
    103:103:void updateMargins$default(android.view.ViewGroup$MarginLayoutParams,int,int,int,int,int,java.lang.Object):125 -> updateMargins$default
    118:122:void updateMarginsRelative(android.view.ViewGroup$MarginLayoutParams,int,int,int,int) -> updateMarginsRelative
    113:116:void updateMarginsRelative$default(android.view.ViewGroup$MarginLayoutParams,int,int,int,int,int,java.lang.Object) -> updateMarginsRelative$default
    118:118:void updateMarginsRelative(android.view.ViewGroup$MarginLayoutParams,int,int,int,int) -> updateMarginsRelative$default
    118:118:void updateMarginsRelative$default(android.view.ViewGroup$MarginLayoutParams,int,int,int,int,int,java.lang.Object):126 -> updateMarginsRelative$default
    119:119:void updateMarginsRelative(android.view.ViewGroup$MarginLayoutParams,int,int,int,int) -> updateMarginsRelative$default
    119:119:void updateMarginsRelative$default(android.view.ViewGroup$MarginLayoutParams,int,int,int,int,int,java.lang.Object):127 -> updateMarginsRelative$default
    120:120:void updateMarginsRelative(android.view.ViewGroup$MarginLayoutParams,int,int,int,int) -> updateMarginsRelative$default
    120:120:void updateMarginsRelative$default(android.view.ViewGroup$MarginLayoutParams,int,int,int,int,int,java.lang.Object):128 -> updateMarginsRelative$default
    121:121:void updateMarginsRelative(android.view.ViewGroup$MarginLayoutParams,int,int,int,int) -> updateMarginsRelative$default
    121:121:void updateMarginsRelative$default(android.view.ViewGroup$MarginLayoutParams,int,int,int,int,int,java.lang.Object):129 -> updateMarginsRelative$default
    122:122:void updateMarginsRelative(android.view.ViewGroup$MarginLayoutParams,int,int,int,int) -> updateMarginsRelative$default
    122:122:void updateMarginsRelative$default(android.view.ViewGroup$MarginLayoutParams,int,int,int,int,int,java.lang.Object):130 -> updateMarginsRelative$default
androidx.core.view.ViewGroupKt$children$1 -> androidx.core.view.ViewGroupKt$children$1:
    76:76:void <init>(android.view.ViewGroup) -> <init>
    77:77:java.util.Iterator iterator() -> iterator
androidx.core.view.ViewGroupKt$iterator$1 -> androidx.core.view.ViewGroupKt$iterator$1:
    67:67:void <init>(android.view.ViewGroup) -> <init>
    69:69:boolean hasNext() -> hasNext
    67:67:java.lang.Object next() -> next
    70:70:android.view.View next() -> next
    71:71:void remove() -> remove
androidx.core.view.ViewKt -> androidx.core.view.ViewKt:
    93:105:void doOnAttach(android.view.View,kotlin.jvm.functions.Function1) -> doOnAttach
    117:129:void doOnDetach(android.view.View,kotlin.jvm.functions.Function1) -> doOnDetach
    65:68:void doOnLayout(android.view.View,kotlin.jvm.functions.Function1) -> doOnLayout
    37:37:void doOnNextLayout(android.view.View,kotlin.jvm.functions.Function1) -> doOnLayout
    37:37:void doOnLayout(android.view.View,kotlin.jvm.functions.Function1):385 -> doOnLayout
    53:53:void doOnNextLayout(android.view.View,kotlin.jvm.functions.Function1) -> doOnLayout
    53:53:void doOnLayout(android.view.View,kotlin.jvm.functions.Function1):386 -> doOnLayout
    71:72:void doOnLayout(android.view.View,kotlin.jvm.functions.Function1) -> doOnLayout
    37:53:void doOnNextLayout(android.view.View,kotlin.jvm.functions.Function1) -> doOnNextLayout
    80:80:androidx.core.view.OneShotPreDrawListener doOnPreDraw(android.view.View,kotlin.jvm.functions.Function1) -> doOnPreDraw
    226:229:android.graphics.Bitmap drawToBitmap(android.view.View,android.graphics.Bitmap$Config) -> drawToBitmap
    42:42:android.graphics.Bitmap androidx.core.graphics.BitmapKt.applyCanvas(android.graphics.Bitmap,kotlin.jvm.functions.Function1) -> drawToBitmap
    42:42:android.graphics.Bitmap drawToBitmap(android.view.View,android.graphics.Bitmap$Config):391 -> drawToBitmap
    43:43:android.graphics.Bitmap androidx.core.graphics.BitmapKt.applyCanvas(android.graphics.Bitmap,kotlin.jvm.functions.Function1) -> drawToBitmap
    43:43:android.graphics.Bitmap drawToBitmap(android.view.View,android.graphics.Bitmap$Config):392 -> drawToBitmap
    230:232:android.graphics.Bitmap drawToBitmap(android.view.View,android.graphics.Bitmap$Config) -> drawToBitmap
    44:44:android.graphics.Bitmap androidx.core.graphics.BitmapKt.applyCanvas(android.graphics.Bitmap,kotlin.jvm.functions.Function1) -> drawToBitmap
    44:44:android.graphics.Bitmap drawToBitmap(android.view.View,android.graphics.Bitmap$Config):393 -> drawToBitmap
    227:227:android.graphics.Bitmap drawToBitmap(android.view.View,android.graphics.Bitmap$Config) -> drawToBitmap
    225:225:android.graphics.Bitmap drawToBitmap$default(android.view.View,android.graphics.Bitmap$Config,int,java.lang.Object) -> drawToBitmap$default
    357:357:int getMarginBottom(android.view.View) -> getMarginBottom
    381:382:int getMarginEnd(android.view.View) -> getMarginEnd
    330:330:int getMarginLeft(android.view.View) -> getMarginLeft
    348:348:int getMarginRight(android.view.View) -> getMarginRight
    368:369:int getMarginStart(android.view.View) -> getMarginStart
    339:339:int getMarginTop(android.view.View) -> getMarginTop
    293:293:boolean isGone(android.view.View) -> isGone
    272:272:boolean isInvisible(android.view.View) -> isInvisible
    251:251:boolean isVisible(android.view.View) -> isVisible
    184:186:java.lang.Runnable postDelayed(android.view.View,long,kotlin.jvm.functions.Function0) -> postDelayed
    206:208:java.lang.Runnable postOnAnimationDelayed(android.view.View,long,kotlin.jvm.functions.Function0) -> postOnAnimationDelayed
    295:296:void setGone(android.view.View,boolean) -> setGone
    274:275:void setInvisible(android.view.View,boolean) -> setInvisible
    168:169:void setPadding(android.view.View,int) -> setPadding
    253:254:void setVisible(android.view.View,boolean) -> setVisible
    306:306:void updateLayoutParams(android.view.View,kotlin.jvm.functions.Function1) -> updateLayoutParams
    318:318:void updateLayoutParamsTyped(android.view.View,kotlin.jvm.functions.Function1) -> updateLayoutParams
    318:318:void updateLayoutParams(android.view.View,kotlin.jvm.functions.Function1):394 -> updateLayoutParams
    319:319:void updateLayoutParamsTyped(android.view.View,kotlin.jvm.functions.Function1) -> updateLayoutParams
    319:319:void updateLayoutParams(android.view.View,kotlin.jvm.functions.Function1):395 -> updateLayoutParams
    320:320:void updateLayoutParamsTyped(android.view.View,kotlin.jvm.functions.Function1) -> updateLayoutParams
    320:320:void updateLayoutParams(android.view.View,kotlin.jvm.functions.Function1):396 -> updateLayoutParams
    321:321:void updateLayoutParamsTyped(android.view.View,kotlin.jvm.functions.Function1) -> updateLayoutParams
    321:321:void updateLayoutParams(android.view.View,kotlin.jvm.functions.Function1):397 -> updateLayoutParams
    307:307:void updateLayoutParams(android.view.View,kotlin.jvm.functions.Function1) -> updateLayoutParams
    318:318:void updateLayoutParamsTyped(android.view.View,kotlin.jvm.functions.Function1) -> updateLayoutParams
    318:318:void updateLayoutParams(android.view.View,kotlin.jvm.functions.Function1):394 -> updateLayoutParams
    318:318:void updateLayoutParamsTyped(android.view.View,kotlin.jvm.functions.Function1) -> updateLayoutParamsTyped
    159:160:void updatePadding(android.view.View,int,int,int,int) -> updatePadding
    154:157:void updatePadding$default(android.view.View,int,int,int,int,int,java.lang.Object) -> updatePadding$default
    159:159:void updatePadding(android.view.View,int,int,int,int) -> updatePadding$default
    159:159:void updatePadding$default(android.view.View,int,int,int,int,int,java.lang.Object):389 -> updatePadding$default
    160:160:void updatePadding(android.view.View,int,int,int,int) -> updatePadding$default
    160:160:void updatePadding$default(android.view.View,int,int,int,int,int,java.lang.Object):390 -> updatePadding$default
    144:145:void updatePaddingRelative(android.view.View,int,int,int,int) -> updatePaddingRelative
    139:142:void updatePaddingRelative$default(android.view.View,int,int,int,int,int,java.lang.Object) -> updatePaddingRelative$default
    144:144:void updatePaddingRelative(android.view.View,int,int,int,int) -> updatePaddingRelative$default
    144:144:void updatePaddingRelative$default(android.view.View,int,int,int,int,int,java.lang.Object):387 -> updatePaddingRelative$default
    145:145:void updatePaddingRelative(android.view.View,int,int,int,int) -> updatePaddingRelative$default
    145:145:void updatePaddingRelative$default(android.view.View,int,int,int,int,int,java.lang.Object):388 -> updatePaddingRelative$default
androidx.core.view.ViewKt$doOnAttach$1 -> androidx.core.view.ViewKt$doOnAttach$1:
    96:96:void <init>(android.view.View,kotlin.jvm.functions.Function1) -> <init>
    98:100:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    102:102:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.core.view.ViewKt$doOnDetach$1 -> androidx.core.view.ViewKt$doOnDetach$1:
    120:120:void <init>(android.view.View,kotlin.jvm.functions.Function1) -> <init>
    121:121:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    124:126:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
androidx.core.view.ViewKt$doOnLayout$$inlined$doOnNextLayout$1 -> androidx.core.view.ViewKt$doOnLayout$$inlined$doOnNextLayout$1:
    37:37:void androidx.core.view.ViewKt$doOnNextLayout$1.<init>(kotlin.jvm.functions.Function1) -> <init>
    37:37:void <init>(kotlin.jvm.functions.Function1):37 -> <init>
    49:49:void androidx.core.view.ViewKt$doOnNextLayout$1.onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    49:49:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int):49 -> onLayoutChange
    50:50:void androidx.core.view.ViewKt$doOnNextLayout$1.onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    50:50:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int):50 -> onLayoutChange
    385:386:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    51:51:void androidx.core.view.ViewKt$doOnNextLayout$1.onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
    51:51:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int):51 -> onLayoutChange
androidx.core.view.ViewKt$doOnNextLayout$1 -> androidx.core.view.ViewKt$doOnNextLayout$1:
    37:37:void <init>(kotlin.jvm.functions.Function1) -> <init>
    49:51:void onLayoutChange(android.view.View,int,int,int,int,int,int,int,int) -> onLayoutChange
androidx.core.view.ViewKt$doOnPreDraw$1 -> androidx.core.view.ViewKt$doOnPreDraw$1:
    80:80:void run() -> run
androidx.core.view.ViewKt$postDelayed$runnable$1 -> androidx.core.view.ViewKt$postDelayed$runnable$1:
    184:184:void run() -> run
androidx.core.view.ViewKt$postOnAnimationDelayed$runnable$1 -> androidx.core.view.ViewKt$postOnAnimationDelayed$runnable$1:
    206:206:void run() -> run
androidx.core.view.ViewParentCompat -> androidx.core.view.ViewParentCompat:
    41:41:void <init>() -> <init>
    498:504:int[] getTempNestedScrollConsumed() -> getTempNestedScrollConsumed
    492:495:void notifySubtreeAccessibilityStateChanged(android.view.ViewParent,android.view.View,android.view.View,int) -> notifySubtreeAccessibilityStateChanged
    424:435:boolean onNestedFling(android.view.ViewParent,android.view.View,float,float,boolean) -> onNestedFling
    461:472:boolean onNestedPreFling(android.view.ViewParent,android.view.View,float,float) -> onNestedPreFling
    178:179:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[]) -> onNestedPreScroll
    384:400:void onNestedPreScroll(android.view.ViewParent,android.view.View,int,int,int[],int) -> onNestedPreScroll
    132:134:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int) -> onNestedScroll
    160:162:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int) -> onNestedScroll
    329:358:void onNestedScroll(android.view.ViewParent,android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    102:103:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int) -> onNestedScrollAccepted
    248:266:void onNestedScrollAccepted(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    85:85:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int) -> onStartNestedScroll
    207:225:boolean onStartNestedScroll(android.view.ViewParent,android.view.View,android.view.View,int,int) -> onStartNestedScroll
    114:115:void onStopNestedScroll(android.view.ViewParent,android.view.View) -> onStopNestedScroll
    282:298:void onStopNestedScroll(android.view.ViewParent,android.view.View,int) -> onStopNestedScroll
    66:66:boolean requestSendAccessibilityEvent(android.view.ViewParent,android.view.View,android.view.accessibility.AccessibilityEvent) -> requestSendAccessibilityEvent
androidx.core.view.ViewPropertyAnimatorCompat -> androidx.core.view.ViewPropertyAnimatorCompat:
    37:39:void <init>(android.view.View) -> <init>
    138:141:androidx.core.view.ViewPropertyAnimatorCompat alpha(float) -> alpha
    153:156:androidx.core.view.ViewPropertyAnimatorCompat alphaBy(float) -> alphaBy
    464:467:void cancel() -> cancel
    237:240:long getDuration() -> getDuration
    267:272:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    302:305:long getStartDelay() -> getStartDelay
    318:321:androidx.core.view.ViewPropertyAnimatorCompat rotation(float) -> rotation
    333:336:androidx.core.view.ViewPropertyAnimatorCompat rotationBy(float) -> rotationBy
    348:351:androidx.core.view.ViewPropertyAnimatorCompat rotationX(float) -> rotationX
    363:366:androidx.core.view.ViewPropertyAnimatorCompat rotationXBy(float) -> rotationXBy
    378:381:androidx.core.view.ViewPropertyAnimatorCompat rotationY(float) -> rotationY
    393:396:androidx.core.view.ViewPropertyAnimatorCompat rotationYBy(float) -> rotationYBy
    408:411:androidx.core.view.ViewPropertyAnimatorCompat scaleX(float) -> scaleX
    423:426:androidx.core.view.ViewPropertyAnimatorCompat scaleXBy(float) -> scaleXBy
    438:441:androidx.core.view.ViewPropertyAnimatorCompat scaleY(float) -> scaleY
    453:456:androidx.core.view.ViewPropertyAnimatorCompat scaleYBy(float) -> scaleYBy
    123:126:androidx.core.view.ViewPropertyAnimatorCompat setDuration(long) -> setDuration
    254:257:androidx.core.view.ViewPropertyAnimatorCompat setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    729:737:androidx.core.view.ViewPropertyAnimatorCompat setListener(androidx.core.view.ViewPropertyAnimatorListener) -> setListener
    741:761:void setListenerInternal(android.view.View,androidx.core.view.ViewPropertyAnimatorListener) -> setListenerInternal
    286:289:androidx.core.view.ViewPropertyAnimatorCompat setStartDelay(long) -> setStartDelay
    776:790:androidx.core.view.ViewPropertyAnimatorCompat setUpdateListener(androidx.core.view.ViewPropertyAnimatorUpdateListener) -> setUpdateListener
    644:647:void start() -> start
    168:171:androidx.core.view.ViewPropertyAnimatorCompat translationX(float) -> translationX
    538:541:androidx.core.view.ViewPropertyAnimatorCompat translationXBy(float) -> translationXBy
    183:186:androidx.core.view.ViewPropertyAnimatorCompat translationY(float) -> translationY
    553:556:androidx.core.view.ViewPropertyAnimatorCompat translationYBy(float) -> translationYBy
    589:594:androidx.core.view.ViewPropertyAnimatorCompat translationZ(float) -> translationZ
    570:575:androidx.core.view.ViewPropertyAnimatorCompat translationZBy(float) -> translationZBy
    216:224:androidx.core.view.ViewPropertyAnimatorCompat withEndAction(java.lang.Runnable) -> withEndAction
    680:688:androidx.core.view.ViewPropertyAnimatorCompat withLayer() -> withLayer
    708:716:androidx.core.view.ViewPropertyAnimatorCompat withStartAction(java.lang.Runnable) -> withStartAction
    478:481:androidx.core.view.ViewPropertyAnimatorCompat x(float) -> x
    493:496:androidx.core.view.ViewPropertyAnimatorCompat xBy(float) -> xBy
    508:511:androidx.core.view.ViewPropertyAnimatorCompat y(float) -> y
    523:526:androidx.core.view.ViewPropertyAnimatorCompat yBy(float) -> yBy
    608:613:androidx.core.view.ViewPropertyAnimatorCompat z(float) -> z
    627:632:androidx.core.view.ViewPropertyAnimatorCompat zBy(float) -> zBy
androidx.core.view.ViewPropertyAnimatorCompat$1 -> androidx.core.view.ViewPropertyAnimatorCompat$1:
    742:742:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorListener,android.view.View) -> <init>
    745:746:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    750:751:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    755:756:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorCompat$2 -> androidx.core.view.ViewPropertyAnimatorCompat$2:
    780:780:void <init>(androidx.core.view.ViewPropertyAnimatorCompat,androidx.core.view.ViewPropertyAnimatorUpdateListener,android.view.View) -> <init>
    783:784:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14 -> androidx.core.view.ViewPropertyAnimatorCompat$ViewPropertyAnimatorListenerApi14:
    45:47:void <init>(androidx.core.view.ViewPropertyAnimatorCompat) -> <init>
    101:109:void onAnimationCancel(android.view.View) -> onAnimationCancel
    75:97:void onAnimationEnd(android.view.View) -> onAnimationEnd
    52:70:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.ViewPropertyAnimatorListenerAdapter -> androidx.core.view.ViewPropertyAnimatorListenerAdapter:
    27:27:void <init>() -> <init>
    48:48:void onAnimationCancel(android.view.View) -> onAnimationCancel
    41:41:void onAnimationEnd(android.view.View) -> onAnimationEnd
    34:34:void onAnimationStart(android.view.View) -> onAnimationStart
androidx.core.view.WindowCompat -> androidx.core.view.WindowCompat:
    65:65:void <init>() -> <init>
    85:91:android.view.View requireViewById(android.view.Window,int) -> requireViewById
androidx.core.view.WindowInsetsCompat -> androidx.core.view.WindowInsetsCompat:
    55:55:void <clinit>() -> <clinit>
    64:76:void <init>(android.view.WindowInsets) -> <init>
    83:102:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    410:410:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    385:385:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    244:244:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    546:553:boolean equals(java.lang.Object) -> equals
    398:398:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    462:462:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    356:356:int getStableInsetBottom() -> getStableInsetBottom
    322:322:int getStableInsetLeft() -> getStableInsetLeft
    339:339:int getStableInsetRight() -> getStableInsetRight
    305:305:int getStableInsetTop() -> getStableInsetTop
    448:448:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    496:496:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    169:169:int getSystemWindowInsetBottom() -> getSystemWindowInsetBottom
    127:127:int getSystemWindowInsetLeft() -> getSystemWindowInsetLeft
    155:155:int getSystemWindowInsetRight() -> getSystemWindowInsetRight
    141:141:int getSystemWindowInsetTop() -> getSystemWindowInsetTop
    428:428:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    478:478:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    194:194:boolean hasInsets() -> hasInsets
    373:373:boolean hasStableInsets() -> hasStableInsets
    183:183:boolean hasSystemWindowInsets() -> hasSystemWindowInsets
    558:558:int hashCode() -> hashCode
    516:516:androidx.core.view.WindowInsetsCompat inset(androidx.core.graphics.Insets) -> inset
    541:541:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    837:844:androidx.core.graphics.Insets insetInsets(androidx.core.graphics.Insets,int,int,int,int) -> insetInsets
    216:216:boolean isConsumed() -> isConsumed
    232:232:boolean isRound() -> isRound
    265:265:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(int,int,int,int) -> replaceSystemWindowInsets
    286:286:androidx.core.view.WindowInsetsCompat replaceSystemWindowInsets(android.graphics.Rect) -> replaceSystemWindowInsets
    569:569:android.view.WindowInsets toWindowInsets() -> toWindowInsets
    113:113:androidx.core.view.WindowInsetsCompat toWindowInsetsCompat(android.view.WindowInsets) -> toWindowInsetsCompat
androidx.core.view.WindowInsetsCompat$Builder -> androidx.core.view.WindowInsetsCompat$Builder:
    856:864:void <init>() -> <init>
    871:879:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    996:996:androidx.core.view.WindowInsetsCompat build() -> build
    985:986:androidx.core.view.WindowInsetsCompat$Builder setDisplayCutout(androidx.core.view.DisplayCutoutCompat) -> setDisplayCutout
    933:934:androidx.core.view.WindowInsetsCompat$Builder setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    970:971:androidx.core.view.WindowInsetsCompat$Builder setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    911:912:androidx.core.view.WindowInsetsCompat$Builder setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    893:894:androidx.core.view.WindowInsetsCompat$Builder setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
    950:951:androidx.core.view.WindowInsetsCompat$Builder setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl -> androidx.core.view.WindowInsetsCompat$BuilderImpl:
    1004:1005:void <init>() -> <init>
    1007:1009:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1025:1025:androidx.core.view.WindowInsetsCompat build() -> build
    1021:1021:void setDisplayCutout(androidx.core.view.DisplayCutoutCompat) -> setDisplayCutout
    1015:1015:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1019:1019:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1013:1013:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1011:1011:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
    1017:1017:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl20 -> androidx.core.view.WindowInsetsCompat$BuilderImpl20:
    1032:1035:void <clinit>() -> <clinit>
    1039:1041:void <init>() -> <init>
    1043:1045:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1058:1058:androidx.core.view.WindowInsetsCompat build() -> build
    1069:1107:android.view.WindowInsets createWindowInsetsInstance() -> createWindowInsetsInstance
    1049:1053:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
androidx.core.view.WindowInsetsCompat$BuilderImpl29 -> androidx.core.view.WindowInsetsCompat$BuilderImpl29:
    1115:1117:void <init>() -> <init>
    1119:1124:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    1159:1159:androidx.core.view.WindowInsetsCompat build() -> build
    1153:1154:void setDisplayCutout(androidx.core.view.DisplayCutoutCompat) -> setDisplayCutout
    1138:1139:void setMandatorySystemGestureInsets(androidx.core.graphics.Insets) -> setMandatorySystemGestureInsets
    1148:1149:void setStableInsets(androidx.core.graphics.Insets) -> setStableInsets
    1133:1134:void setSystemGestureInsets(androidx.core.graphics.Insets) -> setSystemGestureInsets
    1128:1129:void setSystemWindowInsets(androidx.core.graphics.Insets) -> setSystemWindowInsets
    1143:1144:void setTappableElementInsets(androidx.core.graphics.Insets) -> setTappableElementInsets
androidx.core.view.WindowInsetsCompat$Impl -> androidx.core.view.WindowInsetsCompat$Impl:
    575:577:void <init>(androidx.core.view.WindowInsetsCompat) -> <init>
    604:604:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    594:594:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    589:589:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    643:646:boolean equals(java.lang.Object) -> equals
    599:599:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    626:626:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    614:614:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    620:620:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    609:609:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    632:632:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    656:656:int hashCode() -> hashCode
    637:637:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    584:584:boolean isConsumed() -> isConsumed
    580:580:boolean isRound() -> isRound
androidx.core.view.WindowInsetsCompat$Impl20 -> androidx.core.view.WindowInsetsCompat$Impl20:
    670:672:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    675:676:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl20) -> <init>
    686:693:androidx.core.graphics.Insets getSystemWindowInsets() -> getSystemWindowInsets
    699:702:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
    680:680:boolean isRound() -> isRound
androidx.core.view.WindowInsetsCompat$Impl21 -> androidx.core.view.WindowInsetsCompat$Impl21:
    711:712:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    715:716:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl21) -> <init>
    726:726:androidx.core.view.WindowInsetsCompat consumeStableInsets() -> consumeStableInsets
    732:732:androidx.core.view.WindowInsetsCompat consumeSystemWindowInsets() -> consumeSystemWindowInsets
    738:745:androidx.core.graphics.Insets getStableInsets() -> getStableInsets
    720:720:boolean isConsumed() -> isConsumed
androidx.core.view.WindowInsetsCompat$Impl28 -> androidx.core.view.WindowInsetsCompat$Impl28:
    752:753:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    756:757:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl28) -> <init>
    768:768:androidx.core.view.WindowInsetsCompat consumeDisplayCutout() -> consumeDisplayCutout
    773:777:boolean equals(java.lang.Object) -> equals
    762:762:androidx.core.view.DisplayCutoutCompat getDisplayCutout() -> getDisplayCutout
    782:782:int hashCode() -> hashCode
androidx.core.view.WindowInsetsCompat$Impl29 -> androidx.core.view.WindowInsetsCompat$Impl29:
    794:795:void <init>(androidx.core.view.WindowInsetsCompat,android.view.WindowInsets) -> <init>
    798:799:void <init>(androidx.core.view.WindowInsetsCompat,androidx.core.view.WindowInsetsCompat$Impl29) -> <init>
    813:817:androidx.core.graphics.Insets getMandatorySystemGestureInsets() -> getMandatorySystemGestureInsets
    804:807:androidx.core.graphics.Insets getSystemGestureInsets() -> getSystemGestureInsets
    823:826:androidx.core.graphics.Insets getTappableElementInsets() -> getTappableElementInsets
    832:832:androidx.core.view.WindowInsetsCompat inset(int,int,int,int) -> inset
androidx.core.view.accessibility.AccessibilityClickableSpanCompat -> androidx.core.view.accessibility.AccessibilityClickableSpanCompat:
    55:59:void <init>(int,androidx.core.view.accessibility.AccessibilityNodeInfoCompat,int) -> <init>
    69:72:void onClick(android.view.View) -> onClick
androidx.core.view.accessibility.AccessibilityEventCompat -> androidx.core.view.accessibility.AccessibilityEventCompat:
    215:217:void <init>() -> <init>
    244:245:void appendRecord(android.view.accessibility.AccessibilityEvent,androidx.core.view.accessibility.AccessibilityRecordCompat) -> appendRecord
    279:279:androidx.core.view.accessibility.AccessibilityRecordCompat asRecord(android.view.accessibility.AccessibilityEvent) -> asRecord
    372:373:int getAction(android.view.accessibility.AccessibilityEvent) -> getAction
    310:311:int getContentChangeTypes(android.view.accessibility.AccessibilityEvent) -> getContentChangeTypes
    336:337:int getMovementGranularity(android.view.accessibility.AccessibilityEvent) -> getMovementGranularity
    258:258:androidx.core.view.accessibility.AccessibilityRecordCompat getRecord(android.view.accessibility.AccessibilityEvent,int) -> getRecord
    228:228:int getRecordCount(android.view.accessibility.AccessibilityEvent) -> getRecordCount
    361:364:void setAction(android.view.accessibility.AccessibilityEvent,int) -> setAction
    291:294:void setContentChangeTypes(android.view.accessibility.AccessibilityEvent,int) -> setContentChangeTypes
    325:328:void setMovementGranularity(android.view.accessibility.AccessibilityEvent,int) -> setMovementGranularity
androidx.core.view.accessibility.AccessibilityManagerCompat -> androidx.core.view.accessibility.AccessibilityManagerCompat:
    278:278:void <init>() -> <init>
    47:50:boolean addAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> addAccessibilityStateChangeListener
    168:172:boolean addTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> addTouchExplorationStateChangeListener
    143:143:java.util.List getEnabledAccessibilityServiceList(android.view.accessibility.AccessibilityManager,int) -> getEnabledAccessibilityServiceList
    120:120:java.util.List getInstalledAccessibilityServiceList(android.view.accessibility.AccessibilityManager) -> getInstalledAccessibilityServiceList
    156:156:boolean isTouchExplorationEnabled(android.view.accessibility.AccessibilityManager) -> isTouchExplorationEnabled
    68:71:boolean removeAccessibilityStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> removeAccessibilityStateChangeListener
    187:191:boolean removeTouchExplorationStateChangeListener(android.view.accessibility.AccessibilityManager,androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> removeTouchExplorationStateChangeListener
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat -> androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerCompat:
    240:240:void <init>() -> <init>
androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper -> androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListenerWrapper:
    81:83:void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$AccessibilityStateChangeListener) -> <init>
    92:100:boolean equals(java.lang.Object) -> equals
    87:87:int hashCode() -> hashCode
    105:106:void onAccessibilityStateChanged(boolean) -> onAccessibilityStateChanged
androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper -> androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListenerWrapper:
    204:206:void <init>(androidx.core.view.accessibility.AccessibilityManagerCompat$TouchExplorationStateChangeListener) -> <init>
    215:223:boolean equals(java.lang.Object) -> equals
    210:210:int hashCode() -> hashCode
    228:229:void onTouchExplorationStateChanged(boolean) -> onTouchExplorationStateChanged
androidx.core.view.accessibility.AccessibilityNodeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat:
    1608:1608:void <clinit>() -> <clinit>
    1633:1635:void <init>(java.lang.Object) -> <init>
    1637:1639:void <init>(android.view.accessibility.AccessibilityNodeInfo) -> <init>
    1934:1935:void addAction(int) -> addAction
    1967:1970:void addAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> addAction
    1846:1847:void addChild(android.view.View) -> addChild
    1864:1867:void addChild(android.view.View,int) -> addChild
    2712:2716:void addSpanLocationToExtras(android.text.style.ClickableSpan,android.text.Spanned,int) -> addSpanLocationToExtras
    2641:2656:void addSpansToExtras(java.lang.CharSequence,android.view.View) -> addSpansToExtras
    3235:3236:boolean canOpenPopup() -> canOpenPopup
    2703:2709:void clearExtrasSpans() -> clearExtrasSpans
    3984:4007:boolean equals(java.lang.Object) -> equals
    1938:1947:java.util.List extrasIntList(java.lang.String) -> extrasIntList
    2081:2088:java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> findAccessibilityNodeInfosByText
    3281:3287:java.util.List findAccessibilityNodeInfosByViewId(java.lang.String) -> findAccessibilityNodeInfosByViewId
    1770:1771:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1792:1793:androidx.core.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> focusSearch
    2977:2990:java.util.List getActionList() -> getActionList
    4088:4090:java.lang.String getActionSymbolicName(int) -> getActionSymbolicName
    1919:1919:int getActions() -> getActions
    4082:4084:boolean getBooleanProperty(int) -> getBooleanProperty
    2164:2165:void getBoundsInParent(android.graphics.Rect) -> getBoundsInParent
    2196:2197:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    1831:1831:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> getChild
    1814:1814:int getChildCount() -> getChildCount
    2579:2579:java.lang.CharSequence getClassName() -> getClassName
    2678:2682:android.text.style.ClickableSpan[] getClickableSpans(java.lang.CharSequence) -> getClickableSpans
    2892:2898:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat getCollectionInfo() -> getCollectionInfo
    2925:2931:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat getCollectionItemInfo() -> getCollectionItemInfo
    2739:2739:java.lang.CharSequence getContentDescription() -> getContentDescription
    2861:2864:int getDrawingOrder() -> getDrawingOrder
    3115:3118:java.lang.CharSequence getError() -> getError
    3307:3308:android.os.Bundle getExtras() -> getExtras
    3061:3064:java.lang.CharSequence getHintText() -> getHintText
    1665:1665:java.lang.Object getInfo() -> getInfo
    3320:3321:int getInputType() -> getInputType
    3166:3167:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabelFor() -> getLabelFor
    3222:3223:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getLabeledBy() -> getLabeledBy
    2824:2825:int getLiveRegion() -> getLiveRegion
    3374:3377:int getMaxTextLength() -> getMaxTextLength
    2060:2061:int getMovementGranularities() -> getMovementGranularities
    2659:2664:android.util.SparseArray getOrCreateSpansFromViewTags(android.view.View) -> getOrCreateSpansFromViewTags
    2555:2555:java.lang.CharSequence getPackageName() -> getPackageName
    3721:3724:java.lang.CharSequence getPaneTitle() -> getPaneTitle
    2102:2102:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getParent() -> getParent
    2940:2946:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat getRangeInfo() -> getRangeInfo
    3891:3892:java.lang.CharSequence getRoleDescription() -> getRoleDescription
    2669:2669:android.util.SparseArray getSpansFromViewTags(android.view.View) -> getSpansFromViewTags
    2603:2617:java.lang.CharSequence getText() -> getText
    3419:3420:int getTextSelectionEnd() -> getTextSelectionEnd
    3406:3407:int getTextSelectionStart() -> getTextSelectionStart
    3665:3668:java.lang.CharSequence getTooltipText() -> getTooltipText
    3945:3951:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat getTouchDelegateInfo() -> getTouchDelegateInfo
    3501:3504:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalAfter() -> getTraversalAfter
    3436:3439:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTraversalBefore() -> getTraversalBefore
    2798:2799:java.lang.String getViewIdResourceName() -> getViewIdResourceName
    3562:3565:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getWindow() -> getWindow
    1805:1805:int getWindowId() -> getWindowId
    2699:2699:boolean hasSpans() -> hasSpans
    3979:3979:int hashCode() -> hashCode
    2687:2695:int idForClickableSpan(android.text.style.ClickableSpan,android.util.SparseArray) -> idForClickableSpan
    2347:2348:boolean isAccessibilityFocused() -> isAccessibilityFocused
    2220:2220:boolean isCheckable() -> isCheckable
    2244:2244:boolean isChecked() -> isChecked
    2402:2402:boolean isClickable() -> isClickable
    3018:3019:boolean isContentInvalid() -> isContentInvalid
    3031:3034:boolean isContextClickable() -> isContextClickable
    3575:3576:boolean isDismissable() -> isDismissable
    3604:3605:boolean isEditable() -> isEditable
    2450:2450:boolean isEnabled() -> isEnabled
    2268:2268:boolean isFocusable() -> isFocusable
    2292:2292:boolean isFocused() -> isFocused
    3811:3816:boolean isHeading() -> isHeading
    2525:2528:boolean isImportantForAccessibility() -> isImportantForAccessibility
    2426:2426:boolean isLongClickable() -> isLongClickable
    3635:3636:boolean isMultiLine() -> isMultiLine
    2474:2474:boolean isPassword() -> isPassword
    3740:3743:boolean isScreenReaderFocusable() -> isScreenReaderFocusable
    2498:2498:boolean isScrollable() -> isScrollable
    2378:2378:boolean isSelected() -> isSelected
    3774:3777:boolean isShowingHintText() -> isShowingHintText
    3844:3847:boolean isTextEntryKey() -> isTextEntryKey
    2316:2317:boolean isVisibleToUser() -> isVisibleToUser
    1676:1676:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> obtain
    1690:1691:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> obtain
    1704:1704:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain() -> obtain
    1715:1715:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtain(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> obtain
    2012:2012:boolean performAction(int) -> performAction
    2029:2030:boolean performAction(int,android.os.Bundle) -> performAction
    2765:2766:void recycle() -> recycle
    3879:3880:boolean refresh() -> refresh
    1992:1995:boolean removeAction(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat) -> removeAction
    1884:1887:boolean removeChild(android.view.View) -> removeChild
    1902:1905:boolean removeChild(android.view.View,int) -> removeChild
    2719:2731:void removeCollectedSpans(android.view.View) -> removeCollectedSpans
    2367:2370:void setAccessibilityFocused(boolean) -> setAccessibilityFocused
    4072:4079:void setBooleanProperty(int,boolean) -> setBooleanProperty
    2187:2188:void setBoundsInParent(android.graphics.Rect) -> setBoundsInParent
    2211:2212:void setBoundsInScreen(android.graphics.Rect) -> setBoundsInScreen
    3253:3256:void setCanOpenPopup(boolean) -> setCanOpenPopup
    2235:2236:void setCheckable(boolean) -> setCheckable
    2259:2260:void setChecked(boolean) -> setChecked
    2594:2595:void setClassName(java.lang.CharSequence) -> setClassName
    2417:2418:void setClickable(boolean) -> setClickable
    2902:2908:void setCollectionInfo(java.lang.Object) -> setCollectionInfo
    2911:2916:void setCollectionItemInfo(java.lang.Object) -> setCollectionItemInfo
    2754:2755:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    3006:3009:void setContentInvalid(boolean) -> setContentInvalid
    3050:3053:void setContextClickable(boolean) -> setContextClickable
    3593:3596:void setDismissable(boolean) -> setDismissable
    2880:2883:void setDrawingOrder(int) -> setDrawingOrder
    3624:3627:void setEditable(boolean) -> setEditable
    2465:2466:void setEnabled(boolean) -> setEnabled
    3104:3107:void setError(java.lang.CharSequence) -> setError
    2283:2284:void setFocusable(boolean) -> setFocusable
    2307:2308:void setFocused(boolean) -> setFocused
    3831:3836:void setHeading(boolean) -> setHeading
    3083:3088:void setHintText(java.lang.CharSequence) -> setHintText
    2544:2547:void setImportantForAccessibility(boolean) -> setImportantForAccessibility
    3341:3344:void setInputType(int) -> setInputType
    3129:3132:void setLabelFor(android.view.View) -> setLabelFor
    3149:3152:void setLabelFor(android.view.View,int) -> setLabelFor
    3180:3183:void setLabeledBy(android.view.View) -> setLabeledBy
    3205:3208:void setLabeledBy(android.view.View,int) -> setLabeledBy
    2844:2847:void setLiveRegion(int) -> setLiveRegion
    2441:2442:void setLongClickable(boolean) -> setLongClickable
    3362:3365:void setMaxTextLength(int) -> setMaxTextLength
    2049:2052:void setMovementGranularities(int) -> setMovementGranularities
    3653:3656:void setMultiLine(boolean) -> setMultiLine
    2570:2571:void setPackageName(java.lang.CharSequence) -> setPackageName
    3707:3712:void setPaneTitle(java.lang.CharSequence) -> setPaneTitle
    2117:2120:void setParent(android.view.View) -> setParent
    2144:2149:void setParent(android.view.View,int) -> setParent
    2489:2490:void setPassword(boolean) -> setPassword
    2960:2963:void setRangeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat) -> setRangeInfo
    3923:3926:void setRoleDescription(java.lang.CharSequence) -> setRoleDescription
    3759:3764:void setScreenReaderFocusable(boolean) -> setScreenReaderFocusable
    2513:2514:void setScrollable(boolean) -> setScrollable
    2393:2394:void setSelected(boolean) -> setSelected
    3794:3799:void setShowingHintText(boolean) -> setShowingHintText
    1724:1727:void setSource(android.view.View) -> setSource
    1751:1756:void setSource(android.view.View,int) -> setSource
    2633:2634:void setText(java.lang.CharSequence) -> setText
    3862:3867:void setTextEntryKey(boolean) -> setTextEntryKey
    3395:3398:void setTextSelection(int,int) -> setTextSelection
    3687:3692:void setTooltipText(java.lang.CharSequence) -> setTooltipText
    3972:3975:void setTouchDelegateInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat) -> setTouchDelegateInfo
    3523:3526:void setTraversalAfter(android.view.View) -> setTraversalAfter
    3549:3552:void setTraversalAfter(android.view.View,int) -> setTraversalAfter
    3458:3461:void setTraversalBefore(android.view.View) -> setTraversalBefore
    3485:3488:void setTraversalBefore(android.view.View,int) -> setTraversalBefore
    2780:2783:void setViewIdResourceName(java.lang.String) -> setViewIdResourceName
    2336:2339:void setVisibleToUser(boolean) -> setVisibleToUser
    4014:4068:java.lang.String toString() -> toString
    1655:1655:android.view.accessibility.AccessibilityNodeInfo unwrap() -> unwrap
    1648:1648:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrap(android.view.accessibility.AccessibilityNodeInfo) -> wrap
    1618:1621:androidx.core.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat:
    103:542:void <clinit>() -> <clinit>
    564:565:void <init>(int,java.lang.CharSequence) -> <init>
    578:579:void <init>(int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> <init>
    582:583:void <init>(java.lang.Object) -> <init>
    587:588:void <init>(int,java.lang.CharSequence,java.lang.Class) -> <init>
    592:601:void <init>(java.lang.Object,int,java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand,java.lang.Class) -> <init>
    664:664:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityActionCompat createReplacementAction(java.lang.CharSequence,androidx.core.view.accessibility.AccessibilityViewCommand) -> createReplacementAction
    675:690:boolean equals(java.lang.Object) -> equals
    609:612:int getId() -> getId
    623:626:java.lang.CharSequence getLabel() -> getLabel
    670:670:int hashCode() -> hashCode
    639:655:boolean perform(android.view.View,android.os.Bundle) -> perform
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat:
    764:766:void <init>(java.lang.Object) -> <init>
    774:775:int getColumnCount() -> getColumnCount
    787:788:int getRowCount() -> getRowCount
    818:821:int getSelectionMode() -> getSelectionMode
    800:801:boolean isHierarchical() -> isHierarchical
    734:738:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean,int) -> obtain
    756:757:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionInfoCompat obtain(int,int,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat:
    888:890:void <init>(java.lang.Object) -> <init>
    898:899:int getColumnIndex() -> getColumnIndex
    911:912:int getColumnSpan() -> getColumnSpan
    924:925:int getRowIndex() -> getRowIndex
    937:938:int getRowSpan() -> getRowSpan
    954:955:boolean isHeading() -> isHeading
    967:970:boolean isSelected() -> isSelected
    855:859:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean,boolean) -> obtain
    880:881:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$CollectionItemInfoCompat obtain(int,int,int,int,boolean) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat:
    1006:1008:void <init>(java.lang.Object) -> <init>
    1016:1017:float getCurrent() -> getCurrent
    1029:1030:float getMax() -> getMax
    1042:1043:float getMin() -> getMin
    1059:1060:int getType() -> getType
    996:997:androidx.core.view.accessibility.AccessibilityNodeInfoCompat$RangeInfoCompat obtain(int,float,float,float) -> obtain
androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat -> androidx.core.view.accessibility.AccessibilityNodeInfoCompat$TouchDelegateInfoCompat:
    1078:1084:void <init>(java.util.Map) -> <init>
    1086:1088:void <init>(android.view.accessibility.AccessibilityNodeInfo$TouchDelegateInfo) -> <init>
    1120:1123:android.graphics.Region getRegionAt(int) -> getRegionAt
    1101:1104:int getRegionCount() -> getRegionCount
    1148:1154:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getTargetForRegion(android.graphics.Region) -> getTargetForRegion
androidx.core.view.accessibility.AccessibilityNodeProviderCompat -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat:
    104:112:void <init>() -> <init>
    120:122:void <init>(java.lang.Object) -> <init>
    155:155:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    192:192:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    208:208:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    128:128:java.lang.Object getProvider() -> getProvider
    172:172:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi16:
    38:40:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    44:49:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    56:67:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    73:73:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19 -> androidx.core.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderApi19:
    80:81:void <init>(androidx.core.view.accessibility.AccessibilityNodeProviderCompat) -> <init>
    85:89:android.view.accessibility.AccessibilityNodeInfo findFocus(int) -> findFocus
androidx.core.view.accessibility.AccessibilityRecordCompat -> androidx.core.view.accessibility.AccessibilityRecordCompat:
    43:45:void <init>(java.lang.Object) -> <init>
    763:777:boolean equals(java.lang.Object) -> equals
    572:572:int getAddedCount() -> getAddedCount
    663:663:java.lang.CharSequence getBeforeText() -> getBeforeText
    624:624:java.lang.CharSequence getClassName() -> getClassName
    689:689:java.lang.CharSequence getContentDescription() -> getContentDescription
    340:340:int getCurrentItemIndex() -> getCurrentItemIndex
    369:369:int getFromIndex() -> getFromIndex
    55:55:java.lang.Object getImpl() -> getImpl
    314:314:int getItemCount() -> getItemCount
    472:472:int getMaxScrollX() -> getMaxScrollX
    482:483:int getMaxScrollX(android.view.accessibility.AccessibilityRecord) -> getMaxScrollX
    522:522:int getMaxScrollY() -> getMaxScrollY
    532:533:int getMaxScrollY(android.view.accessibility.AccessibilityRecord) -> getMaxScrollY
    715:715:android.os.Parcelable getParcelableData() -> getParcelableData
    598:598:int getRemovedCount() -> getRemovedCount
    424:424:int getScrollX() -> getScrollX
    448:448:int getScrollY() -> getScrollY
    160:160:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getSource() -> getSource
    651:651:java.util.List getText() -> getText
    399:399:int getToIndex() -> getToIndex
    172:172:int getWindowId() -> getWindowId
    754:754:int hashCode() -> hashCode
    184:184:boolean isChecked() -> isChecked
    210:210:boolean isEnabled() -> isEnabled
    262:262:boolean isFullScreen() -> isFullScreen
    236:236:boolean isPassword() -> isPassword
    288:288:boolean isScrollable() -> isScrollable
    70:70:androidx.core.view.accessibility.AccessibilityRecordCompat obtain(androidx.core.view.accessibility.AccessibilityRecordCompat) -> obtain
    84:84:androidx.core.view.accessibility.AccessibilityRecordCompat obtain() -> obtain
    745:746:void recycle() -> recycle
    586:587:void setAddedCount(int) -> setAddedCount
    677:678:void setBeforeText(java.lang.CharSequence) -> setBeforeText
    198:199:void setChecked(boolean) -> setChecked
    638:639:void setClassName(java.lang.CharSequence) -> setClassName
    703:704:void setContentDescription(java.lang.CharSequence) -> setContentDescription
    354:355:void setCurrentItemIndex(int) -> setCurrentItemIndex
    224:225:void setEnabled(boolean) -> setEnabled
    386:387:void setFromIndex(int) -> setFromIndex
    276:277:void setFullScreen(boolean) -> setFullScreen
    328:329:void setItemCount(int) -> setItemCount
    498:499:void setMaxScrollX(int) -> setMaxScrollX
    508:511:void setMaxScrollX(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollX
    548:549:void setMaxScrollY(int) -> setMaxScrollY
    558:561:void setMaxScrollY(android.view.accessibility.AccessibilityRecord,int) -> setMaxScrollY
    729:730:void setParcelableData(android.os.Parcelable) -> setParcelableData
    250:251:void setPassword(boolean) -> setPassword
    612:613:void setRemovedCount(int) -> setRemovedCount
    436:437:void setScrollX(int) -> setScrollX
    460:461:void setScrollY(int) -> setScrollY
    302:303:void setScrollable(boolean) -> setScrollable
    98:99:void setSource(android.view.View) -> setSource
    119:120:void setSource(android.view.View,int) -> setSource
    139:142:void setSource(android.view.accessibility.AccessibilityRecord,android.view.View,int) -> setSource
    412:413:void setToIndex(int) -> setToIndex
androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$CommandArguments:
    46:46:void <init>() -> <init>
    54:55:void setBundle(android.os.Bundle) -> setBundle
androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveAtGranularityArguments:
    64:64:void <init>() -> <init>
    88:88:boolean getExtendSelection() -> getExtendSelection
    80:80:int getGranularity() -> getGranularity
androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveHtmlArguments:
    98:98:void <init>() -> <init>
    104:104:java.lang.String getHTMLElement() -> getHTMLElement
androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$MoveWindowArguments:
    183:183:void <init>() -> <init>
    189:189:int getX() -> getX
    196:196:int getY() -> getY
androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$ScrollToPositionArguments:
    148:148:void <init>() -> <init>
    161:161:int getColumn() -> getColumn
    154:154:int getRow() -> getRow
androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetProgressArguments:
    169:169:void <init>() -> <init>
    175:175:float getProgress() -> getProgress
androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetSelectionArguments:
    113:113:void <init>() -> <init>
    126:126:int getEnd() -> getEnd
    119:119:int getStart() -> getStart
androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments -> androidx.core.view.accessibility.AccessibilityViewCommand$SetTextArguments:
    133:133:void <init>() -> <init>
    139:139:java.lang.CharSequence getText() -> getText
androidx.core.view.accessibility.AccessibilityWindowInfoCompat -> androidx.core.view.accessibility.AccessibilityWindowInfoCompat:
    84:86:void <init>(java.lang.Object) -> <init>
    321:338:boolean equals(java.lang.Object) -> equals
    259:263:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getAnchor() -> getAnchor
    166:169:void getBoundsInScreen(android.graphics.Rect) -> getBoundsInScreen
    232:235:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getChild(int) -> getChild
    218:221:int getChildCount() -> getChildCount
    153:156:int getId() -> getId
    113:116:int getLayer() -> getLayer
    140:143:androidx.core.view.accessibility.AccessibilityWindowInfoCompat getParent() -> getParent
    126:130:androidx.core.view.accessibility.AccessibilityNodeInfoCompat getRoot() -> getRoot
    246:249:java.lang.CharSequence getTitle() -> getTitle
    99:102:int getType() -> getType
    316:316:int hashCode() -> hashCode
    205:208:boolean isAccessibilityFocused() -> isAccessibilityFocused
    179:182:boolean isActive() -> isActive
    192:195:boolean isFocused() -> isFocused
    274:277:androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain() -> obtain
    290:296:androidx.core.view.accessibility.AccessibilityWindowInfoCompat obtain(androidx.core.view.accessibility.AccessibilityWindowInfoCompat) -> obtain
    309:312:void recycle() -> recycle
    344:357:java.lang.String toString() -> toString
    361:363:java.lang.String typeToString(int) -> typeToString
    78:81:androidx.core.view.accessibility.AccessibilityWindowInfoCompat wrapNonNullInstance(java.lang.Object) -> wrapNonNullInstance
androidx.core.view.animation.PathInterpolatorApi14 -> androidx.core.view.animation.PathInterpolatorApi14:
    36:53:void <init>(android.graphics.Path) -> <init>
    56:57:void <init>(float,float) -> <init>
    61:62:void <init>(float,float,float,float) -> <init>
    107:110:android.graphics.Path createCubic(float,float,float,float) -> createCubic
    99:102:android.graphics.Path createQuad(float,float) -> createQuad
    66:95:float getInterpolation(float) -> getInterpolation
androidx.core.view.animation.PathInterpolatorCompat -> androidx.core.view.animation.PathInterpolatorCompat:
    31:33:void <init>() -> <init>
    48:51:android.view.animation.Interpolator create(android.graphics.Path) -> create
    63:66:android.view.animation.Interpolator create(float,float) -> create
    81:84:android.view.animation.Interpolator create(float,float,float,float) -> create
androidx.core.view.inputmethod.EditorInfoCompat -> androidx.core.view.inputmethod.EditorInfoCompat:
    76:76:void <clinit>() -> <clinit>
    182:183:void <init>() -> <init>
    135:146:java.lang.String[] getContentMimeTypes(android.view.inputmethod.EditorInfo) -> getContentMimeTypes
    159:176:int getProtocol(android.view.inputmethod.EditorInfo) -> getProtocol
    112:121:void setContentMimeTypes(android.view.inputmethod.EditorInfo,java.lang.String[]) -> setContentMimeTypes
androidx.core.view.inputmethod.InputConnectionCompat -> androidx.core.view.inputmethod.InputConnectionCompat:
    303:304:void <init>() -> <init>
    132:185:boolean commitContent(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputContentInfoCompat,int,android.os.Bundle) -> commitContent
    260:261:android.view.inputmethod.InputConnection createWrapper(android.view.inputmethod.InputConnection,android.view.inputmethod.EditorInfo,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> createWrapper
    72:82:boolean handlePerformPrivateCommand(java.lang.String,android.os.Bundle,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> handlePerformPrivateCommand
androidx.core.view.inputmethod.InputConnectionCompat$1 -> androidx.core.view.inputmethod.InputConnectionCompat$1:
    271:271:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    275:279:boolean commitContent(android.view.inputmethod.InputContentInfo,int,android.os.Bundle) -> commitContent
androidx.core.view.inputmethod.InputConnectionCompat$2 -> androidx.core.view.inputmethod.InputConnectionCompat$2:
    288:288:void <init>(android.view.inputmethod.InputConnection,boolean,androidx.core.view.inputmethod.InputConnectionCompat$OnCommitContentListener) -> <init>
    291:294:boolean performPrivateCommand(java.lang.String,android.os.Bundle) -> performPrivateCommand
androidx.core.view.inputmethod.InputContentInfoCompat -> androidx.core.view.inputmethod.InputContentInfoCompat:
    169:175:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    177:179:void <init>(androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatImpl) -> <init>
    186:186:android.net.Uri getContentUri() -> getContentUri
    196:196:android.content.ClipDescription getDescription() -> getDescription
    204:204:android.net.Uri getLinkUri() -> getLinkUri
    256:257:void releasePermission() -> releasePermission
    247:248:void requestPermission() -> requestPermission
    238:238:java.lang.Object unwrap() -> unwrap
    219:225:androidx.core.view.inputmethod.InputContentInfoCompat wrap(java.lang.Object) -> wrap
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatApi25Impl:
    109:111:void <init>(java.lang.Object) -> <init>
    114:116:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    121:121:android.net.Uri getContentUri() -> getContentUri
    127:127:android.content.ClipDescription getDescription() -> getDescription
    139:139:java.lang.Object getInputContentInfo() -> getInputContentInfo
    133:133:android.net.Uri getLinkUri() -> getLinkUri
    149:150:void releasePermission() -> releasePermission
    144:145:void requestPermission() -> requestPermission
androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl -> androidx.core.view.inputmethod.InputContentInfoCompat$InputContentInfoCompatBaseImpl:
    62:66:void <init>(android.net.Uri,android.content.ClipDescription,android.net.Uri) -> <init>
    71:71:android.net.Uri getContentUri() -> getContentUri
    77:77:android.content.ClipDescription getDescription() -> getDescription
    89:89:java.lang.Object getInputContentInfo() -> getInputContentInfo
    83:83:android.net.Uri getLinkUri() -> getLinkUri
    99:99:void releasePermission() -> releasePermission
    94:94:void requestPermission() -> requestPermission
androidx.core.widget.AutoScrollHelper -> androidx.core.widget.AutoScrollHelper:
    195:195:void <clinit>() -> <clinit>
    210:226:void <init>(android.view.View) -> <init>
    687:692:void cancelTargetTouch() -> cancelTargetTouch
    549:568:float computeTargetVelocity(int,float,float,float) -> computeTargetVelocity
    663:668:int constrain(int,int,int) -> constrain
    673:678:float constrain(float,float,float) -> constrain
    634:659:float constrainEdgeValue(float,float) -> constrainEdgeValue
    617:627:float getEdgeValue(float,float,float,float) -> getEdgeValue
    248:248:boolean isEnabled() -> isEnabled
    277:277:boolean isExclusive() -> isExclusive
    466:495:boolean onTouch(android.view.View,android.view.MotionEvent) -> onTouch
    538:545:void requestStop() -> requestStop
    420:421:androidx.core.widget.AutoScrollHelper setActivationDelay(int) -> setActivationDelay
    359:360:androidx.core.widget.AutoScrollHelper setEdgeType(int) -> setEdgeType
    236:241:androidx.core.widget.AutoScrollHelper setEnabled(boolean) -> setEnabled
    264:265:androidx.core.widget.AutoScrollHelper setExclusive(boolean) -> setExclusive
    402:404:androidx.core.widget.AutoScrollHelper setMaximumEdges(float,float) -> setMaximumEdges
    296:298:androidx.core.widget.AutoScrollHelper setMaximumVelocity(float,float) -> setMaximumVelocity
    315:317:androidx.core.widget.AutoScrollHelper setMinimumVelocity(float,float) -> setMinimumVelocity
    452:453:androidx.core.widget.AutoScrollHelper setRampDownDuration(int) -> setRampDownDuration
    436:437:androidx.core.widget.AutoScrollHelper setRampUpDuration(int) -> setRampUpDuration
    379:381:androidx.core.widget.AutoScrollHelper setRelativeEdges(float,float) -> setRelativeEdges
    337:339:androidx.core.widget.AutoScrollHelper setRelativeVelocity(float,float) -> setRelativeVelocity
    502:506:boolean shouldAnimate() -> shouldAnimate
    514:530:void startAnimating() -> startAnimating
androidx.core.widget.AutoScrollHelper$ClampedScroller -> androidx.core.widget.AutoScrollHelper$ClampedScroller:
    756:762:void <init>() -> <init>
    831:832:void computeScrollDelta() -> computeScrollDelta
    869:869:int getDeltaX() -> getDeltaX
    877:877:int getDeltaY() -> getDeltaY
    857:857:int getHorizontalDirection() -> getHorizontalDirection
    800:804:float getValueAt(long) -> getValueAt
    861:861:int getVerticalDirection() -> getVerticalDirection
    820:820:float interpolateValue(float) -> interpolateValue
    795:795:boolean isFinished() -> isFinished
    788:792:void requestStop() -> requestStop
    769:770:void setRampDownDuration(int) -> setRampDownDuration
    765:766:void setRampUpDuration(int) -> setRampUpDuration
    852:854:void setTargetVelocity(float,float) -> setTargetVelocity
    776:782:void start() -> start
androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable -> androidx.core.widget.AutoScrollHelper$ScrollAnimationRunnable:
    695:696:void <init>(androidx.core.widget.AutoScrollHelper) -> <init>
    700:712:void run() -> run
androidx.core.widget.AutoSizeableTextView -> androidx.core.widget.AutoSizeableTextView:
    39:39:void <clinit>() -> <clinit>
androidx.core.widget.CompoundButtonCompat -> androidx.core.widget.CompoundButtonCompat:
    41:41:void <init>() -> <init>
    123:145:android.graphics.drawable.Drawable getButtonDrawable(android.widget.CompoundButton) -> getButtonDrawable
    71:77:android.content.res.ColorStateList getButtonTintList(android.widget.CompoundButton) -> getButtonTintList
    107:113:android.graphics.PorterDuff$Mode getButtonTintMode(android.widget.CompoundButton) -> getButtonTintMode
    57:62:void setButtonTintList(android.widget.CompoundButton,android.content.res.ColorStateList) -> setButtonTintList
    93:98:void setButtonTintMode(android.widget.CompoundButton,android.graphics.PorterDuff$Mode) -> setButtonTintMode
androidx.core.widget.ContentLoadingProgressBar -> androidx.core.widget.ContentLoadingProgressBar:
    68:69:void <init>(android.content.Context) -> <init>
    72:73:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    98:97:void hide() -> hide
    77:79:void onAttachedToWindow() -> onAttachedToWindow
    83:85:void onDetachedFromWindow() -> onDetachedFromWindow
    88:90:void removeCallbacks() -> removeCallbacks
    124:123:void show() -> show
androidx.core.widget.ContentLoadingProgressBar$1 -> androidx.core.widget.ContentLoadingProgressBar$1:
    45:45:void <init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
    49:52:void run() -> run
androidx.core.widget.ContentLoadingProgressBar$2 -> androidx.core.widget.ContentLoadingProgressBar$2:
    55:55:void <init>(androidx.core.widget.ContentLoadingProgressBar) -> <init>
    59:64:void run() -> run
androidx.core.widget.EdgeEffectCompat -> androidx.core.widget.EdgeEffectCompat:
    47:49:void <init>(android.content.Context) -> <init>
    208:208:boolean draw(android.graphics.Canvas) -> draw
    86:87:void finish() -> finish
    75:75:boolean isFinished() -> isFinished
    190:191:boolean onAbsorb(int) -> onAbsorb
    104:105:boolean onPull(float) -> onPull
    129:130:boolean onPull(float,float) -> onPull
    152:157:void onPull(android.widget.EdgeEffect,float,float) -> onPull
    171:172:boolean onRelease() -> onRelease
    61:62:void setSize(int,int) -> setSize
androidx.core.widget.ImageViewCompat -> androidx.core.widget.ImageViewCompat:
    107:107:void <init>() -> <init>
    37:40:android.content.res.ColorStateList getImageTintList(android.widget.ImageView) -> getImageTintList
    74:77:android.graphics.PorterDuff$Mode getImageTintMode(android.widget.ImageView) -> getImageTintMode
    50:67:void setImageTintList(android.widget.ImageView,android.content.res.ColorStateList) -> setImageTintList
    88:105:void setImageTintMode(android.widget.ImageView,android.graphics.PorterDuff$Mode) -> setImageTintMode
androidx.core.widget.ListPopupWindowCompat -> androidx.core.widget.ListPopupWindowCompat:
    31:33:void <init>() -> <init>
    65:65:android.view.View$OnTouchListener createDragToOpenListener(java.lang.Object,android.view.View) -> createDragToOpenListener
    97:98:android.view.View$OnTouchListener createDragToOpenListener(android.widget.ListPopupWindow,android.view.View) -> createDragToOpenListener
androidx.core.widget.ListViewAutoScrollHelper -> androidx.core.widget.ListViewAutoScrollHelper:
    33:36:void <init>(android.widget.ListView) -> <init>
    46:46:boolean canTargetScrollHorizontally(int) -> canTargetScrollHorizontally
    51:80:boolean canTargetScrollVertically(int) -> canTargetScrollVertically
    40:41:void scrollTargetBy(int,int) -> scrollTargetBy
androidx.core.widget.ListViewCompat -> androidx.core.widget.ListViewCompat:
    90:90:void <init>() -> <init>
    67:69:boolean canScrollList(android.widget.ListView,int) -> canScrollList
    37:55:void scrollListBy(android.widget.ListView,int) -> scrollListBy
androidx.core.widget.NestedScrollView -> androidx.core.widget.NestedScrollView:
    176:178:void <clinit>() -> <clinit>
    190:191:void <init>(android.content.Context) -> <init>
    194:195:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    199:216:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    1673:1675:void abortAnimatedScroll() -> abortAnimatedScroll
    472:473:void addView(android.view.View) -> addView
    481:482:void addView(android.view.View,int) -> addView
    490:491:void addView(android.view.View,android.view.ViewGroup$LayoutParams) -> addView
    499:500:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1325:1371:boolean arrowScroll(int) -> arrowScroll
    523:530:boolean canScroll() -> canScroll
    2048:2064:int clamp(int,int,int) -> clamp
    1569:1569:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1562:1562:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    1555:1555:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    1605:1660:void computeScroll() -> computeScroll
    1725:1786:int computeScrollDeltaToGetChildRectOnScreen(android.graphics.Rect) -> computeScrollDeltaToGetChildRectOnScreen
    1548:1548:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    1541:1541:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    1517:1534:int computeVerticalScrollRange() -> computeVerticalScrollRange
    621:621:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    298:298:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    303:303:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    254:254:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    293:293:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    223:225:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    247:247:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    287:287:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    1400:1407:void doScrollY(int) -> doScrollY
    1998:2045:void draw(android.graphics.Canvas) -> draw
    1949:1958:void endDrag() -> endDrag
    1984:1994:void ensureGlows() -> ensureGlows
    633:671:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    1146:1207:android.view.View findFocusableViewInBounds(boolean,int,int) -> findFocusableViewInBounds
    1937:1946:void fling(int) -> fling
    1261:1277:boolean fullScroll(int) -> fullScroll
    435:448:float getBottomFadingEdgeStrength() -> getBottomFadingEdgeStrength
    456:456:int getMaxScrollAmount() -> getMaxScrollAmount
    408:408:int getNestedScrollAxes() -> getNestedScrollAxes
    1118:1126:int getScrollRange() -> getScrollRange
    420:430:float getTopFadingEdgeStrength() -> getTopFadingEdgeStrength
    1039:1050:float getVerticalScrollFactorCompat() -> getVerticalScrollFactorCompat
    241:241:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    281:281:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    675:683:boolean inChild(int,int) -> inChild
    687:692:void initOrResetVelocityTracker() -> initOrResetVelocityTracker
    460:468:void initScrollView() -> initScrollView
    695:698:void initVelocityTrackerIfNotExists() -> initVelocityTrackerIfNotExists
    541:541:boolean isFillViewport() -> isFillViewport
    266:266:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    1379:1379:boolean isOffScreen(android.view.View) -> isOffScreen
    563:563:boolean isSmoothScrollingEnabled() -> isSmoothScrollingEnabled
    1921:1926:boolean isViewDescendantOf(android.view.View,android.view.View) -> isViewDescendantOf
    1387:1390:boolean isWithinDeltaOfScreen(android.view.View,int,int) -> isWithinDeltaOfScreen
    1575:1586:void measureChild(android.view.View,int,int) -> measureChild
    1591:1600:void measureChildWithMargins(android.view.View,int,int,int,int) -> measureChildWithMargins
    1892:1895:void onAttachedToWindow() -> onAttachedToWindow
    1011:1035:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    728:823:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1854:1888:void onLayout(boolean,int,int,int,int) -> onLayout
    585:616:void onMeasure(int,int) -> onMeasure
    393:398:boolean onNestedFling(android.view.View,float,float,boolean) -> onNestedFling
    403:403:boolean onNestedPreFling(android.view.View,float,float) -> onNestedPreFling
    357:358:void onNestedPreScroll(android.view.View,int,int,int[],int) -> onNestedPreScroll
    387:388:void onNestedPreScroll(android.view.View,int,int,int[]) -> onNestedPreScroll
    311:312:void onNestedScroll(android.view.View,int,int,int,int,int,int[]) -> onNestedScroll
    351:352:void onNestedScroll(android.view.View,int,int,int,int,int) -> onNestedScroll
    382:383:void onNestedScroll(android.view.View,int,int,int,int) -> onNestedScroll
    338:340:void onNestedScrollAccepted(android.view.View,android.view.View,int,int) -> onNestedScrollAccepted
    371:372:void onNestedScrollAccepted(android.view.View,android.view.View,int) -> onNestedScrollAccepted
    315:325:void onNestedScrollInternal(int,int,int[]) -> onNestedScrollInternal
    1056:1057:void onOverScrolled(int,int,boolean,boolean) -> onOverScrolled
    1814:1833:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2079:2088:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    2092:2095:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    576:581:void onScrollChanged(int,int,int,int) -> onScrollChanged
    994:1007:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1899:1903:void onSizeChanged(int,int,int,int) -> onSizeChanged
    332:332:boolean onStartNestedScroll(android.view.View,android.view.View,int,int) -> onStartNestedScroll
    365:365:boolean onStartNestedScroll(android.view.View,android.view.View,int) -> onStartNestedScroll
    344:346:void onStopNestedScroll(android.view.View,int) -> onStopNestedScroll
    376:377:void onStopNestedScroll(android.view.View) -> onStopNestedScroll
    828:990:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1064:1114:boolean overScrollByCompat(int,int,int,int,int,int,int,int,boolean) -> overScrollByCompat
    1223:1245:boolean pageScroll(int) -> pageScroll
    701:705:void recycleVelocityTracker() -> recycleVelocityTracker
    1791:1798:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    1840:1843:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    709:713:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1848:1850:void requestLayout() -> requestLayout
    1663:1670:void runAnimatedScroll(boolean) -> runAnimatedScroll
    1293:1314:boolean scrollAndFocus(int,int,int) -> scrollAndFocus
    1968:1981:void scrollTo(int,int) -> scrollTo
    1683:1693:void scrollToChild(android.view.View) -> scrollToChild
    1704:1713:boolean scrollToChildRect(android.graphics.Rect,boolean) -> scrollToChildRect
    553:557:void setFillViewport(boolean) -> setFillViewport
    261:262:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    516:517:void setOnScrollChangeListener(androidx.core.widget.NestedScrollView$OnScrollChangeListener) -> setOnScrollChangeListener
    571:572:void setSmoothScrollingEnabled(boolean) -> setSmoothScrollingEnabled
    415:415:boolean shouldDelayChildPressedState() -> shouldDelayChildPressedState
    1416:1417:void smoothScrollBy(int,int) -> smoothScrollBy
    1427:1428:void smoothScrollBy(int,int,int) -> smoothScrollBy
    1439:1461:void smoothScrollBy(int,int,int,boolean) -> smoothScrollBy
    1470:1471:void smoothScrollTo(int,int) -> smoothScrollTo
    1481:1482:void smoothScrollTo(int,int,int) -> smoothScrollTo
    1493:1494:void smoothScrollTo(int,int,boolean) -> smoothScrollTo
    1506:1507:void smoothScrollTo(int,int,int,boolean) -> smoothScrollTo
    231:231:boolean startNestedScroll(int,int) -> startNestedScroll
    271:271:boolean startNestedScroll(int) -> startNestedScroll
    236:237:void stopNestedScroll(int) -> stopNestedScroll
    276:277:void stopNestedScroll() -> stopNestedScroll
androidx.core.widget.NestedScrollView$AccessibilityDelegate -> androidx.core.widget.NestedScrollView$AccessibilityDelegate:
    2138:2138:void <init>() -> <init>
    2203:2212:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2178:2199:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2141:2160:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.core.widget.NestedScrollView$SavedState -> androidx.core.widget.NestedScrollView$SavedState:
    2124:2124:void <clinit>() -> <clinit>
    2102:2103:void <init>(android.os.Parcelable) -> <init>
    2106:2108:void <init>(android.os.Parcel) -> <init>
    2119:2119:java.lang.String toString() -> toString
    2112:2114:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.core.widget.NestedScrollView$SavedState$1 -> androidx.core.widget.NestedScrollView$SavedState$1:
    2125:2125:void <init>() -> <init>
    2125:2125:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2128:2128:androidx.core.widget.NestedScrollView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2125:2125:java.lang.Object[] newArray(int) -> newArray
    2133:2133:androidx.core.widget.NestedScrollView$SavedState[] newArray(int) -> newArray
androidx.core.widget.PopupMenuCompat -> androidx.core.widget.PopupMenuCompat:
    30:32:void <init>() -> <init>
    55:56:android.view.View$OnTouchListener getDragToOpenListener(java.lang.Object) -> getDragToOpenListener
androidx.core.widget.PopupWindowCompat -> androidx.core.widget.PopupWindowCompat:
    46:48:void <init>() -> <init>
    119:140:boolean getOverlapAnchor(android.widget.PopupWindow) -> getOverlapAnchor
    183:204:int getWindowLayoutType(android.widget.PopupWindow) -> getWindowLayoutType
    90:110:void setOverlapAnchor(android.widget.PopupWindow,boolean) -> setOverlapAnchor
    153:175:void setWindowLayoutType(android.widget.PopupWindow,int) -> setWindowLayoutType
    68:81:void showAsDropDown(android.widget.PopupWindow,android.view.View,int,int,int) -> showAsDropDown
androidx.core.widget.ScrollerCompat -> androidx.core.widget.ScrollerCompat:
    56:59:void <init>(android.content.Context,android.view.animation.Interpolator) -> <init>
    273:274:void abortAnimation() -> abortAnimation
    142:142:boolean computeScrollOffset() -> computeScrollOffset
    41:41:androidx.core.widget.ScrollerCompat create(android.content.Context) -> create
    49:49:androidx.core.widget.ScrollerCompat create(android.content.Context,android.view.animation.Interpolator) -> create
    210:211:void fling(int,int,int,int,int,int,int,int) -> fling
    242:244:void fling(int,int,int,int,int,int,int,int,int,int) -> fling
    130:130:float getCurrVelocity() -> getCurrVelocity
    82:82:int getCurrX() -> getCurrX
    94:94:int getCurrY() -> getCurrY
    104:104:int getFinalX() -> getFinalX
    114:114:int getFinalY() -> getFinalY
    70:70:boolean isFinished() -> isFinished
    334:334:boolean isOverScrolled() -> isOverScrolled
    294:295:void notifyHorizontalEdgeReached(int,int,int) -> notifyHorizontalEdgeReached
    314:315:void notifyVerticalEdgeReached(int,int,int) -> notifyVerticalEdgeReached
    262:262:boolean springBack(int,int,int,int,int,int) -> springBack
    163:164:void startScroll(int,int,int,int) -> startScroll
    183:184:void startScroll(int,int,int,int,int) -> startScroll
androidx.core.widget.TextViewCompat -> androidx.core.widget.TextViewCompat:
    111:111:void <init>() -> <init>
    456:462:int getAutoSizeMaxTextSize(android.widget.TextView) -> getAutoSizeMaxTextSize
    439:445:int getAutoSizeMinTextSize(android.widget.TextView) -> getAutoSizeMinTextSize
    422:428:int getAutoSizeStepGranularity(android.widget.TextView) -> getAutoSizeStepGranularity
    473:479:int[] getAutoSizeTextAvailableSizes(android.widget.TextView) -> getAutoSizeTextAvailableSizes
    406:412:int getAutoSizeTextType(android.widget.TextView) -> getAutoSizeTextType
    1009:1015:android.content.res.ColorStateList getCompoundDrawableTintList(android.widget.TextView) -> getCompoundDrawableTintList
    1044:1050:android.graphics.PorterDuff$Mode getCompoundDrawableTintMode(android.widget.TextView) -> getCompoundDrawableTintMode
    295:296:android.graphics.drawable.Drawable[] getCompoundDrawablesRelative(android.widget.TextView) -> getCompoundDrawablesRelative
    768:768:int getFirstBaselineToTopHeight(android.widget.TextView) -> getFirstBaselineToTopHeight
    778:778:int getLastBaselineToBottomHeight(android.widget.TextView) -> getLastBaselineToBottomHeight
    226:227:int getMaxLines(android.widget.TextView) -> getMaxLines
    252:253:int getMinLines(android.widget.TextView) -> getMinLines
    963:980:int getTextDirection(android.text.TextDirectionHeuristic) -> getTextDirection
    907:941:android.text.TextDirectionHeuristic getTextDirectionHeuristic(android.widget.TextView) -> getTextDirectionHeuristic
    815:827:androidx.core.text.PrecomputedTextCompat$Params getTextMetricsParams(android.widget.TextView) -> getTextMetricsParams
    114:121:java.lang.reflect.Field retrieveField(java.lang.String) -> retrieveField
    126:130:int retrieveIntFromField(java.lang.reflect.Field,android.widget.TextView) -> retrieveIntFromField
    361:368:void setAutoSizeTextTypeUniformWithConfiguration(android.widget.TextView,int,int,int,int) -> setAutoSizeTextTypeUniformWithConfiguration
    387:393:void setAutoSizeTextTypeUniformWithPresetSizes(android.widget.TextView,int[],int) -> setAutoSizeTextTypeUniformWithPresetSizes
    326:331:void setAutoSizeTextTypeWithDefaults(android.widget.TextView,int) -> setAutoSizeTextTypeWithDefaults
    993:999:void setCompoundDrawableTintList(android.widget.TextView,android.content.res.ColorStateList) -> setCompoundDrawableTintList
    1027:1034:void setCompoundDrawableTintMode(android.widget.TextView,android.graphics.PorterDuff$Mode) -> setCompoundDrawableTintMode
    151:159:void setCompoundDrawablesRelative(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelative
    178:187:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable,android.graphics.drawable.Drawable) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    210:219:void setCompoundDrawablesRelativeWithIntrinsicBounds(android.widget.TextView,int,int,int,int) -> setCompoundDrawablesRelativeWithIntrinsicBounds
    506:508:void setCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> setCustomSelectionActionModeCallback
    693:718:void setFirstBaselineToTopHeight(android.widget.TextView,int) -> setFirstBaselineToTopHeight
    738:759:void setLastBaselineToBottomHeight(android.widget.TextView,int) -> setLastBaselineToBottomHeight
    796:804:void setLineHeight(android.widget.TextView,int) -> setLineHeight
    884:891:void setPrecomputedText(android.widget.TextView,androidx.core.text.PrecomputedTextCompat) -> setPrecomputedText
    283:288:void setTextAppearance(android.widget.TextView,int) -> setTextAppearance
    842:869:void setTextMetricsParams(android.widget.TextView,androidx.core.text.PrecomputedTextCompat$Params) -> setTextMetricsParams
    519:523:android.view.ActionMode$Callback wrapCustomSelectionActionModeCallback(android.widget.TextView,android.view.ActionMode$Callback) -> wrapCustomSelectionActionModeCallback
androidx.core.widget.TextViewCompat$OreoCallback -> androidx.core.widget.TextViewCompat$OreoCallback:
    549:553:void <init>(android.view.ActionMode$Callback,android.widget.TextView) -> <init>
    671:671:android.content.Intent createProcessTextIntent() -> createProcessTextIntent
    659:659:android.content.Intent createProcessTextIntentForResolveInfo(android.content.pm.ResolveInfo,android.widget.TextView) -> createProcessTextIntentForResolveInfo
    630:642:java.util.List getSupportedActivities(android.content.Context,android.content.pm.PackageManager) -> getSupportedActivities
    665:665:boolean isEditable(android.widget.TextView) -> isEditable
    646:652:boolean isSupportedActivity(android.content.pm.ResolveInfo,android.content.Context) -> isSupportedActivity
    568:568:boolean onActionItemClicked(android.view.ActionMode,android.view.MenuItem) -> onActionItemClicked
    557:557:boolean onCreateActionMode(android.view.ActionMode,android.view.Menu) -> onCreateActionMode
    573:574:void onDestroyActionMode(android.view.ActionMode) -> onDestroyActionMode
    562:563:boolean onPrepareActionMode(android.view.ActionMode,android.view.Menu) -> onPrepareActionMode
    577:612:void recomputeProcessTextMenuItems(android.view.Menu) -> recomputeProcessTextMenuItems
androidx.core.widget.TextViewKt -> androidx.core.widget.TextViewKt:
    80:95:android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1) -> addTextChangedListener
    71:78:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object) -> addTextChangedListener$default
    80:80:android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1) -> addTextChangedListener$default
    80:80:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object):131 -> addTextChangedListener$default
    93:93:android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1) -> addTextChangedListener$default
    93:93:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object):132 -> addTextChangedListener$default
    95:95:android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1) -> addTextChangedListener$default
    95:95:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object):134 -> addTextChangedListener$default
    58:58:android.text.TextWatcher doAfterTextChanged(android.widget.TextView,kotlin.jvm.functions.Function1) -> doAfterTextChanged
    71:71:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doAfterTextChanged
    71:71:android.text.TextWatcher doAfterTextChanged(android.widget.TextView,kotlin.jvm.functions.Function1):118 -> doAfterTextChanged
    77:77:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doAfterTextChanged
    77:77:android.text.TextWatcher doAfterTextChanged(android.widget.TextView,kotlin.jvm.functions.Function1):124 -> doAfterTextChanged
    80:80:android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1) -> doAfterTextChanged
    80:80:android.text.TextWatcher doAfterTextChanged(android.widget.TextView,kotlin.jvm.functions.Function1):127 -> doAfterTextChanged
    93:93:android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1) -> doAfterTextChanged
    93:93:android.text.TextWatcher doAfterTextChanged(android.widget.TextView,kotlin.jvm.functions.Function1):128 -> doAfterTextChanged
    95:95:android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1) -> doAfterTextChanged
    95:95:android.text.TextWatcher doAfterTextChanged(android.widget.TextView,kotlin.jvm.functions.Function1):130 -> doAfterTextChanged
    58:58:android.text.TextWatcher doAfterTextChanged(android.widget.TextView,kotlin.jvm.functions.Function1) -> doAfterTextChanged
    35:35:android.text.TextWatcher doBeforeTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4) -> doBeforeTextChanged
    77:77:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doBeforeTextChanged
    77:77:android.text.TextWatcher doBeforeTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4):98 -> doBeforeTextChanged
    78:78:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doBeforeTextChanged
    78:78:android.text.TextWatcher doBeforeTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4):99 -> doBeforeTextChanged
    80:80:android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1) -> doBeforeTextChanged
    80:80:android.text.TextWatcher doBeforeTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4):101 -> doBeforeTextChanged
    93:93:android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1) -> doBeforeTextChanged
    93:93:android.text.TextWatcher doBeforeTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4):102 -> doBeforeTextChanged
    95:95:android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1) -> doBeforeTextChanged
    95:95:android.text.TextWatcher doBeforeTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4):104 -> doBeforeTextChanged
    35:35:android.text.TextWatcher doBeforeTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4) -> doBeforeTextChanged
    49:49:android.text.TextWatcher doOnTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4) -> doOnTextChanged
    71:71:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnTextChanged
    71:71:android.text.TextWatcher doOnTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4):105 -> doOnTextChanged
    78:78:android.text.TextWatcher addTextChangedListener$default(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1,int,java.lang.Object) -> doOnTextChanged
    78:78:android.text.TextWatcher doOnTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4):112 -> doOnTextChanged
    80:80:android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1) -> doOnTextChanged
    80:80:android.text.TextWatcher doOnTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4):114 -> doOnTextChanged
    93:93:android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1) -> doOnTextChanged
    93:93:android.text.TextWatcher doOnTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4):115 -> doOnTextChanged
    95:95:android.text.TextWatcher addTextChangedListener(android.widget.TextView,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function1) -> doOnTextChanged
    95:95:android.text.TextWatcher doOnTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4):117 -> doOnTextChanged
    49:49:android.text.TextWatcher doOnTextChanged(android.widget.TextView,kotlin.jvm.functions.Function4) -> doOnTextChanged
androidx.core.widget.TextViewKt$addTextChangedListener$1 -> androidx.core.widget.TextViewKt$addTextChangedListener$1:
    71:71:void invoke(java.lang.CharSequence,int,int,int) -> invoke
androidx.core.widget.TextViewKt$addTextChangedListener$2 -> androidx.core.widget.TextViewKt$addTextChangedListener$2:
    77:77:void invoke(java.lang.CharSequence,int,int,int) -> invoke
androidx.core.widget.TextViewKt$addTextChangedListener$3 -> androidx.core.widget.TextViewKt$addTextChangedListener$3:
    78:78:void invoke(android.text.Editable) -> invoke
androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1 -> androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1:
    80:80:void <init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4) -> <init>
    82:83:void afterTextChanged(android.text.Editable) -> afterTextChanged
    86:87:void beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    90:91:void onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
androidx.core.widget.TextViewKt$doAfterTextChanged$$inlined$addTextChangedListener$1 -> androidx.core.widget.TextViewKt$doAfterTextChanged$$inlined$addTextChangedListener$1:
    80:80:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4) -> <init>
    80:80:void <init>(kotlin.jvm.functions.Function1):80 -> <init>
    82:82:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.afterTextChanged(android.text.Editable) -> afterTextChanged
    82:82:void afterTextChanged(android.text.Editable):82 -> afterTextChanged
    83:83:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.afterTextChanged(android.text.Editable) -> afterTextChanged
    83:83:void afterTextChanged(android.text.Editable):83 -> afterTextChanged
    86:86:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    86:86:void beforeTextChanged(java.lang.CharSequence,int,int,int):86 -> beforeTextChanged
    71:71:void androidx.core.widget.TextViewKt$addTextChangedListener$1.invoke(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    71:71:void beforeTextChanged(java.lang.CharSequence,int,int,int):98 -> beforeTextChanged
    87:87:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    87:87:void beforeTextChanged(java.lang.CharSequence,int,int,int):87 -> beforeTextChanged
    90:90:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    90:90:void onTextChanged(java.lang.CharSequence,int,int,int):90 -> onTextChanged
    77:77:void androidx.core.widget.TextViewKt$addTextChangedListener$2.invoke(java.lang.CharSequence,int,int,int) -> onTextChanged
    77:77:void onTextChanged(java.lang.CharSequence,int,int,int):99 -> onTextChanged
    91:91:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    91:91:void onTextChanged(java.lang.CharSequence,int,int,int):91 -> onTextChanged
androidx.core.widget.TextViewKt$doBeforeTextChanged$$inlined$addTextChangedListener$1 -> androidx.core.widget.TextViewKt$doBeforeTextChanged$$inlined$addTextChangedListener$1:
    80:80:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4) -> <init>
    80:80:void <init>(kotlin.jvm.functions.Function4):80 -> <init>
    82:82:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.afterTextChanged(android.text.Editable) -> afterTextChanged
    82:82:void afterTextChanged(android.text.Editable):82 -> afterTextChanged
    78:78:void androidx.core.widget.TextViewKt$addTextChangedListener$3.invoke(android.text.Editable) -> afterTextChanged
    78:78:void afterTextChanged(android.text.Editable):98 -> afterTextChanged
    83:83:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.afterTextChanged(android.text.Editable) -> afterTextChanged
    83:83:void afterTextChanged(android.text.Editable):83 -> afterTextChanged
    86:86:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    86:86:void beforeTextChanged(java.lang.CharSequence,int,int,int):86 -> beforeTextChanged
    87:87:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    87:87:void beforeTextChanged(java.lang.CharSequence,int,int,int):87 -> beforeTextChanged
    90:90:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    90:90:void onTextChanged(java.lang.CharSequence,int,int,int):90 -> onTextChanged
    77:77:void androidx.core.widget.TextViewKt$addTextChangedListener$2.invoke(java.lang.CharSequence,int,int,int) -> onTextChanged
    77:77:void onTextChanged(java.lang.CharSequence,int,int,int):99 -> onTextChanged
    91:91:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    91:91:void onTextChanged(java.lang.CharSequence,int,int,int):91 -> onTextChanged
androidx.core.widget.TextViewKt$doOnTextChanged$$inlined$addTextChangedListener$1 -> androidx.core.widget.TextViewKt$doOnTextChanged$$inlined$addTextChangedListener$1:
    80:80:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.<init>(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function4,kotlin.jvm.functions.Function4) -> <init>
    80:80:void <init>(kotlin.jvm.functions.Function4):80 -> <init>
    82:82:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.afterTextChanged(android.text.Editable) -> afterTextChanged
    82:82:void afterTextChanged(android.text.Editable):82 -> afterTextChanged
    78:78:void androidx.core.widget.TextViewKt$addTextChangedListener$3.invoke(android.text.Editable) -> afterTextChanged
    78:78:void afterTextChanged(android.text.Editable):98 -> afterTextChanged
    83:83:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.afterTextChanged(android.text.Editable) -> afterTextChanged
    83:83:void afterTextChanged(android.text.Editable):83 -> afterTextChanged
    86:86:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    86:86:void beforeTextChanged(java.lang.CharSequence,int,int,int):86 -> beforeTextChanged
    71:71:void androidx.core.widget.TextViewKt$addTextChangedListener$1.invoke(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    71:71:void beforeTextChanged(java.lang.CharSequence,int,int,int):99 -> beforeTextChanged
    87:87:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.beforeTextChanged(java.lang.CharSequence,int,int,int) -> beforeTextChanged
    87:87:void beforeTextChanged(java.lang.CharSequence,int,int,int):87 -> beforeTextChanged
    90:90:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    90:90:void onTextChanged(java.lang.CharSequence,int,int,int):90 -> onTextChanged
    91:91:void androidx.core.widget.TextViewKt$addTextChangedListener$textWatcher$1.onTextChanged(java.lang.CharSequence,int,int,int) -> onTextChanged
    91:91:void onTextChanged(java.lang.CharSequence,int,int,int):91 -> onTextChanged
androidx.cursoradapter.widget.CursorAdapter -> androidx.cursoradapter.widget.CursorAdapter:
    134:136:void <init>(android.content.Context,android.database.Cursor) -> <init>
    150:152:void <init>(android.content.Context,android.database.Cursor,boolean) -> <init>
    163:165:void <init>(android.content.Context,android.database.Cursor,int) -> <init>
    334:338:void changeCursor(android.database.Cursor) -> changeCursor
    387:387:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    216:219:int getCount() -> getCount
    208:208:android.database.Cursor getCursor() -> getCursor
    280:291:android.view.View getDropDownView(int,android.view.View,android.view.ViewGroup) -> getDropDownView
    426:429:android.widget.Filter getFilter() -> getFilter
    442:442:android.widget.FilterQueryProvider getFilterQueryProvider() -> getFilterQueryProvider
    228:232:java.lang.Object getItem(int) -> getItem
    241:248:long getItemId(int) -> getItemId
    262:263:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    254:254:boolean hasStableIds() -> hasStableIds
    173:174:void init(android.content.Context,android.database.Cursor,boolean) -> init
    177:200:void init(android.content.Context,android.database.Cursor,int) -> init
    314:314:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    469:473:void onContentChanged() -> onContentChanged
    417:421:android.database.Cursor runQueryOnBackgroundThread(java.lang.CharSequence) -> runQueryOnBackgroundThread
    458:459:void setFilterQueryProvider(android.widget.FilterQueryProvider) -> setFilterQueryProvider
    351:373:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.cursoradapter.widget.CursorAdapter$ChangeObserver -> androidx.cursoradapter.widget.CursorAdapter$ChangeObserver:
    476:478:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    482:482:boolean deliverSelfNotifications() -> deliverSelfNotifications
    487:488:void onChange(boolean) -> onChange
androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver -> androidx.cursoradapter.widget.CursorAdapter$MyDataSetObserver:
    492:493:void <init>(androidx.cursoradapter.widget.CursorAdapter) -> <init>
    497:499:void onChanged() -> onChanged
    503:505:void onInvalidated() -> onInvalidated
androidx.cursoradapter.widget.CursorFilter -> androidx.cursoradapter.widget.CursorFilter:
    39:41:void <init>(androidx.cursoradapter.widget.CursorFilter$CursorFilterClient) -> <init>
    45:45:java.lang.CharSequence convertResultToString(java.lang.Object) -> convertResultToString
    50:60:android.widget.Filter$FilterResults performFiltering(java.lang.CharSequence) -> performFiltering
    65:70:void publishResults(java.lang.CharSequence,android.widget.Filter$FilterResults) -> publishResults
androidx.cursoradapter.widget.ResourceCursorAdapter -> androidx.cursoradapter.widget.ResourceCursorAdapter:
    54:57:void <init>(android.content.Context,int,android.database.Cursor) -> <init>
    82:85:void <init>(android.content.Context,int,android.database.Cursor,boolean) -> <init>
    99:102:void <init>(android.content.Context,int,android.database.Cursor,int) -> <init>
    117:117:android.view.View newDropDownView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newDropDownView
    112:112:android.view.View newView(android.content.Context,android.database.Cursor,android.view.ViewGroup) -> newView
    135:136:void setDropDownViewResource(int) -> setDropDownViewResource
    126:127:void setViewResource(int) -> setViewResource
androidx.cursoradapter.widget.SimpleCursorAdapter -> androidx.cursoradapter.widget.SimpleCursorAdapter:
    69:73:void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[]) -> <init>
    95:99:void <init>(android.content.Context,int,android.database.Cursor,java.lang.String[],int[],int) -> <init>
    126:156:void bindView(android.view.View,android.content.Context,android.database.Cursor) -> bindView
    351:358:void changeCursorAndColumns(android.database.Cursor,java.lang.String[],int[]) -> changeCursorAndColumns
    299:305:java.lang.CharSequence convertToString(android.database.Cursor) -> convertToString
    316:328:void findColumns(android.database.Cursor,java.lang.String[]) -> findColumns
    267:267:androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter getCursorToStringConverter() -> getCursorToStringConverter
    233:233:int getStringConversionColumn() -> getStringConversionColumn
    167:167:androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder getViewBinder() -> getViewBinder
    283:284:void setCursorToStringConverter(androidx.cursoradapter.widget.SimpleCursorAdapter$CursorToStringConverter) -> setCursorToStringConverter
    251:252:void setStringConversionColumn(int) -> setStringConversionColumn
    180:181:void setViewBinder(androidx.cursoradapter.widget.SimpleCursorAdapter$ViewBinder) -> setViewBinder
    200:204:void setViewImage(android.widget.ImageView,java.lang.String) -> setViewImage
    218:219:void setViewText(android.widget.TextView,java.lang.String) -> setViewText
    335:336:android.database.Cursor swapCursor(android.database.Cursor) -> swapCursor
androidx.customview.view.AbsSavedState -> androidx.customview.view.AbsSavedState:
    30:88:void <clinit>() -> <clinit>
    29:29:void <init>(androidx.customview.view.AbsSavedState$1) -> <init>
    37:39:void <init>() -> <init>
    46:48:void <init>(android.os.Parcelable) -> <init>
    59:60:void <init>(android.os.Parcel) -> <init>
    68:71:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    80:80:int describeContents() -> describeContents
    75:75:android.os.Parcelable getSuperState() -> getSuperState
    85:86:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.customview.view.AbsSavedState$1 -> androidx.customview.view.AbsSavedState$1:
    30:30:void <init>() -> <init>
androidx.customview.view.AbsSavedState$2 -> androidx.customview.view.AbsSavedState$2:
    88:88:void <init>() -> <init>
    88:88:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    91:93:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    100:100:androidx.customview.view.AbsSavedState createFromParcel(android.os.Parcel) -> createFromParcel
    88:88:java.lang.Object[] newArray(int) -> newArray
    105:105:androidx.customview.view.AbsSavedState[] newArray(int) -> newArray
androidx.customview.widget.ExploreByTouchHelper -> androidx.customview.widget.ExploreByTouchHelper:
    100:347:void <clinit>() -> <clinit>
    135:137:void <init>(android.view.View) -> <init>
    998:1005:boolean clearAccessibilityFocus(int) -> clearAccessibilityFocus
    1046:1056:boolean clearKeyboardFocusForVirtualView(int) -> clearKeyboardFocusForVirtualView
    481:481:boolean clickKeyboardFocusedVirtualView() -> clickKeyboardFocusedVirtualView
    637:639:android.view.accessibility.AccessibilityEvent createEvent(int,int) -> createEvent
    677:702:android.view.accessibility.AccessibilityEvent createEventForChild(int,int) -> createEventForChild
    653:655:android.view.accessibility.AccessibilityEvent createEventForHost(int) -> createEventForHost
    791:812:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForChild(int) -> createNodeForChild
    734:750:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createNodeForHost() -> createNodeForHost
    182:183:boolean dispatchHoverEvent(android.view.MotionEvent) -> dispatchHoverEvent
    216:257:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    290:290:int getAccessibilityFocusedVirtualViewId() -> getAccessibilityFocusedVirtualViewId
    157:160:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    427:436:androidx.collection.SparseArrayCompat getAllNodes() -> getAllNodes
    328:330:void getBoundsInParent(int,android.graphics.Rect) -> getBoundsInParent
    589:589:int getFocusedVirtualView() -> getFocusedVirtualView
    298:298:int getKeyboardFocusedVirtualViewId() -> getKeyboardFocusedVirtualViewId
    450:471:android.graphics.Rect guessPreviouslyFocusedRect(android.view.View,int,android.graphics.Rect) -> guessPreviouslyFocusedRect
    526:527:void invalidateRoot() -> invalidateRoot
    542:544:void invalidateVirtualView(int) -> invalidateVirtualView
    566:576:void invalidateVirtualView(int,int) -> invalidateVirtualView
    932:933:boolean isVisibleToUser(android.graphics.Rect) -> isVisibleToUser
    309:313:int keyToDirection(int) -> keyToDirection
    372:423:boolean moveFocus(int,android.graphics.Rect) -> moveFocus
    719:723:androidx.core.view.accessibility.AccessibilityNodeInfoCompat obtainAccessibilityNodeInfo(int) -> obtainAccessibilityNodeInfo
    275:282:void onFocusChanged(boolean,int,android.graphics.Rect) -> onFocusChanged
    660:664:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    755:759:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    1128:1128:void onPopulateEventForHost(android.view.accessibility.AccessibilityEvent) -> onPopulateEventForHost
    1116:1116:void onPopulateEventForVirtualView(int,android.view.accessibility.AccessibilityEvent) -> onPopulateEventForVirtualView
    1206:1206:void onPopulateNodeForHost(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onPopulateNodeForHost
    601:601:void onVirtualViewKeyboardFocusChanged(int,boolean) -> onVirtualViewKeyboardFocusChanged
    895:897:boolean performAction(int,int,android.os.Bundle) -> performAction
    908:914:boolean performActionForChild(int,int,android.os.Bundle) -> performActionForChild
    904:904:boolean performActionForHost(int,android.os.Bundle) -> performActionForHost
    968:969:boolean requestAccessibilityFocus(int) -> requestAccessibilityFocus
    1016:1035:boolean requestKeyboardFocusForVirtualView(int) -> requestKeyboardFocusForVirtualView
    505:506:boolean sendEventForVirtualView(int,int) -> sendEventForVirtualView
    612:624:void updateHoveredVirtualView(int) -> updateHoveredVirtualView
androidx.customview.widget.ExploreByTouchHelper$1 -> androidx.customview.widget.ExploreByTouchHelper$1:
    336:336:void <init>() -> <init>
    336:336:void obtainBounds(java.lang.Object,android.graphics.Rect) -> obtainBounds
    339:340:void obtainBounds(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.graphics.Rect) -> obtainBounds
androidx.customview.widget.ExploreByTouchHelper$2 -> androidx.customview.widget.ExploreByTouchHelper$2:
    349:349:void <init>() -> <init>
    349:349:java.lang.Object get(java.lang.Object,int) -> get
    353:353:androidx.core.view.accessibility.AccessibilityNodeInfoCompat get(androidx.collection.SparseArrayCompat,int) -> get
    349:349:int size(java.lang.Object) -> size
    358:358:int size(androidx.collection.SparseArrayCompat) -> size
androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider -> androidx.customview.widget.ExploreByTouchHelper$MyNodeProvider:
    1238:1239:void <init>(androidx.customview.widget.ExploreByTouchHelper) -> <init>
    1245:1247:androidx.core.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    1257:1262:androidx.core.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> findFocus
    1252:1252:boolean performAction(int,int,android.os.Bundle) -> performAction
androidx.customview.widget.FocusStrategy -> androidx.customview.widget.FocusStrategy:
    454:455:void <init>() -> <init>
    243:248:boolean beamBeats(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> beamBeats
    326:329:boolean beamsOverlap(int,android.graphics.Rect,android.graphics.Rect) -> beamsOverlap
    145:183:java.lang.Object findNextFocusInAbsoluteDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,android.graphics.Rect,int) -> findNextFocusInAbsoluteDirection
    40:53:java.lang.Object findNextFocusInRelativeDirection(java.lang.Object,androidx.customview.widget.FocusStrategy$CollectionAdapter,androidx.customview.widget.FocusStrategy$BoundsAdapter,java.lang.Object,int,boolean,boolean) -> findNextFocusInRelativeDirection
    61:71:java.lang.Object getNextFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getNextFocusable
    76:86:java.lang.Object getPreviousFocusable(java.lang.Object,java.util.ArrayList,boolean) -> getPreviousFocusable
    283:283:int getWeightedDistanceFor(int,int) -> getWeightedDistanceFor
    203:231:boolean isBetterCandidate(int,android.graphics.Rect,android.graphics.Rect,android.graphics.Rect) -> isBetterCandidate
    297:299:boolean isCandidate(android.graphics.Rect,android.graphics.Rect,int) -> isCandidate
    343:345:boolean isToDirectionOf(int,android.graphics.Rect,android.graphics.Rect) -> isToDirectionOf
    365:365:int majorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistance
    370:372:int majorAxisDistanceRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceRaw
    392:392:int majorAxisDistanceToFarEdge(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdge
    398:400:int majorAxisDistanceToFarEdgeRaw(int,android.graphics.Rect,android.graphics.Rect) -> majorAxisDistanceToFarEdgeRaw
    423:427:int minorAxisDistance(int,android.graphics.Rect,android.graphics.Rect) -> minorAxisDistance
androidx.customview.widget.FocusStrategy$SequentialComparator -> androidx.customview.widget.FocusStrategy$SequentialComparator:
    101:104:void <init>(boolean,androidx.customview.widget.FocusStrategy$BoundsAdapter) -> <init>
    108:135:int compare(java.lang.Object,java.lang.Object) -> compare
androidx.customview.widget.ViewDragHelper -> androidx.customview.widget.ViewDragHelper:
    332:332:void <clinit>() -> <clinit>
    383:385:void <init>(android.content.Context,android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> <init>
    525:535:void abort() -> abort
    933:952:boolean canScroll(android.view.View,boolean,int,int,int,int) -> canScroll
    511:518:void cancel() -> cancel
    471:472:void captureChildView(android.view.View,int) -> captureChildView
    1276:1283:boolean checkNewEdgeDrag(float,float,int,int) -> checkNewEdgeDrag
    1303:1316:boolean checkTouchSlop(android.view.View,float,float) -> checkTouchSlop
    1334:1340:boolean checkTouchSlop(int) -> checkTouchSlop
    1359:1376:boolean checkTouchSlop(int,int) -> checkTouchSlop
    670:673:int clampMag(int,int,int) -> clampMag
    687:690:float clampMag(float,float,float) -> clampMag
    790:801:void clearMotionHistory() -> clearMotionHistory
    804:805:void clearMotionHistory(int) -> clearMotionHistory
    638:656:int computeAxisDuration(int,int,int) -> computeAxisDuration
    617:634:int computeSettleDuration(android.view.View,int,int,int,int) -> computeSettleDuration
    735:769:boolean continueSettling(boolean) -> continueSettling
    355:355:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,androidx.customview.widget.ViewDragHelper$Callback) -> create
    369:371:androidx.customview.widget.ViewDragHelper create(android.view.ViewGroup,float,androidx.customview.widget.ViewDragHelper$Callback) -> create
    779:787:void dispatchViewReleased(float,float) -> dispatchViewReleased
    694:696:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    1424:1443:void dragTo(int,int,int,int) -> dragTo
    818:845:void ensureMotionHistorySizeForId(int) -> ensureMotionHistorySizeForId
    1487:1495:android.view.View findTopChildUnder(int,int) -> findTopChildUnder
    710:711:void flingCapturedView(int,int,int,int) -> flingCapturedView
    597:613:boolean forceSettleCapturedViewAt(int,int,int,int) -> forceSettleCapturedViewAt
    495:495:int getActivePointerId() -> getActivePointerId
    487:487:android.view.View getCapturedView() -> getCapturedView
    459:459:int getEdgeSize() -> getEdgeSize
    1499:1506:int getEdgesTouched(int,int) -> getEdgesTouched
    422:422:float getMinVelocity() -> getMinVelocity
    503:503:int getTouchSlop() -> getTouchSlop
    431:431:int getViewDragState() -> getViewDragState
    1455:1455:boolean isCapturedViewUnder(int,int) -> isCapturedViewUnder
    1389:1395:boolean isEdgeTouched(int) -> isEdgeTouched
    1409:1409:boolean isEdgeTouched(int,int) -> isEdgeTouched
    884:884:boolean isPointerDown(int) -> isPointerDown
    1510:1516:boolean isValidPointerForActionMove(int) -> isValidPointerForActionMove
    1468:1474:boolean isViewUnder(android.view.View,int,int) -> isViewUnder
    1097:1252:void processTouchEvent(android.view.MotionEvent) -> processTouchEvent
    1413:1421:void releaseViewForPointerUp() -> releaseViewForPointerUp
    1255:1273:void reportNewEdgeDrags(float,float,int) -> reportNewEdgeDrags
    848:853:void saveInitialMotion(float,float,int) -> saveInitialMotion
    856:868:void saveLastMotion(android.view.MotionEvent) -> saveLastMotion
    888:896:void setDragState(int) -> setDragState
    447:448:void setEdgeTrackingEnabled(int) -> setEdgeTrackingEnabled
    411:412:void setMinVelocity(float) -> setMinVelocity
    577:578:boolean settleCapturedViewAt(int,int) -> settleCapturedViewAt
    963:1087:boolean shouldInterceptTouchEvent(android.view.MotionEvent) -> shouldInterceptTouchEvent
    552:562:boolean smoothSlideViewTo(android.view.View,int,int) -> smoothSlideViewTo
    908:917:boolean tryCaptureViewForDrag(android.view.View,int) -> tryCaptureViewForDrag
androidx.customview.widget.ViewDragHelper$1 -> androidx.customview.widget.ViewDragHelper$1:
    332:332:void <init>() -> <init>
    335:336:float getInterpolation(float) -> getInterpolation
androidx.customview.widget.ViewDragHelper$2 -> androidx.customview.widget.ViewDragHelper$2:
    340:340:void <init>(androidx.customview.widget.ViewDragHelper) -> <init>
    343:344:void run() -> run
androidx.customview.widget.ViewDragHelper$Callback -> androidx.customview.widget.ViewDragHelper$Callback:
    152:152:void <init>() -> <init>
    310:310:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    325:325:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    255:255:int getOrderedChildIndex(int) -> getOrderedChildIndex
    266:266:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    277:277:int getViewVerticalDragRange(android.view.View) -> getViewVerticalDragRange
    246:246:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    232:232:boolean onEdgeLock(int) -> onEdgeLock
    220:220:void onEdgeTouched(int,int) -> onEdgeTouched
    187:187:void onViewCaptured(android.view.View,int) -> onViewCaptured
    163:163:void onViewDragStateChanged(int) -> onViewDragStateChanged
    176:176:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    207:207:void onViewReleased(android.view.View,float,float) -> onViewReleased
androidx.drawerlayout.widget.DrawerLayout -> androidx.drawerlayout.widget.DrawerLayout:
    104:192:void <clinit>() -> <clinit>
    306:307:void <init>(android.content.Context) -> <init>
    310:311:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    314:367:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    511:518:void addDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> addDrawerListener
    1911:1942:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2057:2077:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1961:1972:void cancelChildViewTouch() -> cancelChildViewTouch
    950:951:boolean checkDrawerViewAbsoluteGravity(android.view.View,int) -> checkDrawerViewAbsoluteGravity
    1901:1901:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    1747:1748:void closeDrawer(android.view.View) -> closeDrawer
    1757:1758:void closeDrawer(android.view.View,boolean) -> closeDrawer
    1789:1790:void closeDrawer(int) -> closeDrawer
    1800:1803:void closeDrawer(int,boolean) -> closeDrawer
    1637:1638:void closeDrawers() -> closeDrawers
    1641:1670:void closeDrawers(boolean) -> closeDrawers
    1309:1322:void computeScroll() -> computeScroll
    1536:1539:boolean dispatchGenericMotionEvent(android.view.MotionEvent) -> dispatchGenericMotionEvent
    850:875:void dispatchOnDrawerClosed(android.view.View) -> dispatchOnDrawerClosed
    878:897:void dispatchOnDrawerOpened(android.view.View) -> dispatchOnDrawerOpened
    916:924:void dispatchOnDrawerSlide(android.view.View,float) -> dispatchOnDrawerSlide
    774:786:boolean dispatchTransformedGenericPointerEvent(android.view.MotionEvent,android.view.View) -> dispatchTransformedGenericPointerEvent
    1401:1460:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    985:995:android.view.View findDrawerWithGravity(int) -> findDrawerWithGravity
    955:963:android.view.View findOpenDrawer() -> findOpenDrawer
    1949:1956:android.view.View findVisibleDrawer() -> findVisibleDrawer
    1887:1887:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1892:1892:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1906:1906:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    393:396:float getDrawerElevation() -> getDrawerElevation
    652:697:int getDrawerLockMode(int) -> getDrawerLockMode
    709:710:int getDrawerLockMode(android.view.View) -> getDrawerLockMode
    746:753:java.lang.CharSequence getDrawerTitle(int) -> getDrawerTitle
    945:946:int getDrawerViewAbsoluteGravity(android.view.View) -> getDrawerViewAbsoluteGravity
    937:937:float getDrawerViewOffset(android.view.View) -> getDrawerViewOffset
    1350:1350:android.graphics.drawable.Drawable getStatusBarBackgroundDrawable() -> getStatusBarBackgroundDrawable
    794:806:android.view.MotionEvent getTransformedMotionEvent(android.view.MotionEvent,android.view.View) -> getTransformedMotionEvent
    1005:1011:java.lang.String gravityToString(int) -> gravityToString
    1325:1329:boolean hasOpaqueBackground(android.view.View) -> hasOpaqueBackground
    1875:1882:boolean hasPeekingDrawer() -> hasPeekingDrawer
    1945:1945:boolean hasVisibleDrawer() -> hasVisibleDrawer
    2085:2087:boolean includeChildForAccessibility(android.view.View) -> includeChildForAccessibility
    1464:1464:boolean isContentView(android.view.View) -> isContentView
    1819:1820:boolean isDrawerOpen(android.view.View) -> isDrawerOpen
    1836:1840:boolean isDrawerOpen(int) -> isDrawerOpen
    1468:1479:boolean isDrawerView(android.view.View) -> isDrawerView
    1852:1853:boolean isDrawerVisible(android.view.View) -> isDrawerVisible
    1867:1871:boolean isDrawerVisible(int) -> isDrawerVisible
    761:765:boolean isInBoundsOfChild(float,float,android.view.View) -> isInBoundsOfChild
    1208:1209:boolean mirror(android.graphics.drawable.Drawable,int) -> mirror
    967:976:void moveDrawerToOffset(android.view.View,float) -> moveDrawerToOffset
    1022:1024:void onAttachedToWindow() -> onAttachedToWindow
    1016:1018:void onDetachedFromWindow() -> onDetachedFromWindow
    1383:1397:void onDraw(android.graphics.Canvas) -> onDraw
    1485:1527:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1976:1980:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    1985:1992:boolean onKeyUp(int,android.view.KeyEvent) -> onKeyUp
    1218:1298:void onLayout(boolean,int,int,int,int) -> onLayout
    1029:1053:void onMeasure(int,int) -> onMeasure
    1997:2024:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1378:1379:void onRtlPropertiesChanged(int) -> onRtlPropertiesChanged
    2028:2052:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1569:1616:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1678:1679:void openDrawer(android.view.View) -> openDrawer
    1688:1689:void openDrawer(android.view.View,boolean) -> openDrawer
    1722:1723:void openDrawer(int) -> openDrawer
    1733:1736:void openDrawer(int,boolean) -> openDrawer
    528:536:void removeDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> removeDrawerListener
    1625:1631:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    1302:1305:void requestLayout() -> requestLayout
    1166:1181:android.graphics.drawable.Drawable resolveLeftShadow() -> resolveLeftShadow
    1185:1199:android.graphics.drawable.Drawable resolveRightShadow() -> resolveRightShadow
    1158:1163:void resolveShadowDrawables() -> resolveShadowDrawables
    405:409:void setChildInsets(java.lang.Object,boolean) -> setChildInsets
    376:383:void setDrawerElevation(float) -> setDrawerElevation
    493:502:void setDrawerListener(androidx.drawerlayout.widget.DrawerLayout$DrawerListener) -> setDrawerListener
    552:554:void setDrawerLockMode(int) -> setDrawerLockMode
    576:614:void setDrawerLockMode(int,int) -> setDrawerLockMode
    635:636:void setDrawerLockMode(int,android.view.View) -> setDrawerLockMode
    431:444:void setDrawerShadow(android.graphics.drawable.Drawable,int) -> setDrawerShadow
    465:466:void setDrawerShadow(int,int) -> setDrawerShadow
    727:734:void setDrawerTitle(int,java.lang.CharSequence) -> setDrawerTitle
    927:934:void setDrawerViewOffset(android.view.View,float) -> setDrawerViewOffset
    474:476:void setScrimColor(int) -> setScrimColor
    1339:1341:void setStatusBarBackground(android.graphics.drawable.Drawable) -> setStatusBarBackground
    1360:1362:void setStatusBarBackground(int) -> setStatusBarBackground
    1372:1374:void setStatusBarBackgroundColor(int) -> setStatusBarBackgroundColor
    900:913:void updateChildrenImportantForAccessibility(android.view.View,boolean) -> updateChildrenImportantForAccessibility
    814:847:void updateDrawerState(int,int,android.view.View) -> updateDrawerState
androidx.drawerlayout.widget.DrawerLayout$1 -> androidx.drawerlayout.widget.DrawerLayout$1:
    343:343:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    346:348:android.view.WindowInsets onApplyWindowInsets(android.view.View,android.view.WindowInsets) -> onApplyWindowInsets
androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$AccessibilityDelegate:
    2349:2350:void <init>(androidx.drawerlayout.widget.DrawerLayout) -> <init>
    2426:2433:void addChildrenForAccessibility(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,android.view.ViewGroup) -> addChildrenForAccessibility
    2442:2464:void copyNodeInfoNoChildren(androidx.core.view.accessibility.AccessibilityNodeInfoCompat,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> copyNodeInfoNoChildren
    2399:2413:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2387:2390:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    2354:2383:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    2419:2420:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate -> androidx.drawerlayout.widget.DrawerLayout$ChildAccessibilityDelegate:
    2467:2467:void <init>() -> <init>
    2471:2479:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
androidx.drawerlayout.widget.DrawerLayout$LayoutParams -> androidx.drawerlayout.widget.DrawerLayout$LayoutParams:
    2319:2324:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2327:2328:void <init>(int,int) -> <init>
    2331:2333:void <init>(int,int,int) -> <init>
    2336:2338:void <init>(androidx.drawerlayout.widget.DrawerLayout$LayoutParams) -> <init>
    2341:2342:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2345:2346:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
androidx.drawerlayout.widget.DrawerLayout$SavedState -> androidx.drawerlayout.widget.DrawerLayout$SavedState:
    2124:2124:void <clinit>() -> <clinit>
    2102:2108:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    2111:2112:void <init>(android.os.Parcelable) -> <init>
    2116:2122:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.drawerlayout.widget.DrawerLayout$SavedState$1 -> androidx.drawerlayout.widget.DrawerLayout$SavedState$1:
    2124:2124:void <init>() -> <init>
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2127:2127:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    2132:2132:androidx.drawerlayout.widget.DrawerLayout$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2124:2124:java.lang.Object[] newArray(int) -> newArray
    2137:2137:androidx.drawerlayout.widget.DrawerLayout$SavedState[] newArray(int) -> newArray
androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener -> androidx.drawerlayout.widget.DrawerLayout$SimpleDrawerListener:
    287:287:void <init>() -> <init>
    298:298:void onDrawerClosed(android.view.View) -> onDrawerClosed
    294:294:void onDrawerOpened(android.view.View) -> onDrawerOpened
    290:290:void onDrawerSlide(android.view.View,float) -> onDrawerSlide
    302:302:void onDrawerStateChanged(int) -> onDrawerStateChanged
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback:
    2152:2154:void <init>(androidx.drawerlayout.widget.DrawerLayout,int) -> <init>
    2294:2298:int clampViewPositionHorizontal(android.view.View,int,int) -> clampViewPositionHorizontal
    2304:2304:int clampViewPositionVertical(android.view.View,int,int) -> clampViewPositionVertical
    2203:2208:void closeOtherDrawer() -> closeOtherDrawer
    2289:2289:int getViewHorizontalDragRange(android.view.View) -> getViewHorizontalDragRange
    2276:2285:void onEdgeDragStarted(int,int) -> onEdgeDragStarted
    2270:2270:boolean onEdgeLock(int) -> onEdgeLock
    2231:2232:void onEdgeTouched(int,int) -> onEdgeTouched
    2196:2200:void onViewCaptured(android.view.View,int) -> onViewCaptured
    2174:2175:void onViewDragStateChanged(int) -> onViewDragStateChanged
    2180:2192:void onViewPositionChanged(android.view.View,int,int,int,int) -> onViewPositionChanged
    2214:2227:void onViewReleased(android.view.View,float,float) -> onViewReleased
    2237:2259:void peekDrawer() -> peekDrawer
    2161:2162:void removeCallbacks() -> removeCallbacks
    2157:2158:void setDragger(androidx.customview.widget.ViewDragHelper) -> setDragger
    2168:2169:boolean tryCaptureView(android.view.View,int) -> tryCaptureView
androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1 -> androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback$1:
    2146:2146:void <init>(androidx.drawerlayout.widget.DrawerLayout$ViewDragCallback) -> <init>
    2148:2149:void run() -> run
androidx.fragment.app.BackStackRecord -> androidx.fragment.app.BackStackRecord:
    140:142:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    255:269:void bumpBackStackNesting(int) -> bumpBackStackNesting
    282:282:int commit() -> commit
    287:287:int commitAllowingStateLoss() -> commitAllowingStateLoss
    303:303:int commitInternal(boolean) -> commitInternal
    292:294:void commitNow() -> commitNow
    298:300:void commitNowAllowingStateLoss() -> commitNowAllowingStateLoss
    219:224:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> detach
    179:181:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    59:60:void dump(java.lang.String,java.io.PrintWriter) -> dump
    63:138:void dump(java.lang.String,java.io.PrintWriter,boolean) -> dump
    389:441:void executeOps() -> executeOps
    451:502:void executePopOps(boolean) -> executePopOps
    528:593:androidx.fragment.app.Fragment expandOps(java.util.ArrayList,androidx.fragment.app.Fragment) -> expandOps
    332:341:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
    171:174:java.lang.CharSequence getBreadCrumbShortTitle() -> getBreadCrumbShortTitle
    156:156:int getBreadCrumbShortTitleRes() -> getBreadCrumbShortTitleRes
    162:165:java.lang.CharSequence getBreadCrumbTitle() -> getBreadCrumbTitle
    151:151:int getBreadCrumbTitleRes() -> getBreadCrumbTitleRes
    146:146:int getId() -> getId
    660:660:java.lang.String getName() -> getName
    197:202:androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment) -> hide
    345:353:boolean interactsWith(int) -> interactsWith
    357:381:boolean interactsWith(java.util.ArrayList,int,int) -> interactsWith
    665:665:boolean isEmpty() -> isEmpty
    652:653:boolean isFragmentPostponed(androidx.fragment.app.FragmentTransaction$Op) -> isFragmentPostponed
    633:639:boolean isPostponed() -> isPostponed
    186:191:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    272:278:void runOnCommitRunnables() -> runOnCommitRunnables
    243:244:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    643:649:void setOnStartPostponedListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartPostponedListener
    230:236:androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    208:213:androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment) -> show
    43:55:java.lang.String toString() -> toString
    607:629:androidx.fragment.app.Fragment trackAddedFragmentsInPop(java.util.ArrayList,androidx.fragment.app.Fragment) -> trackAddedFragmentsInPop
androidx.fragment.app.BackStackState -> androidx.fragment.app.BackStackState:
    170:170:void <clinit>() -> <clinit>
    47:52:void <init>(androidx.fragment.app.BackStackRecord) -> <init>
    83:99:void <init>(android.os.Parcel) -> <init>
    148:148:int describeContents() -> describeContents
    102:143:androidx.fragment.app.BackStackRecord instantiate(androidx.fragment.app.FragmentManagerImpl) -> instantiate
    153:168:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.BackStackState$1 -> androidx.fragment.app.BackStackState$1:
    171:171:void <init>() -> <init>
    171:171:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    174:174:androidx.fragment.app.BackStackState createFromParcel(android.os.Parcel) -> createFromParcel
    171:171:java.lang.Object[] newArray(int) -> newArray
    179:179:androidx.fragment.app.BackStackState[] newArray(int) -> newArray
androidx.fragment.app.DialogFragment -> androidx.fragment.app.DialogFragment:
    112:113:void <init>() -> <init>
    202:203:void dismiss() -> dismiss
    212:213:void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    216:253:void dismissInternal(boolean,boolean) -> dismissInternal
    262:262:android.app.Dialog getDialog() -> getDialog
    332:332:boolean getShowsDialog() -> getShowsDialog
    283:283:int getTheme() -> getTheme
    304:304:boolean isCancelable() -> isCancelable
    451:478:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    337:343:void onAttach(android.content.Context) -> onAttach
    436:436:void onCancel(android.content.DialogInterface) -> onCancel
    358:371:void onCreate(android.os.Bundle) -> onCreate
    431:431:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    529:547:void onDestroyView() -> onDestroyView
    347:354:void onDetach() -> onDetach
    440:447:void onDismiss(android.content.DialogInterface) -> onDismiss
    376:388:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    492:514:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    482:488:void onStart() -> onStart
    518:522:void onStop() -> onStop
    274:276:android.app.Dialog requireDialog() -> requireDialog
    296:298:void setCancelable(boolean) -> setCancelable
    325:326:void setShowsDialog(boolean) -> setShowsDialog
    130:137:void setStyle(int,int) -> setStyle
    395:405:void setupDialog(android.app.Dialog,int) -> setupDialog
    151:156:void show(androidx.fragment.app.FragmentManager,java.lang.String) -> show
    168:173:int show(androidx.fragment.app.FragmentTransaction,java.lang.String) -> show
    188:193:void showNow(androidx.fragment.app.FragmentManager,java.lang.String) -> showNow
androidx.fragment.app.DialogFragment$1 -> androidx.fragment.app.DialogFragment$1:
    93:93:void <init>(androidx.fragment.app.DialogFragment) -> <init>
    96:99:void run() -> run
androidx.fragment.app.Fragment -> androidx.fragment.app.Fragment:
    98:98:void <clinit>() -> <clinit>
    450:452:void <init>() -> <init>
    463:465:void <init>(int) -> <init>
    2451:2461:void callStartTransitionListener() -> callStartTransitionListener
    2474:2547:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2873:2876:androidx.fragment.app.Fragment$AnimationInfo ensureAnimationInfo() -> ensureAnimationInfo
    570:570:boolean equals(java.lang.Object) -> equals
    2551:2554:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    788:788:androidx.fragment.app.FragmentActivity getActivity() -> getActivity
    2315:2315:boolean getAllowEnterTransitionOverlap() -> getAllowEnterTransitionOverlap
    2340:2340:boolean getAllowReturnTransitionOverlap() -> getAllowReturnTransitionOverlap
    2931:2934:android.view.View getAnimatingAway() -> getAnimatingAway
    2946:2949:android.animation.Animator getAnimator() -> getAnimator
    636:636:android.os.Bundle getArguments() -> getArguments
    922:923:androidx.fragment.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    761:761:android.content.Context getContext() -> getContext
    2098:2101:java.lang.Object getEnterTransition() -> getEnterTransition
    2917:2920:androidx.core.app.SharedElementCallback getEnterTransitionCallback() -> getEnterTransitionCallback
    2177:2180:java.lang.Object getExitTransition() -> getExitTransition
    2924:2927:androidx.core.app.SharedElementCallback getExitTransitionCallback() -> getExitTransitionCallback
    890:890:androidx.fragment.app.FragmentManager getFragmentManager() -> getFragmentManager
    815:815:java.lang.Object getHost() -> getHost
    605:605:int getId() -> getId
    1396:1399:android.view.LayoutInflater getLayoutInflater() -> getLayoutInflater
    1430:1431:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    283:283:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    1165:1165:androidx.loader.app.LoaderManager getLoaderManager() -> getLoaderManager
    2880:2883:int getNextAnim() -> getNextAnim
    2894:2897:int getNextTransition() -> getNextTransition
    2910:2913:int getNextTransitionStyle() -> getNextTransitionStyle
    934:934:androidx.fragment.app.Fragment getParentFragment() -> getParentFragment
    2215:2218:java.lang.Object getReenterTransition() -> getReenterTransition
    838:838:android.content.res.Resources getResources() -> getResources
    1073:1073:boolean getRetainInstance() -> getRetainInstance
    2137:2140:java.lang.Object getReturnTransition() -> getReturnTransition
    370:370:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    2248:2251:java.lang.Object getSharedElementEnterTransition() -> getSharedElementEnterTransition
    2286:2289:java.lang.Object getSharedElementReturnTransition() -> getSharedElementReturnTransition
    2953:2956:int getStateAfterAnimating() -> getStateAfterAnimating
    860:860:java.lang.String getString(int) -> getString
    873:873:java.lang.String getString(int,java.lang.Object[]) -> getString
    613:613:java.lang.String getTag() -> getTag
    736:744:androidx.fragment.app.Fragment getTargetFragment() -> getTargetFragment
    751:751:int getTargetRequestCode() -> getTargetRequestCode
    849:849:java.lang.CharSequence getText(int) -> getText
    1153:1153:boolean getUserVisibleHint() -> getUserVisibleHint
    1686:1686:android.view.View getView() -> getView
    324:325:androidx.lifecycle.LifecycleOwner getViewLifecycleOwner() -> getViewLifecycleOwner
    345:345:androidx.lifecycle.LiveData getViewLifecycleOwnerLiveData() -> getViewLifecycleOwnerLiveData
    361:362:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    1028:1028:boolean hasOptionsMenu() -> hasOptionsMenu
    577:577:int hashCode() -> hashCode
    468:483:void initLifecycle() -> initLifecycle
    1877:1893:void initState() -> initState
    495:495:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    521:530:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    964:964:boolean isAdded() -> isAdded
    973:973:boolean isDetached() -> isDetached
    1022:1022:boolean isHidden() -> isHidden
    2971:2974:boolean isHideReplaced() -> isHideReplaced
    563:563:boolean isInBackStack() -> isInBackStack
    993:993:boolean isInLayout() -> isInLayout
    1034:1034:boolean isMenuVisible() -> isMenuVisible
    2964:2967:boolean isPostponed() -> isPostponed
    982:982:boolean isRemoving() -> isRemoving
    1001:1001:boolean isResumed() -> isResumed
    663:666:boolean isStateSaved() -> isStateSaved
    1010:1010:boolean isVisible() -> isVisible
    2663:2664:void noteStateNotSaved() -> noteStateNotSaved
    1720:1721:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1238:1238:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    1523:1529:void onAttach(android.content.Context) -> onAttach
    1540:1541:void onAttach(android.app.Activity) -> onAttach
    1515:1515:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    1804:1805:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    2045:2045:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    1603:1608:void onCreate(android.os.Bundle) -> onCreate
    1560:1560:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    1581:1581:android.animation.Animator onCreateAnimator(int,boolean,int) -> onCreateAnimator
    1999:2000:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1918:1918:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    1659:1662:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    1867:1868:void onDestroy() -> onDestroy
    1945:1945:void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    1858:1859:void onDestroyView() -> onDestroyView
    1901:1902:void onDetach() -> onDetach
    1380:1380:android.view.LayoutInflater onGetLayoutInflater(android.os.Bundle) -> onGetLayoutInflater
    1044:1044:void onHiddenChanged(boolean) -> onHiddenChanged
    1484:1490:void onInflate(android.content.Context,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1502:1503:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    1844:1845:void onLowMemory() -> onLowMemory
    1790:1790:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    1966:1966:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1977:1977:void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    1828:1829:void onPause() -> onPause
    1799:1799:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    1935:1935:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    1819:1819:void onPrimaryNavigationFragmentChanged(boolean) -> onPrimaryNavigationFragmentChanged
    1340:1340:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    1757:1758:void onResume() -> onResume
    1780:1780:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1746:1747:void onStart() -> onStart
    1838:1839:void onStop() -> onStop
    1676:1676:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    1736:1737:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    2616:2621:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    2558:2576:void performAttach() -> performAttach
    2688:2690:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    2745:2753:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    2582:2589:void performCreate(android.os.Bundle) -> performCreate
    2707:2715:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    2597:2608:void performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    2825:2832:void performDestroy() -> performDestroy
    2805:2813:void performDestroyView() -> performDestroyView
    2838:2842:void performDetach() -> performDetach
    1412:1414:android.view.LayoutInflater performGetLayoutInflater(android.os.Bundle) -> performGetLayoutInflater
    2693:2695:void performLowMemory() -> performLowMemory
    2678:2680:void performMultiWindowModeChanged(boolean) -> performMultiWindowModeChanged
    2731:2741:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    2757:2763:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    2775:2784:void performPause() -> performPause
    2683:2685:void performPictureInPictureModeChanged(boolean) -> performPictureInPictureModeChanged
    2719:2727:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    2667:2675:void performPrimaryNavigationFragmentChanged() -> performPrimaryNavigationFragmentChanged
    2645:2651:void performResume() -> performResume
    2766:2772:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    2628:2634:void performStart() -> performStart
    2790:2799:void performStop() -> performStop
    2375:2376:void postponeEnterTransition() -> postponeEnterTransition
    2409:2418:void postponeEnterTransition(long,java.util.concurrent.TimeUnit) -> postponeEnterTransition
    2013:2014:void registerForContextMenu(android.view.View) -> registerForContextMenu
    1314:1315:void requestPermissions(java.lang.String[],int) -> requestPermissions
    800:802:androidx.fragment.app.FragmentActivity requireActivity() -> requireActivity
    647:649:android.os.Bundle requireArguments() -> requireArguments
    772:774:android.content.Context requireContext() -> requireContext
    908:910:androidx.fragment.app.FragmentManager requireFragmentManager() -> requireFragmentManager
    826:828:java.lang.Object requireHost() -> requireHost
    946:957:androidx.fragment.app.Fragment requireParentFragment() -> requireParentFragment
    1697:1699:android.view.View requireView() -> requireView
    1623:1631:void restoreChildFragmentState(android.os.Bundle) -> restoreChildFragmentState
    547:554:void restoreViewState(android.os.Bundle) -> restoreViewState
    2303:2304:void setAllowEnterTransitionOverlap(boolean) -> setAllowEnterTransitionOverlap
    2328:2329:void setAllowReturnTransitionOverlap(boolean) -> setAllowReturnTransitionOverlap
    2938:2939:void setAnimatingAway(android.view.View) -> setAnimatingAway
    2942:2943:void setAnimator(android.animation.Animator) -> setAnimator
    624:628:void setArguments(android.os.Bundle) -> setArguments
    2056:2057:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    2084:2085:void setEnterTransition(java.lang.Object) -> setEnterTransition
    2067:2068:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    2160:2161:void setExitTransition(java.lang.Object) -> setExitTransition
    1084:1090:void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    2978:2979:void setHideReplaced(boolean) -> setHideReplaced
    678:679:void setInitialSavedState(androidx.fragment.app.Fragment$SavedState) -> setInitialSavedState
    1102:1108:void setMenuVisibility(boolean) -> setMenuVisibility
    2887:2891:void setNextAnim(int) -> setNextAnim
    2901:2907:void setNextTransition(int,int) -> setNextTransition
    2856:2870:void setOnStartEnterTransitionListener(androidx.fragment.app.Fragment$OnStartEnterTransitionListener) -> setOnStartEnterTransitionListener
    2199:2200:void setReenterTransition(java.lang.Object) -> setReenterTransition
    1060:1070:void setRetainInstance(boolean) -> setRetainInstance
    2120:2121:void setReturnTransition(java.lang.Object) -> setReturnTransition
    2234:2235:void setSharedElementEnterTransition(java.lang.Object) -> setSharedElementEnterTransition
    2269:2270:void setSharedElementReturnTransition(java.lang.Object) -> setSharedElementReturnTransition
    2960:2961:void setStateAfterAnimating(int) -> setStateAfterAnimating
    702:729:void setTargetFragment(androidx.fragment.app.Fragment,int) -> setTargetFragment
    1131:1142:void setUserVisibleHint(boolean) -> setUserVisibleHint
    1363:1366:boolean shouldShowRequestPermissionRationale(java.lang.String) -> shouldShowRequestPermissionRationale
    1173:1174:void startActivity(android.content.Intent) -> startActivity
    1182:1183:void startActivity(android.content.Intent,android.os.Bundle) -> startActivity
    1194:1195:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    1203:1204:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    1216:1217:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    2431:2443:void startPostponedEnterTransition() -> startPostponedEnterTransition
    582:596:java.lang.String toString() -> toString
    2024:2025:void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
androidx.fragment.app.Fragment$1 -> androidx.fragment.app.Fragment$1:
    230:230:void <init>(androidx.fragment.app.Fragment) -> <init>
    233:234:void run() -> run
androidx.fragment.app.Fragment$2 -> androidx.fragment.app.Fragment$2:
    471:471:void <init>(androidx.fragment.app.Fragment) -> <init>
    475:480:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.fragment.app.Fragment$3 -> androidx.fragment.app.Fragment$3:
    2434:2434:void <init>(androidx.fragment.app.Fragment) -> <init>
    2437:2438:void run() -> run
androidx.fragment.app.Fragment$4 -> androidx.fragment.app.Fragment$4:
    2558:2558:void <init>(androidx.fragment.app.Fragment) -> <init>
    2562:2563:android.view.View onFindViewById(int) -> onFindViewById
    2570:2570:boolean onHasView() -> onHasView
androidx.fragment.app.Fragment$AnimationInfo -> androidx.fragment.app.Fragment$AnimationInfo:
    2995:3028:void <init>() -> <init>
androidx.fragment.app.Fragment$InstantiationException -> androidx.fragment.app.Fragment$InstantiationException:
    430:431:void <init>(java.lang.String,java.lang.Exception) -> <init>
androidx.fragment.app.Fragment$SavedState -> androidx.fragment.app.Fragment$SavedState:
    404:404:void <clinit>() -> <clinit>
    382:384:void <init>(android.os.Bundle) -> <init>
    386:391:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    395:395:int describeContents() -> describeContents
    400:401:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.Fragment$SavedState$1 -> androidx.fragment.app.Fragment$SavedState$1:
    405:405:void <init>() -> <init>
    405:405:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    405:405:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    408:408:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    413:413:androidx.fragment.app.Fragment$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    405:405:java.lang.Object[] newArray(int) -> newArray
    418:418:androidx.fragment.app.Fragment$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentActivity -> androidx.fragment.app.FragmentActivity:
    127:128:void <init>() -> <init>
    142:143:void <init>(int) -> <init>
    830:831:int allocateRequestIndex(androidx.fragment.app.Fragment) -> allocateRequestIndex
    714:715:void checkForValidRequestCode(int) -> checkForValidRequestCode
    357:357:android.view.View dispatchFragmentsOnCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> dispatchFragmentsOnCreateView
    599:613:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    636:636:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    646:646:androidx.loader.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    990:991:void markFragmentsCreated() -> markFragmentsCreated
    995:1011:boolean markState(androidx.fragment.app.FragmentManager,androidx.lifecycle.Lifecycle$State) -> markState
    155:182:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    628:628:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    273:276:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    284:317:void onCreate(android.os.Bundle) -> onCreate
    324:329:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    336:340:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    347:351:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    365:368:void onDestroy() -> onDestroy
    375:377:void onLowMemory() -> onLowMemory
    384:390:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    250:251:void onMultiWindowModeChanged(boolean) -> onMultiWindowModeChanged
    437:439:void onNewIntent(android.content.Intent) -> onNewIntent
    405:411:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    418:422:void onPause() -> onPause
    265:266:void onPictureInPictureModeChanged(boolean) -> onPictureInPictureModeChanged
    467:469:void onPostResume() -> onPostResume
    502:502:boolean onPrepareOptionsPanel(android.view.View,android.view.Menu) -> onPrepareOptionsPanel
    487:492:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    754:772:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
    456:460:void onResume() -> onResume
    478:480:void onResumeFragments() -> onResumeFragments
    510:529:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    536:552:void onStart() -> onStart
    446:447:void onStateNotSaved() -> onStateNotSaved
    559:566:void onStop() -> onStop
    853:865:void requestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> requestPermissionsFromFragment
    206:207:void setEnterSharedElementCallback(androidx.core.app.SharedElementCallback) -> setEnterSharedElementCallback
    219:220:void setExitSharedElementCallback(androidx.core.app.SharedElementCallback) -> setExitSharedElementCallback
    658:664:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    671:677:void startActivityForResult(android.content.Intent,int,android.os.Bundle) -> startActivityForResult
    779:780:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    788:800:void startActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> startActivityFromFragment
    685:692:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int) -> startIntentSenderForResult
    700:707:void startIntentSenderForResult(android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderForResult
    810:824:void startIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> startIntentSenderFromFragment
    194:195:void supportFinishAfterTransition() -> supportFinishAfterTransition
    583:584:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    227:228:void supportPostponeEnterTransition() -> supportPostponeEnterTransition
    235:236:void supportStartPostponedEnterTransition() -> supportStartPostponedEnterTransition
    728:732:void validateRequestPermissionsRequestCode(int) -> validateRequestPermissionsRequestCode
androidx.fragment.app.FragmentActivity$HostCallbacks -> androidx.fragment.app.FragmentActivity$HostCallbacks:
    871:873:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    882:882:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    894:894:androidx.activity.OnBackPressedDispatcher getOnBackPressedDispatcher() -> getOnBackPressedDispatcher
    888:888:androidx.lifecycle.ViewModelStore getViewModelStore() -> getViewModelStore
    971:972:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    900:901:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    977:977:android.view.View onFindViewById(int) -> onFindViewById
    868:868:java.lang.Object onGetHost() -> onGetHost
    916:916:androidx.fragment.app.FragmentActivity onGetHost() -> onGetHost
    911:911:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    965:966:int onGetWindowAnimations() -> onGetWindowAnimations
    982:983:boolean onHasView() -> onHasView
    960:960:boolean onHasWindowAnimations() -> onHasWindowAnimations
    948:950:void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    905:905:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    954:954:boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    927:928:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> onStartActivityFromFragment
    933:934:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> onStartActivityFromFragment
    941:943:void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> onStartIntentSenderFromFragment
    921:922:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentContainer -> androidx.fragment.app.FragmentContainer:
    31:31:void <init>() -> <init>
    57:57:androidx.fragment.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
androidx.fragment.app.FragmentController -> androidx.fragment.app.FragmentController:
    60:62:void <init>(androidx.fragment.app.FragmentHostCallback) -> <init>
    116:118:void attachHost(androidx.fragment.app.Fragment) -> attachHost
    57:57:androidx.fragment.app.FragmentController createController(androidx.fragment.app.FragmentHostCallback) -> createController
    246:247:void dispatchActivityCreated() -> dispatchActivityCreated
    362:363:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    424:424:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    235:236:void dispatchCreate() -> dispatchCreate
    386:386:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    329:330:void dispatchDestroy() -> dispatchDestroy
    308:309:void dispatchDestroyView() -> dispatchDestroyView
    374:375:void dispatchLowMemory() -> dispatchLowMemory
    340:341:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    411:411:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    435:436:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    279:280:void dispatchPause() -> dispatchPause
    351:352:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    398:398:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    298:298:void dispatchReallyStop() -> dispatchReallyStop
    268:269:void dispatchResume() -> dispatchResume
    257:258:void dispatchStart() -> dispatchStart
    290:291:void dispatchStop() -> dispatchStop
    487:487:void doLoaderDestroy() -> doLoaderDestroy
    478:478:void doLoaderRetain() -> doLoaderRetain
    456:456:void doLoaderStart() -> doLoaderStart
    469:469:void doLoaderStop(boolean) -> doLoaderStop
    531:531:void dumpLoaders(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dumpLoaders
    446:446:boolean execPendingActions() -> execPendingActions
    92:92:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    108:108:java.util.List getActiveFragments(java.util.List) -> getActiveFragments
    99:99:int getActiveFragmentsCount() -> getActiveFragmentsCount
    69:69:androidx.fragment.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    83:83:androidx.loader.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    141:142:void noteStateNotSaved() -> noteStateNotSaved
    134:134:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    496:496:void reportLoaderStart() -> reportLoaderStart
    165:167:void restoreAllState(android.os.Parcelable,java.util.List) -> restoreAllState
    180:181:void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig) -> restoreAllState
    521:521:void restoreLoaderNonConfig(androidx.collection.SimpleArrayMap) -> restoreLoaderNonConfig
    190:191:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    507:507:androidx.collection.SimpleArrayMap retainLoaderNonConfig() -> retainLoaderNonConfig
    224:224:androidx.fragment.app.FragmentManagerNonConfig retainNestedNonConfig() -> retainNestedNonConfig
    208:209:java.util.List retainNonConfig() -> retainNonConfig
    151:151:android.os.Parcelable saveAllState() -> saveAllState
androidx.fragment.app.FragmentFactory -> androidx.fragment.app.FragmentFactory:
    32:32:void <clinit>() -> <clinit>
    31:31:void <init>() -> <init>
    114:117:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
    64:67:boolean isFragmentClass(java.lang.ClassLoader,java.lang.String) -> isFragmentClass
    44:50:java.lang.Class loadClass(java.lang.ClassLoader,java.lang.String) -> loadClass
    88:91:java.lang.Class loadFragmentClass(java.lang.ClassLoader,java.lang.String) -> loadFragmentClass
androidx.fragment.app.FragmentHostCallback -> androidx.fragment.app.FragmentHostCallback:
    53:55:void <init>(android.content.Context,android.os.Handler,int) -> <init>
    58:59:void <init>(androidx.fragment.app.FragmentActivity) -> <init>
    62:67:void <init>(android.app.Activity,android.content.Context,android.os.Handler,int) -> <init>
    195:195:android.app.Activity getActivity() -> getActivity
    200:200:android.content.Context getContext() -> getContext
    205:205:android.os.Handler getHandler() -> getHandler
    209:209:void onAttachFragment(androidx.fragment.app.Fragment) -> onAttachFragment
    80:80:void onDump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> onDump
    185:185:android.view.View onFindViewById(int) -> onFindViewById
    95:95:android.view.LayoutInflater onGetLayoutInflater() -> onGetLayoutInflater
    179:179:int onGetWindowAnimations() -> onGetWindowAnimations
    190:190:boolean onHasView() -> onHasView
    172:172:boolean onHasWindowAnimations() -> onHasWindowAnimations
    158:158:void onRequestPermissionsFromFragment(androidx.fragment.app.Fragment,java.lang.String[],int) -> onRequestPermissionsFromFragment
    86:86:boolean onShouldSaveFragmentState(androidx.fragment.app.Fragment) -> onShouldSaveFragmentState
    165:165:boolean onShouldShowRequestPermissionRationale(java.lang.String) -> onShouldShowRequestPermissionRationale
    119:120:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int) -> onStartActivityFromFragment
    129:130:void onStartActivityFromFragment(androidx.fragment.app.Fragment,android.content.Intent,int,android.os.Bundle) -> onStartActivityFromFragment
    144:145:void onStartIntentSenderFromFragment(androidx.fragment.app.Fragment,android.content.IntentSender,int,android.content.Intent,int,int,int,android.os.Bundle) -> onStartIntentSenderFromFragment
    111:111:void onSupportInvalidateOptionsMenu() -> onSupportInvalidateOptionsMenu
androidx.fragment.app.FragmentManager -> androidx.fragment.app.FragmentManager:
    49:49:void <clinit>() -> <clinit>
    48:117:void <init>() -> <init>
    434:435:void enableDebugLogging(boolean) -> enableDebugLogging
    411:414:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    143:143:androidx.fragment.app.FragmentTransaction openTransaction() -> openTransaction
    401:402:void setFragmentFactory(androidx.fragment.app.FragmentFactory) -> setFragmentFactory
androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks -> androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks:
    454:454:void <init>() -> <init>
    512:512:void onFragmentActivityCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentActivityCreated
    476:476:void onFragmentAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context) -> onFragmentAttached
    500:500:void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentCreated
    589:589:void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentDestroyed
    598:598:void onFragmentDetached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentDetached
    551:551:void onFragmentPaused(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentPaused
    465:465:void onFragmentPreAttached(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.content.Context) -> onFragmentPreAttached
    488:488:void onFragmentPreCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentPreCreated
    542:542:void onFragmentResumed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentResumed
    571:571:void onFragmentSaveInstanceState(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentSaveInstanceState
    533:533:void onFragmentStarted(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentStarted
    560:560:void onFragmentStopped(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentStopped
    524:524:void onFragmentViewCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.view.View,android.os.Bundle) -> onFragmentViewCreated
    580:580:void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentViewDestroyed
androidx.fragment.app.FragmentManagerImpl -> androidx.fragment.app.FragmentManagerImpl:
    76:575:void <clinit>() -> <clinit>
    75:147:void <init>() -> <init>
    2091:2107:void addAddedFragments(androidx.collection.ArraySet) -> addAddedFragments
    2191:2195:void addBackStackState(androidx.fragment.app.BackStackRecord) -> addBackStackState
    1375:1396:void addFragment(androidx.fragment.app.Fragment,boolean) -> addFragment
    334:338:void addOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    393:403:void addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    1597:1613:int allocBackStackIndex(androidx.fragment.app.BackStackRecord) -> allocBackStackIndex
    1076:1130:void animateRemoveFragment(androidx.fragment.app.Fragment,androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator,int) -> animateRemoveFragment
    2563:2563:void attachController(androidx.fragment.app.FragmentHostCallback,androidx.fragment.app.FragmentContainer,androidx.fragment.app.Fragment) -> attachController
    1464:1481:void attachFragment(androidx.fragment.app.Fragment) -> attachFragment
    178:178:androidx.fragment.app.FragmentTransaction beginTransaction() -> beginTransaction
    2555:2559:void burpActive() -> burpActive
    3096:3105:boolean checkForMenus() -> checkForMenus
    1535:1536:void checkStateLoss() -> checkStateLoss
    1712:1715:void cleanupExec() -> cleanupExec
    1989:2021:void completeExecute(androidx.fragment.app.BackStackRecord,boolean,boolean,boolean) -> completeExecute
    1163:1211:void completeShowHideFragment(androidx.fragment.app.Fragment) -> completeShowHideFragment
    1446:1461:void detachFragment(androidx.fragment.app.Fragment) -> detachFragment
    2611:2614:void dispatchActivityCreated() -> dispatchActivityCreated
    2685:2691:void dispatchConfigurationChanged(android.content.res.Configuration) -> dispatchConfigurationChanged
    2767:2778:boolean dispatchContextItemSelected(android.view.MenuItem) -> dispatchContextItemSelected
    2605:2608:void dispatchCreate() -> dispatchCreate
    2703:2732:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> dispatchCreateOptionsMenu
    2642:2654:void dispatchDestroy() -> dispatchDestroy
    2638:2639:void dispatchDestroyView() -> dispatchDestroyView
    2694:2700:void dispatchLowMemory() -> dispatchLowMemory
    2667:2673:void dispatchMultiWindowModeChanged(boolean) -> dispatchMultiWindowModeChanged
    2942:2954:void dispatchOnFragmentActivityCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentActivityCreated
    2894:2906:void dispatchOnFragmentAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentAttached
    2926:2938:void dispatchOnFragmentCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentCreated
    3064:3076:void dispatchOnFragmentDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDestroyed
    3079:3091:void dispatchOnFragmentDetached(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentDetached
    3003:3015:void dispatchOnFragmentPaused(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentPaused
    2878:2890:void dispatchOnFragmentPreAttached(androidx.fragment.app.Fragment,android.content.Context,boolean) -> dispatchOnFragmentPreAttached
    2910:2922:void dispatchOnFragmentPreCreated(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentPreCreated
    2988:3000:void dispatchOnFragmentResumed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentResumed
    3034:3046:void dispatchOnFragmentSaveInstanceState(androidx.fragment.app.Fragment,android.os.Bundle,boolean) -> dispatchOnFragmentSaveInstanceState
    2973:2985:void dispatchOnFragmentStarted(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStarted
    3018:3030:void dispatchOnFragmentStopped(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentStopped
    2958:2970:void dispatchOnFragmentViewCreated(androidx.fragment.app.Fragment,android.view.View,android.os.Bundle,boolean) -> dispatchOnFragmentViewCreated
    3049:3061:void dispatchOnFragmentViewDestroyed(androidx.fragment.app.Fragment,boolean) -> dispatchOnFragmentViewDestroyed
    2752:2763:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> dispatchOptionsItemSelected
    2782:2791:void dispatchOptionsMenuClosed(android.view.Menu) -> dispatchOptionsMenuClosed
    2807:2810:void dispatchParentPrimaryNavigationFragmentChanged(androidx.fragment.app.Fragment) -> dispatchParentPrimaryNavigationFragmentChanged
    2629:2630:void dispatchPause() -> dispatchPause
    2676:2682:void dispatchPictureInPictureModeChanged(boolean) -> dispatchPictureInPictureModeChanged
    2736:2748:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> dispatchPrepareOptionsMenu
    2813:2816:void dispatchPrimaryNavigationFragmentChanged() -> dispatchPrimaryNavigationFragmentChanged
    2623:2626:void dispatchResume() -> dispatchResume
    2617:2620:void dispatchStart() -> dispatchStart
    2658:2662:void dispatchStateChange(int) -> dispatchStateChange
    2633:2635:void dispatchStop() -> dispatchStop
    2176:2180:void doPendingDeferredStart() -> doPendingDeferredStart
    475:544:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    2125:2145:void endAnimatingAwayFragments() -> endAnimatingAwayFragments
    1557:1573:void enqueueAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean) -> enqueueAction
    1659:1660:void ensureExecReady(boolean) -> ensureExecReady
    1137:1150:void ensureInflatedFragmentView(androidx.fragment.app.Fragment) -> ensureInflatedFragmentView
    1721:1738:boolean execPendingActions() -> execPendingActions
    1688:1705:void execSingleAction(androidx.fragment.app.FragmentManagerImpl$OpGenerator,boolean) -> execSingleAction
    2068:2082:void executeOps(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOps
    1844:1899:void executeOpsTogether(java.util.ArrayList,java.util.ArrayList,int,int) -> executeOpsTogether
    183:185:boolean executePendingTransactions() -> executePendingTransactions
    1747:1776:void executePostponedTransaction(java.util.ArrayList,java.util.ArrayList) -> executePostponedTransaction
    1487:1499:androidx.fragment.app.Fragment findFragmentById(int) -> findFragmentById
    1505:1522:androidx.fragment.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    1526:1531:androidx.fragment.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    2040:2044:androidx.fragment.app.Fragment findFragmentUnder(androidx.fragment.app.Fragment) -> findFragmentUnder
    2113:2118:void forcePostponedTransactions() -> forcePostponedTransactions
    1642:1649:void freeBackStackIndex(int) -> freeBackStackIndex
    2159:2171:boolean generateOpsForPendingActions(java.util.ArrayList,java.util.ArrayList) -> generateOpsForPendingActions
    435:435:int getActiveFragmentCount() -> getActiveFragmentCount
    426:426:java.util.List getActiveFragments() -> getActiveFragments
    329:329:androidx.fragment.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    324:324:int getBackStackEntryCount() -> getBackStackEntryCount
    389:389:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    359:368:androidx.fragment.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    2836:2855:androidx.fragment.app.FragmentFactory getFragmentFactory() -> getFragmentFactory
    374:379:java.util.List getFragments() -> getFragments
    3252:3252:android.view.LayoutInflater$Factory2 getLayoutInflaterFactory() -> getLayoutInflaterFactory
    2821:2821:androidx.fragment.app.Fragment getPrimaryNavigationFragment() -> getPrimaryNavigationFragment
    384:384:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    230:243:void handleOnBackPressed() -> handleOnBackPressed
    1420:1427:void hideFragment(androidx.fragment.app.Fragment) -> hideFragment
    454:454:boolean isDestroyed() -> isDestroyed
    3109:3109:boolean isMenuAvailable(androidx.fragment.app.Fragment) -> isMenuAvailable
    211:220:boolean isPrimaryNavigation(androidx.fragment.app.Fragment) -> isPrimaryNavigation
    718:718:boolean isStateAtLeast(int) -> isStateAtLeast
    1546:1546:boolean isStateSaved() -> isStateSaved
    603:702:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator loadAnimation(androidx.fragment.app.Fragment,int,boolean,int) -> loadAnimation
    1331:1345:void makeActive(androidx.fragment.app.Fragment) -> makeActive
    595:598:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeFadeAnimation(float,float) -> makeFadeAnimation
    1348:1372:void makeInactive(androidx.fragment.app.Fragment) -> makeInactive
    581:591:androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator makeOpenCloseAnimation(float,float,float,float) -> makeOpenCloseAnimation
    1909:1918:void makeRemovedFragmentsInvisible(androidx.collection.ArraySet) -> makeRemovedFragmentsInvisible
    1220:1277:void moveFragmentToExpectedState(androidx.fragment.app.Fragment) -> moveFragmentToExpectedState
    725:1064:void moveToState(androidx.fragment.app.Fragment,int,int,int,boolean) -> moveToState
    1133:1134:void moveToState(androidx.fragment.app.Fragment) -> moveToState
    1289:1320:void moveToState(int,boolean) -> moveToState
    2593:2602:void noteStateNotSaved() -> noteStateNotSaved
    3156:3172:android.view.View onCreateView(android.view.View,java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    3248:3248:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    706:715:void performPendingDeferredStart(androidx.fragment.app.Fragment) -> performPendingDeferredStart
    247:248:void popBackStack() -> popBackStack
    258:259:void popBackStack(java.lang.String,int) -> popBackStack
    269:270:void popBackStack(int,int) -> popBackStack
    252:253:boolean popBackStackImmediate() -> popBackStackImmediate
    263:264:boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    277:280:boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    293:319:boolean popBackStackImmediate(java.lang.String,int,int) -> popBackStackImmediate
    2200:2251:boolean popBackStackState(java.util.ArrayList,java.util.ArrayList,java.lang.String,int,int) -> popBackStackState
    1935:1968:int postponePostponableTransactions(java.util.ArrayList,java.util.ArrayList,int,int,androidx.collection.ArraySet) -> postponePostponableTransactions
    349:354:void putFragment(android.os.Bundle,java.lang.String,androidx.fragment.app.Fragment) -> putFragment
    2861:2862:void registerFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> registerFragmentLifecycleCallbacks
    1399:1404:void removeFragment(androidx.fragment.app.Fragment) -> removeFragment
    342:345:void removeOnBackStackChangedListener(androidx.fragment.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    1794:1795:void removeRedundantOperationsAndExecute(java.util.ArrayList,java.util.ArrayList) -> removeRedundantOperationsAndExecute
    406:416:void removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    2183:2188:void reportBackStackChanged() -> reportBackStackChanged
    2430:2436:void restoreAllState(android.os.Parcelable,androidx.fragment.app.FragmentManagerNonConfig) -> restoreAllState
    2440:2547:void restoreSaveState(android.os.Parcelable) -> restoreSaveState
    2260:2264:androidx.fragment.app.FragmentManagerNonConfig retainNonConfig() -> retainNonConfig
    3113:3125:int reverseTransit(int) -> reverseTransit
    2320:2426:android.os.Parcelable saveAllState() -> saveAllState
    2284:2314:android.os.Bundle saveFragmentBasicState(androidx.fragment.app.Fragment) -> saveFragmentBasicState
    441:449:androidx.fragment.app.Fragment$SavedState saveFragmentInstanceState(androidx.fragment.app.Fragment) -> saveFragmentInstanceState
    2268:2281:void saveFragmentViewState(androidx.fragment.app.Fragment) -> saveFragmentViewState
    1584:1593:void scheduleCommit() -> scheduleCommit
    1617:1638:void setBackStackIndex(int,androidx.fragment.app.BackStackRecord) -> setBackStackIndex
    2825:2827:void setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    2795:2804:void setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    1436:1443:void showFragment(androidx.fragment.app.Fragment) -> showFragment
    1323:1328:void startPendingDeferredFragments() -> startPendingDeferredFragments
    155:172:void throwException(java.lang.RuntimeException) -> throwException
    459:469:java.lang.String toString() -> toString
    3137:3149:int transitToStyleIndex(int,boolean) -> transitToStyleIndex
    2866:2873:void unregisterFragmentLifecycleCallbacks(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks) -> unregisterFragmentLifecycleCallbacks
    192:201:void updateOnBackPressedCallbackEnabled() -> updateOnBackPressedCallbackEnabled
androidx.fragment.app.FragmentManagerImpl$1 -> androidx.fragment.app.FragmentManagerImpl$1:
    105:105:void <init>(androidx.fragment.app.FragmentManagerImpl,boolean) -> <init>
    108:109:void handleOnBackPressed() -> handleOnBackPressed
androidx.fragment.app.FragmentManagerImpl$2 -> androidx.fragment.app.FragmentManagerImpl$2:
    147:147:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    150:151:void run() -> run
androidx.fragment.app.FragmentManagerImpl$3 -> androidx.fragment.app.FragmentManagerImpl$3:
    1084:1084:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,androidx.fragment.app.Fragment) -> <init>
    1094:1104:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1108:1108:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    1087:1087:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
androidx.fragment.app.FragmentManagerImpl$3$1 -> androidx.fragment.app.FragmentManagerImpl$3$1:
    1094:1094:void <init>(androidx.fragment.app.FragmentManagerImpl$3) -> <init>
    1097:1102:void run() -> run
androidx.fragment.app.FragmentManagerImpl$4 -> androidx.fragment.app.FragmentManagerImpl$4:
    1114:1114:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1117:1125:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$5 -> androidx.fragment.app.FragmentManagerImpl$5:
    1177:1177:void <init>(androidx.fragment.app.FragmentManagerImpl,android.view.ViewGroup,android.view.View,androidx.fragment.app.Fragment) -> <init>
    1180:1185:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.fragment.app.FragmentManagerImpl$6 -> androidx.fragment.app.FragmentManagerImpl$6:
    2845:2845:void <init>(androidx.fragment.app.FragmentManagerImpl) -> <init>
    2851:2851:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,java.lang.String) -> instantiate
androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator -> androidx.fragment.app.FragmentManagerImpl$AnimationOrAnimator:
    3401:3405:void <init>(android.view.animation.Animation) -> <init>
    3409:3413:void <init>(android.animation.Animator) -> <init>
androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation -> androidx.fragment.app.FragmentManagerImpl$EndViewTransitionAnimation:
    3433:3440:void <init>(android.view.animation.Animation,android.view.ViewGroup,android.view.View) -> <init>
    3444:3453:boolean getTransformation(long,android.view.animation.Transformation) -> getTransformation
    3459:3468:boolean getTransformation(long,android.view.animation.Transformation,float) -> getTransformation
    3473:3481:void run() -> run
androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder -> androidx.fragment.app.FragmentManagerImpl$FragmentLifecycleCallbacksHolder:
    88:91:void <init>(androidx.fragment.app.FragmentManager$FragmentLifecycleCallbacks,boolean) -> <init>
androidx.fragment.app.FragmentManagerImpl$FragmentTag -> androidx.fragment.app.FragmentManagerImpl$FragmentTag:
    3256:3256:void <clinit>() -> <clinit>
    3263:3264:void <init>() -> <init>
androidx.fragment.app.FragmentManagerImpl$PopBackStackState -> androidx.fragment.app.FragmentManagerImpl$PopBackStackState:
    3295:3299:void <init>(androidx.fragment.app.FragmentManagerImpl,java.lang.String,int,int) -> <init>
    3304:3314:boolean generateOps(java.util.ArrayList,java.util.ArrayList) -> generateOps
androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener -> androidx.fragment.app.FragmentManagerImpl$StartEnterTransitionListener:
    3329:3332:void <init>(androidx.fragment.app.BackStackRecord,boolean) -> <init>
    3390:3391:void cancelTransaction() -> cancelTransaction
    3372:3383:void completeTransaction() -> completeTransaction
    3362:3362:boolean isReady() -> isReady
    3341:3346:void onStartEnterTransition() -> onStartEnterTransition
    3355:3356:void startListening() -> startListening
androidx.fragment.app.FragmentManagerNonConfig -> androidx.fragment.app.FragmentManagerNonConfig:
    49:53:void <init>(java.util.Collection,java.util.Map,java.util.Map) -> <init>
    76:76:java.util.Map getChildNonConfigs() -> getChildNonConfigs
    68:68:java.util.Collection getFragments() -> getFragments
    84:84:java.util.Map getViewModelStores() -> getViewModelStores
    57:60:boolean isRetaining(androidx.fragment.app.Fragment) -> isRetaining
androidx.fragment.app.FragmentManagerState -> androidx.fragment.app.FragmentManagerState:
    58:58:void <clinit>() -> <clinit>
    33:34:void <init>() -> <init>
    36:42:void <init>(android.os.Parcel) -> <init>
    46:46:int describeContents() -> describeContents
    51:56:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentManagerState$1 -> androidx.fragment.app.FragmentManagerState$1:
    59:59:void <init>() -> <init>
    59:59:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    62:62:androidx.fragment.app.FragmentManagerState createFromParcel(android.os.Parcel) -> createFromParcel
    59:59:java.lang.Object[] newArray(int) -> newArray
    67:67:androidx.fragment.app.FragmentManagerState[] newArray(int) -> newArray
androidx.fragment.app.FragmentManagerViewModel -> androidx.fragment.app.FragmentManagerViewModel:
    40:40:void <clinit>() -> <clinit>
    82:84:void <init>(boolean) -> <init>
    99:99:boolean addRetainedFragment(androidx.fragment.app.Fragment) -> addRetainedFragment
    148:163:void clearNonConfigState(androidx.fragment.app.Fragment) -> clearNonConfigState
    230:231:boolean equals(java.lang.Object) -> equals
    129:134:androidx.fragment.app.FragmentManagerViewModel getChildNonConfig(androidx.fragment.app.Fragment) -> getChildNonConfig
    52:54:androidx.fragment.app.FragmentManagerViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    104:104:java.util.Collection getRetainedFragments() -> getRetainedFragments
    205:222:androidx.fragment.app.FragmentManagerNonConfig getSnapshot() -> getSnapshot
    139:144:androidx.lifecycle.ViewModelStore getViewModelStore(androidx.fragment.app.Fragment) -> getViewModelStore
    242:245:int hashCode() -> hashCode
    95:95:boolean isCleared() -> isCleared
    88:92:void onCleared() -> onCleared
    124:124:boolean removeRetainedFragment(androidx.fragment.app.Fragment) -> removeRetainedFragment
    172:196:void restoreFromSnapshot(androidx.fragment.app.FragmentManagerNonConfig) -> restoreFromSnapshot
    108:119:boolean shouldDestroy(androidx.fragment.app.Fragment) -> shouldDestroy
    251:278:java.lang.String toString() -> toString
androidx.fragment.app.FragmentManagerViewModel$1 -> androidx.fragment.app.FragmentManagerViewModel$1:
    40:40:void <init>() -> <init>
    45:46:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.fragment.app.FragmentPagerAdapter -> androidx.fragment.app.FragmentPagerAdapter:
    118:119:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    134:137:void <init>(androidx.fragment.app.FragmentManager,int) -> <init>
    189:200:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    234:238:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    265:265:long getItemId(int) -> getItemId
    157:184:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    242:242:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    269:269:java.lang.String makeFragmentName(int,long) -> makeFragmentName
    253:253:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    248:248:android.os.Parcelable saveState() -> saveState
    205:230:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    147:148:void startUpdate(android.view.ViewGroup) -> startUpdate
androidx.fragment.app.FragmentState -> androidx.fragment.app.FragmentState:
    173:173:void <clinit>() -> <clinit>
    47:60:void <init>(androidx.fragment.app.Fragment) -> <init>
    62:76:void <init>(android.os.Parcel) -> <init>
    153:153:int describeContents() -> describeContents
    80:113:androidx.fragment.app.Fragment instantiate(java.lang.ClassLoader,androidx.fragment.app.FragmentFactory) -> instantiate
    119:148:java.lang.String toString() -> toString
    158:171:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentState$1 -> androidx.fragment.app.FragmentState$1:
    174:174:void <init>() -> <init>
    174:174:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    177:177:androidx.fragment.app.FragmentState createFromParcel(android.os.Parcel) -> createFromParcel
    174:174:java.lang.Object[] newArray(int) -> newArray
    182:182:androidx.fragment.app.FragmentState[] newArray(int) -> newArray
androidx.fragment.app.FragmentStatePagerAdapter -> androidx.fragment.app.FragmentStatePagerAdapter:
    124:125:void <init>(androidx.fragment.app.FragmentManager) -> <init>
    140:143:void <init>(androidx.fragment.app.FragmentManager,int) -> <init>
    206:224:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    258:262:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    167:201:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    266:266:boolean isViewFromObject(android.view.View,java.lang.Object) -> isViewFromObject
    294:322:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    272:289:android.os.Parcelable saveState() -> saveState
    229:254:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    153:154:void startUpdate(android.view.ViewGroup) -> startUpdate
androidx.fragment.app.FragmentTabHost -> androidx.fragment.app.FragmentTabHost:
    137:139:void <init>(android.content.Context) -> <init>
    148:150:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    270:289:void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> addTab
    402:428:androidx.fragment.app.FragmentTransaction doTabChanged(java.lang.String,androidx.fragment.app.FragmentTransaction) -> doTabChanged
    242:249:void ensureContent() -> ensureContent
    164:187:void ensureHierarchy(android.content.Context) -> ensureHierarchy
    433:439:androidx.fragment.app.FragmentTabHost$TabInfo getTabInfoForTag(java.lang.String) -> getTabInfoForTag
    153:159:void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> initFragmentTabHost
    299:334:void onAttachedToWindow() -> onAttachedToWindow
    344:346:void onDetachedFromWindow() -> onDetachedFromWindow
    371:378:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    357:360:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    388:397:void onTabChanged(java.lang.String) -> onTabChanged
    259:260:void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    196:196:void setup() -> setup
    209:214:void setup(android.content.Context,androidx.fragment.app.FragmentManager) -> setup
    226:239:void setup(android.content.Context,androidx.fragment.app.FragmentManager,int) -> setup
androidx.fragment.app.FragmentTabHost$DummyTabFactory -> androidx.fragment.app.FragmentTabHost$DummyTabFactory:
    76:78:void <init>(android.content.Context) -> <init>
    82:85:android.view.View createTabContent(java.lang.String) -> createTabContent
androidx.fragment.app.FragmentTabHost$SavedState -> androidx.fragment.app.FragmentTabHost$SavedState:
    114:114:void <clinit>() -> <clinit>
    93:94:void <init>(android.os.Parcelable) -> <init>
    97:99:void <init>(android.os.Parcel) -> <init>
    109:109:java.lang.String toString() -> toString
    103:105:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.fragment.app.FragmentTabHost$SavedState$1 -> androidx.fragment.app.FragmentTabHost$SavedState$1:
    115:115:void <init>() -> <init>
    115:115:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    118:118:androidx.fragment.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    115:115:java.lang.Object[] newArray(int) -> newArray
    123:123:androidx.fragment.app.FragmentTabHost$SavedState[] newArray(int) -> newArray
androidx.fragment.app.FragmentTabHost$TabInfo -> androidx.fragment.app.FragmentTabHost$TabInfo:
    66:70:void <init>(java.lang.String,java.lang.Class,android.os.Bundle) -> <init>
androidx.fragment.app.FragmentTransaction -> androidx.fragment.app.FragmentTransaction:
    48:108:void <init>() -> <init>
    125:126:androidx.fragment.app.FragmentTransaction add(androidx.fragment.app.Fragment,java.lang.String) -> add
    134:135:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment) -> add
    156:157:androidx.fragment.app.FragmentTransaction add(int,androidx.fragment.app.Fragment,java.lang.String) -> add
    113:118:void addOp(androidx.fragment.app.FragmentTransaction$Op) -> addOp
    448:468:androidx.fragment.app.FragmentTransaction addSharedElement(android.view.View,java.lang.String) -> addSharedElement
    505:506:androidx.fragment.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    306:308:androidx.fragment.app.FragmentTransaction attach(androidx.fragment.app.Fragment) -> attach
    289:291:androidx.fragment.app.FragmentTransaction detach(androidx.fragment.app.Fragment) -> detach
    532:533:androidx.fragment.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    161:165:void doAddOp(int,androidx.fragment.app.Fragment,java.lang.String,int) -> doAddOp
    255:257:androidx.fragment.app.FragmentTransaction hide(androidx.fragment.app.Fragment) -> hide
    522:522:boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    359:359:boolean isEmpty() -> isEmpty
    239:241:androidx.fragment.app.FragmentTransaction remove(androidx.fragment.app.Fragment) -> remove
    200:200:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment) -> replace
    222:223:androidx.fragment.app.FragmentTransaction replace(int,androidx.fragment.app.Fragment,java.lang.String) -> replace
    656:661:androidx.fragment.app.FragmentTransaction runOnCommit(java.lang.Runnable) -> runOnCommit
    630:630:androidx.fragment.app.FragmentTransaction setAllowOptimization(boolean) -> setAllowOptimization
    573:575:androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    585:587:androidx.fragment.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    548:550:androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    560:562:androidx.fragment.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    403:403:androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    427:431:androidx.fragment.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    350:351:androidx.fragment.app.FragmentTransaction setMaxLifecycle(androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> setMaxLifecycle
    329:331:androidx.fragment.app.FragmentTransaction setPrimaryNavigationFragment(androidx.fragment.app.Fragment) -> setPrimaryNavigationFragment
    620:621:androidx.fragment.app.FragmentTransaction setReorderingAllowed(boolean) -> setReorderingAllowed
    478:479:androidx.fragment.app.FragmentTransaction setTransition(int) -> setTransition
    488:489:androidx.fragment.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    271:273:androidx.fragment.app.FragmentTransaction show(androidx.fragment.app.Fragment) -> show
androidx.fragment.app.FragmentTransaction$Op -> androidx.fragment.app.FragmentTransaction$Op:
    72:73:void <init>() -> <init>
    75:80:void <init>(int,androidx.fragment.app.Fragment) -> <init>
    82:87:void <init>(int,androidx.fragment.app.Fragment,androidx.lifecycle.Lifecycle$State) -> <init>
androidx.fragment.app.FragmentTransition -> androidx.fragment.app.FragmentTransition:
    45:63:void <clinit>() -> <clinit>
    1265:1266:void <init>() -> <init>
    648:654:void addSharedElementsWithMatchingNames(java.util.ArrayList,androidx.collection.ArrayMap,java.util.Collection) -> addSharedElementsWithMatchingNames
    1125:1212:void addToFirstInLastOut(androidx.fragment.app.BackStackRecord,androidx.fragment.app.FragmentTransaction$Op,android.util.SparseArray,boolean,boolean) -> addToFirstInLastOut
    1077:1082:void calculateFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculateFragments
    163:193:androidx.collection.ArrayMap calculateNameOverrides(int,java.util.ArrayList,java.util.ArrayList,int,int) -> calculateNameOverrides
    1094:1102:void calculatePopFragments(androidx.fragment.app.BackStackRecord,android.util.SparseArray,boolean) -> calculatePopFragments
    980:997:void callSharedElementStartEnd(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,boolean) -> callSharedElementStartEnd
    471:476:boolean canHandleAll(androidx.fragment.app.FragmentTransitionImpl,java.util.List) -> canHandleAll
    840:844:androidx.collection.ArrayMap captureInSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureInSharedElements
    784:786:androidx.collection.ArrayMap captureOutSharedElements(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition) -> captureOutSharedElements
    425:465:androidx.fragment.app.FragmentTransitionImpl chooseImpl(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment) -> chooseImpl
    1003:1018:java.util.ArrayList configureEnteringExitingViews(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList,android.view.View) -> configureEnteringExitingViews
    691:695:java.lang.Object configureSharedElementsOrdered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsOrdered
    562:568:java.lang.Object configureSharedElementsReordered(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,android.view.View,androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,java.util.ArrayList,java.lang.Object,java.lang.Object) -> configureSharedElementsReordered
    312:369:void configureTransitionsOrdered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap) -> configureTransitionsOrdered
    214:269:void configureTransitionsReordered(androidx.fragment.app.FragmentManagerImpl,int,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.view.View,androidx.collection.ArrayMap) -> configureTransitionsReordered
    1222:1226:androidx.fragment.app.FragmentTransition$FragmentContainerTransition ensureContainer(androidx.fragment.app.FragmentTransition$FragmentContainerTransition,android.util.SparseArray,int) -> ensureContainer
    891:897:java.lang.String findKeyForValue(androidx.collection.ArrayMap,java.lang.String) -> findKeyForValue
    507:510:java.lang.Object getEnterTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getEnterTransition
    520:523:java.lang.Object getExitTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,boolean) -> getExitTransition
    913:922:android.view.View getInEpicenterView(androidx.collection.ArrayMap,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.lang.Object,boolean) -> getInEpicenterView
    493:494:java.lang.Object getSharedElementTransition(androidx.fragment.app.FragmentTransitionImpl,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean) -> getSharedElementTransition
    1042:1063:java.lang.Object mergeTransitions(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,java.lang.Object,androidx.fragment.app.Fragment,boolean) -> mergeTransitions
    279:292:void replaceHide(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,androidx.fragment.app.Fragment,java.util.ArrayList) -> replaceHide
    68:74:androidx.fragment.app.FragmentTransitionImpl resolveSupportImpl() -> resolveSupportImpl
    958:964:void retainValues(androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> retainValues
    394:417:void scheduleTargetChange(androidx.fragment.app.FragmentTransitionImpl,android.view.ViewGroup,androidx.fragment.app.Fragment,android.view.View,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleTargetChange
    937:949:void setOutEpicenter(androidx.fragment.app.FragmentTransitionImpl,java.lang.Object,java.lang.Object,androidx.collection.ArrayMap,boolean,androidx.fragment.app.BackStackRecord) -> setOutEpicenter
    1026:1033:void setViewVisibility(java.util.ArrayList,int) -> setViewVisibility
    107:143:void startTransitions(androidx.fragment.app.FragmentManagerImpl,java.util.ArrayList,java.util.ArrayList,int,int,boolean) -> startTransitions
    1105:1105:boolean supportsTransition() -> supportsTransition
androidx.fragment.app.FragmentTransition$1 -> androidx.fragment.app.FragmentTransition$1:
    285:285:void <init>(java.util.ArrayList) -> <init>
    288:289:void run() -> run
androidx.fragment.app.FragmentTransition$2 -> androidx.fragment.app.FragmentTransition$2:
    394:394:void <init>(java.lang.Object,androidx.fragment.app.FragmentTransitionImpl,android.view.View,androidx.fragment.app.Fragment,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.lang.Object) -> <init>
    397:415:void run() -> run
androidx.fragment.app.FragmentTransition$3 -> androidx.fragment.app.FragmentTransition$3:
    624:624:void <init>(androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,androidx.collection.ArrayMap,android.view.View,androidx.fragment.app.FragmentTransitionImpl,android.graphics.Rect) -> <init>
    627:632:void run() -> run
androidx.fragment.app.FragmentTransition$4 -> androidx.fragment.app.FragmentTransition$4:
    736:736:void <init>(androidx.fragment.app.FragmentTransitionImpl,androidx.collection.ArrayMap,java.lang.Object,androidx.fragment.app.FragmentTransition$FragmentContainerTransition,java.util.ArrayList,android.view.View,androidx.fragment.app.Fragment,androidx.fragment.app.Fragment,boolean,java.util.ArrayList,java.lang.Object,android.graphics.Rect) -> <init>
    739:761:void run() -> run
androidx.fragment.app.FragmentTransition$FragmentContainerTransition -> androidx.fragment.app.FragmentTransition$FragmentContainerTransition:
    1233:1233:void <init>() -> <init>
androidx.fragment.app.FragmentTransitionCompat21 -> androidx.fragment.app.FragmentTransitionCompat21:
    32:32:void <init>() -> <init>
    288:292:void addTarget(java.lang.Object,android.view.View) -> addTarget
    92:113:void addTargets(java.lang.Object,java.util.ArrayList) -> addTargets
    206:207:void beginDelayedTransition(android.view.ViewGroup,java.lang.Object) -> beginDelayedTransition
    36:36:boolean canHandle(java.lang.Object) -> canHandle
    41:45:java.lang.Object cloneTransition(java.lang.Object) -> cloneTransition
    119:119:boolean hasSimpleTarget(android.transition.Transition) -> hasSimpleTarget
    178:200:java.lang.Object mergeTransitionsInSequence(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsInSequence
    127:137:java.lang.Object mergeTransitionsTogether(java.lang.Object,java.lang.Object,java.lang.Object) -> mergeTransitionsTogether
    296:300:void removeTarget(java.lang.Object,android.view.View) -> removeTarget
    262:284:void replaceTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> replaceTargets
    143:171:void scheduleHideFragmentView(java.lang.Object,android.view.View,java.util.ArrayList) -> scheduleHideFragmentView
    214:246:void scheduleRemoveTargets(java.lang.Object,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> scheduleRemoveTargets
    76:88:void setEpicenter(java.lang.Object,android.view.View) -> setEpicenter
    304:316:void setEpicenter(java.lang.Object,android.graphics.Rect) -> setEpicenter
    61:72:void setSharedElementTargets(java.lang.Object,android.view.View,java.util.ArrayList) -> setSharedElementTargets
    251:257:void swapSharedElementTargets(java.lang.Object,java.util.ArrayList,java.util.ArrayList) -> swapSharedElementTargets
    50:55:java.lang.Object wrapTransitionInSet(java.lang.Object) -> wrapTransitionInSet
androidx.fragment.app.FragmentTransitionCompat21$1 -> androidx.fragment.app.FragmentTransitionCompat21$1:
    81:81:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    84:84:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionCompat21$2 -> androidx.fragment.app.FragmentTransitionCompat21$2:
    144:144:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.view.View,java.util.ArrayList) -> <init>
    161:161:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    151:157:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    165:165:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    169:169:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    147:147:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$3 -> androidx.fragment.app.FragmentTransitionCompat21$3:
    215:215:void <init>(androidx.fragment.app.FragmentTransitionCompat21,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList,java.lang.Object,java.util.ArrayList) -> <init>
    236:236:void onTransitionCancel(android.transition.Transition) -> onTransitionCancel
    231:232:void onTransitionEnd(android.transition.Transition) -> onTransitionEnd
    240:240:void onTransitionPause(android.transition.Transition) -> onTransitionPause
    244:244:void onTransitionResume(android.transition.Transition) -> onTransitionResume
    218:227:void onTransitionStart(android.transition.Transition) -> onTransitionStart
androidx.fragment.app.FragmentTransitionCompat21$4 -> androidx.fragment.app.FragmentTransitionCompat21$4:
    306:306:void <init>(androidx.fragment.app.FragmentTransitionCompat21,android.graphics.Rect) -> <init>
    309:310:android.graphics.Rect onGetEpicenter(android.transition.Transition) -> onGetEpicenter
androidx.fragment.app.FragmentTransitionImpl -> androidx.fragment.app.FragmentTransitionImpl:
    42:42:void <init>() -> <init>
    315:333:void bfsAddViewChildren(java.util.List,android.view.View) -> bfsAddViewChildren
    193:209:void captureTransitioningViews(java.util.ArrayList,android.view.View) -> captureTransitioningViews
    340:345:boolean containedBeforeIndex(java.util.List,android.view.View,int) -> containedBeforeIndex
    360:365:java.lang.String findKeyForValue(java.util.Map,java.lang.String) -> findKeyForValue
    216:230:void findNamedViews(java.util.Map,android.view.View) -> findNamedViews
    79:82:void getBoundsOnScreen(android.view.View,android.graphics.Rect) -> getBoundsOnScreen
    352:352:boolean isNullOrEmpty(java.util.List) -> isNullOrEmpty
    134:141:java.util.ArrayList prepareSetNameOverridesReordered(java.util.ArrayList) -> prepareSetNameOverridesReordered
    296:308:void scheduleNameReset(android.view.ViewGroup,java.util.ArrayList,java.util.Map) -> scheduleNameReset
    237:251:void setNameOverridesOrdered(android.view.View,java.util.ArrayList,java.util.Map) -> setNameOverridesOrdered
    153:182:void setNameOverridesReordered(android.view.View,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.Map) -> setNameOverridesReordered
androidx.fragment.app.FragmentTransitionImpl$1 -> androidx.fragment.app.FragmentTransitionImpl$1:
    173:173:void <init>(androidx.fragment.app.FragmentTransitionImpl,int,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList,java.util.ArrayList) -> <init>
    176:180:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$2 -> androidx.fragment.app.FragmentTransitionImpl$2:
    237:237:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    240:249:void run() -> run
androidx.fragment.app.FragmentTransitionImpl$3 -> androidx.fragment.app.FragmentTransitionImpl$3:
    296:296:void <init>(androidx.fragment.app.FragmentTransitionImpl,java.util.ArrayList,java.util.Map) -> <init>
    299:306:void run() -> run
androidx.fragment.app.FragmentViewLifecycleOwner -> androidx.fragment.app.FragmentViewLifecycleOwner:
    24:25:void <init>() -> <init>
    46:47:androidx.lifecycle.Lifecycle getLifecycle() -> getLifecycle
    51:52:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    31:34:void initialize() -> initialize
    40:40:boolean isInitialized() -> isInitialized
androidx.fragment.app.ListFragment -> androidx.fragment.app.ListFragment:
    76:77:void <init>() -> <init>
    349:354:void ensureList() -> ensureList
    329:329:android.widget.ListAdapter getListAdapter() -> getListAdapter
    229:230:android.widget.ListView getListView() -> getListView
    220:221:long getSelectedItemId() -> getSelectedItemId
    212:213:int getSelectedItemPosition() -> getSelectedItemPosition
    97:142:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    159:165:void onDestroyView() -> onDestroyView
    179:179:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    150:152:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    340:342:android.widget.ListAdapter requireListAdapter() -> requireListAdapter
    239:241:void setEmptyText(java.lang.CharSequence) -> setEmptyText
    185:195:void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    265:266:void setListShown(boolean) -> setListShown
    287:289:void setListShown(boolean,boolean) -> setListShown
    273:274:void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    204:206:void setSelection(int) -> setSelection
androidx.fragment.app.ListFragment$1 -> androidx.fragment.app.ListFragment$1:
    52:52:void <init>(androidx.fragment.app.ListFragment) -> <init>
    55:56:void run() -> run
androidx.fragment.app.ListFragment$2 -> androidx.fragment.app.ListFragment$2:
    60:60:void <init>(androidx.fragment.app.ListFragment) -> <init>
    63:64:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
androidx.fragment.app.SuperNotCalledException -> androidx.fragment.app.SuperNotCalledException:
    23:24:void <init>(java.lang.String) -> <init>
androidx.interpolator.view.animation.FastOutLinearInInterpolator -> androidx.interpolator.view.animation.FastOutLinearInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.FastOutSlowInInterpolator -> androidx.interpolator.view.animation.FastOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LinearOutSlowInInterpolator -> androidx.interpolator.view.animation.LinearOutSlowInInterpolator:
    34:34:void <clinit>() -> <clinit>
    67:68:void <init>() -> <init>
    28:28:float getInterpolation(float) -> getInterpolation
androidx.interpolator.view.animation.LookupTableInterpolator -> androidx.interpolator.view.animation.LookupTableInterpolator:
    30:33:void <init>(float[]) -> <init>
    37:54:float getInterpolation(float) -> getInterpolation
androidx.lifecycle.AndroidViewModel -> androidx.lifecycle.AndroidViewModel:
    34:36:void <init>(android.app.Application) -> <init>
    45:45:android.app.Application getApplication() -> getApplication
androidx.lifecycle.ClassesInfoCache -> androidx.lifecycle.ClassesInfoCache:
    35:35:void <clinit>() -> <clinit>
    33:42:void <init>() -> <init>
    105:161:androidx.lifecycle.ClassesInfoCache$CallbackInfo createInfo(java.lang.Class,java.lang.reflect.Method[]) -> createInfo
    70:72:java.lang.reflect.Method[] getDeclaredMethods(java.lang.Class) -> getDeclaredMethods
    81:86:androidx.lifecycle.ClassesInfoCache$CallbackInfo getInfo(java.lang.Class) -> getInfo
    45:65:boolean hasLifecycleMethods(java.lang.Class) -> hasLifecycleMethods
    91:102:void verifyAndPutHandler(java.util.Map,androidx.lifecycle.ClassesInfoCache$MethodReference,androidx.lifecycle.Lifecycle$Event,java.lang.Class) -> verifyAndPutHandler
androidx.lifecycle.ClassesInfoCache$CallbackInfo -> androidx.lifecycle.ClassesInfoCache$CallbackInfo:
    169:181:void <init>(java.util.Map) -> <init>
    185:188:void invokeCallbacks(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallbacks
    192:197:void invokeMethodsForEvent(java.util.List,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeMethodsForEvent
androidx.lifecycle.ClassesInfoCache$MethodReference -> androidx.lifecycle.ClassesInfoCache$MethodReference:
    205:209:void <init>(int,java.lang.reflect.Method) -> <init>
    234:238:boolean equals(java.lang.Object) -> equals
    247:247:int hashCode() -> hashCode
    214:226:void invokeCallback(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event,java.lang.Object) -> invokeCallback
androidx.lifecycle.CompositeGeneratedAdaptersObserver -> androidx.lifecycle.CompositeGeneratedAdaptersObserver:
    24:26:void <init>(androidx.lifecycle.GeneratedAdapter[]) -> <init>
    30:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ComputableLiveData -> androidx.lifecycle.ComputableLiveData:
    56:57:void <init>() -> <init>
    65:73:void <init>(java.util.concurrent.Executor) -> <init>
    83:83:androidx.lifecycle.LiveData getLiveData() -> getLiveData
    143:144:void invalidate() -> invalidate
androidx.lifecycle.ComputableLiveData$1 -> androidx.lifecycle.ComputableLiveData$1:
    67:67:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    70:71:void onActive() -> onActive
androidx.lifecycle.ComputableLiveData$2 -> androidx.lifecycle.ComputableLiveData$2:
    87:87:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    93:119:void run() -> run
androidx.lifecycle.ComputableLiveData$3 -> androidx.lifecycle.ComputableLiveData$3:
    124:124:void <init>(androidx.lifecycle.ComputableLiveData) -> <init>
    128:134:void run() -> run
androidx.lifecycle.FullLifecycleObserverAdapter -> androidx.lifecycle.FullLifecycleObserverAdapter:
    25:28:void <init>(androidx.lifecycle.FullLifecycleObserver,androidx.lifecycle.LifecycleEventObserver) -> <init>
    32:57:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.FullLifecycleObserverAdapter$1 -> androidx.lifecycle.FullLifecycleObserverAdapter$1:
    32:32:void <clinit>() -> <clinit>
androidx.lifecycle.Lifecycle -> androidx.lifecycle.Lifecycle:
    78:85:void <init>() -> <init>
androidx.lifecycle.Lifecycle$Event -> androidx.lifecycle.Lifecycle$Event:
    132:127:void <clinit>() -> <clinit>
    128:128:void <init>(java.lang.String,int) -> <init>
    127:127:androidx.lifecycle.Lifecycle$Event valueOf(java.lang.String) -> valueOf
    127:127:androidx.lifecycle.Lifecycle$Event[] values() -> values
androidx.lifecycle.Lifecycle$State -> androidx.lifecycle.Lifecycle$State:
    170:163:void <clinit>() -> <clinit>
    164:164:void <init>(java.lang.String,int) -> <init>
    212:212:boolean isAtLeast(androidx.lifecycle.Lifecycle$State) -> isAtLeast
    163:163:androidx.lifecycle.Lifecycle$State valueOf(java.lang.String) -> valueOf
    163:163:androidx.lifecycle.Lifecycle$State[] values() -> values
androidx.lifecycle.LifecycleRegistry -> androidx.lifecycle.LifecycleRegistry:
    94:97:void <init>(androidx.lifecycle.LifecycleOwner) -> <init>
    169:199:void addObserver(androidx.lifecycle.LifecycleObserver) -> addObserver
    307:320:void backwardPass(androidx.lifecycle.LifecycleOwner) -> backwardPass
    159:164:androidx.lifecycle.Lifecycle$State calculateTargetState(androidx.lifecycle.LifecycleObserver) -> calculateTargetState
    261:271:androidx.lifecycle.Lifecycle$Event downEvent(androidx.lifecycle.Lifecycle$State) -> downEvent
    292:304:void forwardPass(androidx.lifecycle.LifecycleOwner) -> forwardPass
    239:239:androidx.lifecycle.Lifecycle$State getCurrentState() -> getCurrentState
    233:233:int getObserverCount() -> getObserverCount
    243:246:androidx.lifecycle.Lifecycle$State getStateAfter(androidx.lifecycle.Lifecycle$Event) -> getStateAfter
    130:132:void handleLifecycleEvent(androidx.lifecycle.Lifecycle$Event) -> handleLifecycleEvent
    150:155:boolean isSynced() -> isSynced
    108:109:void markState(androidx.lifecycle.Lifecycle$State) -> markState
    346:346:androidx.lifecycle.Lifecycle$State min(androidx.lifecycle.Lifecycle$State,androidx.lifecycle.Lifecycle$State) -> min
    135:142:void moveToState(androidx.lifecycle.Lifecycle$State) -> moveToState
    202:203:void popParentState() -> popParentState
    206:207:void pushParentState(androidx.lifecycle.Lifecycle$State) -> pushParentState
    223:224:void removeObserver(androidx.lifecycle.LifecycleObserver) -> removeObserver
    118:119:void setCurrentState(androidx.lifecycle.Lifecycle$State) -> setCurrentState
    325:327:void sync() -> sync
    277:280:androidx.lifecycle.Lifecycle$Event upEvent(androidx.lifecycle.Lifecycle$State) -> upEvent
androidx.lifecycle.LifecycleRegistry$1 -> androidx.lifecycle.LifecycleRegistry$1:
    261:243:void <clinit>() -> <clinit>
androidx.lifecycle.LifecycleRegistry$ObserverWithState -> androidx.lifecycle.LifecycleRegistry$ObserverWithState:
    353:356:void <init>(androidx.lifecycle.LifecycleObserver,androidx.lifecycle.Lifecycle$State) -> <init>
    359:363:void dispatchEvent(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> dispatchEvent
androidx.lifecycle.Lifecycling -> androidx.lifecycle.Lifecycling:
    42:43:void <clinit>() -> <clinit>
    208:209:void <init>() -> <init>
    104:106:androidx.lifecycle.GeneratedAdapter createGeneratedAdapter(java.lang.reflect.Constructor,java.lang.Object) -> createGeneratedAdapter
    117:133:java.lang.reflect.Constructor generatedConstructor(java.lang.Class) -> generatedConstructor
    205:205:java.lang.String getAdapterName(java.lang.String) -> getAdapterName
    55:56:androidx.lifecycle.GenericLifecycleObserver getCallback(java.lang.Object) -> getCallback
    141:147:int getObserverConstructorType(java.lang.Class) -> getObserverConstructorType
    198:198:boolean isLifecycleParent(java.lang.Class) -> isLifecycleParent
    67:97:androidx.lifecycle.LifecycleEventObserver lifecycleEventObserver(java.lang.Object) -> lifecycleEventObserver
    152:194:int resolveObserverCallbackType(java.lang.Class) -> resolveObserverCallbackType
androidx.lifecycle.Lifecycling$1 -> androidx.lifecycle.Lifecycling$1:
    56:56:void <init>(androidx.lifecycle.LifecycleEventObserver) -> <init>
    60:61:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.LiveData -> androidx.lifecycle.LiveData:
    64:64:void <clinit>() -> <clinit>
    59:429:void <init>() -> <init>
    442:443:void assertMainThread(java.lang.String) -> assertMainThread
    96:114:void considerNotify(androidx.lifecycle.LiveData$ObserverWrapper) -> considerNotify
    118:137:void dispatchingValue(androidx.lifecycle.LiveData$ObserverWrapper) -> dispatchingValue
    301:306:java.lang.Object getValue() -> getValue
    310:310:int getVersion() -> getVersion
    353:353:boolean hasActiveObservers() -> hasActiveObservers
    343:343:boolean hasObservers() -> hasObservers
    171:186:void observe(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> observe
    204:215:void observeForever(androidx.lifecycle.Observer) -> observeForever
    321:321:void onActive() -> onActive
    334:334:void onInactive() -> onInactive
    266:269:void postValue(java.lang.Object) -> postValue
    224:231:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    241:247:void removeObservers(androidx.lifecycle.LifecycleOwner) -> removeObservers
    286:290:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.LiveData$1 -> androidx.lifecycle.LiveData$1:
    82:82:void <init>(androidx.lifecycle.LiveData) -> <init>
    86:89:void run() -> run
androidx.lifecycle.LiveData$AlwaysActiveObserver -> androidx.lifecycle.LiveData$AlwaysActiveObserver:
    431:433:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    437:437:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$LifecycleBoundObserver -> androidx.lifecycle.LiveData$LifecycleBoundObserver:
    360:363:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Observer) -> <init>
    386:387:void detachObserver() -> detachObserver
    381:381:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
    372:377:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    367:367:boolean shouldBeActive() -> shouldBeActive
androidx.lifecycle.LiveData$ObserverWrapper -> androidx.lifecycle.LiveData$ObserverWrapper:
    395:397:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    409:426:void activeStateChanged(boolean) -> activeStateChanged
    406:406:void detachObserver() -> detachObserver
    402:402:boolean isAttachedTo(androidx.lifecycle.LifecycleOwner) -> isAttachedTo
androidx.lifecycle.MediatorLiveData -> androidx.lifecycle.MediatorLiveData:
    69:130:void <init>() -> <init>
    86:98:void addSource(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> addSource
    117:120:void onActive() -> onActive
    125:128:void onInactive() -> onInactive
    108:112:void removeSource(androidx.lifecycle.LiveData) -> removeSource
androidx.lifecycle.MediatorLiveData$Source -> androidx.lifecycle.MediatorLiveData$Source:
    135:138:void <init>(androidx.lifecycle.LiveData,androidx.lifecycle.Observer) -> <init>
    150:154:void onChanged(java.lang.Object) -> onChanged
    141:142:void plug() -> plug
    145:146:void unplug() -> unplug
androidx.lifecycle.MethodCallsLogger -> androidx.lifecycle.MethodCallsLogger:
    28:29:void <init>() -> <init>
    36:40:boolean approveCall(java.lang.String,int) -> approveCall
androidx.lifecycle.MutableLiveData -> androidx.lifecycle.MutableLiveData:
    25:25:void <init>() -> <init>
    28:29:void postValue(java.lang.Object) -> postValue
    33:34:void setValue(java.lang.Object) -> setValue
androidx.lifecycle.ReflectiveGenericLifecycleObserver -> androidx.lifecycle.ReflectiveGenericLifecycleObserver:
    29:32:void <init>(java.lang.Object) -> <init>
    36:37:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.ReportFragment -> androidx.lifecycle.ReportFragment:
    32:32:void <init>() -> <init>
    114:126:void dispatch(androidx.lifecycle.Lifecycle$Event) -> dispatch
    55:58:void dispatchCreate(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchCreate
    67:70:void dispatchResume(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchResume
    61:64:void dispatchStart(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> dispatchStart
    48:48:androidx.lifecycle.ReportFragment get(android.app.Activity) -> get
    39:45:void injectIfNeededIn(android.app.Activity) -> injectIfNeededIn
    74:77:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    107:111:void onDestroy() -> onDestroy
    95:97:void onPause() -> onPause
    88:91:void onResume() -> onResume
    81:84:void onStart() -> onStart
    101:103:void onStop() -> onStop
    129:130:void setProcessListener(androidx.lifecycle.ReportFragment$ActivityInitializationListener) -> setProcessListener
androidx.lifecycle.SingleGeneratedAdapterObserver -> androidx.lifecycle.SingleGeneratedAdapterObserver:
    23:25:void <init>(androidx.lifecycle.GeneratedAdapter) -> <init>
    29:31:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.lifecycle.Transformations -> androidx.lifecycle.Transformations:
    35:36:void <init>() -> <init>
    71:78:androidx.lifecycle.LiveData map(androidx.lifecycle.LiveData,androidx.arch.core.util.Function) -> map
    135:159:androidx.lifecycle.LiveData switchMap(androidx.lifecycle.LiveData,androidx.arch.core.util.Function) -> switchMap
androidx.lifecycle.Transformations$1 -> androidx.lifecycle.Transformations$1:
    72:72:void <init>(androidx.lifecycle.MediatorLiveData,androidx.arch.core.util.Function) -> <init>
    75:76:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.Transformations$2 -> androidx.lifecycle.Transformations$2:
    136:136:void <init>(androidx.arch.core.util.Function,androidx.lifecycle.MediatorLiveData) -> <init>
    141:157:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.Transformations$2$1 -> androidx.lifecycle.Transformations$2$1:
    150:150:void <init>(androidx.lifecycle.Transformations$2) -> <init>
    153:154:void onChanged(java.lang.Object) -> onChanged
androidx.lifecycle.ViewModel -> androidx.lifecycle.ViewModel:
    108:112:void <init>() -> <init>
    126:140:void clear() -> clear
    185:192:void closeWithRuntimeException(java.lang.Object) -> closeWithRuntimeException
    179:181:java.lang.Object getTag(java.lang.String) -> getTag
    122:122:void onCleared() -> onCleared
    156:162:java.lang.Object setTagIfAbsent(java.lang.String,java.lang.Object) -> setTagIfAbsent
androidx.lifecycle.ViewModelProvider -> androidx.lifecycle.ViewModelProvider:
    94:95:void <init>(androidx.lifecycle.ViewModelStoreOwner,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    105:108:void <init>(androidx.lifecycle.ViewModelStore,androidx.lifecycle.ViewModelProvider$Factory) -> <init>
    126:128:androidx.lifecycle.ViewModel get(java.lang.Class) -> get
    150:168:androidx.lifecycle.ViewModel get(java.lang.String,java.lang.Class) -> get
androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory -> androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory:
    220:222:void <init>(android.app.Application) -> <init>
    227:241:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
    207:210:androidx.lifecycle.ViewModelProvider$AndroidViewModelFactory getInstance(android.app.Application) -> getInstance
androidx.lifecycle.ViewModelProvider$KeyedFactory -> androidx.lifecycle.ViewModelProvider$KeyedFactory:
    60:60:void <init>() -> <init>
    76:76:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelProvider$NewInstanceFactory -> androidx.lifecycle.ViewModelProvider$NewInstanceFactory:
    174:174:void <init>() -> <init>
    182:184:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.lifecycle.ViewModelStore -> androidx.lifecycle.ViewModelStore:
    38:40:void <init>() -> <init>
    61:65:void clear() -> clear
    50:50:androidx.lifecycle.ViewModel get(java.lang.String) -> get
    54:54:java.util.Set keys() -> keys
    43:47:void put(java.lang.String,androidx.lifecycle.ViewModel) -> put
androidx.loader.app.LoaderManager -> androidx.loader.app.LoaderManager:
    40:44:void <init>() -> <init>
    235:236:void enableDebugLogging(boolean) -> enableDebugLogging
    128:128:androidx.loader.app.LoaderManager getInstance(androidx.lifecycle.LifecycleOwner) -> getInstance
    242:242:boolean hasRunningLoaders() -> hasRunningLoaders
androidx.loader.app.LoaderManagerImpl -> androidx.loader.app.LoaderManagerImpl:
    42:42:void <clinit>() -> <clinit>
    371:374:void <init>(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.ViewModelStore) -> <init>
    382:398:androidx.loader.content.Loader createAndInstallLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks,androidx.loader.content.Loader) -> createAndInstallLoader
    453:454:void destroyLoader(int) -> destroyLoader
    498:499:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    471:472:androidx.loader.content.Loader getLoader(int) -> getLoader
    503:503:boolean hasRunningLoaders() -> hasRunningLoaders
    408:409:androidx.loader.content.Loader initLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks) -> initLoader
    481:482:void markForRedelivery() -> markForRedelivery
    433:434:androidx.loader.content.Loader restartLoader(int,android.os.Bundle,androidx.loader.app.LoaderManager$LoaderCallbacks) -> restartLoader
    486:492:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderInfo -> androidx.loader.app.LoaderManagerImpl$LoaderInfo:
    61:67:void <init>(int,android.os.Bundle,androidx.loader.content.Loader,androidx.loader.content.Loader) -> <init>
    149:167:androidx.loader.content.Loader destroy(boolean) -> destroy
    212:224:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    71:71:androidx.loader.content.Loader getLoader() -> getLoader
    125:129:boolean isCallbackWaitingForData() -> isCallbackWaitingForData
    111:121:void markForRedelivery() -> markForRedelivery
    76:78:void onActive() -> onActive
    82:84:void onInactive() -> onInactive
    172:185:void onLoadComplete(androidx.loader.content.Loader,java.lang.Object) -> onLoadComplete
    134:138:void removeObserver(androidx.lifecycle.Observer) -> removeObserver
    98:107:androidx.loader.content.Loader setCallback(androidx.lifecycle.LifecycleOwner,androidx.loader.app.LoaderManager$LoaderCallbacks) -> setCallback
    189:195:void setValue(java.lang.Object) -> setValue
    199:207:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderObserver -> androidx.loader.app.LoaderManagerImpl$LoaderObserver:
    239:242:void <init>(androidx.loader.content.Loader,androidx.loader.app.LoaderManager$LoaderCallbacks) -> <init>
    272:274:void dump(java.lang.String,java.io.PrintWriter) -> dump
    255:255:boolean hasDeliveredData() -> hasDeliveredData
    246:252:void onChanged(java.lang.Object) -> onChanged
    260:264:void reset() -> reset
    268:268:java.lang.String toString() -> toString
androidx.loader.app.LoaderManagerImpl$LoaderViewModel -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel:
    281:281:void <clinit>() -> <clinit>
    280:296:void <init>() -> <init>
    354:364:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    307:308:void finishCreatingLoader() -> finishCreatingLoader
    292:292:androidx.loader.app.LoaderManagerImpl$LoaderViewModel getInstance(androidx.lifecycle.ViewModelStore) -> getInstance
    316:316:androidx.loader.app.LoaderManagerImpl$LoaderInfo getLoader(int) -> getLoader
    324:331:boolean hasRunningLoaders() -> hasRunningLoaders
    303:303:boolean isCreatingLoader() -> isCreatingLoader
    335:340:void markForRedelivery() -> markForRedelivery
    344:351:void onCleared() -> onCleared
    311:312:void putLoader(int,androidx.loader.app.LoaderManagerImpl$LoaderInfo) -> putLoader
    320:321:void removeLoader(int) -> removeLoader
    299:300:void startCreatingLoader() -> startCreatingLoader
androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1 -> androidx.loader.app.LoaderManagerImpl$LoaderViewModel$1:
    281:281:void <init>() -> <init>
    286:286:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
androidx.loader.content.AsyncTaskLoader -> androidx.loader.content.AsyncTaskLoader:
    128:129:void <init>(android.content.Context) -> <init>
    132:134:void <init>(android.content.Context,java.util.concurrent.Executor) -> <init>
    322:322:void cancelLoadInBackground() -> cancelLoadInBackground
    233:243:void dispatchOnCancelled(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    246:261:void dispatchOnLoadComplete(androidx.loader.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    356:373:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    210:230:void executePendingTask() -> executePendingTask
    332:332:boolean isLoadInBackgroundCanceled() -> isLoadInBackgroundCanceled
    162:196:boolean onCancelLoad() -> onCancelLoad
    207:207:void onCanceled(java.lang.Object) -> onCanceled
    152:157:void onForceLoad() -> onForceLoad
    307:307:java.lang.Object onLoadInBackground() -> onLoadInBackground
    144:148:void setUpdateThrottle(long) -> setUpdateThrottle
    347:351:void waitForLoader() -> waitForLoader
androidx.loader.content.AsyncTaskLoader$LoadTask -> androidx.loader.content.AsyncTaskLoader$LoadTask:
    48:49:void <init>(androidx.loader.content.AsyncTaskLoader) -> <init>
    48:48:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
    60:71:java.lang.Object doInBackground(java.lang.Void[]) -> doInBackground
    94:96:void onCancelled(java.lang.Object) -> onCancelled
    83:85:void onPostExecute(java.lang.Object) -> onPostExecute
    104:106:void run() -> run
    111:115:void waitForLoader() -> waitForLoader
androidx.loader.content.CursorLoader -> androidx.loader.content.CursorLoader:
    123:125:void <init>(android.content.Context) -> <init>
    136:143:void <init>(android.content.Context,android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> <init>
    86:92:void cancelLoadInBackground() -> cancelLoadInBackground
    41:41:void deliverResult(java.lang.Object) -> deliverResult
    98:115:void deliverResult(android.database.Cursor) -> deliverResult
    239:249:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    202:202:java.lang.String[] getProjection() -> getProjection
    211:211:java.lang.String getSelection() -> getSelection
    220:220:java.lang.String[] getSelectionArgs() -> getSelectionArgs
    229:229:java.lang.String getSortOrder() -> getSortOrder
    193:193:android.net.Uri getUri() -> getUri
    41:41:java.lang.Object loadInBackground() -> loadInBackground
    56:61:android.database.Cursor loadInBackground() -> loadInBackground
    41:41:void onCanceled(java.lang.Object) -> onCanceled
    173:176:void onCanceled(android.database.Cursor) -> onCanceled
    180:189:void onReset() -> onReset
    154:160:void onStartLoading() -> onStartLoading
    168:169:void onStopLoading() -> onStopLoading
    206:207:void setProjection(java.lang.String[]) -> setProjection
    215:216:void setSelection(java.lang.String) -> setSelection
    224:225:void setSelectionArgs(java.lang.String[]) -> setSelectionArgs
    233:234:void setSortOrder(java.lang.String) -> setSortOrder
    197:198:void setUri(android.net.Uri) -> setUri
androidx.loader.content.Loader -> androidx.loader.content.Loader:
    118:120:void <init>(android.content.Context) -> <init>
    409:411:void abandon() -> abandon
    318:318:boolean cancelLoad() -> cancelLoad
    485:486:void commitContentChanged() -> commitContentChanged
    527:530:java.lang.String dataToString(java.lang.Object) -> dataToString
    144:147:void deliverCancellation() -> deliverCancellation
    131:134:void deliverResult(java.lang.Object) -> deliverResult
    555:566:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    347:348:void forceLoad() -> forceLoad
    154:154:android.content.Context getContext() -> getContext
    161:161:int getId() -> getId
    247:247:boolean isAbandoned() -> isAbandoned
    256:256:boolean isReset() -> isReset
    238:238:boolean isStarted() -> isStarted
    425:425:void onAbandon() -> onAbandon
    334:334:boolean onCancelLoad() -> onCancelLoad
    511:519:void onContentChanged() -> onContentChanged
    356:356:void onForceLoad() -> onForceLoad
    463:463:void onReset() -> onReset
    296:296:void onStartLoading() -> onStartLoading
    392:392:void onStopLoading() -> onStopLoading
    173:174:void registerListener(int,androidx.loader.content.Loader$OnLoadCompleteListener) -> registerListener
    207:208:void registerOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener) -> registerOnLoadCanceledListener
    447:453:void reset() -> reset
    496:499:void rollbackContentChanged() -> rollbackContentChanged
    282:286:void startLoading() -> startLoading
    380:382:void stopLoading() -> stopLoading
    471:474:boolean takeContentChanged() -> takeContentChanged
    535:540:java.lang.String toString() -> toString
    187:188:void unregisterListener(androidx.loader.content.Loader$OnLoadCompleteListener) -> unregisterListener
    223:224:void unregisterOnLoadCanceledListener(androidx.loader.content.Loader$OnLoadCanceledListener) -> unregisterOnLoadCanceledListener
androidx.loader.content.Loader$ForceLoadContentObserver -> androidx.loader.content.Loader$ForceLoadContentObserver:
    58:60:void <init>(androidx.loader.content.Loader) -> <init>
    64:64:boolean deliverSelfNotifications() -> deliverSelfNotifications
    69:70:void onChange(boolean) -> onChange
androidx.loader.content.ModernAsyncTask -> androidx.loader.content.ModernAsyncTask:
    60:84:void <clinit>() -> <clinit>
    132:173:void <init>() -> <init>
    332:333:boolean cancel(boolean) -> cancel
    398:398:androidx.loader.content.ModernAsyncTask execute(java.lang.Object[]) -> execute
    462:463:void execute(java.lang.Runnable) -> execute
    433:454:androidx.loader.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> executeOnExecutor
    487:493:void finish(java.lang.Object) -> finish
    348:348:java.lang.Object get() -> get
    368:368:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> get
    115:120:android.os.Handler getHandler() -> getHandler
    195:195:androidx.loader.content.ModernAsyncTask$Status getStatus() -> getStatus
    299:299:boolean isCancelled() -> isCancelled
    270:271:void onCancelled(java.lang.Object) -> onCancelled
    286:286:void onCancelled() -> onCancelled
    239:239:void onPostExecute(java.lang.Object) -> onPostExecute
    223:223:void onPreExecute() -> onPreExecute
    252:252:void onProgressUpdate(java.lang.Object[]) -> onProgressUpdate
    183:186:java.lang.Object postResult(java.lang.Object) -> postResult
    176:180:void postResultIfNotInvoked(java.lang.Object) -> postResultIfNotInvoked
    480:484:void publishProgress(java.lang.Object[]) -> publishProgress
    126:127:void setDefaultExecutor(java.util.concurrent.Executor) -> setDefaultExecutor
androidx.loader.content.ModernAsyncTask$1 -> androidx.loader.content.ModernAsyncTask$1:
    60:61:void <init>() -> <init>
    65:65:java.lang.Thread newThread(java.lang.Runnable) -> newThread
androidx.loader.content.ModernAsyncTask$2 -> androidx.loader.content.ModernAsyncTask$2:
    133:133:void <init>(androidx.loader.content.ModernAsyncTask) -> <init>
    136:147:java.lang.Object call() -> call
androidx.loader.content.ModernAsyncTask$3 -> androidx.loader.content.ModernAsyncTask$3:
    153:153:void <init>(androidx.loader.content.ModernAsyncTask,java.util.concurrent.Callable) -> <init>
    157:171:void done() -> done
androidx.loader.content.ModernAsyncTask$4 -> androidx.loader.content.ModernAsyncTask$4:
    434:434:void <clinit>() -> <clinit>
androidx.loader.content.ModernAsyncTask$AsyncTaskResult -> androidx.loader.content.ModernAsyncTask$AsyncTaskResult:
    528:531:void <init>(androidx.loader.content.ModernAsyncTask,java.lang.Object[]) -> <init>
androidx.loader.content.ModernAsyncTask$InternalHandler -> androidx.loader.content.ModernAsyncTask$InternalHandler:
    497:498:void <init>() -> <init>
    503:513:void handleMessage(android.os.Message) -> handleMessage
androidx.loader.content.ModernAsyncTask$Status -> androidx.loader.content.ModernAsyncTask$Status:
    103:99:void <clinit>() -> <clinit>
    99:99:void <init>(java.lang.String,int) -> <init>
    99:99:androidx.loader.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
    99:99:androidx.loader.content.ModernAsyncTask$Status[] values() -> values
androidx.loader.content.ModernAsyncTask$WorkerRunnable -> androidx.loader.content.ModernAsyncTask$WorkerRunnable:
    519:520:void <init>() -> <init>
androidx.recyclerview.widget.AdapterHelper -> androidx.recyclerview.widget.AdapterHelper:
    72:73:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback) -> <init>
    75:79:void <init>(androidx.recyclerview.widget.AdapterHelper$Callback,boolean) -> <init>
    82:83:androidx.recyclerview.widget.AdapterHelper addUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp[]) -> addUpdateOp
    432:433:void applyAdd(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyAdd
    130:131:void applyMove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyMove
    588:620:int applyPendingUpdatesToPosition(int) -> applyPendingUpdatesToPosition
    134:185:void applyRemove(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyRemove
    188:225:void applyUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> applyUpdate
    411:428:boolean canFindInPreLayout(int) -> canFindInPreLayout
    119:125:void consumePostponedUpdates() -> consumePostponedUpdates
    557:585:void consumeUpdatesInOnePass() -> consumeUpdatesInOnePass
    231:232:void dispatchAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchAndUpdateViewHolders
    315:327:void dispatchFirstPassAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp,int) -> dispatchFirstPassAndUpdateViewHolders
    468:468:int findPositionOffset(int) -> findPositionOffset
    472:497:int findPositionOffset(int,int) -> findPositionOffset
    464:464:boolean hasAnyUpdateTypes(int) -> hasAnyUpdateTypes
    460:460:boolean hasPendingUpdates() -> hasPendingUpdates
    624:624:boolean hasUpdates() -> hasUpdates
    727:736:androidx.recyclerview.widget.AdapterHelper$UpdateOp obtainUpdateOp(int,int,int,java.lang.Object) -> obtainUpdateOp
    504:509:boolean onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    516:521:boolean onItemRangeInserted(int,int) -> onItemRangeInserted
    540:544:boolean onItemRangeMoved(int,int,int) -> onItemRangeMoved
    528:533:boolean onItemRangeRemoved(int,int) -> onItemRangeRemoved
    439:457:void postponeAndUpdateViewHolders(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> postponeAndUpdateViewHolders
    93:116:void preProcess() -> preProcess
    741:745:void recycleUpdateOp(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> recycleUpdateOp
    748:753:void recycleUpdateOpsAndClearList(java.util.List) -> recycleUpdateOpsAndClearList
    87:90:void reset() -> reset
    330:407:int updatePositionWithPostponed(int,int) -> updatePositionWithPostponed
androidx.recyclerview.widget.AdapterHelper$UpdateOp -> androidx.recyclerview.widget.AdapterHelper$UpdateOp:
    651:656:void <init>(int,int,int,java.lang.Object) -> <init>
    659:661:java.lang.String cmdToString() -> cmdToString
    681:685:boolean equals(java.lang.Object) -> equals
    718:721:int hashCode() -> hashCode
    674:674:java.lang.String toString() -> toString
androidx.recyclerview.widget.AdapterListUpdateCallback -> androidx.recyclerview.widget.AdapterListUpdateCallback:
    35:37:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    60:61:void onChanged(int,int,java.lang.Object) -> onChanged
    42:43:void onInserted(int,int) -> onInserted
    54:55:void onMoved(int,int) -> onMoved
    48:49:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.AsyncDifferConfig -> androidx.recyclerview.widget.AsyncDifferConfig:
    47:51:void <init>(java.util.concurrent.Executor,java.util.concurrent.Executor,androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    64:64:java.util.concurrent.Executor getBackgroundThreadExecutor() -> getBackgroundThreadExecutor
    70:70:androidx.recyclerview.widget.DiffUtil$ItemCallback getDiffCallback() -> getDiffCallback
    58:58:java.util.concurrent.Executor getMainThreadExecutor() -> getMainThreadExecutor
androidx.recyclerview.widget.AsyncDifferConfig$Builder -> androidx.recyclerview.widget.AsyncDifferConfig$Builder:
    144:145:void <clinit>() -> <clinit>
    84:86:void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    129:137:androidx.recyclerview.widget.AsyncDifferConfig build() -> build
    118:119:androidx.recyclerview.widget.AsyncDifferConfig$Builder setBackgroundThreadExecutor(java.util.concurrent.Executor) -> setBackgroundThreadExecutor
    102:103:androidx.recyclerview.widget.AsyncDifferConfig$Builder setMainThreadExecutor(java.util.concurrent.Executor) -> setMainThreadExecutor
androidx.recyclerview.widget.AsyncListDiffer -> androidx.recyclerview.widget.AsyncListDiffer:
    131:131:void <clinit>() -> <clinit>
    162:164:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    178:186:void <init>(androidx.recyclerview.widget.ListUpdateCallback,androidx.recyclerview.widget.AsyncDifferConfig) -> <init>
    392:393:void addListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener) -> addListListener
    216:216:java.util.List getCurrentList() -> getCurrentList
    364:370:void latchList(java.util.List,androidx.recyclerview.widget.DiffUtil$DiffResult,java.lang.Runnable) -> latchList
    375:381:void onCurrentListChanged(java.util.List,java.lang.Runnable) -> onCurrentListChanged
    403:404:void removeListListener(androidx.recyclerview.widget.AsyncListDiffer$ListListener) -> removeListListener
    231:232:void submitList(java.util.List) -> submitList
    254:357:void submitList(java.util.List,java.lang.Runnable) -> submitList
androidx.recyclerview.widget.AsyncListDiffer$1 -> androidx.recyclerview.widget.AsyncListDiffer$1:
    289:289:void <init>(androidx.recyclerview.widget.AsyncListDiffer,java.util.List,java.util.List,int,java.lang.Runnable) -> <init>
    292:355:void run() -> run
androidx.recyclerview.widget.AsyncListDiffer$1$1 -> androidx.recyclerview.widget.AsyncListDiffer$1$1:
    292:292:void <init>(androidx.recyclerview.widget.AsyncListDiffer$1) -> <init>
    316:328:boolean areContentsTheSame(int,int) -> areContentsTheSame
    305:311:boolean areItemsTheSame(int,int) -> areItemsTheSame
    334:343:java.lang.Object getChangePayload(int,int) -> getChangePayload
    300:300:int getNewListSize() -> getNewListSize
    295:295:int getOldListSize() -> getOldListSize
androidx.recyclerview.widget.AsyncListDiffer$1$2 -> androidx.recyclerview.widget.AsyncListDiffer$1$2:
    347:347:void <init>(androidx.recyclerview.widget.AsyncListDiffer$1,androidx.recyclerview.widget.DiffUtil$DiffResult) -> <init>
    350:353:void run() -> run
androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor -> androidx.recyclerview.widget.AsyncListDiffer$MainThreadExecutor:
    123:123:void <init>() -> <init>
    126:127:void execute(java.lang.Runnable) -> execute
androidx.recyclerview.widget.AsyncListUtil -> androidx.recyclerview.widget.AsyncListUtil:
    91:104:void <init>(java.lang.Class,int,androidx.recyclerview.widget.AsyncListUtil$DataCallback,androidx.recyclerview.widget.AsyncListUtil$ViewCallback) -> <init>
    155:156:java.lang.Object getItem(int) -> getItem
    175:175:int getItemCount() -> getItemCount
    107:107:boolean isRefreshPending() -> isRefreshPending
    79:80:void log(java.lang.String,java.lang.Object[]) -> log
    119:124:void onRangeChanged() -> onRangeChanged
    133:135:void refresh() -> refresh
    179:181:void updateRange() -> updateRange
androidx.recyclerview.widget.AsyncListUtil$1 -> androidx.recyclerview.widget.AsyncListUtil$1:
    212:212:void <init>(androidx.recyclerview.widget.AsyncListUtil) -> <init>
    233:260:void addTile(int,androidx.recyclerview.widget.TileList$Tile) -> addTile
    289:289:boolean isRequestedGeneration(int) -> isRequestedGeneration
    282:286:void recycleAllTiles() -> recycleAllTiles
    264:276:void removeTile(int,int) -> removeTile
    218:229:void updateItemCount(int,int) -> updateItemCount
androidx.recyclerview.widget.AsyncListUtil$2 -> androidx.recyclerview.widget.AsyncListUtil$2:
    294:298:void <init>(androidx.recyclerview.widget.AsyncListUtil) -> <init>
    392:397:androidx.recyclerview.widget.TileList$Tile acquireTile() -> acquireTile
    405:410:void addTile(androidx.recyclerview.widget.TileList$Tile) -> addTile
    421:438:void flushTileCache(int) -> flushTileCache
    350:350:int getTileStart(int) -> getTileStart
    401:401:boolean isTileLoaded(int) -> isTileLoaded
    366:378:void loadTile(int,int) -> loadTile
    441:442:void log(java.lang.String,java.lang.Object[]) -> log
    385:389:void recycleTile(androidx.recyclerview.widget.TileList$Tile) -> recycleTile
    308:312:void refresh(int) -> refresh
    413:418:void removeTile(int) -> removeTile
    355:362:void requestTiles(int,int,int,boolean) -> requestTiles
    322:347:void updateRange(int,int,int,int,int) -> updateRange
androidx.recyclerview.widget.AsyncListUtil$DataCallback -> androidx.recyclerview.widget.AsyncListUtil$DataCallback:
    451:451:void <init>() -> <init>
    511:511:int getMaxCachedTiles() -> getMaxCachedTiles
    489:489:void recycleData(java.lang.Object[],int) -> recycleData
androidx.recyclerview.widget.AsyncListUtil$ViewCallback -> androidx.recyclerview.widget.AsyncListUtil$ViewCallback:
    521:521:void <init>() -> <init>
    577:581:void extendRangeInto(int[],int[],int) -> extendRangeInto
androidx.recyclerview.widget.BatchingListUpdateCallback -> androidx.recyclerview.widget.BatchingListUpdateCallback:
    46:48:void <init>(androidx.recyclerview.widget.ListUpdateCallback) -> <init>
    56:72:void dispatchLastEvent() -> dispatchLastEvent
    110:124:void onChanged(int,int,java.lang.Object) -> onChanged
    76:86:void onInserted(int,int) -> onInserted
    104:106:void onMoved(int,int) -> onMoved
    90:100:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.ChildHelper -> androidx.recyclerview.widget.ChildHelper:
    48:52:void <init>(androidx.recyclerview.widget.ChildHelper$Callback) -> <init>
    85:86:void addView(android.view.View,boolean) -> addView
    98:111:void addView(android.view.View,int,boolean) -> addView
    230:244:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams,boolean) -> attachViewToParent
    282:288:void detachViewFromParent(int) -> detachViewFromParent
    206:216:android.view.View findHiddenNonRemovedView(int) -> findHiddenNonRemovedView
    180:181:android.view.View getChildAt(int) -> getChildAt
    253:253:int getChildCount() -> getChildCount
    114:131:int getOffset(int) -> getOffset
    273:273:android.view.View getUnfilteredChildAt(int) -> getUnfilteredChildAt
    263:263:int getUnfilteredChildCount() -> getUnfilteredChildCount
    328:330:void hide(android.view.View) -> hide
    60:62:void hideViewInternal(android.view.View) -> hideViewInternal
    297:309:int indexOfChild(android.view.View) -> indexOfChild
    319:319:boolean isHidden(android.view.View) -> isHidden
    188:197:void removeAllViewsUnfiltered() -> removeAllViewsUnfiltered
    140:151:void removeView(android.view.View) -> removeView
    160:172:void removeViewAt(int) -> removeViewAt
    373:389:boolean removeViewIfHidden(android.view.View) -> removeViewIfHidden
    363:363:java.lang.String toString() -> toString
    350:352:void unhide(android.view.View) -> unhide
    70:74:boolean unhideViewInternal(android.view.View) -> unhideViewInternal
androidx.recyclerview.widget.ChildHelper$Bucket -> androidx.recyclerview.widget.ChildHelper$Bucket:
    395:401:void <init>() -> <init>
    421:429:void clear(int) -> clear
    493:502:int countOnesBefore(int) -> countOnesBefore
    415:418:void ensureNext() -> ensureNext
    432:436:boolean get(int) -> get
    448:467:void insert(int,boolean) -> insert
    470:488:boolean remove(int) -> remove
    441:445:void reset() -> reset
    406:412:void set(int) -> set
    508:508:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator -> androidx.recyclerview.widget.DefaultItemAnimator:
    38:55:void <init>() -> <init>
    222:225:boolean animateAdd(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAdd
    229:252:void animateAddImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateAddImpl
    321:344:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateChange
    348:397:void animateChangeImpl(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> animateChangeImpl
    257:274:boolean animateMove(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMove
    278:316:void animateMoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> animateMoveImpl
    193:195:boolean animateRemove(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemove
    199:218:void animateRemoveImpl(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> animateRemoveImpl
    665:665:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    641:644:void cancelAll(java.util.List) -> cancelAll
    550:553:void dispatchFinishedWhenDone() -> dispatchFinishedWhenDone
    437:519:void endAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endAnimation
    557:638:void endAnimations() -> endAnimations
    400:408:void endChangeAnimation(java.util.List,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimation
    411:417:void endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo) -> endChangeAnimationIfNecessary
    419:426:boolean endChangeAnimationIfNecessary(androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> endChangeAnimationIfNecessary
    531:531:boolean isRunning() -> isRunning
    522:527:void resetAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> resetAnimation
    102:189:void runPendingAnimations() -> runPendingAnimations
androidx.recyclerview.widget.DefaultItemAnimator$1 -> androidx.recyclerview.widget.DefaultItemAnimator$1:
    121:121:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    124:130:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$2 -> androidx.recyclerview.widget.DefaultItemAnimator$2:
    145:145:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    148:153:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$3 -> androidx.recyclerview.widget.DefaultItemAnimator$3:
    168:168:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,java.util.ArrayList) -> <init>
    171:176:void run() -> run
androidx.recyclerview.widget.DefaultItemAnimator$4 -> androidx.recyclerview.widget.DefaultItemAnimator$4:
    203:203:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    211:216:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    206:207:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$5 -> androidx.recyclerview.widget.DefaultItemAnimator$5:
    233:233:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,android.view.View,android.view.ViewPropertyAnimator) -> <init>
    241:242:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    246:250:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    236:237:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$6 -> androidx.recyclerview.widget.DefaultItemAnimator$6:
    292:292:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,android.view.View,int,android.view.ViewPropertyAnimator) -> <init>
    300:306:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    310:314:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    295:296:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$7 -> androidx.recyclerview.widget.DefaultItemAnimator$7:
    358:358:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    366:373:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    361:362:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$8 -> androidx.recyclerview.widget.DefaultItemAnimator$8:
    380:380:void <init>(androidx.recyclerview.widget.DefaultItemAnimator,androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo,android.view.ViewPropertyAnimator,android.view.View) -> <init>
    387:394:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    383:384:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo -> androidx.recyclerview.widget.DefaultItemAnimator$ChangeInfo:
    73:76:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    80:85:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
    89:89:java.lang.String toString() -> toString
androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo -> androidx.recyclerview.widget.DefaultItemAnimator$MoveInfo:
    61:67:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil -> androidx.recyclerview.widget.DiffUtil:
    84:84:void <clinit>() -> <clinit>
    80:82:void <init>() -> <init>
    105:105:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback) -> calculateDiff
    123:198:androidx.recyclerview.widget.DiffUtil$DiffResult calculateDiff(androidx.recyclerview.widget.DiffUtil$Callback,boolean) -> calculateDiff
    204:208:androidx.recyclerview.widget.DiffUtil$Snake diffPartial(androidx.recyclerview.widget.DiffUtil$Callback,int,int,int,int,int[],int[],int) -> diffPartial
androidx.recyclerview.widget.DiffUtil$1 -> androidx.recyclerview.widget.DiffUtil$1:
    84:84:void <init>() -> <init>
    84:84:int compare(java.lang.Object,java.lang.Object) -> compare
    87:88:int compare(androidx.recyclerview.widget.DiffUtil$Snake,androidx.recyclerview.widget.DiffUtil$Snake) -> compare
androidx.recyclerview.widget.DiffUtil$Callback -> androidx.recyclerview.widget.DiffUtil$Callback:
    295:295:void <init>() -> <init>
    360:360:java.lang.Object getChangePayload(int,int) -> getChangePayload
androidx.recyclerview.widget.DiffUtil$DiffResult -> androidx.recyclerview.widget.DiffUtil$DiffResult:
    567:579:void <init>(androidx.recyclerview.widget.DiffUtil$Callback,java.util.List,int[],int[],boolean) -> <init>
    586:596:void addRootSnake() -> addRootSnake
    695:696:int convertNewPositionToOld(int) -> convertNewPositionToOld
    671:672:int convertOldPositionToNew(int) -> convertOldPositionToNew
    873:909:void dispatchAdditions(java.util.List,androidx.recyclerview.widget.ListUpdateCallback,int,int,int) -> dispatchAdditions
    913:950:void dispatchRemovals(java.util.List,androidx.recyclerview.widget.ListUpdateCallback,int,int,int) -> dispatchRemovals
    802:803:void dispatchUpdatesTo(androidx.recyclerview.widget.RecyclerView$Adapter) -> dispatchUpdatesTo
    816:853:void dispatchUpdatesTo(androidx.recyclerview.widget.ListUpdateCallback) -> dispatchUpdatesTo
    646:650:void findAddition(int,int,int) -> findAddition
    723:766:boolean findMatchingItem(int,int,int,boolean) -> findMatchingItem
    610:643:void findMatchingItems() -> findMatchingItems
    653:657:void findRemoval(int,int,int) -> findRemoval
    954:954:java.util.List getSnakes() -> getSnakes
    857:868:androidx.recyclerview.widget.DiffUtil$PostponedUpdate removePostponedUpdate(java.util.List,int,boolean) -> removePostponedUpdate
androidx.recyclerview.widget.DiffUtil$ItemCallback -> androidx.recyclerview.widget.DiffUtil$ItemCallback:
    373:373:void <init>() -> <init>
    434:434:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> getChangePayload
androidx.recyclerview.widget.DiffUtil$PostponedUpdate -> androidx.recyclerview.widget.DiffUtil$PostponedUpdate:
    973:977:void <init>(int,int,boolean) -> <init>
androidx.recyclerview.widget.DiffUtil$Range -> androidx.recyclerview.widget.DiffUtil$Range:
    482:483:void <init>() -> <init>
    485:490:void <init>(int,int,int,int) -> <init>
androidx.recyclerview.widget.DiffUtil$Snake -> androidx.recyclerview.widget.DiffUtil$Snake:
    442:442:void <init>() -> <init>
androidx.recyclerview.widget.DividerItemDecoration -> androidx.recyclerview.widget.DividerItemDecoration:
    48:48:void <clinit>() -> <clinit>
    66:75:void <init>(android.content.Context,int) -> <init>
    151:175:void drawHorizontal(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> drawHorizontal
    124:148:void drawVertical(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> drawVertical
    108:108:android.graphics.drawable.Drawable getDrawable() -> getDrawable
    180:189:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    113:114:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    97:98:void setDrawable(android.graphics.drawable.Drawable) -> setDrawable
    84:89:void setOrientation(int) -> setOrientation
androidx.recyclerview.widget.FastScroller -> androidx.recyclerview.widget.FastScroller:
    74:75:void <clinit>() -> <clinit>
    141:161:void <init>(androidx.recyclerview.widget.RecyclerView,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,int,int,int) -> <init>
    164:174:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    258:259:void cancelHide() -> cancelHide
    183:187:void destroyCallbacks() -> destroyCallbacks
    316:329:void drawHorizontalScrollbar(android.graphics.Canvas) -> drawHorizontalScrollbar
    291:313:void drawVerticalScrollbar(android.graphics.Canvas) -> drawVerticalScrollbar
    542:544:int[] getHorizontalRange() -> getHorizontalRange
    516:516:android.graphics.drawable.Drawable getHorizontalThumbDrawable() -> getHorizontalThumbDrawable
    511:511:android.graphics.drawable.Drawable getHorizontalTrackDrawable() -> getHorizontalTrackDrawable
    533:535:int[] getVerticalRange() -> getVerticalRange
    526:526:android.graphics.drawable.Drawable getVerticalThumbDrawable() -> getVerticalThumbDrawable
    521:521:android.graphics.drawable.Drawable getVerticalTrackDrawable() -> getVerticalTrackDrawable
    244:255:void hide(int) -> hide
    461:475:void horizontalScrollTo(float) -> horizontalScrollTo
    220:220:boolean isDragging() -> isDragging
    216:216:boolean isLayoutRTL() -> isLayoutRTL
    504:504:boolean isPointInsideHorizontalThumb(float,float) -> isPointInsideHorizontalThumb
    496:496:boolean isPointInsideVerticalThumb(float,float) -> isPointInsideVerticalThumb
    224:224:boolean isVisible() -> isVisible
    268:277:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    381:404:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    443:443:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    409:440:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
    191:192:void requestRedraw() -> requestRedraw
    262:264:void resetHideDelay(int) -> resetHideDelay
    479:490:int scrollTo(float,float,int[],int,int,int) -> scrollTo
    195:213:void setState(int) -> setState
    177:180:void setupCallbacks() -> setupCallbacks
    228:240:void show() -> show
    339:375:void updateScrollPosition(int,int) -> updateScrollPosition
    446:458:void verticalScrollTo(float) -> verticalScrollTo
androidx.recyclerview.widget.FastScroller$1 -> androidx.recyclerview.widget.FastScroller$1:
    123:123:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    126:127:void run() -> run
androidx.recyclerview.widget.FastScroller$2 -> androidx.recyclerview.widget.FastScroller$2:
    130:130:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    133:135:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.FastScroller$AnimatorListener -> androidx.recyclerview.widget.FastScroller$AnimatorListener:
    551:552:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    572:573:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    557:568:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.FastScroller$AnimatorUpdater -> androidx.recyclerview.widget.FastScroller$AnimatorUpdater:
    577:578:void <init>(androidx.recyclerview.widget.FastScroller) -> <init>
    582:586:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.GapWorker -> androidx.recyclerview.widget.GapWorker:
    32:190:void <clinit>() -> <clinit>
    30:59:void <init>() -> <init>
    163:164:void add(androidx.recyclerview.widget.RecyclerView) -> add
    217:262:void buildTaskList() -> buildTaskList
    344:353:void flushTaskWithDeadline(androidx.recyclerview.widget.GapWorker$Task,long) -> flushTaskWithDeadline
    356:364:void flushTasksWithDeadline(long) -> flushTasksWithDeadline
    265:274:boolean isPrefetchPositionAttached(androidx.recyclerview.widget.RecyclerView,int) -> isPrefetchPositionAttached
    177:188:void postFromTraversal(androidx.recyclerview.widget.RecyclerView,int,int) -> postFromTraversal
    367:369:void prefetch(long) -> prefetch
    312:341:void prefetchInnerRecyclerViewWithDeadline(androidx.recyclerview.widget.RecyclerView,long) -> prefetchInnerRecyclerViewWithDeadline
    279:306:androidx.recyclerview.widget.RecyclerView$ViewHolder prefetchPositionWithDeadline(androidx.recyclerview.widget.RecyclerView,int,long) -> prefetchPositionWithDeadline
    167:171:void remove(androidx.recyclerview.widget.RecyclerView) -> remove
    374:405:void run() -> run
androidx.recyclerview.widget.GapWorker$1 -> androidx.recyclerview.widget.GapWorker$1:
    190:190:void <init>() -> <init>
    190:190:int compare(java.lang.Object,java.lang.Object) -> compare
    194:211:int compare(androidx.recyclerview.widget.GapWorker$Task,androidx.recyclerview.widget.GapWorker$Task) -> compare
androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl -> androidx.recyclerview.widget.GapWorker$LayoutPrefetchRegistryImpl:
    65:65:void <init>() -> <init>
    112:113:void addPosition(int,int) -> addPosition
    152:156:void clearPrefetchPositions() -> clearPrefetchPositions
    79:108:void collectPrefetchPositionsFromView(androidx.recyclerview.widget.RecyclerView,boolean) -> collectPrefetchPositionsFromView
    139:145:boolean lastPrefetchIncludedPosition(int) -> lastPrefetchIncludedPosition
    74:76:void setPrefetchVector(int,int) -> setPrefetchVector
androidx.recyclerview.widget.GapWorker$Task -> androidx.recyclerview.widget.GapWorker$Task:
    38:38:void <init>() -> <init>
    46:51:void clear() -> clear
androidx.recyclerview.widget.GridLayoutManager -> androidx.recyclerview.widget.GridLayoutManager:
    73:76:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    85:87:void <init>(android.content.Context,int) -> <init>
    98:100:void <init>(android.content.Context,int,int,boolean) -> <init>
    775:792:void assignSpans(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,boolean) -> assignSpans
    189:196:void cachePreLayoutSpanMapping() -> cachePreLayoutSpanMapping
    314:315:void calculateItemBorders(int) -> calculateItemBorders
    325:344:int[] calculateItemBorders(int[],int,int) -> calculateItemBorders
    256:256:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    184:186:void clearPreLayoutSpanMappingCache() -> clearPreLayoutSpanMappingCache
    515:525:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1213:1216:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1195:1198:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1304:1305:int computeScrollOffsetWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffsetWithSpanInfo
    1271:1272:int computeScrollRangeWithSpanInfo(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRangeWithSpanInfo
    1222:1225:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1204:1207:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    391:416:void ensureAnchorIsInCorrectSpan(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> ensureAnchorIsInCorrectSpan
    368:371:void ensureViewSet() -> ensureViewSet
    421:450:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    231:235:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    242:242:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    247:250:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    133:141:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    119:127:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    348:352:int getSpaceForSpanRange(int,int) -> getSpaceForSpanRange
    801:801:int getSpanCount() -> getSpanCount
    455:467:int getSpanGroupIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanGroupIndex
    471:488:int getSpanIndex(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanIndex
    492:509:int getSpanSize(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int) -> getSpanSize
    275:275:androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup getSpanSizeLookup() -> getSpanSizeLookup
    750:753:void guessMeasurement(float,int) -> guessMeasurement
    1267:1267:boolean isUsingSpansToEstimateScrollbarDimensions() -> isUsingSpansToEstimateScrollbarDimensions
    530:704:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    716:737:void measureChild(android.view.View,int,boolean) -> measureChild
    757:767:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    359:365:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    1068:1185:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    147:163:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    200:202:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    206:208:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    225:227:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    212:214:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    219:221:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    167:175:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    179:181:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    376:378:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    384:386:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    290:308:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    814:819:void setSpanCount(int) -> setSpanCount
    266:267:void setSpanSizeLookup(androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup) -> setSpanSizeLookup
    108:109:void setStackFromEnd(boolean) -> setStackFromEnd
    1255:1256:void setUsingSpansToEstimateScrollbarDimensions(boolean) -> setUsingSpansToEstimateScrollbarDimensions
    1190:1190:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    280:286:void updateMeasurements() -> updateMeasurements
androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$DefaultSpanSizeLookup:
    1348:1348:void <init>() -> <init>
    1357:1357:int getSpanIndex(int,int) -> getSpanIndex
    1352:1352:int getSpanSize(int) -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$LayoutParams -> androidx.recyclerview.widget.GridLayoutManager$LayoutParams:
    1380:1381:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    1384:1385:void <init>(int,int) -> <init>
    1388:1389:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    1392:1393:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    1396:1397:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    1414:1414:int getSpanIndex() -> getSpanIndex
    1424:1424:int getSpanSize() -> getSpanSize
androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup -> androidx.recyclerview.widget.GridLayoutManager$SpanSizeLookup:
    834:840:void <init>() -> <init>
    997:1015:int findFirstKeyLessThan(android.util.SparseIntArray,int) -> findFirstKeyLessThan
    930:939:int getCachedSpanGroupIndex(int,int) -> getCachedSpanGroupIndex
    917:926:int getCachedSpanIndex(int,int) -> getCachedSpanIndex
    1029:1061:int getSpanGroupIndex(int,int) -> getSpanGroupIndex
    966:993:int getSpanIndex(int,int) -> getSpanIndex
    895:896:void invalidateSpanGroupIndexCache() -> invalidateSpanGroupIndexCache
    887:888:void invalidateSpanIndexCache() -> invalidateSpanIndexCache
    913:913:boolean isSpanGroupIndexCacheEnabled() -> isSpanGroupIndexCacheEnabled
    904:904:boolean isSpanIndexCacheEnabled() -> isSpanIndexCacheEnabled
    876:880:void setSpanGroupIndexCacheEnabled(boolean) -> setSpanGroupIndexCacheEnabled
    859:863:void setSpanIndexCacheEnabled(boolean) -> setSpanIndexCacheEnabled
androidx.recyclerview.widget.ItemTouchHelper -> androidx.recyclerview.widget.ItemTouchHelper:
    446:448:void <init>(androidx.recyclerview.widget.ItemTouchHelper$Callback) -> <init>
    1290:1313:void addChildDrawingOrderCallback() -> addChildDrawingOrderCallback
    467:482:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    1237:1260:int checkHorizontalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> checkHorizontalSwipe
    980:982:void checkSelectForSwipe(int,android.view.MotionEvent,int) -> checkSelectForSwipe
    1264:1286:int checkVerticalSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> checkVerticalSwipe
    494:508:void destroyCallbacks() -> destroyCallbacks
    914:926:void endRecoverAnimation(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> endRecoverAnimation
    1155:1165:androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation findAnimation(android.view.MotionEvent) -> findAnimation
    1039:1054:android.view.View findChildView(android.view.MotionEvent) -> findChildView
    800:845:java.util.List findSwapTargets(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> findSwapTargets
    950:972:androidx.recyclerview.widget.RecyclerView$ViewHolder findSwipedView(android.view.MotionEvent) -> findSwipedView
    931:932:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    527:537:void getSelectedDxDy(float[]) -> getSelectedDxDy
    723:729:boolean hasRunningRecoverAnim() -> hasRunningRecoverAnim
    451:451:boolean hitTest(android.view.View,float,float,float,float) -> hitTest
    853:886:void moveIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> moveIfNecessary
    936:940:void obtainVelocityTracker() -> obtainVelocityTracker
    890:890:void onChildViewAttachedToWindow(android.view.View) -> onChildViewAttachedToWindow
    894:907:void onChildViewDetachedFromWindow(android.view.View) -> onChildViewDetachedFromWindow
    554:563:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    541:549:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    700:719:void postDispatchSwipe(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> postDispatchSwipe
    943:947:void releaseVelocityTracker() -> releaseVelocityTracker
    1317:1324:void removeChildDrawingOrderCallbackIfNecessary(android.view.View) -> removeChildDrawingOrderCallbackIfNecessary
    737:793:boolean scrollIfNecessary() -> scrollIfNecessary
    574:695:void select(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> select
    485:491:void setupCallbacks() -> setupCallbacks
    1092:1104:void startDrag(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> startDrag
    511:514:void startGestureDetection() -> startGestureDetection
    1139:1151:void startSwipe(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> startSwipe
    517:524:void stopGestureDetection() -> stopGestureDetection
    1191:1233:int swipeIfNecessary(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> swipeIfNecessary
    1170:1188:void updateDxDy(android.view.MotionEvent,int,int) -> updateDxDy
androidx.recyclerview.widget.ItemTouchHelper$1 -> androidx.recyclerview.widget.ItemTouchHelper$1:
    257:257:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    260:267:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$2 -> androidx.recyclerview.widget.ItemTouchHelper$2:
    313:313:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    317:357:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    420:424:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    362:416:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.widget.ItemTouchHelper$3 -> androidx.recyclerview.widget.ItemTouchHelper$3:
    635:635:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float,int,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> <init>
    638:660:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
androidx.recyclerview.widget.ItemTouchHelper$4 -> androidx.recyclerview.widget.ItemTouchHelper$4:
    700:700:void <init>(androidx.recyclerview.widget.ItemTouchHelper,androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation,int) -> <init>
    703:717:void run() -> run
androidx.recyclerview.widget.ItemTouchHelper$5 -> androidx.recyclerview.widget.ItemTouchHelper$5:
    1294:1294:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    1297:1308:int onGetChildDrawingOrder(int,int) -> onGetChildDrawingOrder
androidx.recyclerview.widget.ItemTouchHelper$Callback -> androidx.recyclerview.widget.ItemTouchHelper$Callback:
    1401:1408:void <clinit>() -> <clinit>
    1385:1421:void <init>() -> <init>
    1626:1626:boolean canDropOver(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canDropOver
    1802:1853:androidx.recyclerview.widget.RecyclerView$ViewHolder chooseDropTarget(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,int) -> chooseDropTarget
    2038:2039:void clearView(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearView
    1573:1588:int convertToAbsoluteDirection(int,int) -> convertToAbsoluteDirection
    1482:1497:int convertToRelativeDirection(int,int) -> convertToRelativeDirection
    1593:1594:int getAbsoluteMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAbsoluteMovementFlags
    2132:2137:long getAnimationDuration(androidx.recyclerview.widget.RecyclerView,int,float,float) -> getAnimationDuration
    1690:1690:int getBoundingBoxMargin() -> getBoundingBoxMargin
    1466:1466:androidx.recyclerview.widget.ItemTouchUIUtil getDefaultUIUtil() -> getDefaultUIUtil
    1901:1905:int getMaxDragScroll(androidx.recyclerview.widget.RecyclerView) -> getMaxDragScroll
    1720:1720:float getMoveThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getMoveThreshold
    1746:1746:float getSwipeEscapeVelocity(float) -> getSwipeEscapeVelocity
    1706:1706:float getSwipeThreshold(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getSwipeThreshold
    1770:1770:float getSwipeVelocityThreshold(float) -> getSwipeVelocityThreshold
    1598:1599:boolean hasDragFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> hasDragFlag
    1604:1605:boolean hasSwipeFlag(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> hasSwipeFlag
    2166:2184:int interpolateOutOfBoundsScroll(androidx.recyclerview.widget.RecyclerView,int,int,int,long) -> interpolateOutOfBoundsScroll
    1678:1678:boolean isItemViewSwipeEnabled() -> isItemViewSwipeEnabled
    1663:1663:boolean isLongPressDragEnabled() -> isLongPressDragEnabled
    1529:1529:int makeFlag(int,int) -> makeFlag
    1512:1512:int makeMovementFlags(int,int) -> makeMovementFlags
    2071:2073:void onChildDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDraw
    2105:2107:void onChildDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,float,float,int,boolean) -> onChildDrawOver
    1978:1992:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDraw
    1997:2022:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List,int,float,float) -> onDrawOver
    1944:1973:void onMoved(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,int) -> onMoved
    1895:1898:void onSelectedChanged(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> onSelectedChanged
androidx.recyclerview.widget.ItemTouchHelper$Callback$1 -> androidx.recyclerview.widget.ItemTouchHelper$Callback$1:
    1401:1401:void <init>() -> <init>
    1404:1404:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.ItemTouchHelper$Callback$2 -> androidx.recyclerview.widget.ItemTouchHelper$Callback$2:
    1408:1408:void <init>() -> <init>
    1411:1412:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener -> androidx.recyclerview.widget.ItemTouchHelper$ItemTouchHelperGestureListener:
    2316:2317:void <init>(androidx.recyclerview.widget.ItemTouchHelper) -> <init>
    2324:2325:void doNotReactToLongPress() -> doNotReactToLongPress
    2329:2329:boolean onDown(android.view.MotionEvent) -> onDown
    2334:2365:void onLongPress(android.view.MotionEvent) -> onLongPress
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation -> androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation:
    2401:2420:void <init>(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,float,float,float,float) -> <init>
    2432:2433:void cancel() -> cancel
    2471:2472:void onAnimationCancel(android.animation.Animator) -> onAnimationCancel
    2463:2467:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    2477:2477:void onAnimationRepeat(android.animation.Animator) -> onAnimationRepeat
    2459:2459:void onAnimationStart(android.animation.Animator) -> onAnimationStart
    2423:2424:void setDuration(long) -> setDuration
    2436:2437:void setFraction(float) -> setFraction
    2427:2429:void start() -> start
    2444:2454:void update() -> update
androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1 -> androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation$1:
    2411:2411:void <init>(androidx.recyclerview.widget.ItemTouchHelper$RecoverAnimation) -> <init>
    2414:2415:void onAnimationUpdate(android.animation.ValueAnimator) -> onAnimationUpdate
androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback -> androidx.recyclerview.widget.ItemTouchHelper$SimpleCallback:
    2233:2236:void <init>(int,int) -> <init>
    2287:2287:int getDragDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getDragDirs
    2293:2293:int getMovementFlags(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getMovementFlags
    2272:2272:int getSwipeDirs(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getSwipeDirs
    2257:2258:void setDefaultDragDirs(int) -> setDefaultDragDirs
    2246:2247:void setDefaultSwipeDirs(int) -> setDefaultSwipeDirs
androidx.recyclerview.widget.ItemTouchUIUtilImpl -> androidx.recyclerview.widget.ItemTouchUIUtilImpl:
    31:31:void <clinit>() -> <clinit>
    30:30:void <init>() -> <init>
    75:85:void clearView(android.view.View) -> clearView
    53:65:float findMaxElevation(androidx.recyclerview.widget.RecyclerView,android.view.View) -> findMaxElevation
    36:50:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDraw
    71:71:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,android.view.View,float,float,int,boolean) -> onDrawOver
    89:89:void onSelected(android.view.View) -> onSelected
androidx.recyclerview.widget.LayoutState -> androidx.recyclerview.widget.LayoutState:
    25:72:void <init>() -> <init>
    88:88:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    98:100:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    105:105:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager -> androidx.recyclerview.widget.LinearLayoutManager:
    159:160:void <init>(android.content.Context) -> <init>
    169:172:void <init>(android.content.Context,int,boolean) -> <init>
    183:188:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    1409:1412:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    482:497:void calculateExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State,int[]) -> calculateExtraLayoutSpace
    295:295:boolean canScrollHorizontally() -> canScrollHorizontally
    303:303:boolean canScrollVertically() -> canScrollVertically
    1368:1371:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1288:1314:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    1277:1281:void collectPrefetchPositionsForLayoutState(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectPrefetchPositionsForLayoutState
    1143:1143:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1133:1133:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1153:1153:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1173:1177:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1162:1166:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1184:1188:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    510:518:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1148:1148:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1138:1138:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1158:1158:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    1716:1723:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1051:1051:androidx.recyclerview.widget.LinearLayoutManager$LayoutState createLayoutState() -> createLayoutState
    1040:1043:void ensureLayoutState() -> ensureLayoutState
    1572:1622:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fill
    1940:1941:int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    1897:1897:android.view.View findFirstPartiallyOrCompletelyInvisibleChild() -> findFirstPartiallyOrCompletelyInvisibleChild
    1845:1845:android.view.View findFirstReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findFirstReferenceChild
    1801:1805:android.view.View findFirstVisibleChildClosestToEnd(boolean,boolean) -> findFirstVisibleChildClosestToEnd
    1783:1787:android.view.View findFirstVisibleChildClosestToStart(boolean,boolean) -> findFirstVisibleChildClosestToStart
    1923:1924:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    1980:1981:int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    1901:1901:android.view.View findLastPartiallyOrCompletelyInvisibleChild() -> findLastPartiallyOrCompletelyInvisibleChild
    1849:1849:android.view.View findLastReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findLastReferenceChild
    1963:1964:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    2012:2031:android.view.View findOnePartiallyOrCompletelyInvisibleChild(int,int) -> findOnePartiallyOrCompletelyInvisibleChild
    1990:2004:android.view.View findOneVisibleChild(int,int,boolean,boolean) -> findOneVisibleChild
    1885:1885:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToEnd() -> findPartiallyOrCompletelyInvisibleChildClosestToEnd
    1892:1892:android.view.View findPartiallyOrCompletelyInvisibleChildClosestToStart() -> findPartiallyOrCompletelyInvisibleChildClosestToStart
    1855:1879:android.view.View findReferenceChild(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int,int) -> findReferenceChild
    1823:1823:android.view.View findReferenceChildClosestToEnd(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToEnd
    1840:1840:android.view.View findReferenceChildClosestToStart(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> findReferenceChildClosestToStart
    407:420:android.view.View findViewByPosition(int) -> findViewByPosition
    961:966:int fixLayoutEndGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutEndGap
    986:992:int fixLayoutStartGap(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixLayoutStartGap
    200:200:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    1771:1771:android.view.View getChildClosestToEnd() -> getChildClosestToEnd
    1761:1761:android.view.View getChildClosestToStart() -> getChildClosestToStart
    447:450:int getExtraLayoutSpace(androidx.recyclerview.widget.RecyclerView$State) -> getExtraLayoutSpace
    1362:1362:int getInitialPrefetchItemCount() -> getInitialPrefetchItemCount
    330:330:int getOrientation() -> getOrientation
    212:212:boolean getRecycleChildrenOnDetach() -> getRecycleChildrenOnDetach
    376:376:boolean getReverseLayout() -> getReverseLayout
    319:319:boolean getStackFromEnd() -> getStackFromEnd
    192:192:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    1036:1036:boolean isLayoutRTL() -> isLayoutRTL
    1223:1223:boolean isSmoothScrollbarEnabled() -> isSmoothScrollbarEnabled
    1627:1696:void layoutChunk(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$LayoutState,androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult) -> layoutChunk
    755:757:void layoutForPredictiveAnimations(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> layoutForPredictiveAnimations
    2089:2096:void logChildren() -> logChildren
    743:743:void onAnchorReady(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo,int) -> onAnchorReady
    234:239:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2041:2081:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    243:248:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    537:721:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    725:730:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    279:288:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    252:274:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2160:2187:void prepareForDrop(android.view.View,android.view.View,int,int) -> prepareForDrop
    1546:1547:void recycleByLayoutState(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LinearLayoutManager$LayoutState) -> recycleByLayoutState
    1421:1436:void recycleChildren(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleChildren
    1502:1532:void recycleViewsFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromEnd
    1453:1484:void recycleViewsFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int,int) -> recycleViewsFromStart
    1271:1271:boolean resolveIsInfinite() -> resolveIsInfinite
    362:367:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    1382:1383:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    1113:1116:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    1070:1076:void scrollToPosition(int) -> scrollToPosition
    1098:1104:void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    1125:1128:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    1346:1347:void setInitialPrefetchItemCount(int) -> setInitialPrefetchItemCount
    340:353:void setOrientation(int) -> setOrientation
    229:230:void setRecycleChildrenOnDetach(boolean) -> setRecycleChildrenOnDetach
    394:400:void setReverseLayout(boolean) -> setReverseLayout
    1212:1213:void setSmoothScrollbarEnabled(boolean) -> setSmoothScrollbarEnabled
    310:316:void setStackFromEnd(boolean) -> setStackFromEnd
    1700:1700:boolean shouldMeasureTwice() -> shouldMeasureTwice
    502:506:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    2150:2150:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    834:867:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    875:876:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    806:824:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1229:1268:void updateLayoutState(int,int,boolean,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    1007:1008:void updateLayoutStateToFillEnd(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillEnd
    1011:1018:void updateLayoutStateToFillEnd(int,int) -> updateLayoutStateToFillEnd
    1021:1022:void updateLayoutStateToFillStart(androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo) -> updateLayoutStateToFillStart
    1025:1033:void updateLayoutStateToFillStart(int,int) -> updateLayoutStateToFillStart
    2109:2146:void validateChildOrder() -> validateChildOrder
androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo -> androidx.recyclerview.widget.LinearLayoutManager$AnchorInfo:
    2453:2455:void <init>() -> <init>
    2469:2472:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    2538:2546:void assignFromView(android.view.View,int) -> assignFromView
    2491:2535:void assignFromViewAndKeepVisibleRect(android.view.View,int) -> assignFromViewAndKeepVisibleRect
    2485:2486:boolean isViewValidAsAnchor(android.view.View,androidx.recyclerview.widget.RecyclerView$State) -> isViewValidAsAnchor
    2458:2462:void reset() -> reset
    2476:2476:java.lang.String toString() -> toString
androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult -> androidx.recyclerview.widget.LinearLayoutManager$LayoutChunkResult:
    2549:2549:void <init>() -> <init>
    2556:2560:void resetInternal() -> resetInternal
androidx.recyclerview.widget.LinearLayoutManager$LayoutState -> androidx.recyclerview.widget.LinearLayoutManager$LayoutState:
    2193:2279:void <init>() -> <init>
    2332:2333:void assignPositionFromScrapList() -> assignPositionFromScrapList
    2336:2343:void assignPositionFromScrapList(android.view.View) -> assignPositionFromScrapList
    2290:2290:boolean hasMore(androidx.recyclerview.widget.RecyclerView$State) -> hasMore
    2375:2377:void log() -> log
    2300:2305:android.view.View next(androidx.recyclerview.widget.RecyclerView$Recycler) -> next
    2316:2328:android.view.View nextViewFromScrapList() -> nextViewFromScrapList
    2346:2371:android.view.View nextViewInLimitedList(android.view.View) -> nextViewInLimitedList
androidx.recyclerview.widget.LinearLayoutManager$SavedState -> androidx.recyclerview.widget.LinearLayoutManager$SavedState:
    2429:2429:void <clinit>() -> <clinit>
    2393:2395:void <init>() -> <init>
    2397:2401:void <init>(android.os.Parcel) -> <init>
    2403:2407:void <init>(androidx.recyclerview.widget.LinearLayoutManager$SavedState) -> <init>
    2419:2419:int describeContents() -> describeContents
    2410:2410:boolean hasValidAnchor() -> hasValidAnchor
    2414:2415:void invalidateAnchor() -> invalidateAnchor
    2424:2427:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.LinearLayoutManager$SavedState$1 -> androidx.recyclerview.widget.LinearLayoutManager$SavedState$1:
    2430:2430:void <init>() -> <init>
    2430:2430:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    2433:2433:androidx.recyclerview.widget.LinearLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    2430:2430:java.lang.Object[] newArray(int) -> newArray
    2438:2438:androidx.recyclerview.widget.LinearLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.LinearSmoothScroller -> androidx.recyclerview.widget.LinearSmoothScroller:
    93:95:void <init>(android.content.Context) -> <init>
    280:282:int calculateDtToFit(int,int,int,int,int) -> calculateDtToFit
    339:341:int calculateDxToMakeVisible(android.view.View,int) -> calculateDxToMakeVisible
    314:316:int calculateDyToMakeVisible(android.view.View,int) -> calculateDyToMakeVisible
    166:166:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    191:191:int calculateTimeForDeceleration(int) -> calculateTimeForDeceleration
    205:205:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    266:271:int clampApplyScroll(int,int) -> clampApplyScroll
    218:218:int getHorizontalSnapPreference() -> getHorizontalSnapPreference
    170:174:float getSpeedPerPixel() -> getSpeedPerPixel
    232:232:int getVerticalSnapPreference() -> getVerticalSnapPreference
    127:144:void onSeekTargetStep(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onSeekTargetStep
    103:103:void onStart() -> onStart
    151:153:void onStop() -> onStop
    110:117:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
    244:249:void updateActionForInterimTarget(androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> updateActionForInterimTarget
androidx.recyclerview.widget.LinearSnapHelper -> androidx.recyclerview.widget.LinearSnapHelper:
    33:33:void <init>() -> <init>
    46:60:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    223:248:float computeDistancePerChild(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> computeDistancePerChild
    143:146:int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToCenter
    162:169:int estimateNextPositionDiffForFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper,int,int) -> estimateNextPositionDiffForFling
    184:205:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findCenterView
    133:138:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    66:128:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    272:275:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    263:266:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
androidx.recyclerview.widget.ListAdapter -> androidx.recyclerview.widget.ListAdapter:
    107:111:void <init>(androidx.recyclerview.widget.DiffUtil$ItemCallback) -> <init>
    114:117:void <init>(androidx.recyclerview.widget.AsyncDifferConfig) -> <init>
    173:173:java.util.List getCurrentList() -> getCurrentList
    150:150:java.lang.Object getItem(int) -> getItem
    155:155:int getItemCount() -> getItemCount
    189:189:void onCurrentListChanged(java.util.List,java.util.List) -> onCurrentListChanged
    128:129:void submitList(java.util.List) -> submitList
    146:147:void submitList(java.util.List,java.lang.Runnable) -> submitList
androidx.recyclerview.widget.ListAdapter$1 -> androidx.recyclerview.widget.ListAdapter$1:
    98:98:void <init>(androidx.recyclerview.widget.ListAdapter) -> <init>
    102:103:void onCurrentListChanged(java.util.List,java.util.List) -> onCurrentListChanged
androidx.recyclerview.widget.MessageThreadUtil -> androidx.recyclerview.widget.MessageThreadUtil:
    27:27:void <init>() -> <init>
    88:88:androidx.recyclerview.widget.ThreadUtil$BackgroundCallback getBackgroundProxy(androidx.recyclerview.widget.ThreadUtil$BackgroundCallback) -> getBackgroundProxy
    31:31:androidx.recyclerview.widget.ThreadUtil$MainThreadCallback getMainThreadProxy(androidx.recyclerview.widget.ThreadUtil$MainThreadCallback) -> getMainThreadProxy
androidx.recyclerview.widget.MessageThreadUtil$1 -> androidx.recyclerview.widget.MessageThreadUtil$1:
    31:59:void <init>(androidx.recyclerview.widget.MessageThreadUtil,androidx.recyclerview.widget.ThreadUtil$MainThreadCallback) -> <init>
    46:47:void addTile(int,androidx.recyclerview.widget.TileList$Tile) -> addTile
    51:52:void removeTile(int,int) -> removeTile
    55:57:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessage
    41:42:void updateItemCount(int,int) -> updateItemCount
androidx.recyclerview.widget.MessageThreadUtil$1$1 -> androidx.recyclerview.widget.MessageThreadUtil$1$1:
    59:59:void <init>(androidx.recyclerview.widget.MessageThreadUtil$1) -> <init>
    62:81:void run() -> run
androidx.recyclerview.widget.MessageThreadUtil$2 -> androidx.recyclerview.widget.MessageThreadUtil$2:
    88:136:void <init>(androidx.recyclerview.widget.MessageThreadUtil,androidx.recyclerview.widget.ThreadUtil$BackgroundCallback) -> <init>
    112:113:void loadTile(int,int) -> loadTile
    131:134:void maybeExecuteBackgroundRunnable() -> maybeExecuteBackgroundRunnable
    117:118:void recycleTile(androidx.recyclerview.widget.TileList$Tile) -> recycleTile
    100:101:void refresh(int) -> refresh
    121:123:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessage
    126:128:void sendMessageAtFrontOfQueue(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessageAtFrontOfQueue
    106:108:void updateRange(int,int,int,int,int) -> updateRange
androidx.recyclerview.widget.MessageThreadUtil$2$1 -> androidx.recyclerview.widget.MessageThreadUtil$2$1:
    136:136:void <init>(androidx.recyclerview.widget.MessageThreadUtil$2) -> <init>
    140:166:void run() -> run
androidx.recyclerview.widget.MessageThreadUtil$MessageQueue -> androidx.recyclerview.widget.MessageThreadUtil$MessageQueue:
    233:233:void <init>() -> <init>
    238:237:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem next() -> next
    264:263:void removeMessages(int) -> removeMessages
    252:251:void sendMessage(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessage
    247:246:void sendMessageAtFrontOfQueue(androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem) -> sendMessageAtFrontOfQueue
androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem -> androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem:
    180:180:void <clinit>() -> <clinit>
    177:177:void <init>() -> <init>
    204:221:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int,int,int,int,java.lang.Object) -> obtainMessage
    225:225:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,int) -> obtainMessage
    229:229:androidx.recyclerview.widget.MessageThreadUtil$SyncQueueItem obtainMessage(int,int,java.lang.Object) -> obtainMessage
    191:199:void recycle() -> recycle
androidx.recyclerview.widget.OpReorderer -> androidx.recyclerview.widget.OpReorderer:
    25:27:void <init>(androidx.recyclerview.widget.OpReorderer$Callback) -> <init>
    213:224:int getLastMoveOutOfOrder(java.util.List) -> getLastMoveOutOfOrder
    33:36:void reorderOps(java.util.List) -> reorderOps
    155:172:void swapMoveAdd(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveAdd
    39:52:void swapMoveOp(java.util.List,int,int) -> swapMoveOp
    56:151:void swapMoveRemove(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveRemove
    176:210:void swapMoveUpdate(java.util.List,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp,int,androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> swapMoveUpdate
androidx.recyclerview.widget.OrientationHelper -> androidx.recyclerview.widget.OrientationHelper:
    32:32:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper$1) -> <init>
    46:48:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    258:258:androidx.recyclerview.widget.OrientationHelper createHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createHorizontalHelper
    241:243:androidx.recyclerview.widget.OrientationHelper createOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager,int) -> createOrientationHelper
    356:356:androidx.recyclerview.widget.OrientationHelper createVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createVerticalHelper
    55:55:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    78:78:int getTotalSpaceChange() -> getTotalSpaceChange
    64:65:void onLayoutComplete() -> onLayoutComplete
androidx.recyclerview.widget.OrientationHelper$1 -> androidx.recyclerview.widget.OrientationHelper$1:
    258:258:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    297:299:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    281:283:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    289:291:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    304:306:int getDecoratedStart(android.view.View) -> getDecoratedStart
    266:266:int getEnd() -> getEnd
    261:261:int getEndAfterPadding() -> getEndAfterPadding
    334:334:int getEndPadding() -> getEndPadding
    339:339:int getMode() -> getMode
    344:344:int getModeInOther() -> getModeInOther
    276:276:int getStartAfterPadding() -> getStartAfterPadding
    323:323:int getTotalSpace() -> getTotalSpace
    311:312:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    317:318:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    329:330:void offsetChild(android.view.View,int) -> offsetChild
    271:272:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.OrientationHelper$2 -> androidx.recyclerview.widget.OrientationHelper$2:
    356:356:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    395:397:int getDecoratedEnd(android.view.View) -> getDecoratedEnd
    379:381:int getDecoratedMeasurement(android.view.View) -> getDecoratedMeasurement
    387:389:int getDecoratedMeasurementInOther(android.view.View) -> getDecoratedMeasurementInOther
    402:404:int getDecoratedStart(android.view.View) -> getDecoratedStart
    364:364:int getEnd() -> getEnd
    359:359:int getEndAfterPadding() -> getEndAfterPadding
    432:432:int getEndPadding() -> getEndPadding
    437:437:int getMode() -> getMode
    442:442:int getModeInOther() -> getModeInOther
    374:374:int getStartAfterPadding() -> getStartAfterPadding
    421:421:int getTotalSpace() -> getTotalSpace
    409:410:int getTransformedEndWithDecoration(android.view.View) -> getTransformedEndWithDecoration
    415:416:int getTransformedStartWithDecoration(android.view.View) -> getTransformedStartWithDecoration
    427:428:void offsetChild(android.view.View,int) -> offsetChild
    369:370:void offsetChildren(int) -> offsetChildren
androidx.recyclerview.widget.PagerSnapHelper -> androidx.recyclerview.widget.PagerSnapHelper:
    38:38:void <init>() -> <init>
    51:65:int[] calculateDistanceToFinalSnap(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View) -> calculateDistanceToFinalSnap
    169:172:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createSnapScroller
    199:202:int distanceToCenter(androidx.recyclerview.widget.RecyclerView$LayoutManager,android.view.View,androidx.recyclerview.widget.OrientationHelper) -> distanceToCenter
    217:238:android.view.View findCenterView(androidx.recyclerview.widget.RecyclerView$LayoutManager,androidx.recyclerview.widget.OrientationHelper) -> findCenterView
    71:76:android.view.View findSnapView(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> findSnapView
    82:140:int findTargetSnapPosition(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> findTargetSnapPosition
    263:266:androidx.recyclerview.widget.OrientationHelper getHorizontalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getHorizontalHelper
    243:248:androidx.recyclerview.widget.OrientationHelper getOrientationHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getOrientationHelper
    254:257:androidx.recyclerview.widget.OrientationHelper getVerticalHelper(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> getVerticalHelper
    147:150:boolean isForwardFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> isForwardFling
    155:164:boolean isReverseLayout(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> isReverseLayout
androidx.recyclerview.widget.PagerSnapHelper$1 -> androidx.recyclerview.widget.PagerSnapHelper$1:
    172:172:void <init>(androidx.recyclerview.widget.PagerSnapHelper,android.content.Context) -> <init>
    187:187:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    192:192:int calculateTimeForScrolling(int) -> calculateTimeForScrolling
    175:183:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.RecyclerView -> androidx.recyclerview.widget.RecyclerView:
    219:598:void <clinit>() -> <clinit>
    646:647:void <init>(android.content.Context) -> <init>
    650:651:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    654:726:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    2603:2630:void absorbGlows(int,int) -> absorbGlows
    210:210:void access$000(androidx.recyclerview.widget.RecyclerView,android.view.View,int,android.view.ViewGroup$LayoutParams) -> access$000
    210:210:void access$100(androidx.recyclerview.widget.RecyclerView,int) -> access$100
    210:210:boolean access$200(androidx.recyclerview.widget.RecyclerView) -> access$200
    210:210:void access$300(androidx.recyclerview.widget.RecyclerView,int,int) -> access$300
    1431:1442:void addAnimatingView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addAnimatingView
    2943:2946:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1568:1582:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration,int) -> addItemDecoration
    1597:1598:void addItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> addItemDecoration
    1273:1277:void addOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> addOnChildAttachStateChangeListener
    3079:3080:void addOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> addOnItemTouchListener
    1706:1710:void addOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> addOnScrollListener
    4363:4367:void animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    4381:4399:void animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,boolean,boolean) -> animateChange
    4371:4376:void animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    3030:3038:void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    3048:3063:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    4674:4674:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    3443:3445:void cancelScroll() -> cancelScroll
    4500:4500:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    5851:5867:void clearNestedRecyclerViewIfNotNested(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> clearNestedRecyclerViewIfNotNested
    4554:4562:void clearOldPositions() -> clearOldPositions
    1297:1300:void clearOnChildAttachStateChangeListeners() -> clearOnChildAttachStateChangeListeners
    1727:1730:void clearOnScrollListeners() -> clearOnScrollListeners
    2024:2027:int computeHorizontalScrollExtent() -> computeHorizontalScrollExtent
    1999:2002:int computeHorizontalScrollOffset() -> computeHorizontalScrollOffset
    2047:2050:int computeHorizontalScrollRange() -> computeHorizontalScrollRange
    2096:2099:int computeVerticalScrollExtent() -> computeVerticalScrollExtent
    2072:2075:int computeVerticalScrollOffset() -> computeVerticalScrollOffset
    2119:2122:int computeVerticalScrollRange() -> computeVerticalScrollRange
    2580:2600:void considerReleasingGlowsOnScroll(int,int) -> considerReleasingGlowsOnScroll
    1865:1869:void consumePendingUpdateOperations() -> consumePendingUpdateOperations
    782:832:void createLayoutManager(android.content.Context,java.lang.String,android.util.AttributeSet,int,int) -> createLayoutManager
    3606:3614:void defaultOnMeasure(int,int) -> defaultOnMeasure
    4327:4328:boolean didChildRangeChange(int,int) -> didChildRangeChange
    7553:7564:void dispatchChildAttached(android.view.View) -> dispatchChildAttached
    7538:7549:void dispatchChildDetached(android.view.View) -> dispatchChildDetached
    3675:3683:void dispatchContentChangedIfNecessary() -> dispatchContentChangedIfNecessary
    3837:3863:void dispatchLayout() -> dispatchLayout
    4033:4118:void dispatchLayoutStep1() -> dispatchLayoutStep1
    4125:4144:void dispatchLayoutStep2() -> dispatchLayoutStep2
    4151:4235:void dispatchLayoutStep3() -> dispatchLayoutStep3
    11601:11601:boolean dispatchNestedFling(float,float,boolean) -> dispatchNestedFling
    11606:11606:boolean dispatchNestedPreFling(float,float) -> dispatchNestedPreFling
    11589:11589:boolean dispatchNestedPreScroll(int,int,int[],int[]) -> dispatchNestedPreScroll
    11595:11595:boolean dispatchNestedPreScroll(int,int,int[],int[],int) -> dispatchNestedPreScroll
    11569:11569:boolean dispatchNestedScroll(int,int,int,int,int[]) -> dispatchNestedScroll
    11576:11576:boolean dispatchNestedScroll(int,int,int,int,int[],int) -> dispatchNestedScroll
    11583:11585:void dispatchNestedScroll(int,int,int,int,int[],int,int[]) -> dispatchNestedScroll
    5196:5213:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    5154:5177:void dispatchOnScrolled(int,int) -> dispatchOnScrolled
    11480:11494:void dispatchPendingImportantForAccessibilityChanges() -> dispatchPendingImportantForAccessibilityChanges
    3741:3742:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    1419:1420:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
    1411:1412:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    3118:3129:boolean dispatchToOnItemTouchListeners(android.view.MotionEvent) -> dispatchToOnItemTouchListeners
    4429:4486:void draw(android.graphics.Canvas) -> draw
    5030:5030:boolean drawChild(android.graphics.Canvas,android.view.View,long) -> drawChild
    2673:2683:void ensureBottomGlow() -> ensureBottomGlow
    2633:2643:void ensureLeftGlow() -> ensureLeftGlow
    2646:2656:void ensureRightGlow() -> ensureRightGlow
    2659:2670:void ensureTopGlow() -> ensureTopGlow
    733:733:java.lang.String exceptionLabel() -> exceptionLabel
    4015:4023:void fillRemainingScrollValues(androidx.recyclerview.widget.RecyclerView$State) -> fillRemainingScrollValues
    5013:5025:android.view.View findChildViewUnder(float,float) -> findChildViewUnder
    4792:4797:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    4810:4811:androidx.recyclerview.widget.RecyclerView$ViewHolder findContainingViewHolder(android.view.View) -> findContainingViewHolder
    3147:3156:boolean findInterceptingOnItemTouchListener(android.view.MotionEvent) -> findInterceptingOnItemTouchListener
    4301:4324:void findMinMaxChildLayoutPositions(int[]) -> findMinMaxChildLayoutPositions
    5829:5844:androidx.recyclerview.widget.RecyclerView findNestedRecyclerView(android.view.View) -> findNestedRecyclerView
    3902:3925:android.view.View findNextViewToFocus() -> findNextViewToFocus
    4924:4941:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForAdapterPosition(int) -> findViewHolderForAdapterPosition
    4986:4987:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForItemId(long) -> findViewHolderForItemId
    4902:4902:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForLayoutPosition(int) -> findViewHolderForLayoutPosition
    4878:4878:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int) -> findViewHolderForPosition
    4946:4968:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolderForPosition(int,boolean) -> findViewHolderForPosition
    2438:2485:boolean fling(int,int) -> fling
    2748:2821:android.view.View focusSearch(android.view.View,int) -> focusSearch
    4505:4506:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    4513:4514:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    4521:4522:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    774:774:java.lang.CharSequence getAccessibilityClassName() -> getAccessibilityClassName
    1226:1226:androidx.recyclerview.widget.RecyclerView$Adapter getAdapter() -> getAdapter
    11497:11500:int getAdapterPositionFor(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getAdapterPositionFor
    1253:1256:int getBaseline() -> getBaseline
    4358:4358:long getChangedHolderKey(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> getChangedHolderKey
    4838:4839:int getChildAdapterPosition(android.view.View) -> getChildAdapterPosition
    13465:13468:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    4864:4865:long getChildItemId(android.view.View) -> getChildItemId
    4853:4854:int getChildLayoutPosition(android.view.View) -> getChildLayoutPosition
    4828:4828:int getChildPosition(android.view.View) -> getChildPosition
    4769:4774:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    4816:4819:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolderInt(android.view.View) -> getChildViewHolderInt
    1099:1099:boolean getClipToPadding() -> getClipToPadding
    759:759:androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate getCompatAccessibilityDelegate() -> getCompatAccessibilityDelegate
    5092:5093:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    5096:5102:void getDecoratedBoundsWithMarginsInt(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMarginsInt
    4003:4011:int getDeepestFocusedViewWithId(android.view.View) -> getDeepestFocusedViewWithId
    2713:2713:androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory getEdgeEffectFactory() -> getEdgeEffectFactory
    835:841:java.lang.String getFullClassName(android.content.Context,java.lang.String) -> getFullClassName
    3756:3756:androidx.recyclerview.widget.RecyclerView$ItemAnimator getItemAnimator() -> getItemAnimator
    5105:5126:android.graphics.Rect getItemDecorInsetsForChild(android.view.View) -> getItemDecorInsetsForChild
    1609:1611:androidx.recyclerview.widget.RecyclerView$ItemDecoration getItemDecorationAt(int) -> getItemDecorationAt
    1623:1623:int getItemDecorationCount() -> getItemDecorationCount
    1474:1474:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    2523:2523:int getMaxFlingVelocity() -> getMaxFlingVelocity
    2513:2513:int getMinFlingVelocity() -> getMinFlingVelocity
    5876:5879:long getNanoTime() -> getNanoTime
    1375:1375:androidx.recyclerview.widget.RecyclerView$OnFlingListener getOnFlingListener() -> getOnFlingListener
    4741:4741:boolean getPreserveFocusAfterLayout() -> getPreserveFocusAfterLayout
    1487:1487:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    1535:1535:int getScrollState() -> getScrollState
    13495:13498:androidx.core.view.NestedScrollingChildHelper getScrollingChildHelper() -> getScrollingChildHelper
    4255:4282:void handleMissingPreInfoForChangeError(long,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> handleMissingPreInfoForChangeError
    1070:1070:boolean hasFixedSize() -> hasFixedSize
    11558:11558:boolean hasNestedScrollingParent() -> hasNestedScrollingParent
    11563:11563:boolean hasNestedScrollingParent(int) -> hasNestedScrollingParent
    5229:5229:boolean hasPendingAdapterUpdates() -> hasPendingAdapterUpdates
    1906:1916:boolean hasUpdatedView() -> hasUpdatedView
    968:1048:void initAdapterManager() -> initAdapterManager
    747:751:void initAutofill() -> initAutofill
    845:965:void initChildrenHelper() -> initChildrenHelper
    11509:11513:void initFastScroller(android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable,android.graphics.drawable.StateListDrawable,android.graphics.drawable.Drawable) -> initFastScroller
    2686:2687:void invalidateGlows() -> invalidateGlows
    4718:4727:void invalidateItemDecorations() -> invalidateItemDecorations
    3671:3671:boolean isAccessibilityEnabled() -> isAccessibilityEnabled
    4536:4536:boolean isAnimating() -> isAnimating
    3019:3019:boolean isAttachedToWindow() -> isAttachedToWindow
    3705:3705:boolean isComputingLayout() -> isComputingLayout
    2281:2281:boolean isLayoutFrozen() -> isLayoutFrozen
    2242:2242:boolean isLayoutSuppressed() -> isLayoutSuppressed
    11533:11533:boolean isNestedScrollingEnabled() -> isNestedScrollingEnabled
    2834:2835:boolean isPreferredNextFocus(android.view.View,android.view.View,int) -> isPreferredNextFocus
    1755:1764:void jumpToPositionForSmoothScroller(int) -> jumpToPositionForSmoothScroller
    4419:4425:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    4702:4711:void markKnownViewsInvalid() -> markKnownViewsInvalid
    5078:5082:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    5040:5044:void offsetChildrenVertical(int) -> offsetChildrenVertical
    4599:4613:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    4565:4596:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    4617:4643:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    2960:2990:void onAttachedToWindow() -> onAttachedToWindow
    5057:5057:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    5069:5069:void onChildDetachedFromWindow(android.view.View) -> onChildDetachedFromWindow
    2994:3012:void onDetachedFromWindow() -> onDetachedFromWindow
    4490:4496:void onDraw(android.graphics.Canvas) -> onDraw
    3648:3649:void onEnterLayoutOrScroll() -> onEnterLayoutOrScroll
    3652:3653:void onExitLayoutOrScroll() -> onExitLayoutOrScroll
    3656:3668:void onExitLayoutOrScroll(boolean) -> onExitLayoutOrScroll
    3460:3505:boolean onGenericMotionEvent(android.view.MotionEvent) -> onGenericMotionEvent
    3161:3265:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    4403:4407:void onLayout(boolean,int,int,int,int) -> onLayout
    3510:3597:void onMeasure(int,int) -> onMeasure
    3448:3456:void onPointerUp(android.view.MotionEvent) -> onPointerUp
    2950:2955:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1394:1404:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1380:1389:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    5191:5191:void onScrollStateChanged(int) -> onScrollStateChanged
    5151:5151:void onScrolled(int,int) -> onScrolled
    3618:3623:void onSizeChanged(int,int,int,int) -> onSizeChanged
    3280:3281:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    3764:3768:void postAnimationRunner() -> postAnimationRunner
    3771:3771:boolean predictiveItemAnimationsEnabled() -> predictiveItemAnimationsEnabled
    3781:3809:void processAdapterUpdatesAndSetAnimationFlags() -> processAdapterUpdatesAndSetAnimationFlags
    4692:4695:void processDataSetCompletelyChanged(boolean) -> processDataSetCompletelyChanged
    2530:2554:void pullGlows(float,float,float,float) -> pullGlows
    4291:4298:void recordAnimationInfoIfBouncedHiddenView(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> recordAnimationInfoIfBouncedHiddenView
    3929:3936:void recoverFocusFromState() -> recoverFocusFromState
    2557:2577:void releaseGlows() -> releaseGlows
    1171:1184:void removeAndRecycleViews() -> removeAndRecycleViews
    1451:1463:boolean removeAnimatingView(android.view.View) -> removeAnimatingView
    4334:4351:void removeDetachedView(android.view.View,boolean) -> removeDetachedView
    1650:1660:void removeItemDecoration(androidx.recyclerview.widget.RecyclerView$ItemDecoration) -> removeItemDecoration
    1632:1634:void removeItemDecorationAt(int) -> removeItemDecorationAt
    1286:1290:void removeOnChildAttachStateChangeListener(androidx.recyclerview.widget.RecyclerView$OnChildAttachStateChangeListener) -> removeOnChildAttachStateChangeListener
    3088:3092:void removeOnItemTouchListener(androidx.recyclerview.widget.RecyclerView$OnItemTouchListener) -> removeOnItemTouchListener
    1718:1721:void removeOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> removeOnScrollListener
    5513:5528:void repositionShadowingViews() -> repositionShadowingViews
    2893:2897:void requestChildFocus(android.view.View,android.view.View) -> requestChildFocus
    2909:2934:void requestChildOnScreen(android.view.View,android.view.View) -> requestChildOnScreen
    2938:2938:boolean requestChildRectangleOnScreen(android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    3270:3276:void requestDisallowInterceptTouchEvent(boolean) -> requestDisallowInterceptTouchEvent
    4411:4416:void requestLayout() -> requestLayout
    3887:3890:void resetFocusInfo() -> resetFocusInfo
    3435:3440:void resetScroll() -> resetScroll
    3866:3884:void saveFocusInfo() -> saveFocusInfo
    4540:4551:void saveOldPositions() -> saveOldPositions
    1801:1814:void scrollBy(int,int) -> scrollBy
    1931:1976:boolean scrollByInternal(int,int,android.view.MotionEvent) -> scrollByInternal
    1829:1854:void scrollStep(int,int,int[]) -> scrollStep
    1795:1797:void scrollTo(int,int) -> scrollTo
    1741:1752:void scrollToPosition(int) -> scrollToPosition
    3733:3737:void sendAccessibilityEventUnchecked(android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    768:770:void setAccessibilityDelegateCompat(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> setAccessibilityDelegateCompat
    1160:1164:void setAdapter(androidx.recyclerview.widget.RecyclerView$Adapter) -> setAdapter
    1197:1216:void setAdapterInternal(androidx.recyclerview.widget.RecyclerView$Adapter,boolean,boolean) -> setAdapterInternal
    1676:1681:void setChildDrawingOrderCallback(androidx.recyclerview.widget.RecyclerView$ChildDrawingOrderCallback) -> setChildDrawingOrderCallback
    11470:11476:boolean setChildImportantForAccessibilityInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setChildImportantForAccessibilityInternal
    1075:1083:void setClipToPadding(boolean) -> setClipToPadding
    2699:2702:void setEdgeEffectFactory(androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory) -> setEdgeEffectFactory
    1062:1063:void setHasFixedSize(boolean) -> setHasFixedSize
    3637:3645:void setItemAnimator(androidx.recyclerview.widget.RecyclerView$ItemAnimator) -> setItemAnimator
    1525:1526:void setItemViewCacheSize(int) -> setItemViewCacheSize
    2271:2272:void setLayoutFrozen(boolean) -> setLayoutFrozen
    1315:1354:void setLayoutManager(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> setLayoutManager
    2290:2313:void setLayoutTransition(android.animation.LayoutTransition) -> setLayoutTransition
    11528:11529:void setNestedScrollingEnabled(boolean) -> setNestedScrollingEnabled
    1365:1366:void setOnFlingListener(androidx.recyclerview.widget.RecyclerView$OnFlingListener) -> setOnFlingListener
    1693:1694:void setOnScrollListener(androidx.recyclerview.widget.RecyclerView$OnScrollListener) -> setOnScrollListener
    4759:4760:void setPreserveFocusAfterLayout(boolean) -> setPreserveFocusAfterLayout
    1499:1500:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    1240:1241:void setRecyclerListener(androidx.recyclerview.widget.RecyclerView$RecyclerListener) -> setRecyclerListener
    1539:1551:void setScrollState(int) -> setScrollState
    1112:1126:void setScrollingTouchSlop(int) -> setScrollingTouchSlop
    1510:1511:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    3717:3728:boolean shouldDeferAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> shouldDeferAccessibilityEvent
    2326:2327:void smoothScrollBy(int,int) -> smoothScrollBy
    2338:2339:void smoothScrollBy(int,int,android.view.animation.Interpolator) -> smoothScrollBy
    2356:2357:void smoothScrollBy(int,int,android.view.animation.Interpolator,int) -> smoothScrollBy
    2390:2422:void smoothScrollBy(int,int,android.view.animation.Interpolator,int,boolean) -> smoothScrollBy
    1782:1791:void smoothScrollToPosition(int) -> smoothScrollToPosition
    2137:2141:void startInterceptRequestLayout() -> startInterceptRequestLayout
    11538:11538:boolean startNestedScroll(int) -> startNestedScroll
    11543:11543:boolean startNestedScroll(int,int) -> startNestedScroll
    2154:2185:void stopInterceptRequestLayout(boolean) -> stopInterceptRequestLayout
    11548:11549:void stopNestedScroll() -> stopNestedScroll
    11553:11554:void stopNestedScroll(int) -> stopNestedScroll
    2493:2495:void stopScroll() -> stopScroll
    2501:2505:void stopScrollersInternal() -> stopScrollersInternal
    2214:2232:void suppressLayout(boolean) -> suppressLayout
    1144:1148:void swapAdapter(androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> swapAdapter
    4652:4671:void viewRangeUpdate(int,int,java.lang.Object) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$1 -> androidx.recyclerview.widget.RecyclerView$1:
    398:398:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    401:403:void run() -> run
androidx.recyclerview.widget.RecyclerView$2 -> androidx.recyclerview.widget.RecyclerView$2:
    588:588:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    591:595:void run() -> run
androidx.recyclerview.widget.RecyclerView$3 -> androidx.recyclerview.widget.RecyclerView$3:
    598:598:void <init>() -> <init>
    601:602:float getInterpolation(float) -> getInterpolation
androidx.recyclerview.widget.RecyclerView$4 -> androidx.recyclerview.widget.RecyclerView$4:
    610:610:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    620:621:void processAppeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processAppeared
    614:616:void processDisappeared(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processDisappeared
    626:638:void processPersistent(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> processPersistent
    641:642:void unused(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unused
androidx.recyclerview.widget.RecyclerView$5 -> androidx.recyclerview.widget.RecyclerView$5:
    845:845:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    856:861:void addView(android.view.View,int) -> addView
    916:928:void attachViewToParent(android.view.View,int,android.view.ViewGroup$LayoutParams) -> attachViewToParent
    932:947:void detachViewFromParent(int) -> detachViewFromParent
    890:890:android.view.View getChildAt(int) -> getChildAt
    848:848:int getChildCount() -> getChildCount
    910:910:androidx.recyclerview.widget.RecyclerView$ViewHolder getChildViewHolder(android.view.View) -> getChildViewHolder
    865:865:int indexOfChild(android.view.View) -> indexOfChild
    951:955:void onEnteredHiddenState(android.view.View) -> onEnteredHiddenState
    959:963:void onLeftHiddenState(android.view.View) -> onLeftHiddenState
    895:906:void removeAllViews() -> removeAllViews
    870:886:void removeViewAt(int) -> removeViewAt
androidx.recyclerview.widget.RecyclerView$6 -> androidx.recyclerview.widget.RecyclerView$6:
    968:968:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    1013:1028:void dispatchUpdate(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> dispatchUpdate
    971:983:androidx.recyclerview.widget.RecyclerView$ViewHolder findViewHolder(int) -> findViewHolder
    1003:1005:void markViewHoldersUpdated(int,int,java.lang.Object) -> markViewHoldersUpdated
    1037:1039:void offsetPositionsForAdd(int,int) -> offsetPositionsForAdd
    1043:1046:void offsetPositionsForMove(int,int) -> offsetPositionsForMove
    988:991:void offsetPositionsForRemovingInvisible(int,int) -> offsetPositionsForRemovingInvisible
    996:998:void offsetPositionsForRemovingLaidOutOrNewView(int,int) -> offsetPositionsForRemovingLaidOutOrNewView
    1009:1010:void onDispatchFirstPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchFirstPass
    1032:1033:void onDispatchSecondPass(androidx.recyclerview.widget.AdapterHelper$UpdateOp) -> onDispatchSecondPass
androidx.recyclerview.widget.RecyclerView$Adapter -> androidx.recyclerview.widget.RecyclerView$Adapter:
    6984:6986:void <init>() -> <init>
    7099:7114:void bindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> bindViewHolder
    7077:7088:androidx.recyclerview.widget.RecyclerView$ViewHolder createViewHolder(android.view.ViewGroup,int) -> createViewHolder
    7157:7157:long getItemId(int) -> getItemId
    7129:7129:int getItemViewType(int) -> getItemViewType
    7267:7267:boolean hasObservers() -> hasObservers
    7175:7175:boolean hasStableIds() -> hasStableIds
    7354:7355:void notifyDataSetChanged() -> notifyDataSetChanged
    7370:7371:void notifyItemChanged(int) -> notifyItemChanged
    7398:7399:void notifyItemChanged(int,java.lang.Object) -> notifyItemChanged
    7464:7465:void notifyItemInserted(int) -> notifyItemInserted
    7479:7480:void notifyItemMoved(int,int) -> notifyItemMoved
    7416:7417:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    7447:7448:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    7498:7499:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    7532:7533:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
    7515:7516:void notifyItemRemoved(int) -> notifyItemRemoved
    7313:7313:void onAttachedToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onAttachedToRecyclerView
    7065:7066:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> onBindViewHolder
    7322:7322:void onDetachedFromRecyclerView(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromRecyclerView
    7233:7233:boolean onFailedToRecycleView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onFailedToRecycleView
    7247:7247:void onViewAttachedToWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewAttachedToWindow
    7259:7259:void onViewDetachedFromWindow(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetachedFromWindow
    7196:7196:void onViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewRecycled
    7287:7288:void registerAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> registerAdapterDataObserver
    7141:7142:void setHasStableIds(boolean) -> setHasStableIds
    7301:7302:void unregisterAdapterDataObserver(androidx.recyclerview.widget.RecyclerView$AdapterDataObserver) -> unregisterAdapterDataObserver
androidx.recyclerview.widget.RecyclerView$AdapterDataObservable -> androidx.recyclerview.widget.RecyclerView$AdapterDataObservable:
    12242:12242:void <init>() -> <init>
    12244:12244:boolean hasObservers() -> hasObservers
    12252:12255:void notifyChanged() -> notifyChanged
    12293:12296:void notifyItemMoved(int,int) -> notifyItemMoved
    12258:12259:void notifyItemRangeChanged(int,int) -> notifyItemRangeChanged
    12267:12270:void notifyItemRangeChanged(int,int,java.lang.Object) -> notifyItemRangeChanged
    12277:12280:void notifyItemRangeInserted(int,int) -> notifyItemRangeInserted
    12287:12290:void notifyItemRangeRemoved(int,int) -> notifyItemRangeRemoved
androidx.recyclerview.widget.RecyclerView$AdapterDataObserver -> androidx.recyclerview.widget.RecyclerView$AdapterDataObserver:
    11721:11721:void <init>() -> <init>
    11724:11724:void onChanged() -> onChanged
    11728:11728:void onItemRangeChanged(int,int) -> onItemRangeChanged
    11733:11734:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    11738:11738:void onItemRangeInserted(int,int) -> onItemRangeInserted
    11746:11746:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    11742:11742:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory -> androidx.recyclerview.widget.RecyclerView$EdgeEffectFactory:
    5592:5592:void <init>() -> <init>
    5623:5623:android.widget.EdgeEffect createEdgeEffect(androidx.recyclerview.widget.RecyclerView,int) -> createEdgeEffect
androidx.recyclerview.widget.RecyclerView$ItemAnimator -> androidx.recyclerview.widget.RecyclerView$ItemAnimator:
    12728:12791:void <init>() -> <init>
    13113:13124:int buildAdapterChangeFlagsForAnimations(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> buildAdapterChangeFlagsForAnimations
    13302:13302:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    13332:13332:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,java.util.List) -> canReuseUpdatedViewHolder
    13197:13201:void dispatchAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationFinished
    13238:13239:void dispatchAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAnimationStarted
    13340:13345:void dispatchAnimationsFinished() -> dispatchAnimationsFinished
    12817:12817:long getAddDuration() -> getAddDuration
    12853:12853:long getChangeDuration() -> getChangeDuration
    12799:12799:long getMoveDuration() -> getMoveDuration
    12835:12835:long getRemoveDuration() -> getRemoveDuration
    13269:13277:boolean isRunning(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorFinishedListener) -> isRunning
    13358:13358:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo obtainHolderInfo() -> obtainHolderInfo
    13212:13212:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
    13250:13250:void onAnimationStarted(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationStarted
    12942:12942:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPostLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recordPostLayoutInformation
    12913:12913:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo recordPreLayoutInformation(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$ViewHolder,int,java.util.List) -> recordPreLayoutInformation
    12826:12827:void setAddDuration(long) -> setAddDuration
    12862:12863:void setChangeDuration(long) -> setChangeDuration
    12874:12875:void setListener(androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemAnimatorListener) -> setListener
    12808:12809:void setMoveDuration(long) -> setMoveDuration
    12844:12845:void setRemoveDuration(long) -> setRemoveDuration
androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo -> androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo:
    13425:13426:void <init>() -> <init>
    13437:13437:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> setFrom
    13453:13458:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo setFrom(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> setFrom
androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener -> androidx.recyclerview.widget.RecyclerView$ItemAnimatorRestoreListener:
    12686:12687:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    12691:12703:void onAnimationFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAnimationFinished
androidx.recyclerview.widget.RecyclerView$ItemDecoration -> androidx.recyclerview.widget.RecyclerView$ItemDecoration:
    10705:10705:void <init>() -> <init>
    10757:10758:void getItemOffsets(android.graphics.Rect,int,androidx.recyclerview.widget.RecyclerView) -> getItemOffsets
    10782:10784:void getItemOffsets(android.graphics.Rect,android.view.View,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> getItemOffsets
    10716:10717:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDraw
    10725:10725:void onDraw(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDraw
    10738:10739:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State) -> onDrawOver
    10747:10747:void onDrawOver(android.graphics.Canvas,androidx.recyclerview.widget.RecyclerView) -> onDrawOver
androidx.recyclerview.widget.RecyclerView$LayoutManager -> androidx.recyclerview.widget.RecyclerView$LayoutManager:
    7582:7688:void <init>() -> <init>
    8518:8519:void addDisappearingView(android.view.View) -> addDisappearingView
    8536:8537:void addDisappearingView(android.view.View,int) -> addDisappearingView
    8547:8548:void addView(android.view.View) -> addView
    8559:8560:void addView(android.view.View,int) -> addView
    8563:8614:void addViewInt(android.view.View,int,boolean) -> addViewInt
    7860:7863:void assertInLayoutOrScroll(java.lang.String) -> assertInLayoutOrScroll
    7897:7900:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    8804:8814:void attachView(android.view.View,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> attachView
    8825:8826:void attachView(android.view.View,int) -> attachView
    8836:8837:void attachView(android.view.View) -> attachView
    9707:9713:void calculateItemDecorationsForChild(android.view.View,android.graphics.Rect) -> calculateItemDecorationsForChild
    8415:8415:boolean canScrollHorizontally() -> canScrollHorizontally
    8425:8425:boolean canScrollVertically() -> canScrollVertically
    8330:8330:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    7876:7882:int chooseSize(int,int,int) -> chooseSize
    8082:8082:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    8110:8110:void collectInitialPrefetchPositions(int,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectInitialPrefetchPositions
    10153:10153:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    10168:10168:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    10183:10183:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    10198:10198:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    10213:10213:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    10228:10228:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    9192:9197:void detachAndScrapAttachedViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapAttachedViews
    8875:8877:void detachAndScrapView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapView
    8889:8891:void detachAndScrapViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> detachAndScrapViewAt
    8762:8766:void detachView(android.view.View) -> detachView
    8784:8785:void detachViewAt(int) -> detachViewAt
    8791:8792:void detachViewInternal(int,android.view.View) -> detachViewInternal
    8113:8115:void dispatchAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> dispatchAttachedToWindow
    8118:8120:void dispatchDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> dispatchDetachedFromWindow
    8499:8502:void endAnimation(android.view.View) -> endAnimation
    8703:8713:android.view.View findContainingItemView(android.view.View) -> findContainingItemView
    8731:8743:android.view.View findViewByPosition(int) -> findViewByPosition
    8347:8352:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    8371:8371:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    8662:8662:int getBaseline() -> getBaseline
    9742:9742:int getBottomDecorationHeight(android.view.View) -> getBottomDecorationHeight
    8933:8933:android.view.View getChildAt(int) -> getChildAt
    8923:8923:int getChildCount() -> getChildCount
    9403:9429:int getChildMeasureSpec(int,int,int,boolean) -> getChildMeasureSpec
    9446:9487:int getChildMeasureSpec(int,int,int,int,boolean) -> getChildMeasureSpec
    9834:9867:int[] getChildRectangleOnScreenScrollAmount(android.view.View,android.graphics.Rect) -> getChildRectangleOnScreenScrollAmount
    8230:8230:boolean getClipToPadding() -> getClipToPadding
    10528:10529:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    9686:9686:int getDecoratedBottom(android.view.View) -> getDecoratedBottom
    9638:9639:void getDecoratedBoundsWithMargins(android.view.View,android.graphics.Rect) -> getDecoratedBoundsWithMargins
    9650:9650:int getDecoratedLeft(android.view.View) -> getDecoratedLeft
    9514:9515:int getDecoratedMeasuredHeight(android.view.View) -> getDecoratedMeasuredHeight
    9500:9501:int getDecoratedMeasuredWidth(android.view.View) -> getDecoratedMeasuredWidth
    9674:9674:int getDecoratedRight(android.view.View) -> getDecoratedRight
    9662:9662:int getDecoratedTop(android.view.View) -> getDecoratedTop
    9089:9094:android.view.View getFocusedChild() -> getFocusedChild
    8999:8999:int getHeight() -> getHeight
    8967:8967:int getHeightMode() -> getHeightMode
    9112:9113:int getItemCount() -> getItemCount
    8683:8683:int getItemViewType(android.view.View) -> getItemViewType
    8489:8489:int getLayoutDirection() -> getLayoutDirection
    9757:9757:int getLeftDecorationWidth(android.view.View) -> getLeftDecorationWidth
    10283:10283:int getMinimumHeight() -> getMinimumHeight
    10275:10275:int getMinimumWidth() -> getMinimumWidth
    9039:9039:int getPaddingBottom() -> getPaddingBottom
    9059:9059:int getPaddingEnd() -> getPaddingEnd
    9009:9009:int getPaddingLeft() -> getPaddingLeft
    9029:9029:int getPaddingRight() -> getPaddingRight
    9049:9049:int getPaddingStart() -> getPaddingStart
    9019:9019:int getPaddingTop() -> getPaddingTop
    8673:8673:int getPosition(android.view.View) -> getPosition
    10635:10644:androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties getProperties(android.content.Context,android.util.AttributeSet,int,int) -> getProperties
    9772:9772:int getRightDecorationWidth(android.view.View) -> getRightDecorationWidth
    10508:10509:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    10492:10492:int getSelectionModeForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getSelectionModeForAccessibility
    9727:9727:int getTopDecorationHeight(android.view.View) -> getTopDecorationHeight
    9605:9628:void getTransformedBoundingBox(android.view.View,boolean,android.graphics.Rect) -> getTransformedBoundingBox
    8983:8983:int getWidth() -> getWidth
    8950:8950:int getWidthMode() -> getWidthMode
    10669:10677:boolean hasFlexibleChildInBothOrientations() -> hasFlexibleChildInBothOrientations
    9079:9079:boolean hasFocus() -> hasFocus
    9157:9161:void ignoreView(android.view.View) -> ignoreView
    8130:8130:boolean isAttachedToWindow() -> isAttachedToWindow
    7991:7991:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    9069:9069:boolean isFocused() -> isFocused
    9966:9979:boolean isFocusedChildVisibleAfterScrolling(androidx.recyclerview.widget.RecyclerView,int,int) -> isFocusedChildVisibleAfterScrolling
    8058:8058:boolean isItemPrefetchEnabled() -> isItemPrefetchEnabled
    10545:10545:boolean isLayoutHierarchical(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> isLayoutHierarchical
    9324:9324:boolean isMeasurementCacheEnabled() -> isMeasurementCacheEnabled
    9340:9349:boolean isMeasurementUpToDate(int,int,int) -> isMeasurementUpToDate
    8477:8477:boolean isSmoothScrolling() -> isSmoothScrolling
    9944:9952:boolean isViewPartiallyVisible(android.view.View,boolean,boolean) -> isViewPartiallyVisible
    9549:9552:void layoutDecorated(android.view.View,int,int,int,int) -> layoutDecorated
    9585:9590:void layoutDecoratedWithMargins(android.view.View,int,int,int,int) -> layoutDecoratedWithMargins
    9270:9284:void measureChild(android.view.View,int,int) -> measureChild
    9369:9386:void measureChildWithMargins(android.view.View,int,int) -> measureChildWithMargins
    8856:8859:void moveView(int,int) -> moveView
    9123:9126:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    9135:9138:void offsetChildrenVertical(int) -> offsetChildrenVertical
    10031:10031:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter) -> onAdapterChanged
    10059:10059:boolean onAddFocusables(androidx.recyclerview.widget.RecyclerView,java.util.ArrayList,int,int) -> onAddFocusables
    8185:8185:void onAttachedToWindow(androidx.recyclerview.widget.RecyclerView) -> onAttachedToWindow
    8194:8194:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView) -> onDetachedFromWindow
    8221:8222:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    9800:9800:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    10397:10398:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10413:10414:void onInitializeAccessibilityEvent(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    10348:10349:void onInitializeAccessibilityNodeInfo(androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10378:10393:void onInitializeAccessibilityNodeInfo(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    10428:10434:void onInitializeAccessibilityNodeInfoForItem(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    10453:10459:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    9821:9821:android.view.View onInterceptFocusSearch(android.view.View,int) -> onInterceptFocusSearch
    10083:10083:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    10070:10070:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    10138:10138:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    10094:10094:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    10107:10107:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsUpdated
    10120:10121:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    8285:8286:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    8300:8300:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    10256:10257:void onMeasure(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,int) -> onMeasure
    9991:9991:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,android.view.View,android.view.View) -> onRequestChildFocus
    10013:10013:boolean onRequestChildFocus(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,android.view.View,android.view.View) -> onRequestChildFocus
    10303:10303:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    10297:10297:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    10323:10323:void onScrollStateChanged(int) -> onScrollStateChanged
    10312:10315:void onSmoothScrollerStopped(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> onSmoothScrollerStopped
    10550:10550:boolean performAccessibilityAction(int,android.os.Bundle) -> performAccessibilityAction
    10566:10592:boolean performAccessibilityAction(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,int,android.os.Bundle) -> performAccessibilityAction
    10598:10598:boolean performAccessibilityActionForItem(android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    10619:10619:boolean performAccessibilityActionForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,int,android.os.Bundle) -> performAccessibilityActionForItem
    8144:8147:void postOnAnimation(java.lang.Runnable) -> postOnAnimation
    8649:8653:void removeAllViews() -> removeAllViews
    10338:10344:void removeAndRecycleAllViews(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleAllViews
    9228:9255:void removeAndRecycleScrapInt(androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleScrapInt
    8900:8902:void removeAndRecycleView(android.view.View,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleView
    8911:8914:void removeAndRecycleViewAt(int,androidx.recyclerview.widget.RecyclerView$Recycler) -> removeAndRecycleViewAt
    8164:8167:boolean removeCallbacks(java.lang.Runnable) -> removeCallbacks
    8846:8847:void removeDetachedView(android.view.View) -> removeDetachedView
    8625:8626:void removeView(android.view.View) -> removeView
    8637:8641:void removeViewAt(int) -> removeViewAt
    9886:9886:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean) -> requestChildRectangleOnScreen
    9906:9917:boolean requestChildRectangleOnScreen(androidx.recyclerview.widget.RecyclerView,android.view.View,android.graphics.Rect,boolean,boolean) -> requestChildRectangleOnScreen
    7847:7850:void requestLayout() -> requestLayout
    10472:10473:void requestSimpleAnimationsInNextLayout() -> requestSimpleAnimationsInNextLayout
    9200:9216:void scrapOrRecycleView(androidx.recyclerview.widget.RecyclerView$Recycler,int,android.view.View) -> scrapOrRecycleView
    8388:8388:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    8438:8438:void scrollToPosition(int) -> scrollToPosition
    8405:8405:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    7918:7919:void setAutoMeasureEnabled(boolean) -> setAutoMeasureEnabled
    10648:10652:void setExactMeasureSpecsFrom(androidx.recyclerview.widget.RecyclerView) -> setExactMeasureSpecsFrom
    8040:8047:void setItemPrefetchEnabled(boolean) -> setItemPrefetchEnabled
    7757:7768:void setMeasureSpecs(int,int) -> setMeasureSpecs
    7836:7841:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    10267:10268:void setMeasuredDimension(int,int) -> setMeasuredDimension
    7784:7813:void setMeasuredDimensionFromChildren(int,int) -> setMeasuredDimensionFromChildren
    9336:9337:void setMeasurementCacheEnabled(boolean) -> setMeasurementCacheEnabled
    7741:7754:void setRecyclerView(androidx.recyclerview.widget.RecyclerView) -> setRecyclerView
    9307:9307:boolean shouldMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldMeasureChild
    10665:10665:boolean shouldMeasureTwice() -> shouldMeasureTwice
    9293:9293:boolean shouldReMeasureChild(android.view.View,int,int,androidx.recyclerview.widget.RecyclerView$LayoutParams) -> shouldReMeasureChild
    8451:8452:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    8465:8471:void startSmoothScroll(androidx.recyclerview.widget.RecyclerView$SmoothScroller) -> startSmoothScroll
    9178:9182:void stopIgnoringView(android.view.View) -> stopIgnoringView
    10306:10309:void stopSmoothScroller() -> stopSmoothScroller
    8017:8017:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
androidx.recyclerview.widget.RecyclerView$LayoutManager$1 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$1:
    7591:7591:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7594:7594:android.view.View getChildAt(int) -> getChildAt
    7616:7618:int getChildEnd(android.view.View) -> getChildEnd
    7609:7611:int getChildStart(android.view.View) -> getChildStart
    7604:7604:int getParentEnd() -> getParentEnd
    7599:7599:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$2 -> androidx.recyclerview.widget.RecyclerView$LayoutManager$2:
    7627:7627:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> <init>
    7630:7630:android.view.View getChildAt(int) -> getChildAt
    7653:7655:int getChildEnd(android.view.View) -> getChildEnd
    7646:7648:int getChildStart(android.view.View) -> getChildStart
    7640:7640:int getParentEnd() -> getParentEnd
    7635:7635:int getParentStart() -> getParentStart
androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties -> androidx.recyclerview.widget.RecyclerView$LayoutManager$Properties:
    10683:10683:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$LayoutParams -> androidx.recyclerview.widget.RecyclerView$LayoutParams:
    11625:11626:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    11629:11630:void <init>(int,int) -> <init>
    11633:11634:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    11637:11638:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    11641:11642:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    11713:11713:int getViewAdapterPosition() -> getViewAdapterPosition
    11701:11701:int getViewLayoutPosition() -> getViewLayoutPosition
    11691:11691:int getViewPosition() -> getViewPosition
    11683:11683:boolean isItemChanged() -> isItemChanged
    11672:11672:boolean isItemRemoved() -> isItemRemoved
    11661:11661:boolean isViewInvalid() -> isViewInvalid
    11651:11651:boolean viewNeedsUpdate() -> viewNeedsUpdate
androidx.recyclerview.widget.RecyclerView$OnFlingListener -> androidx.recyclerview.widget.RecyclerView$OnFlingListener:
    12663:12663:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$OnScrollListener -> androidx.recyclerview.widget.RecyclerView$OnScrollListener:
    10870:10870:void <init>() -> <init>
    10878:10878:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    10891:10891:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.RecyclerView$RecycledViewPool -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool:
    5635:5660:void <init>() -> <init>
    5782:5783:void attach() -> attach
    5666:5670:void clear() -> clear
    5786:5787:void detach() -> detach
    5766:5769:void factorInBindTime(int,long) -> factorInBindTime
    5760:5763:void factorInCreateTime(int,long) -> factorInCreateTime
    5704:5713:androidx.recyclerview.widget.RecyclerView$ViewHolder getRecycledView(int) -> getRecycledView
    5691:5691:int getRecycledViewCount(int) -> getRecycledViewCount
    5815:5820:androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData getScrapDataForType(int) -> getScrapDataForType
    5803:5812:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    5740:5750:void putRecycledView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> putRecycledView
    5753:5756:long runningAverage(long,long) -> runningAverage
    5679:5685:void setMaxRecycledViews(int,int) -> setMaxRecycledViews
    5722:5729:int size() -> size
    5777:5778:boolean willBindInTime(int,long,long) -> willBindInTime
    5772:5773:boolean willCreateInTime(int,long,long) -> willCreateInTime
androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData -> androidx.recyclerview.widget.RecyclerView$RecycledViewPool$ScrapData:
    5652:5656:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$Recycler -> androidx.recyclerview.widget.RecyclerView$Recycler:
    5896:5906:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    6524:6542:void addViewHolderToRecycledViewPool(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> addViewHolderToRecycledViewPool
    6299:6318:void attachAccessibilityDelegateOnBind(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> attachAccessibilityDelegateOnBind
    6038:6042:void bindViewToPosition(android.view.View,int) -> bindViewToPosition
    5919:5921:void clear() -> clear
    6911:6926:void clearOldPositions() -> clearOldPositions
    6612:6616:void clearScrap() -> clearScrap
    6088:6090:int convertPreLayoutPositionToPostLayout(int) -> convertPreLayoutPositionToPostLayout
    6765:6775:void dispatchViewRecycled(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchViewRecycled
    6621:6622:androidx.recyclerview.widget.RecyclerView$ViewHolder getChangedScrapViewForPosition(int) -> getChangedScrapViewForPosition
    6869:6872:androidx.recyclerview.widget.RecyclerView$RecycledViewPool getRecycledViewPool() -> getRecycledViewPool
    6604:6604:int getScrapCount() -> getScrapCount
    5951:5951:java.util.List getScrapList() -> getScrapList
    6712:6760:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrCachedViewForId(long,int,boolean) -> getScrapOrCachedViewForId
    6657:6707:androidx.recyclerview.widget.RecyclerView$ViewHolder getScrapOrHiddenOrCachedHolderForPosition(int,boolean) -> getScrapOrHiddenOrCachedHolderForPosition
    6608:6608:android.view.View getScrapViewAt(int) -> getScrapViewAt
    6114:6114:android.view.View getViewForPosition(int) -> getViewForPosition
    6118:6118:android.view.View getViewForPosition(int,boolean) -> getViewForPosition
    6321:6324:void invalidateDisplayListInt(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> invalidateDisplayListInt
    6327:6345:void invalidateDisplayListInt(android.view.ViewGroup,boolean) -> invalidateDisplayListInt
    6929:6937:void markItemDecorInsetsDirty() -> markItemDecorInsetsDirty
    6895:6908:void markKnownViewsInvalid() -> markKnownViewsInvalid
    6813:6824:void offsetPositionRecordsForInsert(int,int) -> offsetPositionRecordsForInsert
    6785:6810:void offsetPositionRecordsForMove(int,int) -> offsetPositionRecordsForMove
    6833:6852:void offsetPositionRecordsForRemove(int,int,boolean) -> offsetPositionRecordsForRemove
    6779:6781:void onAdapterChanged(androidx.recyclerview.widget.RecyclerView$Adapter,androidx.recyclerview.widget.RecyclerView$Adapter,boolean) -> onAdapterChanged
    6550:6555:void quickRecycleScrapView(android.view.View) -> quickRecycleScrapView
    6390:6398:void recycleAndClearCachedViews() -> recycleAndClearCachedViews
    6415:6421:void recycleCachedViewAt(int) -> recycleCachedViewAt
    6360:6387:void recycleView(android.view.View) -> recycleView
    6429:6433:void recycleViewHolderInternal(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> recycleViewHolderInternal
    6567:6584:void scrapView(android.view.View) -> scrapView
    6859:6866:void setRecycledViewPool(androidx.recyclerview.widget.RecyclerView$RecycledViewPool) -> setRecycledViewPool
    6855:6856:void setViewCacheExtension(androidx.recyclerview.widget.RecyclerView$ViewCacheExtension) -> setViewCacheExtension
    5929:5931:void setViewCacheSize(int) -> setViewCacheSize
    6004:6019:boolean tryBindViewHolderByDeadline(androidx.recyclerview.widget.RecyclerView$ViewHolder,int,int,long) -> tryBindViewHolderByDeadline
    6142:6145:androidx.recyclerview.widget.RecyclerView$ViewHolder tryGetViewHolderForPositionByDeadline(int,boolean,long) -> tryGetViewHolderForPositionByDeadline
    6593:6601:void unscrapView(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> unscrapView
    5934:5942:void updateViewCacheSize() -> updateViewCacheSize
    5965:5974:boolean validateViewHolderForOffsetPosition(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> validateViewHolderForOffsetPosition
    6876:6892:void viewRangeUpdate(int,int) -> viewRangeUpdate
androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver -> androidx.recyclerview.widget.RecyclerView$RecyclerViewDataObserver:
    5531:5532:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5536:5543:void onChanged() -> onChanged
    5547:5551:void onItemRangeChanged(int,int,java.lang.Object) -> onItemRangeChanged
    5555:5559:void onItemRangeInserted(int,int) -> onItemRangeInserted
    5571:5575:void onItemRangeMoved(int,int,int) -> onItemRangeMoved
    5563:5567:void onItemRangeRemoved(int,int) -> onItemRangeRemoved
    5578:5584:void triggerUpdateProcessor() -> triggerUpdateProcessor
androidx.recyclerview.widget.RecyclerView$SavedState -> androidx.recyclerview.widget.RecyclerView$SavedState:
    12334:12334:void <clinit>() -> <clinit>
    12312:12315:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    12321:12322:void <init>(android.os.Parcelable) -> <init>
    12331:12332:void copyFrom(androidx.recyclerview.widget.RecyclerView$SavedState) -> copyFrom
    12326:12328:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.RecyclerView$SavedState$1 -> androidx.recyclerview.widget.RecyclerView$SavedState$1:
    12334:12334:void <init>() -> <init>
    12334:12334:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    12334:12334:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12337:12337:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    12342:12342:androidx.recyclerview.widget.RecyclerView$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    12334:12334:java.lang.Object[] newArray(int) -> newArray
    12347:12347:androidx.recyclerview.widget.RecyclerView$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener -> androidx.recyclerview.widget.RecyclerView$SimpleOnItemTouchListener:
    10846:10846:void <init>() -> <init>
    10849:10849:boolean onInterceptTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onInterceptTouchEvent
    10858:10858:void onRequestDisallowInterceptTouchEvent(boolean) -> onRequestDisallowInterceptTouchEvent
    10854:10854:void onTouchEvent(androidx.recyclerview.widget.RecyclerView,android.view.MotionEvent) -> onTouchEvent
androidx.recyclerview.widget.RecyclerView$SmoothScroller -> androidx.recyclerview.widget.RecyclerView$SmoothScroller:
    11776:11778:void <init>() -> <init>
    11835:11842:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    11972:11972:android.view.View findViewByPosition(int) -> findViewByPosition
    11965:11965:int getChildCount() -> getChildCount
    11958:11958:int getChildPosition(android.view.View) -> getChildPosition
    11851:11851:androidx.recyclerview.widget.RecyclerView$LayoutManager getLayoutManager() -> getLayoutManager
    11903:11903:int getTargetPosition() -> getTargetPosition
    11981:11982:void instantScrollToPosition(int) -> instantScrollToPosition
    11885:11885:boolean isPendingInitialRun() -> isPendingInitialRun
    11893:11893:boolean isRunning() -> isRunning
    11998:12002:void normalize(android.graphics.PointF) -> normalize
    11907:11952:void onAnimation(int,int) -> onAnimation
    11985:11991:void onChildAttachedToWindow(android.view.View) -> onChildAttachedToWindow
    11820:11821:void setTargetPosition(int) -> setTargetPosition
    11795:11807:void start(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$LayoutManager) -> start
    11861:11875:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action -> androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action:
    12070:12071:void <init>(int,int) -> <init>
    12079:12080:void <init>(int,int,int) -> <init>
    12090:12095:void <init>(int,int,int,android.view.animation.Interpolator) -> <init>
    12174:12174:int getDuration() -> getDuration
    12155:12155:int getDx() -> getDx
    12165:12165:int getDy() -> getDy
    12184:12184:android.view.animation.Interpolator getInterpolator() -> getInterpolator
    12117:12117:boolean hasJumpTarget() -> hasJumpTarget
    12113:12114:void jumpTo(int) -> jumpTo
    12121:12142:void runIfNecessary(androidx.recyclerview.widget.RecyclerView) -> runIfNecessary
    12178:12180:void setDuration(int) -> setDuration
    12159:12161:void setDx(int) -> setDx
    12169:12171:void setDy(int) -> setDy
    12194:12196:void setInterpolator(android.view.animation.Interpolator) -> setInterpolator
    12208:12213:void update(int,int,int,android.view.animation.Interpolator) -> update
    12145:12149:void validate() -> validate
androidx.recyclerview.widget.RecyclerView$State -> androidx.recyclerview.widget.RecyclerView$State:
    12362:12433:void <init>() -> <init>
    12368:12371:void assertLayoutStep(int) -> assertLayoutStep
    12583:12583:boolean didStructureChange() -> didStructureChange
    12537:12540:java.lang.Object get(int) -> get
    12611:12611:int getItemCount() -> getItemCount
    12624:12624:int getRemainingScrollHorizontal() -> getRemainingScrollHorizontal
    12635:12635:int getRemainingScrollVertical() -> getRemainingScrollVertical
    12566:12566:int getTargetScrollPosition() -> getTargetScrollPosition
    12575:12575:boolean hasTargetScrollPosition() -> hasTargetScrollPosition
    12481:12481:boolean isMeasuring() -> isMeasuring
    12490:12490:boolean isPreLayout() -> isPreLayout
    12459:12464:void prepareForNestedPrefetch(androidx.recyclerview.widget.RecyclerView$Adapter) -> prepareForNestedPrefetch
    12552:12556:void put(int,java.lang.Object) -> put
    12521:12525:void remove(int) -> remove
    12640:12640:java.lang.String toString() -> toString
    12501:12501:boolean willRunPredictiveAnimations() -> willRunPredictiveAnimations
    12512:12512:boolean willRunSimpleAnimations() -> willRunSimpleAnimations
androidx.recyclerview.widget.RecyclerView$ViewCacheExtension -> androidx.recyclerview.widget.RecyclerView$ViewCacheExtension:
    6953:6953:void <init>() -> <init>
androidx.recyclerview.widget.RecyclerView$ViewFlinger -> androidx.recyclerview.widget.RecyclerView$ViewFlinger:
    5246:5248:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    5483:5501:int computeScrollDuration(int,int,int,int) -> computeScrollDuration
    5477:5479:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    5416:5428:void fling(int,int) -> fling
    5411:5413:void internalPostOnAnimation() -> internalPostOnAnimation
    5403:5408:void postOnAnimation() -> postOnAnimation
    5252:5400:void run() -> run
    5445:5474:void smoothScrollBy(int,int,int,android.view.animation.Interpolator) -> smoothScrollBy
    5505:5507:void stop() -> stop
androidx.recyclerview.widget.RecyclerView$ViewHolder -> androidx.recyclerview.widget.RecyclerView$ViewHolder:
    11059:11059:void <clinit>() -> <clinit>
    11086:11088:void <init>(android.view.View) -> <init>
    11300:11306:void addChangePayload(java.lang.Object) -> addChangePayload
    11296:11297:void addFlags(int) -> addFlags
    11116:11118:void clearOldPosition() -> clearOldPosition
    11316:11320:void clearPayload() -> clearPayload
    11243:11244:void clearReturnedFromScrapFlag() -> clearReturnedFromScrapFlag
    11247:11248:void clearTmpDetachFlag() -> clearTmpDetachFlag
    11309:11313:void createPayloadsIfNeeded() -> createPayloadsIfNeeded
    11456:11456:boolean doesTransientStatePreventRecycling() -> doesTransientStatePreventRecycling
    11094:11097:void flagRemovedAndOffsetPosition(int,int,boolean) -> flagRemovedAndOffsetPosition
    11192:11195:int getAdapterPosition() -> getAdapterPosition
    11220:11220:long getItemId() -> getItemId
    11227:11227:int getItemViewType() -> getItemViewType
    11166:11166:int getLayoutPosition() -> getLayoutPosition
    11210:11210:int getOldPosition() -> getOldPosition
    11140:11140:int getPosition() -> getPosition
    11323:11332:java.util.List getUnmodifiedPayloads() -> getUnmodifiedPayloads
    11276:11276:boolean hasAnyOfTheFlags(int) -> hasAnyOfTheFlags
    11288:11288:boolean isAdapterPositionUnknown() -> isAdapterPositionUnknown
    11284:11284:boolean isAttachedToTransitionOverlay() -> isAttachedToTransitionOverlay
    11268:11268:boolean isBound() -> isBound
    11260:11260:boolean isInvalid() -> isInvalid
    11439:11439:boolean isRecyclable() -> isRecyclable
    11272:11272:boolean isRemoved() -> isRemoved
    11231:11231:boolean isScrap() -> isScrap
    11280:11280:boolean isTmpDetached() -> isTmpDetached
    11460:11460:boolean isUpdated() -> isUpdated
    11264:11264:boolean needsUpdate() -> needsUpdate
    11100:11113:void offsetPosition(int,boolean) -> offsetPosition
    11356:11364:void onEnteredHiddenState(androidx.recyclerview.widget.RecyclerView) -> onEnteredHiddenState
    11370:11373:void onLeftHiddenState(androidx.recyclerview.widget.RecyclerView) -> onLeftHiddenState
    11337:11349:void resetInternal() -> resetInternal
    11121:11124:void saveOldPosition() -> saveOldPosition
    11292:11293:void setFlags(int,int) -> setFlags
    11414:11431:void setIsRecyclable(boolean) -> setIsRecyclable
    11255:11257:void setScrapContainer(androidx.recyclerview.widget.RecyclerView$Recycler,boolean) -> setScrapContainer
    11448:11448:boolean shouldBeKeptAsChild() -> shouldBeKeptAsChild
    11127:11127:boolean shouldIgnore() -> shouldIgnore
    11251:11252:void stopIgnoring() -> stopIgnoring
    11377:11397:java.lang.String toString() -> toString
    11235:11236:void unScrap() -> unScrap
    11239:11239:boolean wasReturnedFromScrap() -> wasReturnedFromScrap
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate:
    44:52:void <init>(androidx.recyclerview.widget.RecyclerView) -> <init>
    99:99:androidx.core.view.AccessibilityDelegateCompat getItemDelegate() -> getItemDelegate
    80:87:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    72:76:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    60:67:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    55:55:boolean shouldIgnore() -> shouldIgnore
androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate -> androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate$ItemDelegate:
    119:121:void <init>(androidx.recyclerview.widget.RecyclerViewAccessibilityDelegate) -> <init>
    201:205:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    245:249:androidx.core.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    138:138:androidx.core.view.AccessibilityDelegateCompat getAndRemoveOriginalDelegateForItem(android.view.View) -> getAndRemoveOriginalDelegateForItem
    223:229:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    143:156:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    212:218:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    234:238:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    160:173:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
    128:132:void saveOriginalDelegate(android.view.View) -> saveOriginalDelegate
    179:185:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    190:196:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
androidx.recyclerview.widget.ScrollbarHelper -> androidx.recyclerview.widget.ScrollbarHelper:
    99:100:void <init>() -> <init>
    63:65:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollExtent
    32:34:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean,boolean) -> computeScrollOffset
    82:84:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.OrientationHelper,android.view.View,android.view.View,androidx.recyclerview.widget.RecyclerView$LayoutManager,boolean) -> computeScrollRange
androidx.recyclerview.widget.SimpleItemAnimator -> androidx.recyclerview.widget.SimpleItemAnimator:
    35:41:void <init>() -> <init>
    114:126:boolean animateAppearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateAppearance
    151:161:boolean animateChange(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateChange
    90:107:boolean animateDisappearance(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animateDisappearance
    133:138:boolean animatePersistence(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> animatePersistence
    84:84:boolean canReuseUpdatedViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> canReuseUpdatedViewHolder
    301:303:void dispatchAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddFinished
    344:345:void dispatchAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchAddStarting
    316:318:void dispatchChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeFinished
    357:358:void dispatchChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> dispatchChangeStarting
    291:293:void dispatchMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveFinished
    335:336:void dispatchMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchMoveStarting
    276:278:void dispatchRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveFinished
    326:327:void dispatchRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> dispatchRemoveStarting
    50:50:boolean getSupportsChangeAnimations() -> getSupportsChangeAnimations
    404:404:void onAddFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddFinished
    393:393:void onAddStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onAddStarting
    454:454:void onChangeFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeFinished
    441:441:void onChangeStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder,boolean) -> onChangeStarting
    427:427:void onMoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveFinished
    416:416:void onMoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onMoveStarting
    381:381:void onRemoveFinished(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveFinished
    370:370:void onRemoveStarting(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onRemoveStarting
    71:72:void setSupportsChangeAnimations(boolean) -> setSupportsChangeAnimations
androidx.recyclerview.widget.SnapHelper -> androidx.recyclerview.widget.SnapHelper:
    34:42:void <init>() -> <init>
    93:106:void attachToRecyclerView(androidx.recyclerview.widget.RecyclerView) -> attachToRecyclerView
    137:142:int[] calculateScrollDistance(int,int) -> calculateScrollDistance
    209:209:androidx.recyclerview.widget.RecyclerView$SmoothScroller createScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createScroller
    224:227:androidx.recyclerview.widget.LinearSmoothScroller createSnapScroller(androidx.recyclerview.widget.RecyclerView$LayoutManager) -> createSnapScroller
    123:125:void destroyCallbacks() -> destroyCallbacks
    65:74:boolean onFling(int,int) -> onFling
    112:113:void setupCallbacks() -> setupCallbacks
    157:173:boolean snapFromFling(androidx.recyclerview.widget.RecyclerView$LayoutManager,int,int) -> snapFromFling
    182:197:void snapToTargetExistingView() -> snapToTargetExistingView
androidx.recyclerview.widget.SnapHelper$1 -> androidx.recyclerview.widget.SnapHelper$1:
    43:44:void <init>(androidx.recyclerview.widget.SnapHelper) -> <init>
    48:53:void onScrollStateChanged(androidx.recyclerview.widget.RecyclerView,int) -> onScrollStateChanged
    57:60:void onScrolled(androidx.recyclerview.widget.RecyclerView,int,int) -> onScrolled
androidx.recyclerview.widget.SnapHelper$2 -> androidx.recyclerview.widget.SnapHelper$2:
    227:227:void <init>(androidx.recyclerview.widget.SnapHelper,android.content.Context) -> <init>
    246:246:float calculateSpeedPerPixel(android.util.DisplayMetrics) -> calculateSpeedPerPixel
    230:242:void onTargetFound(android.view.View,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$SmoothScroller$Action) -> onTargetFound
androidx.recyclerview.widget.SortedList -> androidx.recyclerview.widget.SortedList:
    91:92:void <init>(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback) -> <init>
    101:106:void <init>(java.lang.Class,androidx.recyclerview.widget.SortedList$Callback,int) -> <init>
    143:144:int add(java.lang.Object) -> add
    542:563:int add(java.lang.Object,boolean) -> add
    162:172:void addAll(java.lang.Object[],boolean) -> addAll
    182:183:void addAll(java.lang.Object[]) -> addAll
    193:195:void addAll(java.util.Collection) -> addAll
    252:265:void addAllInternal(java.lang.Object[]) -> addAllInternal
    793:794:void addToData(int,java.lang.Object) -> addToData
    518:526:void beginBatchedUpdates() -> beginBatchedUpdates
    822:830:void clear() -> clear
    813:815:java.lang.Object[] copyArray(java.lang.Object[]) -> copyArray
    532:539:void endBatchedUpdates() -> endBatchedUpdates
    743:764:int findIndexOf(java.lang.Object,java.lang.Object[],int,int,int) -> findIndexOf
    396:401:int findSameItem(java.lang.Object,java.lang.Object[],int,int) -> findSameItem
    705:706:java.lang.Object get(int) -> get
    728:739:int indexOf(java.lang.Object) -> indexOf
    769:789:int linearEqualitySearch(java.lang.Object,int,int,int) -> linearEqualitySearch
    408:465:void merge(java.lang.Object[],int) -> merge
    685:693:void recalculatePositionOfItemAt(int) -> recalculatePositionOfItemAt
    574:575:boolean remove(java.lang.Object) -> remove
    593:598:boolean remove(java.lang.Object,boolean) -> remove
    586:589:java.lang.Object removeItemAt(int) -> removeItemAt
    602:608:void removeItemAtIndex(int,boolean) -> removeItemAtIndex
    217:224:void replaceAll(java.lang.Object[],boolean) -> replaceAll
    235:236:void replaceAll(java.lang.Object[]) -> replaceAll
    247:249:void replaceAll(java.util.Collection) -> replaceAll
    334:338:void replaceAllInsert(java.lang.Object) -> replaceAllInsert
    268:324:void replaceAllInternal(java.lang.Object[]) -> replaceAllInternal
    341:344:void replaceAllRemove() -> replaceAllRemove
    114:114:int size() -> size
    353:391:int sortAndDedup(java.lang.Object[]) -> sortAndDedup
    479:480:void throwIfInMutationOperation() -> throwIfInMutationOperation
    631:655:void updateItemAt(int,java.lang.Object) -> updateItemAt
androidx.recyclerview.widget.SortedList$BatchedCallback -> androidx.recyclerview.widget.SortedList$BatchedCallback:
    951:954:void <init>(androidx.recyclerview.widget.SortedList$Callback) -> <init>
    988:988:boolean areContentsTheSame(java.lang.Object,java.lang.Object) -> areContentsTheSame
    993:993:boolean areItemsTheSame(java.lang.Object,java.lang.Object) -> areItemsTheSame
    958:958:int compare(java.lang.Object,java.lang.Object) -> compare
    1007:1008:void dispatchLastEvent() -> dispatchLastEvent
    999:999:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> getChangePayload
    978:979:void onChanged(int,int) -> onChanged
    983:984:void onChanged(int,int,java.lang.Object) -> onChanged
    963:964:void onInserted(int,int) -> onInserted
    973:974:void onMoved(int,int) -> onMoved
    968:969:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.SortedList$Callback -> androidx.recyclerview.widget.SortedList$Callback:
    840:840:void <init>() -> <init>
    920:920:java.lang.Object getChangePayload(java.lang.Object,java.lang.Object) -> getChangePayload
    866:867:void onChanged(int,int,java.lang.Object) -> onChanged
androidx.recyclerview.widget.SortedListAdapterCallback -> androidx.recyclerview.widget.SortedListAdapterCallback:
    33:35:void <init>(androidx.recyclerview.widget.RecyclerView$Adapter) -> <init>
    54:55:void onChanged(int,int) -> onChanged
    59:60:void onChanged(int,int,java.lang.Object) -> onChanged
    39:40:void onInserted(int,int) -> onInserted
    49:50:void onMoved(int,int) -> onMoved
    44:45:void onRemoved(int,int) -> onRemoved
androidx.recyclerview.widget.StaggeredGridLayoutManager -> androidx.recyclerview.widget.StaggeredGridLayoutManager:
    229:236:void <init>(android.content.Context,android.util.AttributeSet,int,int) -> <init>
    245:250:void <init>(int,int) -> <init>
    1806:1809:void appendViewToAllSpans(android.view.View) -> appendViewToAllSpans
    786:819:void applyPendingSavedState(androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> applyPendingSavedState
    1865:1871:boolean areAllEndsEqual() -> areAllEndsEqual
    1875:1881:boolean areAllStartsEqual() -> areAllStartsEqual
    528:531:void assertNotInLayoutOrScroll(java.lang.String) -> assertNotInLayoutOrScroll
    1750:1763:void attachViewToSpans(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,androidx.recyclerview.widget.LayoutState) -> attachViewToSpans
    2043:2047:int calculateScrollDirectionForPosition(int) -> calculateScrollDirectionForPosition
    2027:2027:boolean canScrollHorizontally() -> canScrollHorizontally
    2022:2022:boolean canScrollVertically() -> canScrollVertically
    270:271:boolean checkForGaps() -> checkForGaps
    2273:2273:boolean checkLayoutParams(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> checkLayoutParams
    403:416:boolean checkSpanForGap(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> checkSpanForGap
    2123:2126:void collectAdjacentPrefetchPositions(int,int,androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.RecyclerView$LayoutManager$LayoutPrefetchRegistry) -> collectAdjacentPrefetchPositions
    1088:1088:int computeHorizontalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollExtent
    1068:1068:int computeHorizontalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollOffset
    1108:1108:int computeHorizontalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeHorizontalScrollRange
    1092:1095:int computeScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollExtent
    1072:1075:int computeScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollOffset
    1112:1115:int computeScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeScrollRange
    2052:2064:android.graphics.PointF computeScrollVectorForPosition(int) -> computeScrollVectorForPosition
    1103:1103:int computeVerticalScrollExtent(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollExtent
    1083:1083:int computeVerticalScrollOffset(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollOffset
    1123:1123:int computeVerticalScrollRange(androidx.recyclerview.widget.RecyclerView$State) -> computeVerticalScrollRange
    2392:2399:int convertFocusDirectionToLayoutDirection(int) -> convertFocusDirectionToLayoutDirection
    1732:1737:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromEnd(int) -> createFullSpanItemFromEnd
    1741:1746:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFullSpanItemFromStart(int) -> createFullSpanItemFromStart
    258:261:void createOrientationHelpers() -> createOrientationHelpers
    1575:1728:int fill(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState,androidx.recyclerview.widget.RecyclerView$State) -> fill
    990:993:int[] findFirstCompletelyVisibleItemPositions(int[]) -> findFirstCompletelyVisibleItemPositions
    2218:2226:int findFirstReferenceChildPosition(int) -> findFirstReferenceChildPosition
    1387:1406:android.view.View findFirstVisibleItemClosestToEnd(boolean) -> findFirstVisibleItemClosestToEnd
    1357:1377:android.view.View findFirstVisibleItemClosestToStart(boolean) -> findFirstVisibleItemClosestToStart
    1327:1329:int findFirstVisibleItemPositionInt() -> findFirstVisibleItemPositionInt
    958:961:int[] findFirstVisibleItemPositions(int[]) -> findFirstVisibleItemPositions
    1054:1057:int[] findLastCompletelyVisibleItemPositions(int[]) -> findLastCompletelyVisibleItemPositions
    2235:2242:int findLastReferenceChildPosition(int) -> findLastReferenceChildPosition
    1022:1025:int[] findLastVisibleItemPositions(int[]) -> findLastVisibleItemPositions
    1411:1420:void fixEndGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixEndGap
    1430:1439:void fixStartGap(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> fixStartGap
    2248:2252:androidx.recyclerview.widget.RecyclerView$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2259:2259:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.content.Context,android.util.AttributeSet) -> generateLayoutParams
    2264:2267:androidx.recyclerview.widget.RecyclerView$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    1344:1347:int getColumnCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getColumnCountForAccessibility
    2208:2209:int getFirstChildPosition() -> getFirstChildPosition
    500:500:int getGapStrategy() -> getGapStrategy
    2203:2204:int getLastChildPosition() -> getLastChildPosition
    1885:1892:int getMaxEnd(int) -> getMaxEnd
    1843:1850:int getMaxStart(int) -> getMaxStart
    1896:1903:int getMinEnd(int) -> getMinEnd
    1854:1861:int getMinStart(int) -> getMinStart
    1980:2016:androidx.recyclerview.widget.StaggeredGridLayoutManager$Span getNextSpan(androidx.recyclerview.widget.LayoutState) -> getNextSpan
    2277:2277:int getOrientation() -> getOrientation
    580:580:boolean getReverseLayout() -> getReverseLayout
    1335:1338:int getRowCountForAccessibility(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> getRowCountForAccessibility
    539:539:int getSpanCount() -> getSpanCount
    1531:1571:void handleUpdate(int,int,int) -> handleUpdate
    339:399:android.view.View hasGapsToFix() -> hasGapsToFix
    549:551:void invalidateSpanAssignments() -> invalidateSpanAssignments
    254:254:boolean isAutoMeasureEnabled() -> isAutoMeasureEnabled
    568:568:boolean isLayoutRTL() -> isLayoutRTL
    1128:1189:void measureChildWithDecorationsAndMargin(android.view.View,androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams,boolean) -> measureChildWithDecorationsAndMargin
    1193:1206:void measureChildWithDecorationsAndMargin(android.view.View,int,int,boolean) -> measureChildWithDecorationsAndMargin
    1486:1490:void offsetChildrenHorizontal(int) -> offsetChildrenHorizontal
    1494:1498:void offsetChildrenVertical(int) -> offsetChildrenVertical
    323:331:void onDetachedFromWindow(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$Recycler) -> onDetachedFromWindow
    2284:2378:android.view.View onFocusSearchFailed(android.view.View,int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onFocusSearchFailed
    1302:1319:void onInitializeAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    1283:1298:void onInitializeAccessibilityNodeInfoForItem(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfoForItem
    1507:1508:void onItemsAdded(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsAdded
    1512:1514:void onItemsChanged(androidx.recyclerview.widget.RecyclerView) -> onItemsChanged
    1518:1519:void onItemsMoved(androidx.recyclerview.widget.RecyclerView,int,int,int) -> onItemsMoved
    1502:1503:void onItemsRemoved(androidx.recyclerview.widget.RecyclerView,int,int) -> onItemsRemoved
    1524:1525:void onItemsUpdated(androidx.recyclerview.widget.RecyclerView,int,int,java.lang.Object) -> onItemsUpdated
    605:606:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> onLayoutChildren
    611:722:void onLayoutChildren(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State,boolean) -> onLayoutChildren
    726:731:void onLayoutCompleted(androidx.recyclerview.widget.RecyclerView$State) -> onLayoutCompleted
    1222:1228:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1232:1277:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    316:319:void onScrollStateChanged(int) -> onScrollStateChanged
    1970:1973:boolean preferLastSpan(int) -> preferLastSpan
    2160:2172:void prepareLayoutStateForDelta(int,androidx.recyclerview.widget.RecyclerView$State) -> prepareLayoutStateForDelta
    1813:1816:void prependViewToAllSpans(android.view.View) -> prependViewToAllSpans
    1766:1767:void recycle(androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.LayoutState) -> recycle
    1936:1964:void recycleFromEnd(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromEnd
    1907:1933:void recycleFromStart(androidx.recyclerview.widget.RecyclerView$Recycler,int) -> recycleFromStart
    734:780:void repositionToWrapContentIfNecessary() -> repositionToWrapContentIfNecessary
    560:565:void resolveShouldLayoutReverse() -> resolveShouldLayoutReverse
    2175:2176:int scrollBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollBy
    2033:2033:int scrollHorizontallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollHorizontallyBy
    2077:2083:void scrollToPosition(int) -> scrollToPosition
    2099:2105:void scrollToPositionWithOffset(int,int) -> scrollToPositionWithOffset
    2039:2039:int scrollVerticallyBy(int,androidx.recyclerview.widget.RecyclerView$Recycler,androidx.recyclerview.widget.RecyclerView$State) -> scrollVerticallyBy
    513:524:void setGapStrategy(int) -> setGapStrategy
    1479:1482:void setLayoutStateDirection(int) -> setLayoutStateDirection
    587:601:void setMeasuredDimension(android.graphics.Rect,int,int) -> setMeasuredDimension
    449:461:void setOrientation(int) -> setOrientation
    477:483:void setReverseLayout(boolean) -> setReverseLayout
    429:440:void setSpanCount(int) -> setSpanCount
    2070:2073:void smoothScrollToPosition(androidx.recyclerview.widget.RecyclerView,androidx.recyclerview.widget.RecyclerView$State,int) -> smoothScrollToPosition
    935:935:boolean supportsPredictiveItemAnimations() -> supportsPredictiveItemAnimations
    1819:1825:void updateAllRemainingSpans(int,int) -> updateAllRemainingSpans
    840:844:boolean updateAnchorFromChildren(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromChildren
    849:850:boolean updateAnchorFromPendingData(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorFromPendingData
    822:833:void updateAnchorInfoForLayout(androidx.recyclerview.widget.RecyclerView$State,androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo) -> updateAnchorInfoForLayout
    1448:1476:void updateLayoutState(int,androidx.recyclerview.widget.RecyclerView$State) -> updateLayoutState
    927:931:void updateMeasureSpecs(int) -> updateMeasureSpecs
    1828:1840:void updateRemainingSpans(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span,int,int) -> updateRemainingSpans
    1209:1214:int updateSpecWithExtra(int,int,int) -> updateSpecWithExtra
androidx.recyclerview.widget.StaggeredGridLayoutManager$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$1:
    216:216:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    219:220:void run() -> run
androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo -> androidx.recyclerview.widget.StaggeredGridLayoutManager$AnchorInfo:
    3267:3269:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager) -> <init>
    3294:3296:void assignCoordinateFromPadding() -> assignCoordinateFromPadding
    3299:3304:void assignCoordinateFromPadding(int) -> assignCoordinateFromPadding
    3272:3280:void reset() -> reset
    3283:3291:void saveSpanReferenceLines(androidx.recyclerview.widget.StaggeredGridLayoutManager$Span[]) -> saveSpanReferenceLines
androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams:
    2450:2451:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2454:2455:void <init>(int,int) -> <init>
    2458:2459:void <init>(android.view.ViewGroup$MarginLayoutParams) -> <init>
    2462:2463:void <init>(android.view.ViewGroup$LayoutParams) -> <init>
    2466:2467:void <init>(androidx.recyclerview.widget.RecyclerView$LayoutParams) -> <init>
    2498:2501:int getSpanIndex() -> getSpanIndex
    2488:2488:boolean isFullSpan() -> isFullSpan
    2478:2479:void setFullSpan(boolean) -> setFullSpan
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup:
    2838:2838:void <init>() -> <init>
    3007:3027:void addFullSpanItem(androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem) -> addFullSpanItem
    2915:2919:void clear() -> clear
    2903:2912:void ensureSize(int) -> ensureSize
    2849:2857:int forceInvalidateAfter(int) -> forceInvalidateAfter
    3051:3066:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFirstFullSpanItemInRange(int,int,int,boolean) -> getFirstFullSpanItemInRange
    3030:3039:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem getFullSpanItem(int) -> getFullSpanItem
    2882:2883:int getSpan(int) -> getSpan
    2864:2877:int invalidateAfter(int) -> invalidateAfter
    2981:3003:int invalidateFullSpansAfter(int) -> invalidateFullSpansAfter
    2952:2953:void offsetForAddition(int,int) -> offsetForAddition
    2922:2923:void offsetForRemoval(int,int) -> offsetForRemoval
    2964:2974:void offsetFullSpansForAddition(int,int) -> offsetFullSpansForAddition
    2934:2949:void offsetFullSpansForRemoval(int,int) -> offsetFullSpansForRemoval
    2890:2892:void setSpan(int,androidx.recyclerview.widget.StaggeredGridLayoutManager$Span) -> setSpan
    2895:2899:int sizeForPosition(int) -> sizeForPosition
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem:
    3129:3129:void <clinit>() -> <clinit>
    3083:3092:void <init>(android.os.Parcel) -> <init>
    3094:3095:void <init>() -> <init>
    3103:3103:int describeContents() -> describeContents
    3098:3098:int getGapForSpan(int) -> getGapForSpan
    3121:3121:java.lang.String toString() -> toString
    3108:3117:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem$1:
    3130:3130:void <init>() -> <init>
    3130:3130:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3133:3133:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem createFromParcel(android.os.Parcel) -> createFromParcel
    3130:3130:java.lang.Object[] newArray(int) -> newArray
    3138:3138:androidx.recyclerview.widget.StaggeredGridLayoutManager$LazySpanLookup$FullSpanItem[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState:
    3239:3239:void <clinit>() -> <clinit>
    3162:3163:void <init>() -> <init>
    3165:3186:void <init>(android.os.Parcel) -> <init>
    3188:3199:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState) -> <init>
    3218:3218:int describeContents() -> describeContents
    3210:3214:void invalidateAnchorPositionInfo() -> invalidateAnchorPositionInfo
    3202:3207:void invalidateSpanInfo() -> invalidateSpanInfo
    3223:3237:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1 -> androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState$1:
    3240:3240:void <init>() -> <init>
    3240:3240:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    3243:3243:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    3240:3240:java.lang.Object[] newArray(int) -> newArray
    3248:3248:androidx.recyclerview.widget.StaggeredGridLayoutManager$SavedState[] newArray(int) -> newArray
androidx.recyclerview.widget.StaggeredGridLayoutManager$Span -> androidx.recyclerview.widget.StaggeredGridLayoutManager$Span:
    2515:2517:void <init>(androidx.recyclerview.widget.StaggeredGridLayoutManager,int) -> <init>
    2600:2610:void appendToSpan(android.view.View) -> appendToSpan
    2615:2632:void cacheReferenceLineAndClear(boolean,int) -> cacheReferenceLineAndClear
    2565:2575:void calculateCachedEnd() -> calculateCachedEnd
    2531:2541:void calculateCachedStart() -> calculateCachedStart
    2635:2638:void clear() -> clear
    2706:2706:int findFirstCompletelyVisibleItemPosition() -> findFirstCompletelyVisibleItemPosition
    2700:2700:int findFirstPartiallyVisibleItemPosition() -> findFirstPartiallyVisibleItemPosition
    2694:2694:int findFirstVisibleItemPosition() -> findFirstVisibleItemPosition
    2724:2724:int findLastCompletelyVisibleItemPosition() -> findLastCompletelyVisibleItemPosition
    2718:2718:int findLastPartiallyVisibleItemPosition() -> findLastPartiallyVisibleItemPosition
    2712:2712:int findLastVisibleItemPosition() -> findLastVisibleItemPosition
    2756:2783:int findOnePartiallyOrCompletelyVisibleChild(int,int,boolean,boolean,boolean) -> findOnePartiallyOrCompletelyVisibleChild
    2793:2793:int findOnePartiallyVisibleChild(int,int,boolean) -> findOnePartiallyVisibleChild
    2787:2787:int findOneVisibleChild(int,int,boolean) -> findOneVisibleChild
    2677:2677:int getDeletedSize() -> getDeletedSize
    2553:2561:int getEndLine(int) -> getEndLine
    2579:2583:int getEndLine() -> getEndLine
    2801:2830:android.view.View getFocusableViewAfter(int,int) -> getFocusableViewAfter
    2681:2681:androidx.recyclerview.widget.StaggeredGridLayoutManager$LayoutParams getLayoutParams(android.view.View) -> getLayoutParams
    2520:2527:int getStartLine(int) -> getStartLine
    2545:2549:int getStartLine() -> getStartLine
    2641:2643:void invalidateCache() -> invalidateCache
    2685:2691:void onOffset(int) -> onOffset
    2650:2661:void popEnd() -> popEnd
    2664:2674:void popStart() -> popStart
    2587:2597:void prependToSpan(android.view.View) -> prependToSpan
    2646:2647:void setLine(int) -> setLine
androidx.recyclerview.widget.TileList -> androidx.recyclerview.widget.TileList:
    35:37:void <init>(int) -> <init>
    64:74:androidx.recyclerview.widget.TileList$Tile addOrReplace(androidx.recyclerview.widget.TileList$Tile) -> addOrReplace
    56:57:void clear() -> clear
    60:60:androidx.recyclerview.widget.TileList$Tile getAtIndex(int) -> getAtIndex
    40:48:java.lang.Object getItemAt(int) -> getItemAt
    78:83:androidx.recyclerview.widget.TileList$Tile removeAtPos(int) -> removeAtPos
    52:52:int size() -> size
androidx.recyclerview.widget.TileList$Tile -> androidx.recyclerview.widget.TileList$Tile:
    92:96:void <init>(java.lang.Class,int) -> <init>
    99:99:boolean containsPosition(int) -> containsPosition
    103:103:java.lang.Object getByPosition(int) -> getByPosition
androidx.recyclerview.widget.ViewBoundsCheck -> androidx.recyclerview.widget.ViewBoundsCheck:
    131:134:void <init>(androidx.recyclerview.widget.ViewBoundsCheck$Callback) -> <init>
    213:238:android.view.View findOneViewWithinBoundFlags(int,int,int,int) -> findOneViewWithinBoundFlags
    248:255:boolean isViewWithinBoundFlags(android.view.View,int) -> isViewWithinBoundFlags
androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags -> androidx.recyclerview.widget.ViewBoundsCheck$BoundFlags:
    136:137:void <init>() -> <init>
    148:149:void addFlags(int) -> addFlags
    166:189:boolean boundsMatch() -> boundsMatch
    156:162:int compare(int,int) -> compare
    152:153:void resetFlags() -> resetFlags
    141:145:void setBounds(int,int,int,int) -> setBounds
androidx.recyclerview.widget.ViewInfoStore -> androidx.recyclerview.widget.ViewInfoStore:
    36:47:void <init>() -> <init>
    145:152:void addToAppearedInPreLayoutHolders(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToAppearedInPreLayoutHolders
    198:204:void addToDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToDisappearedInLayout
    132:133:void addToOldChangeHolders(long,androidx.recyclerview.widget.RecyclerView$ViewHolder) -> addToOldChangeHolders
    182:189:void addToPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPostLayout
    64:71:void addToPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder,androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo) -> addToPreLayout
    54:56:void clear() -> clear
    173:173:androidx.recyclerview.widget.RecyclerView$ViewHolder getFromOldChangeHolders(long) -> getFromOldChangeHolders
    74:75:boolean isDisappearing(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isDisappearing
    161:162:boolean isInPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> isInPreLayout
    273:274:void onDetach() -> onDetach
    277:278:void onViewDetached(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> onViewDetached
    101:123:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromLayoutStep(androidx.recyclerview.widget.RecyclerView$ViewHolder,int) -> popFromLayoutStep
    97:97:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPostLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPostLayout
    86:86:androidx.recyclerview.widget.RecyclerView$ItemAnimator$ItemHolderInfo popFromPreLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> popFromPreLayout
    219:253:void process(androidx.recyclerview.widget.ViewInfoStore$ProcessCallback) -> process
    211:216:void removeFromDisappearedInLayout(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeFromDisappearedInLayout
    260:270:void removeViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder) -> removeViewHolder
androidx.recyclerview.widget.ViewInfoStore$InfoRecord -> androidx.recyclerview.widget.ViewInfoStore$InfoRecord:
    307:307:void <clinit>() -> <clinit>
    309:310:void <init>() -> <init>
    326:327:void drainCache() -> drainCache
    313:314:androidx.recyclerview.widget.ViewInfoStore$InfoRecord obtain() -> obtain
    318:322:void recycle(androidx.recyclerview.widget.ViewInfoStore$InfoRecord) -> recycle
androidx.savedstate.Recreator -> androidx.savedstate.Recreator:
    42:44:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    48:49:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
    71:74:void reflectiveNew(java.lang.String) -> reflectiveNew
androidx.savedstate.Recreator$SavedStateProvider -> androidx.savedstate.Recreator$SavedStateProvider:
    99:101:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    112:113:void add(java.lang.String) -> add
    106:108:android.os.Bundle saveState() -> saveState
androidx.savedstate.SavedStateRegistry -> androidx.savedstate.SavedStateRegistry:
    52:53:void <init>() -> <init>
    76:77:android.os.Bundle consumeRestoredStateForKey(java.lang.String) -> consumeRestoredStateForKey
    134:134:boolean isRestored() -> isRestored
    190:191:void performRestore(androidx.lifecycle.Lifecycle,android.os.Bundle) -> performRestore
    220:230:void performSave(android.os.Bundle) -> performSave
    109:111:void registerSavedStateProvider(java.lang.String,androidx.savedstate.SavedStateRegistry$SavedStateProvider) -> registerSavedStateProvider
    167:168:void runOnNextRecreation(java.lang.Class) -> runOnNextRecreation
    123:124:void unregisterSavedStateProvider(java.lang.String) -> unregisterSavedStateProvider
androidx.savedstate.SavedStateRegistry$1 -> androidx.savedstate.SavedStateRegistry$1:
    197:197:void <init>(androidx.savedstate.SavedStateRegistry) -> <init>
    200:205:void onStateChanged(androidx.lifecycle.LifecycleOwner,androidx.lifecycle.Lifecycle$Event) -> onStateChanged
androidx.savedstate.SavedStateRegistryController -> androidx.savedstate.SavedStateRegistryController:
    36:39:void <init>(androidx.savedstate.SavedStateRegistryOwner) -> <init>
    84:84:androidx.savedstate.SavedStateRegistryController create(androidx.savedstate.SavedStateRegistryOwner) -> create
    46:46:androidx.savedstate.SavedStateRegistry getSavedStateRegistry() -> getSavedStateRegistry
    56:58:void performRestore(android.os.Bundle) -> performRestore
    74:75:void performSave(android.os.Bundle) -> performSave
androidx.vectordrawable.graphics.drawable.AndroidResources -> androidx.vectordrawable.graphics.drawable.AndroidResources:
    22:134:void <clinit>() -> <clinit>
    151:152:void <init>() -> <init>
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback:
    57:57:void <init>() -> <init>
    77:90:android.graphics.drawable.Animatable2$AnimationCallback getPlatformCallback() -> getPlatformCallback
    69:69:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    63:63:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1 -> androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback$1:
    78:78:void <init>(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> <init>
    86:87:void onAnimationEnd(android.graphics.drawable.Drawable) -> onAnimationEnd
    81:82:void onAnimationStart(android.graphics.drawable.Drawable) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat:
    168:169:void <init>() -> <init>
    172:173:void <init>(android.content.Context) -> <init>
    177:185:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.content.res.Resources) -> <init>
    522:527:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    532:536:boolean canApplyTheme() -> canApplyTheme
    856:867:void clearAnimationCallbacks() -> clearAnimationCallbacks
    920:929:void clearAnimationCallbacks(android.graphics.drawable.Drawable) -> clearAnimationCallbacks
    143:143:void clearColorFilter() -> clearColorFilter
    212:241:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat create(android.content.Context,int) -> create
    253:255:androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat createFromXmlInner(android.content.Context,android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    284:292:void draw(android.graphics.Canvas) -> draw
    321:324:int getAlpha() -> getAlpha
    276:279:int getChangingConfigurations() -> getChangingConfigurations
    347:350:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    265:271:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    143:143:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    420:423:int getIntrinsicHeight() -> getIntrinsicHeight
    412:415:int getIntrinsicWidth() -> getIntrinsicWidth
    143:143:int getMinimumHeight() -> getMinimumHeight
    143:143:int getMinimumWidth() -> getMinimumWidth
    404:407:int getOpacity() -> getOpacity
    143:143:boolean getPadding(android.graphics.Rect) -> getPadding
    143:143:int[] getState() -> getState
    143:143:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    446:512:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    517:518:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    428:431:boolean isAutoMirrored() -> isAutoMirrored
    700:704:boolean isRunning() -> isRunning
    394:397:boolean isStateful() -> isStateful
    143:143:void jumpToCurrentState() -> jumpToCurrentState
    193:198:android.graphics.drawable.Drawable mutate() -> mutate
    296:301:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    313:316:boolean onLevelChange(int) -> onLevelChange
    305:308:boolean onStateChange(int[]) -> onStateChange
    763:811:void registerAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    877:878:void registerAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerAnimationCallback
    820:821:void registerPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> registerPlatformCallback
    827:831:void removeAnimatorSetListener() -> removeAnimatorSetListener
    329:334:void setAlpha(int) -> setAlpha
    436:441:void setAutoMirrored(boolean) -> setAutoMirrored
    143:143:void setChangingConfigurations(int) -> setChangingConfigurations
    143:143:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    338:343:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    143:143:void setFilterBitmap(boolean) -> setFilterBitmap
    143:143:void setHotspot(float,float) -> setHotspot
    143:143:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    143:143:boolean setState(int[]) -> setState
    355:361:void setTint(int) -> setTint
    365:371:void setTintList(android.content.res.ColorStateList) -> setTintList
    375:381:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    385:389:boolean setVisible(boolean,boolean) -> setVisible
    682:696:void setupAnimatorsForTarget(java.lang.String,android.animation.Animator) -> setupAnimatorsForTarget
    661:679:void setupColorAnimator(android.animation.Animator) -> setupColorAnimator
    709:721:void start() -> start
    725:731:void stop() -> stop
    836:843:boolean unregisterAnimationCallback(androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
    899:900:boolean unregisterAnimationCallback(android.graphics.drawable.Drawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterAnimationCallback
    757:757:boolean unregisterPlatformCallback(android.graphics.drawable.AnimatedVectorDrawable,androidx.vectordrawable.graphics.drawable.Animatable2Compat$AnimationCallback) -> unregisterPlatformCallback
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$1:
    733:733:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    736:737:void invalidateDrawable(android.graphics.drawable.Drawable) -> invalidateDrawable
    741:742:void scheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable,long) -> scheduleDrawable
    746:747:void unscheduleDrawable(android.graphics.drawable.Drawable,java.lang.Runnable) -> unscheduleDrawable
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2 -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$2:
    788:788:void <init>(androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat) -> <init>
    801:807:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
    791:797:void onAnimationStart(android.animation.Animator) -> onAnimationStart
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState:
    599:630:void <init>(android.content.Context,androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableCompatState,android.graphics.drawable.Drawable$Callback,android.content.res.Resources) -> <init>
    644:644:int getChangingConfigurations() -> getChangingConfigurations
    634:634:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    639:639:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    648:652:void setupAnimatorSet() -> setupAnimatorSet
androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.AnimatedVectorDrawableCompat$AnimatedVectorDrawableDelegateState:
    548:550:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    581:581:boolean canApplyTheme() -> canApplyTheme
    586:586:int getChangingConfigurations() -> getChangingConfigurations
    554:558:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    563:567:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    572:576:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat -> androidx.vectordrawable.graphics.drawable.AnimationUtilsCompat:
    149:150:void <init>() -> <init>
    105:146:android.view.animation.Interpolator createInterpolatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> createInterpolatorFromXml
    67:96:android.view.animation.Interpolator loadInterpolator(android.content.Context,int) -> loadInterpolator
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat:
    921:922:void <init>() -> <init>
    501:501:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,float) -> createAnimatorFromXml
    509:571:android.animation.Animator createAnimatorFromXml(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.animation.AnimatorSet,int,float) -> createAnimatorFromXml
    779:779:android.animation.Keyframe createNewKeyframe(android.animation.Keyframe,float) -> createNewKeyframe
    806:811:void distributeKeyframes(android.animation.Keyframe[],float,int,int) -> distributeKeyframes
    673:674:void dumpKeyframes(java.lang.Object[],java.lang.String) -> dumpKeyframes
    207:331:android.animation.PropertyValuesHolder getPVH(android.content.res.TypedArray,int,int,int,java.lang.String) -> getPVH
    655:669:int inferValueTypeFromValues(android.content.res.TypedArray,int,int) -> inferValueTypeFromValues
    636:650:int inferValueTypeOfKeyframe(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> inferValueTypeOfKeyframe
    917:917:boolean isColorType(int) -> isColorType
    100:105:android.animation.Animator loadAnimator(android.content.Context,int) -> loadAnimator
    119:119:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int) -> loadAnimator
    129:148:android.animation.Animator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,int,float) -> loadAnimator
    890:913:android.animation.ValueAnimator loadAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,android.animation.ValueAnimator,float,org.xmlpull.v1.XmlPullParser) -> loadAnimator
    818:866:android.animation.Keyframe loadKeyframe(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,int,org.xmlpull.v1.XmlPullParser) -> loadKeyframe
    872:876:android.animation.ObjectAnimator loadObjectAnimator(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,float,org.xmlpull.v1.XmlPullParser) -> loadObjectAnimator
    692:775:android.animation.PropertyValuesHolder loadPvh(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,java.lang.String,int) -> loadPvh
    576:627:android.animation.PropertyValuesHolder[] loadValues(android.content.Context,android.content.res.Resources,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> loadValues
    345:378:void parseAnimatorFromTypeArray(android.animation.ValueAnimator,android.content.res.TypedArray,android.content.res.TypedArray,float,org.xmlpull.v1.XmlPullParser) -> parseAnimatorFromTypeArray
    390:429:void setupObjectAnimator(android.animation.ValueAnimator,android.content.res.TypedArray,int,float,org.xmlpull.v1.XmlPullParser) -> setupObjectAnimator
    436:447:void setupPathMotion(android.graphics.Path,android.animation.ObjectAnimator,float,java.lang.String,java.lang.String) -> setupPathMotion
androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator -> androidx.vectordrawable.graphics.drawable.AnimatorInflaterCompat$PathDataEvaluator:
    166:167:void <init>() -> <init>
    177:179:void <init>(androidx.core.graphics.PathParser$PathDataNode[]) -> <init>
    157:157:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    185:186:androidx.core.graphics.PathParser$PathDataNode[] evaluate(float,androidx.core.graphics.PathParser$PathDataNode[],androidx.core.graphics.PathParser$PathDataNode[]) -> evaluate
androidx.vectordrawable.graphics.drawable.ArgbEvaluator -> androidx.vectordrawable.graphics.drawable.ArgbEvaluator:
    33:33:void <clinit>() -> <clinit>
    32:32:void <init>() -> <init>
    64:97:java.lang.Object evaluate(float,java.lang.Object,java.lang.Object) -> evaluate
    43:43:androidx.vectordrawable.graphics.drawable.ArgbEvaluator getInstance() -> getInstance
androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat -> androidx.vectordrawable.graphics.drawable.PathInterpolatorCompat:
    68:69:void <init>(android.content.Context,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    72:77:void <init>(android.content.res.Resources,android.content.res.Resources$Theme,android.util.AttributeSet,org.xmlpull.v1.XmlPullParser) -> <init>
    195:223:float getInterpolation(float) -> getInterpolation
    130:134:void initCubic(float,float,float,float) -> initCubic
    137:143:void initPath(android.graphics.Path) -> initPath
    123:127:void initQuad(float,float) -> initQuad
    82:93:void parseInterpolatorFromTypeArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> parseInterpolatorFromTypeArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCommon -> androidx.vectordrawable.graphics.drawable.VectorDrawableCommon:
    29:29:void <init>() -> <init>
    95:99:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    103:108:void clearColorFilter() -> clearColorFilter
    112:115:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    128:131:int getMinimumHeight() -> getMinimumHeight
    120:123:int getMinimumWidth() -> getMinimumWidth
    136:139:boolean getPadding(android.graphics.Rect) -> getPadding
    144:147:int[] getState() -> getState
    153:156:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    86:90:void jumpToCurrentState() -> jumpToCurrentState
    53:58:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    45:48:boolean onLevelChange(int) -> onLevelChange
    161:166:void setChangingConfigurations(int) -> setChangingConfigurations
    36:41:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    78:82:void setFilterBitmap(boolean) -> setFilterBitmap
    62:65:void setHotspot(float,float) -> setHotspot
    70:74:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    170:173:boolean setState(int[]) -> setState
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat:
    280:280:void <clinit>() -> <clinit>
    321:323:void <init>() -> <init>
    325:328:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    687:690:int applyAlpha(int,float) -> applyAlpha
    277:277:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    587:591:boolean canApplyTheme() -> canApplyTheme
    277:277:void clearColorFilter() -> clearColorFilter
    645:670:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat create(android.content.res.Resources,int,android.content.res.Resources$Theme) -> create
    681:683:androidx.vectordrawable.graphics.drawable.VectorDrawableCompat createFromXmlInner(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> createFromXmlInner
    360:369:void draw(android.graphics.Canvas) -> draw
    432:436:int getAlpha() -> getAlpha
    925:928:int getChangingConfigurations() -> getChangingConfigurations
    465:468:android.graphics.ColorFilter getColorFilter() -> getColorFilter
    350:355:android.graphics.drawable.Drawable$ConstantState getConstantState() -> getConstantState
    277:277:android.graphics.drawable.Drawable getCurrent() -> getCurrent
    577:581:int getIntrinsicHeight() -> getIntrinsicHeight
    568:572:int getIntrinsicWidth() -> getIntrinsicWidth
    277:277:int getMinimumHeight() -> getMinimumHeight
    277:277:int getMinimumWidth() -> getMinimumWidth
    559:563:int getOpacity() -> getOpacity
    277:277:boolean getPadding(android.graphics.Rect) -> getPadding
    618:623:float getPixelSize() -> getPixelSize
    277:277:int[] getState() -> getState
    345:345:java.lang.Object getTargetByName(java.lang.String) -> getTargetByName
    277:277:android.graphics.Region getTransparentRegion() -> getTransparentRegion
    696:702:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet) -> inflate
    707:726:void inflate(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflate
    816:877:void inflateInternal(android.content.res.Resources,org.xmlpull.v1.XmlPullParser,android.util.AttributeSet,android.content.res.Resources$Theme) -> inflateInternal
    933:938:void invalidateSelf() -> invalidateSelf
    596:599:boolean isAutoMirrored() -> isAutoMirrored
    528:532:boolean isStateful() -> isStateful
    277:277:void jumpToCurrentState() -> jumpToCurrentState
    332:341:android.graphics.drawable.Drawable mutate() -> mutate
    907:908:boolean needMirroring() -> needMirroring
    918:921:void onBoundsChange(android.graphics.Rect) -> onBoundsChange
    539:554:boolean onStateChange(int[]) -> onStateChange
    734:736:android.graphics.PorterDuff$Mode parseTintModeCompat(int,android.graphics.PorterDuff$Mode) -> parseTintModeCompat
    882:899:void printGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,int) -> printGroupTree
    942:947:void scheduleSelf(java.lang.Runnable,long) -> scheduleSelf
    902:903:void setAllowCaching(boolean) -> setAllowCaching
    441:450:void setAlpha(int) -> setAlpha
    604:609:void setAutoMirrored(boolean) -> setAutoMirrored
    277:277:void setChangingConfigurations(int) -> setChangingConfigurations
    277:277:void setColorFilter(int,android.graphics.PorterDuff$Mode) -> setColorFilter
    454:461:void setColorFilter(android.graphics.ColorFilter) -> setColorFilter
    277:277:void setFilterBitmap(boolean) -> setFilterBitmap
    277:277:void setHotspot(float,float) -> setHotspot
    277:277:void setHotspotBounds(int,int,int,int) -> setHotspotBounds
    277:277:boolean setState(int[]) -> setState
    488:494:void setTint(int) -> setTint
    498:509:void setTintList(android.content.res.ColorStateList) -> setTintList
    513:524:void setTintMode(android.graphics.PorterDuff$Mode) -> setTintMode
    951:954:boolean setVisible(boolean,boolean) -> setVisible
    959:964:void unscheduleSelf(java.lang.Runnable) -> unscheduleSelf
    754:783:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
    477:478:android.graphics.PorterDuffColorFilter updateTintFilter(android.graphics.PorterDuffColorFilter,android.content.res.ColorStateList,android.graphics.PorterDuff$Mode) -> updateTintFilter
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath:
    1768:1770:void <init>() -> <init>
    1773:1774:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VClipPath) -> <init>
    1778:1786:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1810:1810:boolean isClipPath() -> isClipPath
    1792:1806:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath:
    1835:1837:void <init>() -> <init>
    1840:1856:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VFullPath) -> <init>
    1972:1981:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    1886:1886:boolean canApplyTheme() -> canApplyTheme
    2028:2028:float getFillAlpha() -> getFillAlpha
    2018:2018:int getFillColor() -> getFillColor
    2007:2007:float getStrokeAlpha() -> getStrokeAlpha
    1987:1987:int getStrokeColor() -> getStrokeColor
    1859:1861:android.graphics.Paint$Cap getStrokeLineCap(int,android.graphics.Paint$Cap) -> getStrokeLineCap
    1872:1874:android.graphics.Paint$Join getStrokeLineJoin(int,android.graphics.Paint$Join) -> getStrokeLineJoin
    1997:1997:float getStrokeWidth() -> getStrokeWidth
    2048:2048:float getTrimPathEnd() -> getTrimPathEnd
    2058:2058:float getTrimPathOffset() -> getTrimPathOffset
    2038:2038:float getTrimPathStart() -> getTrimPathStart
    1890:1894:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1960:1960:boolean isStateful() -> isStateful
    1965:1967:boolean onStateChanged(int[]) -> onStateChanged
    2033:2034:void setFillAlpha(float) -> setFillAlpha
    2023:2024:void setFillColor(int) -> setFillColor
    2012:2013:void setStrokeAlpha(float) -> setStrokeAlpha
    1992:1993:void setStrokeColor(int) -> setStrokeColor
    2002:2003:void setStrokeWidth(float) -> setStrokeWidth
    2053:2054:void setTrimPathEnd(float) -> setTrimPathEnd
    2063:2064:void setTrimPathOffset(float) -> setTrimPathOffset
    2043:2044:void setTrimPathStart(float) -> setTrimPathStart
    1901:1956:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser,android.content.res.Resources$Theme) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup:
    1466:1504:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.collection.ArrayMap) -> <init>
    1506:1507:void <init>() -> <init>
    1510:1510:java.lang.String getGroupName() -> getGroupName
    1514:1514:android.graphics.Matrix getLocalMatrix() -> getLocalMatrix
    1586:1586:float getPivotX() -> getPivotX
    1599:1599:float getPivotY() -> getPivotY
    1573:1573:float getRotation() -> getRotation
    1612:1612:float getScaleX() -> getScaleX
    1625:1625:float getScaleY() -> getScaleY
    1638:1638:float getTranslateX() -> getTranslateX
    1651:1651:float getTranslateY() -> getTranslateY
    1518:1522:void inflate(android.content.res.Resources,android.util.AttributeSet,android.content.res.Resources$Theme,org.xmlpull.v1.XmlPullParser) -> inflate
    1664:1669:boolean isStateful() -> isStateful
    1674:1678:boolean onStateChanged(int[]) -> onStateChanged
    1591:1595:void setPivotX(float) -> setPivotX
    1604:1608:void setPivotY(float) -> setPivotY
    1578:1582:void setRotation(float) -> setRotation
    1617:1621:void setScaleX(float) -> setScaleX
    1630:1634:void setScaleY(float) -> setScaleY
    1643:1647:void setTranslateX(float) -> setTranslateX
    1656:1660:void setTranslateY(float) -> setTranslateY
    1563:1568:void updateLocalMatrix() -> updateLocalMatrix
    1529:1558:void updateStateFromTypedArray(android.content.res.TypedArray,org.xmlpull.v1.XmlPullParser) -> updateStateFromTypedArray
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VObject:
    1423:1423:void <init>() -> <init>
    1423:1423:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$1) -> <init>
    1430:1430:boolean isStateful() -> isStateful
    1438:1438:boolean onStateChanged(int[]) -> onStateChanged
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath:
    1693:1695:void <init>() -> <init>
    1719:1723:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath) -> <init>
    1741:1741:void applyTheme(android.content.res.Resources$Theme) -> applyTheme
    1737:1737:boolean canApplyTheme() -> canApplyTheme
    1750:1750:androidx.core.graphics.PathParser$PathDataNode[] getPathData() -> getPathData
    1733:1733:java.lang.String getPathName() -> getPathName
    1744:1744:boolean isClipPath() -> isClipPath
    1708:1716:java.lang.String nodesToString(androidx.core.graphics.PathParser$PathDataNode[]) -> nodesToString
    1698:1705:void printVPath(int) -> printVPath
    1755:1761:void setPathData(androidx.core.graphics.PathParser$PathDataNode[]) -> setPathData
    1726:1730:void toPath(android.graphics.Path) -> toPath
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer:
    1170:1170:void <clinit>() -> <clinit>
    1191:1195:void <init>() -> <init>
    1216:1231:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPathRenderer) -> <init>
    1379:1379:float cross(float,float,float,float) -> cross
    1264:1265:void draw(android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> draw
    1239:1260:void drawGroupTree(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,android.graphics.Matrix,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawGroupTree
    1269:1376:void drawPath(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VGroup,androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VPath,android.graphics.Canvas,int,int,android.graphics.ColorFilter) -> drawPath
    1213:1213:float getAlpha() -> getAlpha
    1393:1408:float getMatrixScale(android.graphics.Matrix) -> getMatrixScale
    1202:1202:int getRootAlpha() -> getRootAlpha
    1412:1415:boolean isStateful() -> isStateful
    1419:1419:boolean onStateChanged(int[]) -> onStateChanged
    1208:1209:void setAlpha(float) -> setAlpha
    1198:1199:void setRootAlpha(int) -> setRootAlpha
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState:
    1033:1047:void <init>(androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableCompatState) -> <init>
    1121:1123:void <init>() -> <init>
    1093:1097:boolean canReuseBitmap(int,int) -> canReuseBitmap
    1101:1108:boolean canReuseCache() -> canReuseCache
    1084:1090:void createCachedBitmapIfNeeded(int,int) -> createCachedBitmapIfNeeded
    1052:1054:void drawCachedBitmapWithRootAlpha(android.graphics.Canvas,android.graphics.ColorFilter,android.graphics.Rect) -> drawCachedBitmapWithRootAlpha
    1139:1139:int getChangingConfigurations() -> getChangingConfigurations
    1064:1074:android.graphics.Paint getPaint(android.graphics.ColorFilter) -> getPaint
    1057:1057:boolean hasTranslucentRoot() -> hasTranslucentRoot
    1143:1143:boolean isStateful() -> isStateful
    1128:1128:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    1134:1134:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    1147:1149:boolean onStateChanged(int[]) -> onStateChanged
    1114:1119:void updateCacheStates() -> updateCacheStates
    1078:1081:void updateCachedBitmap(int,int) -> updateCachedBitmap
androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState -> androidx.vectordrawable.graphics.drawable.VectorDrawableCompat$VectorDrawableDelegateState:
    975:977:void <init>(android.graphics.drawable.Drawable$ConstantState) -> <init>
    1003:1003:boolean canApplyTheme() -> canApplyTheme
    1008:1008:int getChangingConfigurations() -> getChangingConfigurations
    981:983:android.graphics.drawable.Drawable newDrawable() -> newDrawable
    988:990:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources) -> newDrawable
    995:998:android.graphics.drawable.Drawable newDrawable(android.content.res.Resources,android.content.res.Resources$Theme) -> newDrawable
androidx.versionedparcelable.CustomVersionedParcelable -> androidx.versionedparcelable.CustomVersionedParcelable:
    27:27:void <init>() -> <init>
    45:45:void onPostParceling() -> onPostParceling
    36:36:void onPreParceling(boolean) -> onPreParceling
androidx.versionedparcelable.ParcelImpl -> androidx.versionedparcelable.ParcelImpl:
    60:60:void <clinit>() -> <clinit>
    34:36:void <init>(androidx.versionedparcelable.VersionedParcelable) -> <init>
    38:40:void <init>(android.os.Parcel) -> <init>
    51:51:int describeContents() -> describeContents
    46:46:androidx.versionedparcelable.VersionedParcelable getVersionedParcel() -> getVersionedParcel
    56:58:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.versionedparcelable.ParcelImpl$1 -> androidx.versionedparcelable.ParcelImpl$1:
    60:60:void <init>() -> <init>
    60:60:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    63:63:androidx.versionedparcelable.ParcelImpl createFromParcel(android.os.Parcel) -> createFromParcel
    60:60:java.lang.Object[] newArray(int) -> newArray
    68:68:androidx.versionedparcelable.ParcelImpl[] newArray(int) -> newArray
androidx.versionedparcelable.ParcelUtils -> androidx.versionedparcelable.ParcelUtils:
    40:40:void <init>() -> <init>
    82:83:androidx.versionedparcelable.VersionedParcelable fromInputStream(java.io.InputStream) -> fromInputStream
    58:59:androidx.versionedparcelable.VersionedParcelable fromParcelable(android.os.Parcelable) -> fromParcelable
    109:117:androidx.versionedparcelable.VersionedParcelable getVersionedParcelable(android.os.Bundle,java.lang.String) -> getVersionedParcelable
    144:157:java.util.List getVersionedParcelableList(android.os.Bundle,java.lang.String) -> getVersionedParcelableList
    91:97:void putVersionedParcelable(android.os.Bundle,java.lang.String,androidx.versionedparcelable.VersionedParcelable) -> putVersionedParcelable
    126:133:void putVersionedParcelableList(android.os.Bundle,java.lang.String,java.util.List) -> putVersionedParcelableList
    70:73:void toOutputStream(androidx.versionedparcelable.VersionedParcelable,java.io.OutputStream) -> toOutputStream
    48:48:android.os.Parcelable toParcelable(androidx.versionedparcelable.VersionedParcelable) -> toParcelable
androidx.versionedparcelable.VersionedParcel -> androidx.versionedparcelable.VersionedParcel:
    86:90:void <init>(androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    1219:1221:java.lang.Exception createException(int,java.lang.String) -> createException
    1628:1635:java.lang.Class findParcelClass(java.lang.Class) -> findParcelClass
    1604:1611:java.lang.reflect.Method getReadMethod(java.lang.String) -> getReadMethod
    1208:1209:java.lang.Throwable getRootCause(java.lang.Throwable) -> getRootCause
    995:1010:int getType(java.lang.Object) -> getType
    1616:1623:java.lang.reflect.Method getWriteMethod(java.lang.Class) -> getWriteMethod
    96:96:boolean isStream() -> isStream
    1435:1438:java.lang.Object[] readArray(java.lang.Object[],int) -> readArray
    1444:1487:java.lang.Object[] readArray(java.lang.Object[]) -> readArray
    399:402:boolean readBoolean(boolean,int) -> readBoolean
    578:581:boolean[] readBooleanArray(boolean[],int) -> readBooleanArray
    587:595:boolean[] readBooleanArray() -> readBooleanArray
    493:496:android.os.Bundle readBundle(android.os.Bundle,int) -> readBundle
    1245:1248:byte readByte(byte,int) -> readByte
    472:475:byte[] readByteArray(byte[],int) -> readByteArray
    625:636:char[] readCharArray(char[],int) -> readCharArray
    616:619:java.lang.CharSequence readCharSequence(java.lang.CharSequence,int) -> readCharSequence
    1344:1386:java.util.Collection readCollection(java.util.Collection) -> readCollection
    441:444:double readDouble(double,int) -> readDouble
    795:798:double[] readDoubleArray(double[],int) -> readDoubleArray
    804:812:double[] readDoubleArray() -> readDoubleArray
    1170:1178:java.lang.Exception readException(java.lang.Exception,int) -> readException
    1198:1199:java.lang.Exception readException(int,java.lang.String) -> readException
    1193:1194:int readExceptionCode() -> readExceptionCode
    430:433:float readFloat(float,int) -> readFloat
    751:754:float[] readFloatArray(float[],int) -> readFloatArray
    760:768:float[] readFloatArray() -> readFloatArray
    1565:1568:androidx.versionedparcelable.VersionedParcelable readFromParcel(java.lang.String,androidx.versionedparcelable.VersionedParcel) -> readFromParcel
    409:412:int readInt(int,int) -> readInt
    663:666:int[] readIntArray(int[],int) -> readIntArray
    672:680:int[] readIntArray() -> readIntArray
    1337:1340:java.util.List readList(java.util.List,int) -> readList
    419:422:long readLong(long,int) -> readLong
    707:710:long[] readLongArray(long[],int) -> readLongArray
    716:724:long[] readLongArray() -> readLongArray
    1401:1419:java.util.Map readMap(java.util.Map,int) -> readMap
    481:484:android.os.Parcelable readParcelable(android.os.Parcelable,int) -> readParcelable
    1523:1549:java.io.Serializable readSerializable() -> readSerializable
    1318:1321:java.util.Set readSet(java.util.Set,int) -> readSet
    1256:1264:android.util.Size readSize(android.util.Size,int) -> readSize
    1272:1280:android.util.SizeF readSizeF(android.util.SizeF,int) -> readSizeF
    1289:1302:android.util.SparseBooleanArray readSparseBooleanArray(android.util.SparseBooleanArray,int) -> readSparseBooleanArray
    451:454:java.lang.String readString(java.lang.String,int) -> readString
    461:464:android.os.IBinder readStrongBinder(android.os.IBinder,int) -> readStrongBinder
    1493:1496:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> readVersionedParcelable
    1509:1513:androidx.versionedparcelable.VersionedParcelable readVersionedParcelable() -> readVersionedParcelable
    269:269:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    941:943:void writeArray(java.lang.Object[],int) -> writeArray
    948:992:void writeArray(java.lang.Object[]) -> writeArray
    294:296:void writeBoolean(boolean,int) -> writeBoolean
    557:559:void writeBooleanArray(boolean[],int) -> writeBooleanArray
    564:573:void writeBooleanArray(boolean[]) -> writeBooleanArray
    285:287:void writeBundle(android.os.Bundle,int) -> writeBundle
    504:506:void writeByte(byte,int) -> writeByte
    304:306:void writeByteArray(byte[],int) -> writeByteArray
    316:318:void writeByteArray(byte[],int,int,int) -> writeByteArray
    601:611:void writeCharArray(char[],int) -> writeCharArray
    325:327:void writeCharSequence(java.lang.CharSequence,int) -> writeCharSequence
    875:877:void writeCollection(java.util.Collection,int) -> writeCollection
    880:928:void writeCollection(java.util.Collection) -> writeCollection
    361:363:void writeDouble(double,int) -> writeDouble
    774:776:void writeDoubleArray(double[],int) -> writeDoubleArray
    781:790:void writeDoubleArray(double[]) -> writeDoubleArray
    1107:1147:void writeException(java.lang.Exception,int) -> writeException
    352:354:void writeFloat(float,int) -> writeFloat
    730:732:void writeFloatArray(float[],int) -> writeFloatArray
    737:746:void writeFloatArray(float[]) -> writeFloatArray
    334:336:void writeInt(int,int) -> writeInt
    642:644:void writeIntArray(int[],int) -> writeIntArray
    649:658:void writeIntArray(int[]) -> writeIntArray
    840:841:void writeList(java.util.List,int) -> writeList
    343:345:void writeLong(long,int) -> writeLong
    686:688:void writeLongArray(long[],int) -> writeLongArray
    693:702:void writeLongArray(long[]) -> writeLongArray
    854:872:void writeMap(java.util.Map,int) -> writeMap
    1157:1158:void writeNoException() -> writeNoException
    391:393:void writeParcelable(android.os.Parcelable,int) -> writeParcelable
    1057:1059:void writeSerializable(java.io.Serializable,int) -> writeSerializable
    1062:1077:void writeSerializable(java.io.Serializable) -> writeSerializable
    826:827:void writeSet(java.util.Set,int) -> writeSet
    514:520:void writeSize(android.util.Size,int) -> writeSize
    528:534:void writeSizeF(android.util.SizeF,int) -> writeSizeF
    539:552:void writeSparseBooleanArray(android.util.SparseBooleanArray,int) -> writeSparseBooleanArray
    370:372:void writeString(java.lang.String,int) -> writeString
    379:381:void writeStrongBinder(android.os.IBinder,int) -> writeStrongBinder
    276:278:void writeStrongInterface(android.os.IInterface,int) -> writeStrongInterface
    1586:1589:void writeToParcel(androidx.versionedparcelable.VersionedParcelable,androidx.versionedparcelable.VersionedParcel) -> writeToParcel
    1021:1023:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable,int) -> writeVersionedParcelable
    1028:1037:void writeVersionedParcelable(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelable
    1040:1044:void writeVersionedParcelableCreator(androidx.versionedparcelable.VersionedParcelable) -> writeVersionedParcelableCreator
androidx.versionedparcelable.VersionedParcel$1 -> androidx.versionedparcelable.VersionedParcel$1:
    1535:1535:void <init>(androidx.versionedparcelable.VersionedParcel,java.io.InputStream) -> <init>
    1539:1544:java.lang.Class resolveClass(java.io.ObjectStreamClass) -> resolveClass
androidx.versionedparcelable.VersionedParcel$ParcelException -> androidx.versionedparcelable.VersionedParcel$ParcelException:
    1642:1643:void <init>(java.lang.Throwable) -> <init>
androidx.versionedparcelable.VersionedParcelParcel -> androidx.versionedparcelable.VersionedParcelParcel:
    51:54:void <init>(android.os.Parcel) -> <init>
    60:66:void <init>(android.os.Parcel,int,int,java.lang.String,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    99:111:void closeField() -> closeField
    119:119:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    258:258:boolean readBoolean() -> readBoolean
    253:253:android.os.Bundle readBundle() -> readBundle
    236:242:byte[] readByteArray() -> readByteArray
    201:201:java.lang.CharSequence readCharSequence() -> readCharSequence
    221:221:double readDouble() -> readDouble
    70:84:boolean readField(int) -> readField
    216:216:float readFloat() -> readFloat
    206:206:int readInt() -> readInt
    211:211:long readLong() -> readLong
    248:248:android.os.Parcelable readParcelable() -> readParcelable
    226:226:java.lang.String readString() -> readString
    231:231:android.os.IBinder readStrongBinder() -> readStrongBinder
    89:95:void setOutputField(int) -> setOutputField
    181:182:void writeBoolean(boolean) -> writeBoolean
    191:192:void writeBundle(android.os.Bundle) -> writeBundle
    126:132:void writeByteArray(byte[]) -> writeByteArray
    136:142:void writeByteArray(byte[],int,int) -> writeByteArray
    196:197:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    161:162:void writeDouble(double) -> writeDouble
    156:157:void writeFloat(float) -> writeFloat
    146:147:void writeInt(int) -> writeInt
    151:152:void writeLong(long) -> writeLong
    176:177:void writeParcelable(android.os.Parcelable) -> writeParcelable
    166:167:void writeString(java.lang.String) -> writeString
    171:172:void writeStrongBinder(android.os.IBinder) -> writeStrongBinder
    186:187:void writeStrongInterface(android.os.IInterface) -> writeStrongInterface
androidx.versionedparcelable.VersionedParcelStream -> androidx.versionedparcelable.VersionedParcelStream:
    44:44:void <clinit>() -> <clinit>
    76:78:void <init>(java.io.InputStream,java.io.OutputStream) -> <init>
    84:123:void <init>(java.io.InputStream,java.io.OutputStream,androidx.collection.ArrayMap,androidx.collection.ArrayMap,androidx.collection.ArrayMap) -> <init>
    142:152:void closeField() -> closeField
    156:156:androidx.versionedparcelable.VersionedParcel createSubParcel() -> createSubParcel
    127:127:boolean isStream() -> isStream
    402:404:boolean readBoolean() -> readBoolean
    429:438:android.os.Bundle readBundle() -> readBundle
    381:390:byte[] readByteArray() -> readByteArray
    396:396:java.lang.CharSequence readCharSequence() -> readCharSequence
    356:358:double readDouble() -> readDouble
    164:186:boolean readField(int) -> readField
    347:349:float readFloat() -> readFloat
    329:331:int readInt() -> readInt
    338:340:long readLong() -> readLong
    489:538:void readObject(int,java.lang.String,android.os.Bundle) -> readObject
    323:323:android.os.Parcelable readParcelable() -> readParcelable
    365:374:java.lang.String readString() -> readString
    317:317:android.os.IBinder readStrongBinder() -> readStrongBinder
    191:194:void setOutputField(int) -> setOutputField
    134:135:void setSerializationFlags(boolean,boolean) -> setSerializationFlags
    288:290:void writeBoolean(boolean) -> writeBoolean
    411:423:void writeBundle(android.os.Bundle) -> writeBundle
    199:206:void writeByteArray(byte[]) -> writeByteArray
    213:220:void writeByteArray(byte[],int,int) -> writeByteArray
    226:227:void writeCharSequence(java.lang.CharSequence) -> writeCharSequence
    263:265:void writeDouble(double) -> writeDouble
    253:255:void writeFloat(float) -> writeFloat
    234:236:void writeInt(int) -> writeInt
    243:245:void writeLong(long) -> writeLong
    442:484:void writeObject(java.lang.Object) -> writeObject
    303:304:void writeParcelable(android.os.Parcelable) -> writeParcelable
    273:281:void writeString(java.lang.String) -> writeString
    296:297:void writeStrongBinder(android.os.IBinder) -> writeStrongBinder
    310:311:void writeStrongInterface(android.os.IInterface) -> writeStrongInterface
androidx.versionedparcelable.VersionedParcelStream$1 -> androidx.versionedparcelable.VersionedParcelStream$1:
    85:85:void <init>(androidx.versionedparcelable.VersionedParcelStream,java.io.InputStream) -> <init>
    88:93:int read() -> read
    98:105:int read(byte[],int,int) -> read
    110:117:long skip(long) -> skip
androidx.versionedparcelable.VersionedParcelStream$FieldBuffer -> androidx.versionedparcelable.VersionedParcelStream$FieldBuffer:
    549:552:void <init>(int,java.io.DataOutputStream) -> <init>
    555:563:void flushField() -> flushField
androidx.viewpager.widget.PagerAdapter -> androidx.viewpager.widget.PagerAdapter:
    81:82:void <init>() -> <init>
    129:130:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> destroyItem
    202:202:void destroyItem(android.view.View,int,java.lang.Object) -> destroyItem
    154:155:void finishUpdate(android.view.ViewGroup) -> finishUpdate
    231:231:void finishUpdate(android.view.View) -> finishUpdate
    281:281:int getItemPosition(java.lang.Object) -> getItemPosition
    332:332:java.lang.CharSequence getPageTitle(int) -> getPageTitle
    343:343:float getPageWidth(int) -> getPageWidth
    115:115:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> instantiateItem
    184:184:java.lang.Object instantiateItem(android.view.View,int) -> instantiateItem
    289:293:void notifyDataSetChanged() -> notifyDataSetChanged
    303:304:void registerDataSetObserver(android.database.DataSetObserver) -> registerDataSetObserver
    263:263:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> restoreState
    252:252:android.os.Parcelable saveState() -> saveState
    143:144:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> setPrimaryItem
    218:218:void setPrimaryItem(android.view.View,int,java.lang.Object) -> setPrimaryItem
    316:318:void setViewPagerObserver(android.database.DataSetObserver) -> setViewPagerObserver
    99:100:void startUpdate(android.view.ViewGroup) -> startUpdate
    166:166:void startUpdate(android.view.View) -> startUpdate
    312:313:void unregisterDataSetObserver(android.database.DataSetObserver) -> unregisterDataSetObserver
androidx.viewpager.widget.PagerTabStrip -> androidx.viewpager.widget.PagerTabStrip:
    83:84:void <init>(android.content.Context) -> <init>
    87:128:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    218:218:boolean getDrawFullUnderline() -> getDrawFullUnderline
    223:223:int getMinHeight() -> getMinHeight
    155:155:int getTabIndicatorColor() -> getTabIndicatorColor
    265:281:void onDraw(android.graphics.Canvas) -> onDraw
    228:260:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    184:188:void setBackgroundColor(int) -> setBackgroundColor
    176:180:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    192:196:void setBackgroundResource(int) -> setBackgroundResource
    205:208:void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    160:164:void setPadding(int,int,int,int) -> setPadding
    136:139:void setTabIndicatorColor(int) -> setTabIndicatorColor
    147:148:void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    168:172:void setTextSpacing(int) -> setTextSpacing
    285:301:void updateTextPositions(int,float,boolean) -> updateTextPositions
androidx.viewpager.widget.PagerTabStrip$1 -> androidx.viewpager.widget.PagerTabStrip$1:
    110:110:void <init>(androidx.viewpager.widget.PagerTabStrip) -> <init>
    113:114:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTabStrip$2 -> androidx.viewpager.widget.PagerTabStrip$2:
    118:118:void <init>(androidx.viewpager.widget.PagerTabStrip) -> <init>
    121:122:void onClick(android.view.View) -> onClick
androidx.viewpager.widget.PagerTitleStrip -> androidx.viewpager.widget.PagerTitleStrip:
    73:80:void <clinit>() -> <clinit>
    109:110:void <init>(android.content.Context) -> <init>
    113:165:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    463:468:int getMinHeight() -> getMinHeight
    181:181:int getTextSpacing() -> getTextSpacing
    239:243:void onAttachedToWindow() -> onAttachedToWindow
    258:265:void onDetachedFromWindow() -> onDetachedFromWindow
    456:460:void onLayout(boolean,int,int,int,int) -> onLayout
    420:422:void onMeasure(int,int) -> onMeasure
    308:311:void requestLayout() -> requestLayout
    233:235:void setGravity(int) -> setGravity
    190:194:void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    105:106:void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    203:208:void setTextColor(int) -> setTextColor
    221:224:void setTextSize(int,float) -> setTextSize
    173:175:void setTextSpacing(int) -> setTextSpacing
    314:328:void updateAdapter(androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> updateAdapter
    268:304:void updateText(int,androidx.viewpager.widget.PagerAdapter) -> updateText
    331:416:void updateTextPositions(int,float,boolean) -> updateTextPositions
androidx.viewpager.widget.PagerTitleStrip$PageListener -> androidx.viewpager.widget.PagerTitleStrip$PageListener:
    475:476:void <init>(androidx.viewpager.widget.PagerTitleStrip) -> <init>
    506:507:void onAdapterChanged(androidx.viewpager.widget.ViewPager,androidx.viewpager.widget.PagerAdapter,androidx.viewpager.widget.PagerAdapter) -> onAdapterChanged
    511:515:void onChanged() -> onChanged
    500:501:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    480:485:void onPageScrolled(int,float,int) -> onPageScrolled
    489:496:void onPageSelected(int) -> onPageSelected
androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform -> androidx.viewpager.widget.PagerTitleStrip$SingleLineAllCapsTransform:
    93:95:void <init>(android.content.Context) -> <init>
    99:100:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
androidx.viewpager.widget.ViewPager -> androidx.viewpager.widget.ViewPager:
    122:251:void <clinit>() -> <clinit>
    391:393:void <init>(android.content.Context) -> <init>
    396:398:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    2905:2940:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    1008:1017:androidx.viewpager.widget.ViewPager$ItemInfo addNewItem(int,int) -> addNewItem
    581:585:void addOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> addOnAdapterChangeListener
    723:727:void addOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> addOnPageChangeListener
    2950:2959:void addTouchables(java.util.ArrayList) -> addTouchables
    1472:1495:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    2793:2855:boolean arrowScroll(int) -> arrowScroll
    2528:2544:boolean beginFakeDrag() -> beginFakeDrag
    1298:1381:void calculatePageOffsets(androidx.viewpager.widget.ViewPager$ItemInfo,int,androidx.viewpager.widget.ViewPager$ItemInfo) -> calculatePageOffsets
    2719:2738:boolean canScroll(android.view.View,boolean,int,int,int) -> canScroll
    2692:2703:boolean canScrollHorizontally(int) -> canScrollHorizontally
    3029:3029:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    745:748:void clearOnPageChangeListeners() -> clearOnPageChangeListeners
    1974:2008:void completeScroll(boolean) -> completeScroll
    1793:1815:void computeScroll() -> computeScroll
    1023:1089:void dataSetChanged() -> dataSetChanged
    2406:2421:int determineTargetPage(int,float,int,int) -> determineTargetPage
    2744:2744:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    1923:1937:void dispatchOnPageScrolled(int,float,int) -> dispatchOnPageScrolled
    1940:1954:void dispatchOnPageSelected(int) -> dispatchOnPageSelected
    1957:1971:void dispatchOnScrollStateChanged(int) -> dispatchOnScrollStateChanged
    2997:3014:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    927:929:float distanceInfluenceForSnapDuration(float) -> distanceInfluenceForSnapDuration
    2426:2464:void draw(android.graphics.Canvas) -> draw
    915:920:void drawableStateChanged() -> drawableStateChanged
    2015:2021:void enableLayers(boolean) -> enableLayers
    2659:2666:void endDrag() -> endDrag
    2554:2555:void endFakeDrag() -> endFakeDrag
    2756:2782:boolean executeKeyEvent(android.view.KeyEvent) -> executeKeyEvent
    2586:2587:void fakeDragBy(float) -> fakeDragBy
    3019:3019:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    3024:3024:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    3034:3034:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    572:572:androidx.viewpager.widget.PagerAdapter getAdapter() -> getAdapter
    802:805:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    2859:2881:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> getChildRectInPagerCoordinates
    600:600:int getClientWidth() -> getClientWidth
    627:627:int getCurrentItem() -> getCurrentItem
    828:828:int getOffscreenPageLimit() -> getOffscreenPageLimit
    884:884:int getPageMargin() -> getPageMargin
    1523:1529:androidx.viewpager.widget.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> infoForAnyChild
    1512:1518:androidx.viewpager.widget.ViewPager$ItemInfo infoForChild(android.view.View) -> infoForChild
    2363:2401:androidx.viewpager.widget.ViewPager$ItemInfo infoForCurrentScrollPosition() -> infoForCurrentScrollPosition
    1533:1539:androidx.viewpager.widget.ViewPager$ItemInfo infoForPosition(int) -> infoForPosition
    401:475:void initViewPager() -> initViewPager
    1498:1499:boolean isDecorView(android.view.View) -> isDecorView
    2640:2640:boolean isFakeDragging() -> isFakeDragging
    2011:2011:boolean isGutterDrag(float,float) -> isGutterDrag
    1544:1546:void onAttachedToWindow() -> onAttachedToWindow
    479:485:void onDetachedFromWindow() -> onDetachedFromWindow
    2468:2508:void onDraw(android.graphics.Canvas) -> onDraw
    2031:2038:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1682:1789:void onLayout(boolean,int,int,int,int) -> onLayout
    1555:1642:void onMeasure(int,int) -> onMeasure
    1865:1920:void onPageScrolled(int,float,int) -> onPageScrolled
    2970:2991:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    1452:1468:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1441:1447:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    2644:2656:void onSecondaryPointerUp(android.view.MotionEvent) -> onSecondaryPointerUp
    1646:1652:void onSizeChanged(int,int,int,int) -> onSizeChanged
    2166:2181:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    2885:2889:boolean pageLeft() -> pageLeft
    2893:2897:boolean pageRight() -> pageRight
    1818:1844:boolean pageScrolled(int) -> pageScrolled
    2310:2355:boolean performDrag(float) -> performDrag
    1092:1093:void populate() -> populate
    1096:1143:void populate(int) -> populate
    1655:1678:void recomputeScrollPosition(int,int,int,int) -> recomputeScrollPosition
    555:563:void removeNonDecorViews() -> removeNonDecorViews
    594:597:void removeOnAdapterChangeListener(androidx.viewpager.widget.ViewPager$OnAdapterChangeListener) -> removeOnAdapterChangeListener
    736:739:void removeOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> removeOnPageChangeListener
    1504:1509:void removeView(android.view.View) -> removeView
    2303:2307:void requestParentDisallowInterceptTouchEvent(boolean) -> requestParentDisallowInterceptTouchEvent
    2294:2299:boolean resetTouch() -> resetTouch
    676:696:void scrollToItem(int,boolean,int,boolean) -> scrollToItem
    506:552:void setAdapter(androidx.viewpager.widget.PagerAdapter) -> setAdapter
    611:613:void setCurrentItem(int) -> setCurrentItem
    622:624:void setCurrentItem(int,boolean) -> setCurrentItem
    631:632:void setCurrentItemInternal(int,boolean,boolean) -> setCurrentItemInternal
    635:637:void setCurrentItemInternal(int,boolean,boolean,int) -> setCurrentItemInternal
    815:817:androidx.viewpager.widget.ViewPager$OnPageChangeListener setInternalPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setInternalPageChangeListener
    849:858:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    709:710:void setOnPageChangeListener(androidx.viewpager.widget.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    869:876:void setPageMargin(int) -> setPageMargin
    893:897:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    905:906:void setPageMarginDrawable(int) -> setPageMarginDrawable
    769:770:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer) -> setPageTransformer
    787:798:void setPageTransformer(boolean,androidx.viewpager.widget.ViewPager$PageTransformer,int) -> setPageTransformer
    488:498:void setScrollState(int) -> setScrollState
    2669:2681:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    939:940:void smoothScrollTo(int,int) -> smoothScrollTo
    950:1005:void smoothScrollTo(int,int,int) -> smoothScrollTo
    1282:1295:void sortChildDrawingOrder() -> sortChildDrawingOrder
    910:910:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
androidx.viewpager.widget.ViewPager$1 -> androidx.viewpager.widget.ViewPager$1:
    140:140:void <init>() -> <init>
    140:140:int compare(java.lang.Object,java.lang.Object) -> compare
    143:143:int compare(androidx.viewpager.widget.ViewPager$ItemInfo,androidx.viewpager.widget.ViewPager$ItemInfo) -> compare
androidx.viewpager.widget.ViewPager$2 -> androidx.viewpager.widget.ViewPager$2:
    147:147:void <init>() -> <init>
    150:151:float getInterpolation(float) -> getInterpolation
androidx.viewpager.widget.ViewPager$3 -> androidx.viewpager.widget.ViewPager$3:
    269:269:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    272:274:void run() -> run
androidx.viewpager.widget.ViewPager$4 -> androidx.viewpager.widget.ViewPager$4:
    428:429:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    435:471:androidx.core.view.WindowInsetsCompat onApplyWindowInsets(android.view.View,androidx.core.view.WindowInsetsCompat) -> onApplyWindowInsets
androidx.viewpager.widget.ViewPager$ItemInfo -> androidx.viewpager.widget.ViewPager$ItemInfo:
    132:132:void <init>() -> <init>
androidx.viewpager.widget.ViewPager$LayoutParams -> androidx.viewpager.widget.ViewPager$LayoutParams:
    3145:3146:void <init>() -> <init>
    3149:3154:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate -> androidx.viewpager.widget.ViewPager$MyAccessibilityDelegate:
    3037:3037:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3087:3087:boolean canScroll() -> canScroll
    3041:3049:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    3053:3062:void onInitializeAccessibilityNodeInfo(android.view.View,androidx.core.view.accessibility.AccessibilityNodeInfoCompat) -> onInitializeAccessibilityNodeInfo
    3066:3075:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
androidx.viewpager.widget.ViewPager$PagerObserver -> androidx.viewpager.widget.ViewPager$PagerObserver:
    3092:3093:void <init>(androidx.viewpager.widget.ViewPager) -> <init>
    3097:3098:void onChanged() -> onChanged
    3101:3102:void onInvalidated() -> onInvalidated
androidx.viewpager.widget.ViewPager$SavedState -> androidx.viewpager.widget.ViewPager$SavedState:
    1412:1412:void <clinit>() -> <clinit>
    1395:1396:void <init>(android.os.Parcelable) -> <init>
    1429:1436:void <init>(android.os.Parcel,java.lang.ClassLoader) -> <init>
    1407:1408:java.lang.String toString() -> toString
    1400:1403:void writeToParcel(android.os.Parcel,int) -> writeToParcel
androidx.viewpager.widget.ViewPager$SavedState$1 -> androidx.viewpager.widget.ViewPager$SavedState$1:
    1412:1412:void <init>() -> <init>
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1415:1415:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    1420:1420:androidx.viewpager.widget.ViewPager$SavedState createFromParcel(android.os.Parcel) -> createFromParcel
    1412:1412:java.lang.Object[] newArray(int) -> newArray
    1424:1424:androidx.viewpager.widget.ViewPager$SavedState[] newArray(int) -> newArray
androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener -> androidx.viewpager.widget.ViewPager$SimpleOnPageChangeListener:
    321:321:void <init>() -> <init>
    335:335:void onPageScrollStateChanged(int) -> onPageScrollStateChanged
    325:325:void onPageScrolled(int,float,int) -> onPageScrolled
    330:330:void onPageSelected(int) -> onPageSelected
androidx.viewpager.widget.ViewPager$ViewPositionComparator -> androidx.viewpager.widget.ViewPager$ViewPositionComparator:
    3157:3157:void <init>() -> <init>
    3157:3157:int compare(java.lang.Object,java.lang.Object) -> compare
    3160:3165:int compare(android.view.View,android.view.View) -> compare
com.lizhidan.voicebutton.BuildConfig -> com.lizhidan.voicebutton.BuildConfig:
    7:7:void <clinit>() -> <clinit>
    6:6:void <init>() -> <init>
com.lizhidan.voicebutton.VoiceButton -> com.lizhidan.voicebutton.VoiceButton:
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> <init>
    20:20:void <init>(android.content.Context,android.util.AttributeSet,int):20 -> <init>
    25:243:void <init>(android.content.Context,android.util.AttributeSet,int) -> <init>
    22:23:void <init>(android.content.Context,android.util.AttributeSet,int,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$changeState
    20:20:void access$changeState(com.lizhidan.voicebutton.VoiceButton,int):20 -> access$changeState
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$getCurrentState$p
    20:20:int access$getCurrentState$p(com.lizhidan.voicebutton.VoiceButton):20 -> access$getCurrentState$p
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$getMHandler$p
    20:20:android.os.Handler access$getMHandler$p(com.lizhidan.voicebutton.VoiceButton):20 -> access$getMHandler$p
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$getMUpdateMicStatusTimer$p
    20:20:java.lang.Runnable access$getMUpdateMicStatusTimer$p(com.lizhidan.voicebutton.VoiceButton):20 -> access$getMUpdateMicStatusTimer$p
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$getRecordDialogManager$p
    20:20:com.lizhidan.voicebutton.utils.RecordDialogManager access$getRecordDialogManager$p(com.lizhidan.voicebutton.VoiceButton):20 -> access$getRecordDialogManager$p
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$getRecordManager$p
    20:20:com.lizhidan.voicebutton.utils.RecordManager access$getRecordManager$p(com.lizhidan.voicebutton.VoiceButton):20 -> access$getRecordManager$p
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$getRecordTime$p
    20:20:long access$getRecordTime$p(com.lizhidan.voicebutton.VoiceButton):20 -> access$getRecordTime$p
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$getRecorderListener$p
    20:20:com.lizhidan.voicebutton.VoiceButton$RecorderListener access$getRecorderListener$p(com.lizhidan.voicebutton.VoiceButton):20 -> access$getRecorderListener$p
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$getSamplingInterval$p
    20:20:long access$getSamplingInterval$p(com.lizhidan.voicebutton.VoiceButton):20 -> access$getSamplingInterval$p
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$getUpdateDialogRunable$p
    20:20:java.lang.Runnable access$getUpdateDialogRunable$p(com.lizhidan.voicebutton.VoiceButton):20 -> access$getUpdateDialogRunable$p
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$getUpdateRemainingTimeRunable$p
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$isRecording$p
    20:20:boolean access$isRecording$p(com.lizhidan.voicebutton.VoiceButton):20 -> access$isRecording$p
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$resetRecordState
    20:20:void access$resetRecordState(com.lizhidan.voicebutton.VoiceButton):20 -> access$resetRecordState
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$setCurrentState$p
    20:20:void access$setCurrentState$p(com.lizhidan.voicebutton.VoiceButton,int):20 -> access$setCurrentState$p
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$setRecordDialogManager$p
    20:20:void access$setRecordDialogManager$p(com.lizhidan.voicebutton.VoiceButton,com.lizhidan.voicebutton.utils.RecordDialogManager):20 -> access$setRecordDialogManager$p
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$setRecordManager$p
    20:20:void access$setRecordManager$p(com.lizhidan.voicebutton.VoiceButton,com.lizhidan.voicebutton.utils.RecordManager):20 -> access$setRecordManager$p
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$setRecordTime$p
    20:20:void access$setRecordTime$p(com.lizhidan.voicebutton.VoiceButton,long):20 -> access$setRecordTime$p
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$setRecorderListener$p
    20:20:void access$setRecorderListener$p(com.lizhidan.voicebutton.VoiceButton,com.lizhidan.voicebutton.VoiceButton$RecorderListener):20 -> access$setRecorderListener$p
    20:20:java.lang.Runnable access$getUpdateRemainingTimeRunable$p(com.lizhidan.voicebutton.VoiceButton) -> access$setRecording$p
    20:20:void access$setRecording$p(com.lizhidan.voicebutton.VoiceButton,boolean):20 -> access$setRecording$p
    162:179:void changeState(int) -> changeState
    101:151:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    290:295:void releaseAudioFocus() -> releaseAudioFocus
    278:287:void requestAudioFocus() -> requestAudioFocus
    185:188:void resetRecordState() -> resetRecordState
    43:43:void setMaxRecordLength(int) -> setMaxRecordLength
    96:97:void setRecorderListener(com.lizhidan.voicebutton.VoiceButton$RecorderListener) -> setRecorderListener
    157:157:boolean wantToCancel(float) -> wantToCancel
com.lizhidan.voicebutton.VoiceButton$1 -> com.lizhidan.voicebutton.VoiceButton$1:
    244:244:void onAudioFocusChange(int) -> onAudioFocusChange
com.lizhidan.voicebutton.VoiceButton$2 -> com.lizhidan.voicebutton.VoiceButton$2:
    270:272:boolean onLongClick(android.view.View) -> onLongClick
com.lizhidan.voicebutton.VoiceButton$Companion -> com.lizhidan.voicebutton.VoiceButton$Companion:
    221:221:void <init>() -> <init>
    221:221:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
com.lizhidan.voicebutton.VoiceButton$RecorderStateListener -> com.lizhidan.voicebutton.VoiceButton$RecorderStateListener:
    190:190:void <init>(com.lizhidan.voicebutton.VoiceButton) -> <init>
    192:193:void onError(int,int) -> onError
    212:218:void onReachMaxRecordTime(java.lang.String) -> onReachMaxRecordTime
    207:208:void onStop(java.lang.String) -> onStop
    196:204:void wellPrepared() -> wellPrepared
com.lizhidan.voicebutton.VoiceButton$dismissDialogRunable$1 -> com.lizhidan.voicebutton.VoiceButton$dismissDialogRunable$1:
    81:81:void run() -> run
com.lizhidan.voicebutton.VoiceButton$mUpdateMicStatusTimer$1 -> com.lizhidan.voicebutton.VoiceButton$mUpdateMicStatusTimer$1:
    59:74:void run() -> run
com.lizhidan.voicebutton.VoiceButton$updateDialogRunable$1 -> com.lizhidan.voicebutton.VoiceButton$updateDialogRunable$1:
    76:77:void run() -> run
com.lizhidan.voicebutton.VoiceButton$updateRemainingTimeRunable$1 -> com.lizhidan.voicebutton.VoiceButton$updateRemainingTimeRunable$1:
    79:80:void run() -> run
com.lizhidan.voicebutton.utils.MLog -> com.lizhidan.voicebutton.utils.MLog:
    10:52:void <init>() -> <init>
    10:10:boolean access$isDebug$cp() -> access$isDebug$cp
    10:10:void access$setDebug$cp(boolean) -> access$setDebug$cp
com.lizhidan.voicebutton.utils.MLog$Companion -> com.lizhidan.voicebutton.utils.MLog$Companion:
    11:11:void <init>() -> <init>
    11:11:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    21:22:void d(java.lang.String) -> d
    38:39:void d(java.lang.String,java.lang.String) -> d
    25:26:void e(java.lang.String) -> e
    42:43:void e(java.lang.String,java.lang.String) -> e
    17:18:void i(java.lang.String) -> i
    34:35:void i(java.lang.String,java.lang.String) -> i
    12:12:boolean isDebug() -> isDebug
    12:12:void setDebug(boolean) -> setDebug
    29:30:void v(java.lang.String) -> v
    46:47:void v(java.lang.String,java.lang.String) -> v
com.lizhidan.voicebutton.utils.RecordDialogManager -> com.lizhidan.voicebutton.utils.RecordDialogManager:
    14:14:void <init>(android.content.Context) -> <init>
    91:95:void dimissDialog() -> dimissDialog
    67:76:void showCancelRecording() -> showCancelRecording
    31:50:void showPrepareDialog() -> showPrepareDialog
    54:63:void showRecordingDialog() -> showRecordingDialog
    80:87:void showRocordTooShortDialog() -> showRocordTooShortDialog
    116:122:void updateRemainingTime(int) -> updateRemainingTime
    103:108:void updateVoiceLevel(int) -> updateVoiceLevel
com.lizhidan.voicebutton.utils.RecordManager -> com.lizhidan.voicebutton.utils.RecordManager:
    10:10:void access$setRecordAbsoluteFileDir$p(com.lizhidan.voicebutton.utils.RecordManager,java.lang.String) -> <init>
    10:10:void <init>(java.lang.String):10 -> <init>
    23:29:void <init>(java.lang.String) -> <init>
    10:10:void access$setRecordAbsoluteFileDir$p(com.lizhidan.voicebutton.utils.RecordManager,java.lang.String) -> access$getMediaRecorderStateListener$p
    10:10:com.lizhidan.voicebutton.interfaces.MediaRecorderStateListener access$getMediaRecorderStateListener$p(com.lizhidan.voicebutton.utils.RecordManager):10 -> access$getMediaRecorderStateListener$p
    10:10:void access$setRecordAbsoluteFileDir$p(com.lizhidan.voicebutton.utils.RecordManager,java.lang.String) -> access$getRecordAbsoluteFileDir$p
    10:10:java.lang.String access$getRecordAbsoluteFileDir$p(com.lizhidan.voicebutton.utils.RecordManager):10 -> access$getRecordAbsoluteFileDir$p
    10:10:void access$setRecordAbsoluteFileDir$p(com.lizhidan.voicebutton.utils.RecordManager,java.lang.String) -> access$setMediaRecorderStateListener$p
    10:10:void access$setMediaRecorderStateListener$p(com.lizhidan.voicebutton.utils.RecordManager,com.lizhidan.voicebutton.interfaces.MediaRecorderStateListener):10 -> access$setMediaRecorderStateListener$p
    10:10:void access$setRecordAbsoluteFileDir$p(com.lizhidan.voicebutton.utils.RecordManager,java.lang.String) -> access$setRecordAbsoluteFileDir$p
    106:112:void cancel() -> cancel
    23:23:void <init>(java.lang.String) -> getMaxRecordLength
    23:23:int getMaxRecordLength():23 -> getMaxRecordLength
    16:16:java.lang.String getRecordAbsoluteFileDir() -> getRecordAbsoluteFileDir
    118:128:int getVoiceLevel(int) -> getVoiceLevel
    39:88:void prepareAudio() -> prepareAudio
    92:102:void release() -> release
    23:23:void <init>(java.lang.String) -> setMaxRecordLength
    23:23:void setMaxRecordLength(int):23 -> setMaxRecordLength
    32:33:void setMediaRecorderStateListener(com.lizhidan.voicebutton.interfaces.MediaRecorderStateListener) -> setMediaRecorderStateListener
com.lizhidan.voicebutton.utils.RecordManager$prepareAudio$2 -> com.lizhidan.voicebutton.utils.RecordManager$prepareAudio$2:
    64:70:void onInfo(android.media.MediaRecorder,int,int) -> onInfo
com.lizhidan.voicebutton.utils.RecordManager$prepareAudio$3 -> com.lizhidan.voicebutton.utils.RecordManager$prepareAudio$3:
    72:76:void onError(android.media.MediaRecorder,int,int) -> onError
com.lizhidan.voicebuttondemo.MainActivity -> com.lizhidan.voicebuttondemo.MainActivity:
    com.lizhidan.voicebuttondemo.adapter.RecoderAdapter recoderAdapter -> c
    com.lizhidan.voicebutton.VoiceButton vbRecord -> a
    androidx.recyclerview.widget.RecyclerView rvVoice -> b
    int lastPlayedPosition -> d
    android.view.View voiceAnim -> e
    25:29:void <init>() -> <init>
    25:25:int access$getLastPlayedPosition$p(com.lizhidan.voicebuttondemo.MainActivity) -> a
    25:25:com.lizhidan.voicebuttondemo.adapter.RecoderAdapter access$getRecoderAdapter$p(com.lizhidan.voicebuttondemo.MainActivity) -> b
    25:25:android.view.View access$getVoiceAnim$p(com.lizhidan.voicebuttondemo.MainActivity) -> c
    25:25:void access$onRecordAudioDenied(com.lizhidan.voicebuttondemo.MainActivity) -> d
    25:25:void access$onRecordAudioNeverAskAgain(com.lizhidan.voicebuttondemo.MainActivity) -> e
    25:25:void access$onRecordAudioShowRationale(com.lizhidan.voicebuttondemo.MainActivity,permissions.dispatcher.PermissionRequest) -> f
    25:25:void access$setLastPlayedPosition$p(com.lizhidan.voicebuttondemo.MainActivity,int) -> g
    25:25:void access$setVoiceAnim$p(com.lizhidan.voicebuttondemo.MainActivity,android.view.View) -> h
    39:45:void checkRecordAudioPermission() -> i
    60:61:void initView() -> j
    48:49:void onRecordAudioDenied() -> k
    56:57:void onRecordAudioNeverAskAgain() -> l
    52:53:void onRecordAudioShowRationale(permissions.dispatcher.PermissionRequest) -> m
    32:37:void onCreate(android.os.Bundle) -> onCreate
    111:113:void onDestroy() -> onDestroy
com.lizhidan.voicebuttondemo.MainActivity$Companion -> com.lizhidan.voicebuttondemo.MainActivity$a:
    115:115:void <init>() -> <init>
    115:115:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
com.lizhidan.voicebuttondemo.MainActivity$checkRecordAudioPermission$1 -> com.lizhidan.voicebuttondemo.MainActivity$b:
    java.lang.String getName() -> f
    kotlin.reflect.KDeclarationContainer getOwner() -> g
    java.lang.String getSignature() -> h
    41:41:void invoke(permissions.dispatcher.PermissionRequest) -> i
    25:25:java.lang.Object invoke(java.lang.Object) -> invoke
com.lizhidan.voicebuttondemo.MainActivity$checkRecordAudioPermission$2 -> com.lizhidan.voicebuttondemo.MainActivity$c:
    25:25:java.lang.Object invoke() -> a
    java.lang.String getName() -> f
    kotlin.reflect.KDeclarationContainer getOwner() -> g
    java.lang.String getSignature() -> h
    42:42:void invoke() -> i
com.lizhidan.voicebuttondemo.MainActivity$checkRecordAudioPermission$3 -> com.lizhidan.voicebuttondemo.MainActivity$d:
    25:25:java.lang.Object invoke() -> a
    java.lang.String getName() -> f
    kotlin.reflect.KDeclarationContainer getOwner() -> g
    java.lang.String getSignature() -> h
    43:43:void invoke() -> i
com.lizhidan.voicebuttondemo.MainActivity$checkRecordAudioPermission$4 -> com.lizhidan.voicebuttondemo.MainActivity$e:
    com.lizhidan.voicebuttondemo.MainActivity$checkRecordAudioPermission$4 INSTANCE -> a
    25:25:java.lang.Object invoke() -> a
    45:45:void invoke() -> c
com.lizhidan.voicebuttondemo.MainActivity$initView$1 -> com.lizhidan.voicebuttondemo.MainActivity$f:
    com.lizhidan.voicebuttondemo.MainActivity this$0 -> a
    62:62:void <init>(com.lizhidan.voicebuttondemo.MainActivity) -> <init>
    71:72:void onFinish(long,java.lang.String) -> onFinish
    64:65:void onStart() -> onStart
com.lizhidan.voicebuttondemo.MainActivity$initView$2 -> com.lizhidan.voicebuttondemo.MainActivity$g:
    com.lizhidan.voicebuttondemo.MainActivity this$0 -> a
    78:78:void <init>(com.lizhidan.voicebuttondemo.MainActivity) -> <init>
    81:92:void onItemClick(android.view.View,int) -> a
com.lizhidan.voicebuttondemo.MainActivity$initView$2$onItemClick$1 -> com.lizhidan.voicebuttondemo.MainActivity$g$a:
    com.lizhidan.voicebuttondemo.MainActivity$initView$2 this$0 -> a
    101:102:void onCompletion(android.media.MediaPlayer) -> onCompletion
com.lizhidan.voicebuttondemo.adapter.RecoderAdapter -> com.lizhidan.voicebuttondemo.adapter.RecoderAdapter:
    java.util.List mDatas -> a
    android.view.LayoutInflater mInflater -> d
    com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$OnItemClickListener onItemClickListener -> e
    int mMinWidth -> b
    int mMaxWidth -> c
    android.content.Context mContext -> f
    21:21:void access$setOnItemClickListener$p(com.lizhidan.voicebuttondemo.adapter.RecoderAdapter,com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$OnItemClickListener) -> <init>
    21:21:void <init>(android.content.Context,java.util.List):21 -> <init>
    25:107:void <init>(android.content.Context,java.util.List) -> <init>
    21:21:void access$setOnItemClickListener$p(com.lizhidan.voicebuttondemo.adapter.RecoderAdapter,com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$OnItemClickListener) -> a
    21:21:com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$OnItemClickListener access$getOnItemClickListener$p(com.lizhidan.voicebuttondemo.adapter.RecoderAdapter):21 -> a
    98:100:void addData(com.lizhidan.voicebuttondemo.bean.RecorderInfo) -> b
    88:88:com.lizhidan.voicebuttondemo.bean.RecorderInfo getItem(int) -> c
    74:81:void onBindViewHolder(com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder,int) -> d
    63:66:com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder onCreateViewHolder(android.view.ViewGroup,int) -> e
    41:42:void setOnItemClickListener(com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$OnItemClickListener) -> f
    84:84:int getItemCount() -> getItemCount
    21:21:void access$setOnItemClickListener$p(com.lizhidan.voicebuttondemo.adapter.RecoderAdapter,com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$OnItemClickListener) -> onBindViewHolder
    21:21:void onBindViewHolder(androidx.recyclerview.widget.RecyclerView$ViewHolder,int):21 -> onBindViewHolder
    21:21:void access$setOnItemClickListener$p(com.lizhidan.voicebuttondemo.adapter.RecoderAdapter,com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$OnItemClickListener) -> onCreateViewHolder
    21:21:androidx.recyclerview.widget.RecyclerView$ViewHolder onCreateViewHolder(android.view.ViewGroup,int):21 -> onCreateViewHolder
com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$OnItemClickListener -> com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$a:
    void onItemClick(android.view.View,int) -> a
com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder -> com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder:
    android.widget.LinearLayout llRecoderLength -> a
    com.lizhidan.voicebuttondemo.adapter.RecoderAdapter this$0 -> c
    android.widget.TextView tvVoiceDuration -> b
    44:56:void <init>(com.lizhidan.voicebuttondemo.adapter.RecoderAdapter,android.view.View) -> <init>
    45:45:android.widget.LinearLayout getLlRecoderLength() -> a
    46:46:android.widget.TextView getTvVoiceDuration() -> b
com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder$1 -> com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder$a:
    com.lizhidan.voicebuttondemo.adapter.RecoderAdapter$RecordHolder this$0 -> a
    52:55:void onClick(android.view.View) -> onClick
com.lizhidan.voicebuttondemo.bean.RecorderInfo -> com.lizhidan.voicebuttondemo.bean.RecorderInfo:
    6:6:void <init>(long,java.lang.String) -> <init>
    10:10:java.lang.String getFilePath() -> getFilePath
    8:8:long getTime() -> getTime
    10:10:void setFilePath(java.lang.String) -> setFilePath
    8:8:void setTime(long) -> setTime
    14:16:java.lang.String toString() -> toString
com.lizhidan.voicebuttondemo.utils.MediaPlayerManager -> a.a.a.a.a:
    com.lizhidan.voicebuttondemo.utils.MediaPlayerManager INSTANCE -> b
    android.media.MediaPlayer mMediaPlayer -> a
    7:7:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
    7:7:android.media.MediaPlayer access$getMMediaPlayer$p(com.lizhidan.voicebuttondemo.utils.MediaPlayerManager) -> a
    69:71:boolean isPlaying() -> b
    22:31:void playSound(java.lang.String,android.media.MediaPlayer$OnCompletionListener) -> c
    88:93:void release() -> d
    78:81:void stop() -> e
com.lizhidan.voicebuttondemo.utils.MediaPlayerManager$playSound$1 -> a.a.a.a.a$a:
    com.lizhidan.voicebuttondemo.utils.MediaPlayerManager$playSound$1 INSTANCE -> a
    27:27:boolean onError(android.media.MediaPlayer,int,int) -> onError
kotlin.ExceptionsKt__ExceptionsKt -> b.a:
    48:48:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> a
kotlin.Function -> b.b:
kotlin.InitializedLazyImpl -> b.c:
    java.lang.Object value -> a
    95:95:void <init>(java.lang.Object) -> <init>
    95:95:java.lang.Object getValue() -> getValue
    99:99:java.lang.String toString() -> toString
kotlin.KotlinNullPointerException -> b.d:
    9:9:void <init>() -> <init>
kotlin.Lazy -> b.e:
kotlin.LazyKt__LazyJVMKt -> b.f:
    21:21:kotlin.Lazy lazy(kotlin.jvm.functions.Function0) -> a
kotlin.NoWhenBranchMatchedException -> b.g:
    9:9:void <init>() -> <init>
kotlin.NotImplementedError -> b.h:
    15:15:void <init>(java.lang.String) -> <init>
kotlin.Pair -> b.i:
    java.lang.Object second -> b
    java.lang.Object first -> a
    26:26:void <init>(java.lang.Object,java.lang.Object) -> <init>
    java.lang.Object component1() -> a
    java.lang.Object component2() -> b
    27:27:java.lang.Object getFirst() -> c
    28:28:java.lang.Object getSecond() -> d
    34:34:java.lang.String toString() -> toString
kotlin.SynchronizedLazyImpl -> b.j:
    java.lang.Object _value -> b
    java.lang.Object lock -> c
    kotlin.jvm.functions.Function0 initializer -> a
    55:55:void <init>(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    55:55:void <init>(kotlin.jvm.functions.Function0,java.lang.Object):55 -> <init>
    56:59:void <init>(kotlin.jvm.functions.Function0,java.lang.Object) -> <init>
    55:55:void <init>(kotlin.jvm.functions.Function0,java.lang.Object,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    82:82:boolean isInitialized() -> a
    63:69:java.lang.Object getValue() -> getValue
    84:84:java.lang.String toString() -> toString
    86:86:java.lang.Object writeReplace() -> writeReplace
kotlin.TuplesKt -> b.k:
    43:43:kotlin.Pair to(java.lang.Object,java.lang.Object) -> a
kotlin.TypeCastException -> b.l:
    11:11:void <init>(java.lang.String) -> <init>
kotlin.UNINITIALIZED_VALUE -> b.m:
    kotlin.UNINITIALIZED_VALUE INSTANCE -> a
    71:71:void <clinit>() -> <clinit>
    71:71:void <init>() -> <init>
kotlin.UninitializedPropertyAccessException -> b.n:
    9:9:void <init>() -> <init>
    11:11:void <init>(java.lang.String) -> <init>
kotlin.Unit -> b.o:
    kotlin.Unit INSTANCE -> a
    22:22:void <clinit>() -> <clinit>
    22:22:void <init>() -> <init>
    23:23:java.lang.String toString() -> toString
kotlin.collections.ArrayAsCollection -> b.p.a:
    java.lang.Object[] values -> a
    boolean isVarargs -> b
    56:56:void <init>(java.lang.Object[],boolean) -> <init>
    57:57:int getSize() -> c
    59:59:boolean contains(java.lang.Object) -> contains
    60:60:boolean containsAll(java.util.Collection) -> containsAll
    1535:1535:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> containsAll
    1535:1535:boolean containsAll(java.util.Collection):448 -> containsAll
    1536:1536:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> containsAll
    1536:1536:boolean containsAll(java.util.Collection):449 -> containsAll
    60:60:boolean containsAll(java.util.Collection) -> containsAll
    1537:1537:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> containsAll
    1537:1537:boolean containsAll(java.util.Collection):450 -> containsAll
    60:60:boolean containsAll(java.util.Collection) -> containsAll
    58:58:boolean isEmpty() -> isEmpty
    61:61:java.util.Iterator iterator() -> iterator
    56:56:void <init>(java.lang.Object[],boolean) -> size
    56:56:int size():56 -> size
    63:63:java.lang.Object[] toArray() -> toArray
kotlin.collections.ArraysKt__ArraysJVMKt -> b.p.b:
    49:49:void copyOfRangeToIndexCheck(int,int) -> a
kotlin.collections.ArraysKt__ArraysKt -> b.p.c:
kotlin.collections.ArraysKt___ArraysJvmKt -> b.p.d:
    129:129:java.util.List asList(java.lang.Object[]) -> b
    316:316:int binarySearch(int[],int,int,int) -> c
    315:315:int binarySearch$default(int[],int,int,int,int,java.lang.Object) -> d
    1375:1376:char[] copyOfRange(char[],int,int) -> e
    1959:1960:void sortWith(java.lang.Object[],java.util.Comparator) -> f
kotlin.collections.ArraysKt___ArraysKt -> b.p.e:
    16008:16009:kotlin.sequences.Sequence asSequence(long[]) -> g
    15968:15969:kotlin.sequences.Sequence asSequence(java.lang.Object[]) -> h
    519:519:boolean contains(java.lang.Object[],java.lang.Object) -> i
    1410:1423:int indexOf(java.lang.Object[],java.lang.Object) -> j
    2702:2703:char single(char[]) -> k
    2875:2875:java.lang.Object singleOrNull(java.lang.Object[]) -> l
    8191:8194:java.util.Collection toCollection(java.lang.Object[],java.util.Collection) -> m
    8344:8344:java.util.List toList(java.lang.Object[]) -> n
    8443:8443:java.util.List toMutableList(java.lang.Object[]) -> o
    8524:8524:java.util.Set toSet(java.lang.Object[]) -> p
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$1 -> b.p.e$a:
    java.lang.Object[] $this_asSequence$inlined -> a
    19:19:void kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    19:19:void <init>(java.lang.Object[]):19 -> <init>
    20:20:java.util.Iterator kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.iterator() -> iterator
    20:20:java.util.Iterator iterator():20 -> iterator
    15969:15969:kotlin.sequences.Sequence kotlin.collections.ArraysKt___ArraysKt.asSequence(java.lang.Object[]) -> iterator
    15969:15969:java.util.Iterator iterator():634 -> iterator
kotlin.collections.ArraysKt___ArraysKt$asSequence$$inlined$Sequence$5 -> b.p.e$b:
    long[] $this_asSequence$inlined -> a
    19:19:void kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    19:19:void <init>(long[]):19 -> <init>
    20:20:java.util.Iterator kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.iterator() -> iterator
    20:20:java.util.Iterator iterator():20 -> iterator
    16009:16009:kotlin.sequences.Sequence kotlin.collections.ArraysKt___ArraysKt.asSequence(long[]) -> iterator
    16009:16009:java.util.Iterator iterator():634 -> iterator
kotlin.collections.ArraysUtilJVM -> b.p.f:
    13:13:java.util.List asList(java.lang.Object[]) -> a
kotlin.collections.BooleanIterator -> b.p.g:
    67:67:void <init>() -> <init>
    67:67:java.lang.Object next() -> next
    68:68:java.lang.Boolean next() -> next
kotlin.collections.CollectionsKt__CollectionsJVMKt -> b.p.h:
    42:46:java.lang.Object[] copyToArrayOfAny(java.lang.Object[],boolean) -> a
    19:19:java.util.List listOf(java.lang.Object) -> b
kotlin.collections.CollectionsKt__CollectionsKt -> b.p.i:
    113:113:java.util.ArrayList arrayListOf(java.lang.Object[]) -> c
    54:54:java.util.Collection asCollection(java.lang.Object[]) -> d
    70:70:java.util.List emptyList() -> e
    210:210:int getLastIndex(java.util.List) -> f
    76:76:java.util.List listOf(java.lang.Object[]) -> g
    269:273:java.util.List optimizeReadOnlyList(java.util.List) -> h
    445:445:void throwCountOverflow() -> i
    441:441:void throwIndexOverflow() -> j
kotlin.collections.CollectionsKt__IterablesKt -> b.p.j:
    39:39:int collectionSizeOrDefault(java.lang.Iterable,int) -> k
kotlin.collections.CollectionsKt__IteratorsJVMKt -> b.p.k:
kotlin.collections.CollectionsKt__IteratorsKt -> b.p.l:
kotlin.collections.CollectionsKt__MutableCollectionsJVMKt -> b.p.m:
    42:43:void sortWith(java.util.List,java.util.Comparator) -> l
kotlin.collections.CollectionsKt__MutableCollectionsKt -> b.p.n:
    115:121:boolean addAll(java.util.Collection,java.lang.Iterable) -> m
    130:134:boolean addAll(java.util.Collection,kotlin.sequences.Sequence) -> n
    141:141:boolean addAll(java.util.Collection,java.lang.Object[]) -> o
kotlin.collections.CollectionsKt__ReversedViewsKt -> b.p.o:
kotlin.collections.CollectionsKt___CollectionsJvmKt -> b.p.p:
kotlin.collections.CollectionsKt___CollectionsKt -> b.p.q:
    2267:2270:java.util.List plus(java.util.Collection,java.lang.Object[]) -> A
    529:534:java.lang.Object single(java.lang.Iterable) -> B
    547:548:java.lang.Object single(java.util.List) -> C
    983:986:java.util.List sortedWith(java.lang.Iterable,java.util.Comparator) -> D
    37:37:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> D
    37:37:java.util.List sortedWith(java.lang.Iterable,java.util.Comparator):2746 -> D
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> D
    38:38:java.util.List sortedWith(java.lang.Iterable,java.util.Comparator):2747 -> D
    986:986:java.util.List sortedWith(java.lang.Iterable,java.util.Comparator) -> D
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> D
    38:38:java.util.List sortedWith(java.lang.Iterable,java.util.Comparator):2747 -> D
    988:988:java.util.List sortedWith(java.lang.Iterable,java.util.Comparator) -> D
    816:816:java.util.List take(java.lang.Iterable,int) -> E
    1206:1209:java.util.Collection toCollection(java.lang.Iterable,java.util.Collection) -> F
    1050:1054:int[] toIntArray(java.util.Collection) -> G
    1223:1230:java.util.List toList(java.lang.Iterable) -> H
    1237:1239:java.util.List toMutableList(java.lang.Iterable) -> I
    1246:1246:java.util.List toMutableList(java.util.Collection) -> J
    1255:1262:java.util.Set toSet(java.lang.Iterable) -> K
    2553:2553:kotlin.sequences.Sequence asSequence(java.lang.Iterable) -> p
    661:661:java.util.List dropLast(java.util.List,int) -> q
    189:194:java.lang.Object first(java.lang.Iterable) -> r
    205:206:java.lang.Object first(java.util.List) -> s
    2514:2524:java.lang.Appendable joinTo(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> t
    2513:2513:java.lang.Appendable joinTo$default(java.lang.Iterable,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> u
    2536:2536:java.lang.String joinToString(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> v
    2535:2535:java.lang.String joinToString$default(java.lang.Iterable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> w
    371:372:java.lang.Object last(java.util.List) -> x
    1791:1798:java.lang.Comparable min(java.lang.Iterable) -> y
    2288:2296:java.util.List plus(java.util.Collection,java.lang.Iterable) -> z
kotlin.collections.CollectionsKt___CollectionsKt$asSequence$$inlined$Sequence$1 -> b.p.q$a:
    java.lang.Iterable $this_asSequence$inlined -> a
    19:19:void kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    19:19:void <init>(java.lang.Iterable):19 -> <init>
    20:20:java.util.Iterator kotlin.sequences.SequencesKt__SequencesKt$Sequence$1.iterator() -> iterator
    20:20:java.util.Iterator iterator():20 -> iterator
    2553:2553:kotlin.sequences.Sequence kotlin.collections.CollectionsKt___CollectionsKt.asSequence(java.lang.Iterable) -> iterator
    2553:2553:java.util.Iterator iterator():634 -> iterator
kotlin.collections.EmptyIterator -> b.p.r:
    kotlin.collections.EmptyIterator INSTANCE -> a
    14:14:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    19:19:java.lang.Void next() -> c
    20:20:java.lang.Void previous() -> d
    15:15:boolean hasNext() -> hasNext
    16:16:boolean hasPrevious() -> hasPrevious
    14:14:java.lang.Object next() -> next
    17:17:int nextIndex() -> nextIndex
    14:14:java.lang.Object previous() -> previous
    18:18:int previousIndex() -> previousIndex
kotlin.collections.EmptyList -> b.p.s:
    kotlin.collections.EmptyList INSTANCE -> a
    23:23:void <clinit>() -> <clinit>
    23:23:void <init>() -> <init>
    32:32:boolean contains(java.lang.Void) -> c
    23:23:boolean contains(java.lang.Object) -> contains
    33:33:boolean containsAll(java.util.Collection) -> containsAll
    35:35:java.lang.Void get(int) -> d
    30:30:int getSize() -> e
    26:26:boolean equals(java.lang.Object) -> equals
    36:36:int indexOf(java.lang.Void) -> f
    37:37:int lastIndexOf(java.lang.Void) -> g
    23:23:java.lang.Object get(int) -> get
    27:27:int hashCode() -> hashCode
    23:23:int indexOf(java.lang.Object) -> indexOf
    31:31:boolean isEmpty() -> isEmpty
    39:39:java.util.Iterator iterator() -> iterator
    23:23:int lastIndexOf(java.lang.Object) -> lastIndexOf
    40:40:java.util.ListIterator listIterator() -> listIterator
    42:42:java.util.ListIterator listIterator(int) -> listIterator
    51:51:java.lang.Object readResolve() -> readResolve
    23:23:int size() -> size
    47:48:java.util.List subList(int,int) -> subList
    28:28:java.lang.String toString() -> toString
kotlin.collections.EmptyMap -> b.p.t:
    kotlin.collections.EmptyMap INSTANCE -> a
    14:14:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    25:25:boolean containsValue(java.lang.Void) -> c
    24:24:boolean containsKey(java.lang.Object) -> containsKey
    14:14:boolean containsValue(java.lang.Object) -> containsValue
    26:26:java.lang.Void get(java.lang.Object) -> d
    27:27:java.util.Set getEntries() -> e
    14:14:java.util.Set entrySet() -> entrySet
    17:17:boolean equals(java.lang.Object) -> equals
    28:28:java.util.Set getKeys() -> f
    21:21:int getSize() -> g
    14:14:java.lang.Object get(java.lang.Object) -> get
    29:29:java.util.Collection getValues() -> h
    18:18:int hashCode() -> hashCode
    22:22:boolean isEmpty() -> isEmpty
    14:14:java.util.Set keySet() -> keySet
    31:31:java.lang.Object readResolve() -> readResolve
    14:14:int size() -> size
    19:19:java.lang.String toString() -> toString
    14:14:java.util.Collection values() -> values
kotlin.collections.EmptySet -> b.p.u:
    kotlin.collections.EmptySet INSTANCE -> a
    14:14:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
    23:23:boolean contains(java.lang.Void) -> c
    14:14:boolean contains(java.lang.Object) -> contains
    24:24:boolean containsAll(java.util.Collection) -> containsAll
    21:21:int getSize() -> d
    17:17:boolean equals(java.lang.Object) -> equals
    18:18:int hashCode() -> hashCode
    22:22:boolean isEmpty() -> isEmpty
    26:26:java.util.Iterator iterator() -> iterator
    28:28:java.lang.Object readResolve() -> readResolve
    14:14:int size() -> size
    19:19:java.lang.String toString() -> toString
kotlin.collections.IndexedValue -> b.p.v:
    java.lang.Object value -> b
    int index -> a
    14:14:void <init>(int,java.lang.Object) -> <init>
    14:14:int getIndex() -> a
    14:14:java.lang.Object getValue() -> b
kotlin.collections.IntIterator -> b.p.w:
    35:35:void <init>() -> <init>
    35:35:java.lang.Object next() -> next
    36:36:java.lang.Integer next() -> next
kotlin.collections.LongIterator -> b.p.x:
    43:43:void <init>() -> <init>
    43:43:java.lang.Object next() -> next
    44:44:java.lang.Long next() -> next
kotlin.collections.MapWithDefault -> b.p.y:
    java.lang.Object getOrImplicitDefault(java.lang.Object) -> b
kotlin.collections.MapsKt__MapWithDefaultKt -> b.p.z:
    21:24:java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object) -> a
    322:322:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> a
    322:322:java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object):105 -> a
    323:323:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> a
    323:323:java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object):106 -> a
    324:324:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> a
    324:324:java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object):107 -> a
    24:24:java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object) -> a
    326:326:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> a
    326:326:java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object):109 -> a
    327:327:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> a
    327:327:java.lang.Object getOrImplicitDefaultNullable(java.util.Map,java.lang.Object):110 -> a
    51:54:java.util.Map withDefaultMutable(java.util.Map,kotlin.jvm.functions.Function1) -> b
kotlin.collections.MapsKt__MapsJVMKt -> b.p.a0:
    104:112:int mapCapacity(int) -> c
    27:27:java.util.Map mapOf(kotlin.Pair) -> d
    96:96:java.util.Map toSingletonMap(java.util.Map) -> e
kotlin.collections.MapsKt__MapsKt -> b.p.b0:
    40:40:java.util.Map emptyMap() -> f
    341:341:java.lang.Object getValue(java.util.Map,java.lang.Object) -> g
    55:55:java.util.Map mapOf(kotlin.Pair[]) -> h
    779:783:java.util.Map optimizeReadOnlyMap(java.util.Map) -> i
    659:659:java.util.Map plus(java.util.Map,java.util.Map) -> j
    623:623:java.util.Map plus(java.util.Map,kotlin.Pair) -> k
    410:413:void putAll(java.util.Map,java.lang.Iterable) -> l
    401:404:void putAll(java.util.Map,kotlin.Pair[]) -> m
    541:548:java.util.Map toMap(java.lang.Iterable) -> n
    555:555:java.util.Map toMap(java.lang.Iterable,java.util.Map) -> o
    573:573:java.util.Map toMap(kotlin.Pair[],java.util.Map) -> p
kotlin.collections.MutableMapWithDefault -> b.p.c0:
    java.util.Map getMap() -> a
kotlin.collections.MutableMapWithDefaultImpl -> b.p.d0:
    java.util.Map map -> a
    kotlin.jvm.functions.Function1 default -> b
    83:83:void <init>(java.util.Map,kotlin.jvm.functions.Function1) -> <init>
    83:83:void <init>(java.util.Map,kotlin.jvm.functions.Function1) -> a
    83:83:java.util.Map getMap():83 -> a
    101:101:java.lang.Object getOrImplicitDefault(java.lang.Object) -> b
    322:322:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> b
    322:322:java.lang.Object getOrImplicitDefault(java.lang.Object):105 -> b
    323:323:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> b
    323:323:java.lang.Object getOrImplicitDefault(java.lang.Object):106 -> b
    324:324:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> b
    324:324:java.lang.Object getOrImplicitDefault(java.lang.Object):107 -> b
    101:101:java.lang.Object getOrImplicitDefault(java.lang.Object) -> b
    326:326:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> b
    326:326:java.lang.Object getOrImplicitDefault(java.lang.Object):109 -> b
    327:327:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrElseNullable(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> b
    327:327:java.lang.Object getOrImplicitDefault(java.lang.Object):110 -> b
    101:101:java.lang.Object getOrImplicitDefault(java.lang.Object) -> b
    94:94:java.util.Set getEntries() -> c
    99:99:void clear() -> clear
    89:89:boolean containsKey(java.lang.Object) -> containsKey
    90:90:boolean containsValue(java.lang.Object) -> containsValue
    92:92:java.util.Set getKeys() -> d
    87:87:int getSize() -> e
    83:83:void <init>(java.util.Map,kotlin.jvm.functions.Function1) -> entrySet
    83:83:java.util.Set entrySet():83 -> entrySet
    84:84:boolean equals(java.lang.Object) -> equals
    93:93:java.util.Collection getValues() -> f
    91:91:java.lang.Object get(java.lang.Object) -> get
    85:85:int hashCode() -> hashCode
    88:88:boolean isEmpty() -> isEmpty
    83:83:void <init>(java.util.Map,kotlin.jvm.functions.Function1) -> keySet
    83:83:java.util.Set keySet():83 -> keySet
    96:96:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    98:98:void putAll(java.util.Map) -> putAll
    97:97:java.lang.Object remove(java.lang.Object) -> remove
    83:83:void <init>(java.util.Map,kotlin.jvm.functions.Function1) -> size
    83:83:int size():83 -> size
    86:86:java.lang.String toString() -> toString
    83:83:void <init>(java.util.Map,kotlin.jvm.functions.Function1) -> values
    83:83:java.util.Collection values():83 -> values
kotlin.collections.SetsKt__SetsJVMKt -> b.p.e0:
    16:16:java.util.Set setOf(java.lang.Object) -> a
kotlin.collections.SetsKt__SetsKt -> b.p.f0:
    36:36:java.util.Set emptySet() -> b
    141:145:java.util.Set optimizeReadOnlySet(java.util.Set) -> c
    44:44:java.util.Set setOf(java.lang.Object[]) -> d
kotlin.comparisons.ComparisonsKt__ComparisonsKt -> b.q.a:
    73:78:int compareValues(java.lang.Comparable,java.lang.Comparable) -> a
kotlin.internal.PlatformImplementations -> b.r.a:
    13:13:void <init>() -> <init>
    25:26:void addSuppressed(java.lang.Throwable,java.lang.Throwable) -> a
kotlin.internal.PlatformImplementations$ReflectAddSuppressedMethod -> b.r.a$a:
    java.lang.reflect.Method method -> a
    15:17:void <clinit>() -> <clinit>
    15:15:void <clinit>() -> <init>
    15:15:void <init>():15 -> <init>
kotlin.internal.PlatformImplementationsKt -> b.r.b:
    kotlin.internal.PlatformImplementations IMPLEMENTATIONS -> a
    37:37:void <clinit>() -> <clinit>
    72:73:int getJavaVersion() -> a
kotlin.internal.ProgressionUtilKt -> b.r.c:
    21:21:int differenceModulo(int,int,int) -> a
    45:48:int getProgressionLastElement(int,int,int) -> b
    10:11:int mod(int,int) -> c
kotlin.io.ByteStreamsKt -> b.s.a:
    104:112:long copyTo(java.io.InputStream,java.io.OutputStream,int) -> a
kotlin.io.CloseableKt -> b.s.b:
    51:60:void closeFinally(java.io.Closeable,java.lang.Throwable) -> a
kotlin.jvm.JvmClassMappingKt -> b.t.a:
    28:28:java.lang.Class getJavaClass(kotlin.reflect.KClass) -> a
    58:61:java.lang.Class getJavaObjectType(kotlin.reflect.KClass) -> b
kotlin.jvm.functions.Function0 -> b.t.b.a:
    java.lang.Object invoke() -> a
kotlin.jvm.functions.Function1 -> b.t.b.l:
kotlin.jvm.functions.Function10 -> b.t.b.b:
kotlin.jvm.functions.Function11 -> b.t.b.c:
kotlin.jvm.functions.Function12 -> b.t.b.d:
kotlin.jvm.functions.Function13 -> b.t.b.e:
kotlin.jvm.functions.Function14 -> b.t.b.f:
kotlin.jvm.functions.Function15 -> b.t.b.g:
kotlin.jvm.functions.Function16 -> b.t.b.h:
kotlin.jvm.functions.Function17 -> b.t.b.i:
kotlin.jvm.functions.Function18 -> b.t.b.j:
kotlin.jvm.functions.Function19 -> b.t.b.k:
kotlin.jvm.functions.Function2 -> b.t.b.p:
kotlin.jvm.functions.Function20 -> b.t.b.m:
kotlin.jvm.functions.Function21 -> b.t.b.n:
kotlin.jvm.functions.Function22 -> b.t.b.o:
kotlin.jvm.functions.Function3 -> b.t.b.q:
    java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> b
kotlin.jvm.functions.Function4 -> b.t.b.r:
kotlin.jvm.functions.Function5 -> b.t.b.s:
kotlin.jvm.functions.Function6 -> b.t.b.t:
kotlin.jvm.functions.Function7 -> b.t.b.u:
kotlin.jvm.functions.Function8 -> b.t.b.v:
kotlin.jvm.functions.Function9 -> b.t.b.w:
kotlin.jvm.internal.ArrayIterator -> b.t.c.a:
    java.lang.Object[] array -> b
    int index -> a
    8:8:void <init>(java.lang.Object[]) -> <init>
    10:10:boolean hasNext() -> hasNext
    11:11:java.lang.Object next() -> next
kotlin.jvm.internal.ArrayIteratorKt -> b.t.c.b:
    14:14:java.util.Iterator iterator(java.lang.Object[]) -> a
kotlin.jvm.internal.ArrayIteratorsKt -> b.t.c.c:
    62:62:kotlin.collections.LongIterator iterator(long[]) -> a
kotlin.jvm.internal.ArrayLongIterator -> b.t.c.d:
    long[] array -> b
    int index -> a
    34:34:void <init>(long[]) -> <init>
    36:36:boolean hasNext() -> hasNext
    37:37:long nextLong() -> nextLong
kotlin.jvm.internal.CallableReference -> b.t.c.e:
    java.lang.Object receiver -> b
    kotlin.reflect.KCallable reflected -> a
    52:54:void <init>(java.lang.Object) -> <init>
    65:70:kotlin.reflect.KCallable compute() -> c
    kotlin.reflect.KCallable computeReflected() -> d
    60:60:java.lang.Object getBoundReceiver() -> e
    97:97:java.lang.String getName() -> f
    89:89:kotlin.reflect.KDeclarationContainer getOwner() -> g
    109:109:java.lang.String getSignature() -> h
kotlin.jvm.internal.ClassBasedDeclarationContainer -> b.t.c.f:
    java.lang.Class getJClass() -> a
kotlin.jvm.internal.ClassReference -> b.t.c.g:
    java.util.Map FUNCTION_CLASSES -> b
    java.util.HashMap classFqNames -> e
    java.lang.Class jClass -> a
    java.util.HashMap primitiveWrapperFqNames -> d
    java.util.HashMap primitiveFqNames -> c
    93:99:void <clinit>() -> <clinit>
    1376:1376:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> <clinit>
    1376:1376:void <clinit>():198 -> <clinit>
    1407:1407:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    1407:1407:void <clinit>():199 -> <clinit>
    1408:1408:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    1408:1408:void <clinit>():200 -> <clinit>
    1409:1409:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    1409:1409:void <clinit>():201 -> <clinit>
    99:99:void <clinit>() -> <clinit>
    1408:1408:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    1408:1408:void <clinit>():200 -> <clinit>
    1409:1409:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    1409:1409:void <clinit>():201 -> <clinit>
    1410:1410:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    1410:1410:void <clinit>():202 -> <clinit>
    99:147:void <clinit>() -> <clinit>
    1164:1164:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    1164:1164:void <clinit>():203 -> <clinit>
    1165:1165:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    1165:1165:void <clinit>():204 -> <clinit>
    148:148:void <clinit>() -> <clinit>
    1164:1164:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    1164:1164:void <clinit>():203 -> <clinit>
    1167:1167:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    1167:1167:void <clinit>():206 -> <clinit>
    150:155:void <clinit>() -> <clinit>
    433:433:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValues(java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    433:433:void <clinit>():207 -> <clinit>
    383:383:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    383:383:void <clinit>():208 -> <clinit>
    1149:1149:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <clinit>
    1149:1149:void <clinit>():209 -> <clinit>
    1150:1150:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <clinit>
    1150:1150:void <clinit>():210 -> <clinit>
    383:383:java.util.Map kotlin.collections.MapsKt__MapsKt.mapValuesTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> <clinit>
    383:383:void <clinit>():208 -> <clinit>
    155:155:void <clinit>() -> <clinit>
    1149:1149:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <clinit>
    1149:1149:void <clinit>():209 -> <clinit>
    1152:1152:java.util.Map kotlin.collections.CollectionsKt___CollectionsKt.associateByTo(java.lang.Iterable,java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <clinit>
    1152:1152:void <clinit>():212 -> <clinit>
    10:10:java.util.Map access$getFUNCTION_CLASSES$cp() -> <init>
    10:10:void <init>(java.lang.Class):10 -> <init>
    10:10:java.util.Map access$getFUNCTION_CLASSES$cp() -> a
    10:10:java.lang.Class getJClass():10 -> a
    83:83:boolean equals(java.lang.Object) -> equals
    86:86:int hashCode() -> hashCode
    89:89:java.lang.String toString() -> toString
kotlin.jvm.internal.ClassReference$Companion -> b.t.c.g$a:
    91:91:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    91:91:void <init>():91 -> <init>
    91:91:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.jvm.internal.CollectionToArray -> b.t.c.h:
    java.lang.Object[] EMPTY -> a
    14:14:void <clinit>() -> <clinit>
    19:19:java.lang.Object[] toArray(java.util.Collection) -> a
    57:57:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    57:57:java.lang.Object[] toArray(java.util.Collection):83 -> a
    58:58:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    58:58:java.lang.Object[] toArray(java.util.Collection):84 -> a
    21:21:java.lang.Object[] toArray(java.util.Collection) -> a
    59:59:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    59:59:java.lang.Object[] toArray(java.util.Collection):85 -> a
    60:60:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    60:60:java.lang.Object[] toArray(java.util.Collection):86 -> a
    21:21:java.lang.Object[] toArray(java.util.Collection) -> a
    61:61:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    61:61:java.lang.Object[] toArray(java.util.Collection):87 -> a
    22:22:java.lang.Object[] toArray(java.util.Collection) -> a
    62:62:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    62:62:java.lang.Object[] toArray(java.util.Collection):88 -> a
    64:64:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    64:64:java.lang.Object[] toArray(java.util.Collection):90 -> a
    65:65:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    65:65:java.lang.Object[] toArray(java.util.Collection):91 -> a
    66:66:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    66:66:java.lang.Object[] toArray(java.util.Collection):92 -> a
    67:67:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    67:67:java.lang.Object[] toArray(java.util.Collection):93 -> a
    71:71:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    71:71:java.lang.Object[] toArray(java.util.Collection):97 -> a
    72:72:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    72:72:java.lang.Object[] toArray(java.util.Collection):98 -> a
    73:73:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    73:73:java.lang.Object[] toArray(java.util.Collection):99 -> a
    74:74:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    74:74:java.lang.Object[] toArray(java.util.Collection):100 -> a
    73:73:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    73:73:java.lang.Object[] toArray(java.util.Collection):99 -> a
    76:76:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    76:76:java.lang.Object[] toArray(java.util.Collection):102 -> a
    78:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    78:78:java.lang.Object[] toArray(java.util.Collection):104 -> a
    23:24:java.lang.Object[] toArray(java.util.Collection) -> a
    79:79:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    79:79:java.lang.Object[] toArray(java.util.Collection):105 -> a
    64:64:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> a
    64:64:java.lang.Object[] toArray(java.util.Collection):90 -> a
    30:31:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> b
    57:57:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    57:57:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):106 -> b
    58:58:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    58:58:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):107 -> b
    34:35:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> b
    59:59:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    59:59:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):108 -> b
    60:60:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    60:60:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):109 -> b
    34:35:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> b
    64:64:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    64:64:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):113 -> b
    61:61:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    61:61:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):110 -> b
    38:39:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> b
    62:62:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    62:62:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):111 -> b
    64:64:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    64:64:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):113 -> b
    65:65:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    65:65:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):114 -> b
    66:66:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    66:66:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):115 -> b
    67:67:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    67:67:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):116 -> b
    71:71:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    71:71:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):120 -> b
    72:72:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    72:72:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):121 -> b
    73:73:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    73:73:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):122 -> b
    74:74:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    74:74:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):123 -> b
    73:73:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    73:73:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):122 -> b
    76:76:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    76:76:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):125 -> b
    78:78:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    78:78:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):127 -> b
    42:46:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> b
    64:64:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    64:64:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):113 -> b
    79:79:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    79:79:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):128 -> b
    64:64:java.lang.Object[] toArrayImpl(java.util.Collection,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function2) -> b
    64:64:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]):113 -> b
    39:30:java.lang.Object[] toArray(java.util.Collection,java.lang.Object[]) -> b
kotlin.jvm.internal.DefaultConstructorMarker -> b.t.c.i:
kotlin.jvm.internal.DoubleCompanionObject -> b.t.c.j:
    kotlin.jvm.internal.DoubleCompanionObject INSTANCE -> a
    8:13:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
kotlin.jvm.internal.FloatCompanionObject -> b.t.c.k:
    kotlin.jvm.internal.FloatCompanionObject INSTANCE -> a
    16:21:void <clinit>() -> <clinit>
    16:16:void <init>() -> <init>
kotlin.jvm.internal.FunctionBase -> b.t.c.l:
kotlin.jvm.internal.FunctionReference -> b.t.c.m:
    int arity -> c
    21:23:void <init>(int,java.lang.Object) -> <init>
    39:39:kotlin.reflect.KCallable computeReflected() -> d
    74:86:boolean equals(java.lang.Object) -> equals
    27:27:int getArity() -> getArity
    91:91:int hashCode() -> hashCode
    96:102:java.lang.String toString() -> toString
kotlin.jvm.internal.InlineMarker -> b.t.c.n:
    25:25:void finallyEnd(int) -> a
    22:22:void finallyStart(int) -> b
kotlin.jvm.internal.Intrinsics -> b.t.c.o:
    16:17:void <init>() -> <init>
    162:162:boolean areEqual(java.lang.Object,java.lang.Object) -> a
    86:87:void checkExpressionValueIsNotNull(java.lang.Object,java.lang.String) -> b
    124:125:void checkParameterIsNotNull(java.lang.Object,java.lang.String) -> c
    158:158:int compare(int,int) -> d
    206:206:void reifiedOperationMarker(int,java.lang.String) -> e
    246:246:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> f
    250:262:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable,java.lang.String) -> g
    36:36:void throwNpe() -> h
    136:150:void throwParameterIsNullException(java.lang.String) -> i
    196:196:void throwUndefinedForReified() -> j
    202:202:void throwUndefinedForReified(java.lang.String) -> k
    54:54:void throwUninitializedProperty(java.lang.String) -> l
    58:58:void throwUninitializedPropertyAccessException(java.lang.String) -> m
kotlin.jvm.internal.Lambda -> b.t.c.p:
    10:10:void <init>(int) -> <init>
    10:10:int getArity() -> getArity
    11:11:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$BooleanRef -> b.t.c.q:
    boolean element -> a
    85:85:void <init>() -> <init>
    90:90:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$IntRef -> b.t.c.r:
    int element -> a
    40:40:void <init>() -> <init>
    45:45:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$LongRef -> b.t.c.s:
    long element -> a
    49:49:void <init>() -> <init>
    54:54:java.lang.String toString() -> toString
kotlin.jvm.internal.Ref$ObjectRef -> b.t.c.t:
    java.lang.Object element -> a
    13:13:void <init>() -> <init>
    18:18:java.lang.String toString() -> toString
kotlin.jvm.internal.Reflection -> b.t.c.u:
    kotlin.jvm.internal.ReflectionFactory factory -> a
    26:39:void <clinit>() -> <clinit>
    84:84:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference) -> a
    54:54:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) -> b
    73:73:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> c
kotlin.jvm.internal.ReflectionFactory -> b.t.c.v:
    13:13:void <init>() -> <init>
    50:50:kotlin.reflect.KFunction function(kotlin.jvm.internal.FunctionReference) -> a
    29:29:kotlin.reflect.KClass getOrCreateKotlinClass(java.lang.Class) -> b
    43:44:java.lang.String renderLambdaToString(kotlin.jvm.internal.FunctionBase) -> c
    38:38:java.lang.String renderLambdaToString(kotlin.jvm.internal.Lambda) -> d
kotlin.jvm.internal.StringCompanionObject -> b.t.c.w:
    kotlin.jvm.internal.StringCompanionObject INSTANCE -> a
    66:66:void <clinit>() -> <clinit>
    66:66:void <init>() -> <init>
kotlin.jvm.internal.TypeIntrinsics -> b.t.c.x:
    15:15:void <init>() -> <init>
    151:154:java.util.List asMutableList(java.lang.Object) -> a
    341:344:java.lang.Object beforeCheckcastToFunctionOfArity(java.lang.Object,int) -> b
    166:169:java.util.List castToList(java.lang.Object) -> c
    258:331:int getFunctionArity(java.lang.Object) -> d
    336:336:boolean isFunctionOfArity(java.lang.Object,int) -> e
    17:17:java.lang.Throwable sanitizeStackTrace(java.lang.Throwable) -> f
    30:30:java.lang.ClassCastException throwCce(java.lang.ClassCastException) -> g
    21:22:void throwCce(java.lang.Object,java.lang.String) -> h
    26:26:void throwCce(java.lang.String) -> i
kotlin.jvm.internal.markers.KMappedMarker -> b.t.c.y.a:
kotlin.math.MathKt__MathHKt -> b.u.a:
kotlin.math.MathKt__MathJVMKt -> b.u.b:
    1132:1132:int roundToInt(float) -> a
kotlin.ranges.ClosedRange -> b.v.a:
kotlin.ranges.ClosedRange$DefaultImpls -> b.v.a$a:
    26:26:boolean contains(kotlin.ranges.ClosedRange,java.lang.Comparable) -> a
    31:31:boolean isEmpty(kotlin.ranges.ClosedRange) -> b
kotlin.ranges.IntProgression -> b.v.b:
    kotlin.ranges.IntProgression$Companion Companion -> d
    int last -> b
    int step -> c
    int first -> a
    73:80:void <init>(int,int,int) -> <init>
    87:87:int getFirst() -> c
    92:92:int getLast() -> d
    97:97:int getStep() -> e
    105:106:boolean equals(java.lang.Object) -> equals
    99:99:kotlin.collections.IntIterator iterator() -> f
    109:109:int hashCode() -> hashCode
    102:102:boolean isEmpty() -> isEmpty
    72:72:java.util.Iterator iterator() -> iterator
    111:111:java.lang.String toString() -> toString
kotlin.ranges.IntProgression$Companion -> b.v.b$a:
    113:113:void <init>() -> <init>
    113:113:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    122:122:kotlin.ranges.IntProgression fromClosedRange(int,int,int) -> a
kotlin.ranges.IntProgressionIterator -> b.v.c:
    int step -> d
    boolean hasNext -> b
    int next -> c
    int finalElement -> a
    38:41:void <init>(int,int,int) -> <init>
    43:43:boolean hasNext() -> hasNext
    46:54:int nextInt() -> nextInt
kotlin.ranges.IntRange -> b.v.d:
    kotlin.ranges.IntRange EMPTY -> e
    kotlin.ranges.IntRange$Companion Companion -> f
    58:58:void <clinit>() -> <clinit>
    39:39:void <init>(int,int) -> <init>
    48:49:boolean equals(java.lang.Object) -> equals
    39:39:kotlin.ranges.IntRange access$getEMPTY$cp() -> g
    39:39:java.lang.Comparable getEndInclusive() -> getEndInclusive
    39:39:java.lang.Comparable getStart() -> getStart
    41:41:java.lang.Integer getEndInclusive() -> h
    52:52:int hashCode() -> hashCode
    40:40:java.lang.Integer getStart() -> i
    45:45:boolean isEmpty() -> isEmpty
    54:54:java.lang.String toString() -> toString
kotlin.ranges.IntRange$Companion -> b.v.d$a:
    56:56:void <init>() -> <init>
    56:56:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    58:58:kotlin.ranges.IntRange getEMPTY() -> a
kotlin.ranges.RangesKt__RangesKt -> b.v.e:
kotlin.ranges.RangesKt___RangesKt -> b.v.f:
    918:918:int coerceAtLeast(int,int) -> a
    995:995:int coerceAtMost(int,int) -> b
    1087:1087:int coerceIn(int,int,int) -> c
    502:502:kotlin.ranges.IntProgression downTo(int,int) -> d
    768:769:kotlin.ranges.IntRange until(int,int) -> e
kotlin.reflect.KCallable -> b.w.a:
kotlin.reflect.KClass -> b.w.b:
kotlin.reflect.KDeclarationContainer -> b.w.c:
kotlin.reflect.KFunction -> b.w.d:
kotlin.reflect.KProperty -> b.w.e:
kotlin.sequences.ConstrainedOnceSequence -> b.x.a:
    java.util.concurrent.atomic.AtomicReference sequenceRef -> a
    19:20:void <init>(kotlin.sequences.Sequence) -> <init>
    23:23:java.util.Iterator iterator() -> iterator
kotlin.sequences.EmptySequence -> b.x.b:
    kotlin.sequences.EmptySequence INSTANCE -> a
    42:42:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
    43:43:java.util.Iterator iterator() -> iterator
kotlin.sequences.FilteringSequence -> b.x.c:
    kotlin.sequences.Sequence sequence -> a
    boolean sendWhen -> b
    kotlin.jvm.functions.Function1 predicate -> c
    119:119:void <init>(kotlin.sequences.Sequence,boolean,kotlin.jvm.functions.Function1) -> <init>
    119:119:kotlin.jvm.functions.Function1 access$getPredicate$p(kotlin.sequences.FilteringSequence) -> a
    119:119:boolean access$getSendWhen$p(kotlin.sequences.FilteringSequence) -> b
    119:119:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.FilteringSequence) -> c
    125:159:java.util.Iterator iterator() -> iterator
kotlin.sequences.FilteringSequence$iterator$1 -> b.x.c$a:
    java.util.Iterator iterator -> a
    java.lang.Object nextItem -> c
    kotlin.sequences.FilteringSequence this$0 -> d
    int nextState -> b
    125:127:void <init>(kotlin.sequences.FilteringSequence) -> <init>
    131:140:void calcNext() -> c
    155:157:boolean hasNext() -> hasNext
    143:146:java.lang.Object next() -> next
kotlin.sequences.FlatteningSequence -> b.x.d:
    kotlin.sequences.Sequence sequence -> a
    kotlin.jvm.functions.Function1 transformer -> b
    kotlin.jvm.functions.Function1 iterator -> c
    249:249:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> <init>
    248:248:kotlin.jvm.functions.Function1 access$getIterator$p(kotlin.sequences.FlatteningSequence) -> a
    248:248:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.FlatteningSequence) -> b
    248:248:kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.FlatteningSequence) -> c
    254:286:java.util.Iterator iterator() -> iterator
kotlin.sequences.FlatteningSequence$iterator$1 -> b.x.d$a:
    kotlin.sequences.FlatteningSequence this$0 -> c
    java.util.Iterator itemIterator -> b
    java.util.Iterator iterator -> a
    254:255:void <init>(kotlin.sequences.FlatteningSequence) -> <init>
    269:284:boolean ensureItemIterator() -> c
    265:265:boolean hasNext() -> hasNext
    259:260:java.lang.Object next() -> next
kotlin.sequences.GeneratorSequence -> b.x.e:
    kotlin.jvm.functions.Function0 getInitialValue -> a
    kotlin.jvm.functions.Function1 getNextValue -> b
    538:538:void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function1) -> <init>
    538:538:kotlin.jvm.functions.Function0 access$getGetInitialValue$p(kotlin.sequences.GeneratorSequence) -> a
    538:538:kotlin.jvm.functions.Function1 access$getGetNextValue$p(kotlin.sequences.GeneratorSequence) -> b
    539:565:java.util.Iterator iterator() -> iterator
kotlin.sequences.GeneratorSequence$iterator$1 -> b.x.e$a:
    kotlin.sequences.GeneratorSequence this$0 -> c
    java.lang.Object nextItem -> a
    int nextState -> b
    539:541:void <init>(kotlin.sequences.GeneratorSequence) -> <init>
    544:544:void calcNext() -> c
    561:563:boolean hasNext() -> hasNext
    549:553:java.lang.Object next() -> next
kotlin.sequences.IndexingSequence -> b.x.f:
    kotlin.sequences.Sequence sequence -> a
    210:210:void <init>(kotlin.sequences.Sequence) -> <init>
    209:209:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.IndexingSequence) -> a
    211:221:java.util.Iterator iterator() -> iterator
kotlin.sequences.IndexingSequence$iterator$1 -> b.x.f$a:
    java.util.Iterator iterator -> a
    int index -> b
    211:212:void <init>(kotlin.sequences.IndexingSequence) -> <init>
    215:215:kotlin.collections.IndexedValue next() -> c
    219:219:boolean hasNext() -> hasNext
    211:211:void <init>(kotlin.sequences.IndexingSequence) -> next
    211:211:java.lang.Object next():211 -> next
kotlin.sequences.Sequence -> b.x.g:
kotlin.sequences.SequencesKt__SequenceBuilderKt -> b.x.h:
kotlin.sequences.SequencesKt__SequencesJVMKt -> b.x.i:
kotlin.sequences.SequencesKt__SequencesKt -> b.x.j:
    579:579:kotlin.sequences.Sequence constrainOnce(kotlin.sequences.Sequence) -> a
    40:40:kotlin.sequences.Sequence emptySequence() -> b
    78:78:kotlin.sequences.Sequence flatten(kotlin.sequences.Sequence) -> c
    89:92:kotlin.sequences.Sequence flatten$SequencesKt__SequencesKt(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> d
    612:615:kotlin.sequences.Sequence generateSequence(java.lang.Object,kotlin.jvm.functions.Function1) -> e
    594:594:kotlin.sequences.Sequence generateSequence(kotlin.jvm.functions.Function0) -> f
    35:35:kotlin.sequences.Sequence sequenceOf(java.lang.Object[]) -> g
kotlin.sequences.SequencesKt__SequencesKt$flatten$1 -> b.x.j$a:
    kotlin.sequences.SequencesKt__SequencesKt$flatten$1 INSTANCE -> a
    78:78:java.util.Iterator invoke(kotlin.sequences.Sequence) -> c
kotlin.sequences.SequencesKt__SequencesKt$flatten$3 -> b.x.j$b:
    kotlin.sequences.SequencesKt__SequencesKt$flatten$3 INSTANCE -> a
    92:92:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$1 -> b.x.j$c:
    kotlin.jvm.functions.Function0 $nextFunction -> a
    594:594:java.lang.Object invoke(java.lang.Object) -> invoke
kotlin.sequences.SequencesKt__SequencesKt$generateSequence$2 -> b.x.j$d:
    java.lang.Object $seed -> a
    615:615:java.lang.Object invoke() -> a
kotlin.sequences.SequencesKt___SequencesJvmKt -> b.x.k:
kotlin.sequences.SequencesKt___SequencesKt -> b.x.l:
    1919:1919:java.lang.Iterable asIterable(kotlin.sequences.Sequence) -> h
    382:382:kotlin.sequences.Sequence filter(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> i
    394:394:kotlin.sequences.Sequence filterIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> j
    128:131:java.lang.Object firstOrNull(kotlin.sequences.Sequence) -> k
    1888:1898:java.lang.Appendable joinTo(kotlin.sequences.Sequence,java.lang.Appendable,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> l
    1912:1912:java.lang.String joinToString(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1) -> m
    1911:1911:java.lang.String joinToString$default(kotlin.sequences.Sequence,java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence,int,java.lang.CharSequence,kotlin.jvm.functions.Function1,int,java.lang.Object) -> n
    883:883:kotlin.sequences.Sequence map(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> o
    895:895:kotlin.sequences.Sequence mapIndexed(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> p
    1759:1759:kotlin.sequences.Sequence plus(kotlin.sequences.Sequence,kotlin.sequences.Sequence) -> q
    571:571:kotlin.sequences.Sequence sortedWith(kotlin.sequences.Sequence,java.util.Comparator) -> r
    722:725:java.util.Collection toCollection(kotlin.sequences.Sequence,java.util.Collection) -> s
    743:743:java.util.List toList(kotlin.sequences.Sequence) -> t
    752:752:java.util.List toMutableList(kotlin.sequences.Sequence) -> u
    763:763:java.util.Set toSet(kotlin.sequences.Sequence) -> v
kotlin.sequences.SequencesKt___SequencesKt$asIterable$$inlined$Iterable$1 -> b.x.l$a:
    kotlin.sequences.Sequence $this_asIterable$inlined -> a
    16:16:void kotlin.collections.CollectionsKt__IterablesKt$Iterable$1.<init>(kotlin.jvm.functions.Function0) -> <init>
    16:16:void <init>(kotlin.sequences.Sequence):16 -> <init>
    17:17:java.util.Iterator kotlin.collections.CollectionsKt__IterablesKt$Iterable$1.iterator() -> iterator
    17:17:java.util.Iterator iterator():17 -> iterator
    1919:1919:java.lang.Iterable kotlin.sequences.SequencesKt___SequencesKt.asIterable(kotlin.sequences.Sequence) -> iterator
    1919:1919:java.util.Iterator iterator():94 -> iterator
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$1 -> b.x.l$b:
    kotlin.jvm.functions.Function2 $predicate -> a
    394:394:boolean invoke(kotlin.collections.IndexedValue) -> c
kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2 -> b.x.l$c:
    kotlin.sequences.SequencesKt___SequencesKt$filterIndexed$2 INSTANCE -> a
    394:394:java.lang.Object invoke(kotlin.collections.IndexedValue) -> c
kotlin.sequences.SequencesKt___SequencesKt$sortedWith$1 -> b.x.l$d:
    kotlin.sequences.Sequence $this_sortedWith -> a
    java.util.Comparator $comparator -> b
    571:571:void <init>(kotlin.sequences.Sequence,java.util.Comparator) -> <init>
    573:575:java.util.Iterator iterator() -> iterator
kotlin.sequences.TransformingIndexedSequence -> b.x.m:
    kotlin.sequences.Sequence sequence -> a
    kotlin.jvm.functions.Function2 transformer -> b
    191:191:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function2) -> <init>
    190:190:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingIndexedSequence) -> a
    190:190:kotlin.jvm.functions.Function2 access$getTransformer$p(kotlin.sequences.TransformingIndexedSequence) -> b
    192:202:java.util.Iterator iterator() -> iterator
kotlin.sequences.TransformingIndexedSequence$iterator$1 -> b.x.m$a:
    kotlin.sequences.TransformingIndexedSequence this$0 -> c
    java.util.Iterator iterator -> a
    int index -> b
    192:193:void <init>(kotlin.sequences.TransformingIndexedSequence) -> <init>
    200:200:boolean hasNext() -> hasNext
    196:196:java.lang.Object next() -> next
kotlin.sequences.TransformingSequence -> b.x.n:
    kotlin.sequences.Sequence sequence -> a
    kotlin.jvm.functions.Function1 transformer -> b
    168:168:void <init>(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> <init>
    167:167:kotlin.sequences.Sequence access$getSequence$p(kotlin.sequences.TransformingSequence) -> a
    167:167:kotlin.jvm.functions.Function1 access$getTransformer$p(kotlin.sequences.TransformingSequence) -> b
    181:181:kotlin.sequences.Sequence flatten$kotlin_stdlib(kotlin.jvm.functions.Function1) -> c
    169:178:java.util.Iterator iterator() -> iterator
kotlin.sequences.TransformingSequence$iterator$1 -> b.x.n$a:
    kotlin.sequences.TransformingSequence this$0 -> b
    java.util.Iterator iterator -> a
    169:170:void <init>(kotlin.sequences.TransformingSequence) -> <init>
    176:176:boolean hasNext() -> hasNext
    172:172:java.lang.Object next() -> next
kotlin.text.CharsKt__CharJVMKt -> b.y.a:
    72:72:boolean isWhitespace(char) -> a
kotlin.text.CharsKt__CharKt -> b.y.b:
    32:37:boolean equals(char,char,boolean) -> b
kotlin.text.Charsets -> b.y.c:
    java.nio.charset.Charset UTF_16BE -> b
    java.nio.charset.Charset UTF_8 -> a
    24:61:void <clinit>() -> <clinit>
    24:24:void <clinit>() -> <init>
    24:24:void <init>():24 -> <init>
kotlin.text.DelimitedRangesSequence -> b.y.d:
    java.lang.CharSequence input -> a
    int startIndex -> b
    int limit -> c
    kotlin.jvm.functions.Function2 getNextMatch -> d
    1075:1075:void <init>(java.lang.CharSequence,int,int,kotlin.jvm.functions.Function2) -> <init>
    1075:1075:kotlin.jvm.functions.Function2 access$getGetNextMatch$p(kotlin.text.DelimitedRangesSequence) -> a
    1075:1075:java.lang.CharSequence access$getInput$p(kotlin.text.DelimitedRangesSequence) -> b
    1075:1075:int access$getLimit$p(kotlin.text.DelimitedRangesSequence) -> c
    1075:1075:int access$getStartIndex$p(kotlin.text.DelimitedRangesSequence) -> d
    1082:1130:java.util.Iterator iterator() -> iterator
kotlin.text.DelimitedRangesSequence$iterator$1 -> b.y.d$a:
    kotlin.ranges.IntRange nextItem -> d
    kotlin.text.DelimitedRangesSequence this$0 -> f
    int counter -> e
    int currentStartIndex -> b
    int nextSearchIndex -> c
    int nextState -> a
    1082:1085:void <init>(kotlin.text.DelimitedRangesSequence) -> <init>
    1090:1111:void calcNext() -> c
    1114:1117:kotlin.ranges.IntRange next() -> d
    1126:1128:boolean hasNext() -> hasNext
    1082:1082:java.lang.Object next() -> next
kotlin.text.Regex -> b.y.e:
    java.util.regex.Pattern nativePattern -> a
    85:85:void <init>(java.util.regex.Pattern) -> <init>
    89:89:void <init>(java.lang.String) -> <init>
    107:107:boolean matches(java.lang.CharSequence) -> a
    143:143:java.lang.String replace(java.lang.CharSequence,java.lang.String) -> b
    188:188:java.util.List split(java.lang.CharSequence,int) -> c
    214:214:java.lang.String toString() -> toString
    223:223:java.lang.Object writeReplace() -> writeReplace
kotlin.text.Regex$Companion -> b.y.e$a:
    233:233:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    233:233:void <init>():233 -> <init>
    233:233:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.text.Regex$Serialized -> b.y.e$b:
    java.lang.String pattern -> a
    int flags -> b
    225:225:void <init>(java.lang.String,int) -> <init>
    230:230:java.lang.Object readResolve() -> readResolve
kotlin.text.Regex$Serialized$Companion -> b.y.e$b$a:
    226:226:void <init>() -> <init>
    226:226:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
kotlin.text.StringsKt__AppendableKt -> b.y.f:
    70:76:void appendElement(java.lang.Appendable,java.lang.Object,kotlin.jvm.functions.Function1) -> a
kotlin.text.StringsKt__IndentKt -> b.y.g:
    101:104:kotlin.jvm.functions.Function1 getIndentFunction$StringsKt__IndentKt(java.lang.String) -> b
    99:99:int indentWidth$StringsKt__IndentKt(java.lang.String) -> c
    114:114:int kotlin.text.StringsKt___StringsKt.indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> c
    114:114:int indentWidth$StringsKt__IndentKt(java.lang.String):193 -> c
    115:115:int kotlin.text.StringsKt___StringsKt.indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> c
    115:115:int indentWidth$StringsKt__IndentKt(java.lang.String):194 -> c
    99:99:int indentWidth$StringsKt__IndentKt(java.lang.String) -> c
    116:116:int kotlin.text.StringsKt___StringsKt.indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> c
    116:116:int indentWidth$StringsKt__IndentKt(java.lang.String):195 -> c
    114:114:int kotlin.text.StringsKt___StringsKt.indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> c
    114:114:int indentWidth$StringsKt__IndentKt(java.lang.String):193 -> c
    119:119:int kotlin.text.StringsKt___StringsKt.indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> c
    119:119:int indentWidth$StringsKt__IndentKt(java.lang.String):198 -> c
    99:99:int indentWidth$StringsKt__IndentKt(java.lang.String) -> c
    69:72:java.lang.String replaceIndent(java.lang.String,java.lang.String) -> d
    706:706:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.filter(java.lang.Iterable,kotlin.jvm.functions.Function1) -> d
    706:706:java.lang.String replaceIndent(java.lang.String,java.lang.String):157 -> d
    783:783:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> d
    783:783:java.lang.String replaceIndent(java.lang.String,java.lang.String):158 -> d
    72:72:java.lang.String replaceIndent(java.lang.String,java.lang.String) -> d
    784:784:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.filterTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> d
    784:784:java.lang.String replaceIndent(java.lang.String,java.lang.String):159 -> d
    73:73:java.lang.String replaceIndent(java.lang.String,java.lang.String) -> d
    1366:1366:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> d
    1366:1366:java.lang.String replaceIndent(java.lang.String,java.lang.String):160 -> d
    1435:1435:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> d
    1435:1435:java.lang.String replaceIndent(java.lang.String,java.lang.String):161 -> d
    1436:1436:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> d
    1436:1436:java.lang.String replaceIndent(java.lang.String,java.lang.String):162 -> d
    73:73:java.lang.String replaceIndent(java.lang.String,java.lang.String) -> d
    1435:1435:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> d
    1435:1435:java.lang.String replaceIndent(java.lang.String,java.lang.String):161 -> d
    1437:1437:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> d
    1437:1437:java.lang.String replaceIndent(java.lang.String,java.lang.String):163 -> d
    74:76:java.lang.String replaceIndent(java.lang.String,java.lang.String) -> d
    111:111:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> d
    111:111:java.lang.String replaceIndent(java.lang.String,java.lang.String):164 -> d
    112:112:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> d
    112:112:java.lang.String replaceIndent(java.lang.String,java.lang.String):165 -> d
    119:119:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> d
    119:119:java.lang.String replaceIndent(java.lang.String,java.lang.String):172 -> d
    112:112:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> d
    112:112:java.lang.String replaceIndent(java.lang.String,java.lang.String):165 -> d
    118:118:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> d
    118:118:java.lang.String replaceIndent(java.lang.String,java.lang.String):173 -> d
    112:112:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> d
    112:112:java.lang.String replaceIndent(java.lang.String,java.lang.String):165 -> d
    1386:1386:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2) -> d
    1386:1386:java.lang.String replaceIndent(java.lang.String,java.lang.String):174 -> d
    1396:1396:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> d
    1396:1396:java.lang.String replaceIndent(java.lang.String,java.lang.String):184 -> d
    1657:1657:void kotlin.collections.CollectionsKt___CollectionsKt.forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> d
    1657:1657:java.lang.String replaceIndent(java.lang.String,java.lang.String):185 -> d
    1658:1658:void kotlin.collections.CollectionsKt___CollectionsKt.forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> d
    1658:1658:java.lang.String replaceIndent(java.lang.String,java.lang.String):186 -> d
    1396:1396:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> d
    1396:1396:java.lang.String replaceIndent(java.lang.String,java.lang.String):184 -> d
    113:113:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> d
    113:113:java.lang.String replaceIndent(java.lang.String,java.lang.String):187 -> d
    114:114:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> d
    114:114:java.lang.String replaceIndent(java.lang.String,java.lang.String):188 -> d
    116:116:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> d
    116:116:java.lang.String replaceIndent(java.lang.String,java.lang.String):190 -> d
    76:76:java.lang.String replaceIndent(java.lang.String,java.lang.String) -> d
    116:116:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> d
    116:116:java.lang.String replaceIndent(java.lang.String,java.lang.String):190 -> d
    113:113:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> d
    113:113:java.lang.String replaceIndent(java.lang.String,java.lang.String):187 -> d
    116:116:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> d
    116:116:java.lang.String replaceIndent(java.lang.String,java.lang.String):190 -> d
    1396:1396:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> d
    1396:1396:java.lang.String replaceIndent(java.lang.String,java.lang.String):184 -> d
    1658:1658:void kotlin.collections.CollectionsKt___CollectionsKt.forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> d
    1658:1658:java.lang.String replaceIndent(java.lang.String,java.lang.String):186 -> d
    1659:1659:void kotlin.collections.CollectionsKt___CollectionsKt.forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> d
    1659:1659:java.lang.String replaceIndent(java.lang.String,java.lang.String):191 -> d
    1397:1397:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> d
    1397:1397:java.lang.String replaceIndent(java.lang.String,java.lang.String):192 -> d
    118:118:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> d
    118:118:java.lang.String replaceIndent(java.lang.String,java.lang.String):173 -> d
    119:119:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> d
    119:119:java.lang.String replaceIndent(java.lang.String,java.lang.String):172 -> d
    34:37:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String) -> e
    111:111:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> e
    111:111:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):122 -> e
    112:112:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> e
    112:112:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):123 -> e
    119:119:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> e
    119:119:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):130 -> e
    112:112:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> e
    112:112:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):123 -> e
    118:118:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> e
    118:118:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):131 -> e
    112:112:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> e
    112:112:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):123 -> e
    1386:1386:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNull(java.lang.Iterable,kotlin.jvm.functions.Function2) -> e
    1386:1386:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):132 -> e
    1396:1396:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> e
    1396:1396:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):142 -> e
    1657:1657:void kotlin.collections.CollectionsKt___CollectionsKt.forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> e
    1657:1657:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):143 -> e
    1658:1658:void kotlin.collections.CollectionsKt___CollectionsKt.forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> e
    1658:1658:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):144 -> e
    1396:1396:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> e
    1396:1396:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):142 -> e
    113:113:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> e
    113:113:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):145 -> e
    114:114:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> e
    114:114:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):146 -> e
    116:116:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> e
    116:116:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):148 -> e
    38:38:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String) -> e
    114:114:int kotlin.text.StringsKt___StringsKt.indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e
    114:114:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):149 -> e
    115:115:int kotlin.text.StringsKt___StringsKt.indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e
    115:115:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):150 -> e
    38:38:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String) -> e
    116:116:int kotlin.text.StringsKt___StringsKt.indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e
    116:116:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):151 -> e
    114:114:int kotlin.text.StringsKt___StringsKt.indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e
    114:114:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):149 -> e
    119:119:int kotlin.text.StringsKt___StringsKt.indexOfFirst(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e
    119:119:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):154 -> e
    38:44:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String) -> e
    116:116:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> e
    116:116:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):148 -> e
    113:113:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> e
    113:113:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):145 -> e
    116:116:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> e
    116:116:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):148 -> e
    1396:1396:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> e
    1396:1396:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):142 -> e
    1658:1658:void kotlin.collections.CollectionsKt___CollectionsKt.forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> e
    1658:1658:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):144 -> e
    1659:1659:void kotlin.collections.CollectionsKt___CollectionsKt.forEachIndexed(java.lang.Iterable,kotlin.jvm.functions.Function2) -> e
    1659:1659:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):155 -> e
    1397:1397:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapIndexedNotNullTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function2) -> e
    1397:1397:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):156 -> e
    118:118:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> e
    118:118:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):131 -> e
    119:119:java.lang.String reindent$StringsKt__IndentKt(java.util.List,int,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> e
    119:119:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String):130 -> e
    34:34:java.lang.String replaceIndentByMargin(java.lang.String,java.lang.String,java.lang.String) -> e
    63:63:java.lang.String trimIndent(java.lang.String) -> f
    26:26:java.lang.String trimMargin(java.lang.String,java.lang.String) -> g
    25:25:java.lang.String trimMargin$default(java.lang.String,java.lang.String,int,java.lang.Object) -> h
kotlin.text.StringsKt__IndentKt$getIndentFunction$1 -> b.y.g$a:
    kotlin.text.StringsKt__IndentKt$getIndentFunction$1 INSTANCE -> a
    102:102:java.lang.String invoke(java.lang.String) -> c
kotlin.text.StringsKt__IndentKt$getIndentFunction$2 -> b.y.g$b:
    java.lang.String $indent -> a
    103:103:java.lang.String invoke(java.lang.String) -> c
kotlin.text.StringsKt__RegexExtensionsJVMKt -> b.y.h:
kotlin.text.StringsKt__RegexExtensionsKt -> b.y.i:
kotlin.text.StringsKt__StringBuilderJVMKt -> b.y.j:
kotlin.text.StringsKt__StringBuilderKt -> b.y.k:
kotlin.text.StringsKt__StringNumberConversionsJVMKt -> b.y.l:
kotlin.text.StringsKt__StringNumberConversionsKt -> b.y.m:
kotlin.text.StringsKt__StringsJVMKt -> b.y.n:
    355:358:boolean endsWith(java.lang.String,java.lang.String,boolean) -> i
    354:354:boolean endsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> j
    500:500:boolean isBlank(java.lang.CharSequence) -> k
    1535:1535:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> k
    1535:1535:boolean isBlank(java.lang.CharSequence):662 -> k
    1536:1536:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> k
    1536:1536:boolean isBlank(java.lang.CharSequence):663 -> k
    500:500:boolean isBlank(java.lang.CharSequence) -> k
    1537:1537:boolean kotlin.collections.CollectionsKt___CollectionsKt.all(java.lang.Iterable,kotlin.jvm.functions.Function1) -> k
    1537:1537:boolean isBlank(java.lang.CharSequence):664 -> k
    500:500:boolean isBlank(java.lang.CharSequence) -> k
    532:535:boolean regionMatches(java.lang.String,int,java.lang.String,int,int,boolean) -> l
    629:629:java.lang.String repeat(java.lang.CharSequence,int) -> m
    64:67:java.lang.String replace(java.lang.String,char,char,boolean) -> n
    76:76:java.lang.String replace(java.lang.String,java.lang.String,java.lang.String,boolean) -> o
    63:63:java.lang.String replace$default(java.lang.String,char,char,boolean,int,java.lang.Object) -> p
    75:75:java.lang.String replace$default(java.lang.String,java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> q
    344:347:boolean startsWith(java.lang.String,java.lang.String,int,boolean) -> r
    333:336:boolean startsWith(java.lang.String,java.lang.String,boolean) -> s
    343:343:boolean startsWith$default(java.lang.String,java.lang.String,int,boolean,int,java.lang.Object) -> t
    332:332:boolean startsWith$default(java.lang.String,java.lang.String,boolean,int,java.lang.Object) -> u
kotlin.text.StringsKt__StringsKt -> b.y.o:
    317:317:int getLastIndex(java.lang.CharSequence) -> A
    991:991:int indexOf(java.lang.CharSequence,char,int,boolean) -> B
    1006:1006:int indexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> C
    877:893:int indexOf$StringsKt__StringsKt(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean) -> D
    876:876:int indexOf$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.CharSequence,int,int,boolean,boolean,int,java.lang.Object) -> E
    990:990:int indexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> F
    1005:1005:int indexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> G
    837:844:int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> H
    10843:10843:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> H
    10843:10843:int indexOfAny(java.lang.CharSequence,char[],int,boolean):1424 -> H
    844:844:int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> H
    10844:10844:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> H
    10844:10844:int indexOfAny(java.lang.CharSequence,char[],int,boolean):1425 -> H
    845:847:int indexOfAny(java.lang.CharSequence,char[],int,boolean) -> H
    1021:1021:int lastIndexOf(java.lang.CharSequence,char,int,boolean) -> I
    1036:1036:int lastIndexOf(java.lang.CharSequence,java.lang.String,int,boolean) -> J
    1020:1020:int lastIndexOf$default(java.lang.CharSequence,char,int,boolean,int,java.lang.Object) -> K
    1035:1035:int lastIndexOf$default(java.lang.CharSequence,java.lang.String,int,boolean,int,java.lang.Object) -> L
    860:868:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> M
    10843:10843:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> M
    10843:10843:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean):1426 -> M
    868:868:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> M
    10844:10844:boolean kotlin.collections.ArraysKt___ArraysKt.any(char[],kotlin.jvm.functions.Function1) -> M
    10844:10844:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean):1427 -> M
    869:872:int lastIndexOfAny(java.lang.CharSequence,char[],int,boolean) -> M
    1283:1283:kotlin.sequences.Sequence lineSequence(java.lang.CharSequence) -> N
    1290:1290:java.util.List lines(java.lang.CharSequence) -> O
    1144:1144:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,char[],int,boolean,int) -> P
    1167:1167:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String[],int,boolean,int) -> Q
    1143:1143:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,char[],int,boolean,int,int,java.lang.Object) -> R
    1166:1166:kotlin.sequences.Sequence rangesDelimitedBy$StringsKt__StringsKt$default(java.lang.CharSequence,java.lang.String[],int,boolean,int,int,java.lang.Object) -> S
    725:726:boolean regionMatchesImpl(java.lang.CharSequence,int,java.lang.CharSequence,int,int,boolean) -> T
    1203:1210:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int) -> U
    1366:1366:java.util.List kotlin.collections.CollectionsKt___CollectionsKt.map(java.lang.Iterable,kotlin.jvm.functions.Function1) -> U
    1366:1366:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int):1432 -> U
    1435:1435:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> U
    1435:1435:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int):1433 -> U
    1436:1436:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> U
    1436:1436:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int):1434 -> U
    1210:1210:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int) -> U
    1435:1435:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> U
    1435:1435:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int):1433 -> U
    1437:1437:java.util.Collection kotlin.collections.CollectionsKt___CollectionsKt.mapTo(java.lang.Iterable,java.util.Collection,kotlin.jvm.functions.Function1) -> U
    1437:1437:java.util.List split(java.lang.CharSequence,java.lang.String[],boolean,int):1435 -> U
    1247:1247:java.util.List split$StringsKt__StringsKt(java.lang.CharSequence,java.lang.String,boolean,int) -> V
    1202:1202:java.util.List split$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> W
    1221:1221:kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,char[],boolean,int) -> X
    1189:1189:kotlin.sequences.Sequence splitToSequence(java.lang.CharSequence,java.lang.String[],boolean,int) -> Y
    1220:1220:kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,char[],boolean,int,int,java.lang.Object) -> Z
    1188:1188:kotlin.sequences.Sequence splitToSequence$default(java.lang.CharSequence,java.lang.String[],boolean,int,int,java.lang.Object) -> a0
    361:361:java.lang.String substring(java.lang.CharSequence,kotlin.ranges.IntRange) -> b0
    422:423:java.lang.String substringAfterLast(java.lang.String,char,java.lang.String) -> c0
    421:421:java.lang.String substringAfterLast$default(java.lang.String,char,java.lang.String,int,java.lang.Object) -> d0
    114:114:java.lang.CharSequence trim(java.lang.CharSequence) -> e0
    17:17:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e0
    17:17:java.lang.CharSequence trim(java.lang.CharSequence):1391 -> e0
    18:18:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e0
    18:18:java.lang.CharSequence trim(java.lang.CharSequence):1392 -> e0
    19:19:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e0
    19:19:java.lang.CharSequence trim(java.lang.CharSequence):1393 -> e0
    21:21:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e0
    21:21:java.lang.CharSequence trim(java.lang.CharSequence):1395 -> e0
    22:22:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e0
    22:22:java.lang.CharSequence trim(java.lang.CharSequence):1396 -> e0
    23:23:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e0
    23:23:java.lang.CharSequence trim(java.lang.CharSequence):1397 -> e0
    114:114:java.lang.CharSequence trim(java.lang.CharSequence) -> e0
    25:25:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e0
    25:25:java.lang.CharSequence trim(java.lang.CharSequence):1399 -> e0
    26:26:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e0
    26:26:java.lang.CharSequence trim(java.lang.CharSequence):1400 -> e0
    27:27:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e0
    27:27:java.lang.CharSequence trim(java.lang.CharSequence):1401 -> e0
    29:29:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e0
    29:29:java.lang.CharSequence trim(java.lang.CharSequence):1403 -> e0
    31:31:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e0
    31:31:java.lang.CharSequence trim(java.lang.CharSequence):1405 -> e0
    32:32:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e0
    32:32:java.lang.CharSequence trim(java.lang.CharSequence):1406 -> e0
    34:34:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e0
    34:34:java.lang.CharSequence trim(java.lang.CharSequence):1408 -> e0
    35:35:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e0
    35:35:java.lang.CharSequence trim(java.lang.CharSequence):1409 -> e0
    21:21:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e0
    21:21:java.lang.CharSequence trim(java.lang.CharSequence):1395 -> e0
    38:38:java.lang.CharSequence trim(java.lang.CharSequence,kotlin.jvm.functions.Function1) -> e0
    38:38:java.lang.CharSequence trim(java.lang.CharSequence):1412 -> e0
    114:114:java.lang.CharSequence trim(java.lang.CharSequence) -> e0
    1:1:kotlin.Pair access$findAnyOf(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> v
    1049:1052:boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean) -> w
    1048:1048:boolean contains$default(java.lang.CharSequence,java.lang.CharSequence,boolean,int,java.lang.Object) -> x
    897:907:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> y
    250:250:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> y
    250:250:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean):1428 -> y
    907:907:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> y
    251:251:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> y
    251:251:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean):1429 -> y
    907:913:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> y
    250:250:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> y
    250:250:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean):1430 -> y
    913:913:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> y
    251:251:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> y
    251:251:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean):1431 -> y
    913:919:kotlin.Pair findAnyOf$StringsKt__StringsKt(java.lang.CharSequence,java.util.Collection,int,boolean,boolean) -> y
    311:311:kotlin.ranges.IntRange getIndices(java.lang.CharSequence) -> z
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$2 -> b.y.o$a:
    char[] $delimiters -> a
    boolean $ignoreCase -> b
    1147:1147:kotlin.Pair invoke(java.lang.CharSequence,int) -> c
kotlin.text.StringsKt__StringsKt$rangesDelimitedBy$4 -> b.y.o$b:
    java.util.List $delimitersList -> a
    boolean $ignoreCase -> b
    1170:1170:kotlin.Pair invoke(java.lang.CharSequence,int) -> c
kotlin.text.StringsKt__StringsKt$splitToSequence$1 -> b.y.o$c:
    java.lang.CharSequence $this_splitToSequence -> a
    1189:1189:java.lang.String invoke(kotlin.ranges.IntRange) -> c
kotlin.text.StringsKt__StringsKt$splitToSequence$2 -> b.y.o$d:
    java.lang.CharSequence $this_splitToSequence -> a
    1221:1221:java.lang.String invoke(kotlin.ranges.IntRange) -> c
kotlin.text.StringsKt___StringsJvmKt -> b.y.p:
kotlin.text.StringsKt___StringsKt -> b.y.q:
    291:291:java.lang.String drop(java.lang.String,int) -> f0
leakcanary.AndroidLeakFixes -> c.a:
    leakcanary.AndroidLeakFixes$Companion Companion -> c
    leakcanary.AndroidLeakFixes[] $VALUES -> a
    java.util.concurrent.ScheduledExecutorService backgroundExecutor -> b
    396:396:void <clinit>() -> <clinit>
    31:31:void <init>(java.lang.String,int) -> <init>
    31:31:void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    31:31:java.util.concurrent.ScheduledExecutorService access$getBackgroundExecutor$cp() -> a
    void apply(android.app.Application) -> b
leakcanary.AndroidLeakFixes$ACCESSIBILITY_NODE_INFO -> c.a$a:
    191:191:void <init>(java.lang.String,int) -> <init>
    193:203:void apply(android.app.Application) -> b
leakcanary.AndroidLeakFixes$ACCESSIBILITY_NODE_INFO$apply$1 -> c.a$a$a:
    leakcanary.AndroidLeakFixes$ACCESSIBILITY_NODE_INFO$apply$1 INSTANCE -> a
    198:202:void run() -> run
leakcanary.AndroidLeakFixes$ACTIVITY_MANAGER -> c.a$b:
    323:323:void <init>(java.lang.String,int) -> <init>
    325:326:void apply(android.app.Application) -> b
leakcanary.AndroidLeakFixes$ACTIVITY_MANAGER$apply$1 -> c.a$b$a:
    android.app.Application $application -> a
    330:341:void run() -> run
leakcanary.AndroidLeakFixes$ACTIVITY_MANAGER$apply$1$1 -> c.a$b$a$a:
    java.lang.reflect.Field $contextField -> a
    345:352:void invoke(android.app.Activity) -> c
    323:323:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.AndroidLeakFixes$BUBBLE_POPUP -> c.a$c:
    258:258:void <init>(java.lang.String,int) -> <init>
    260:261:void apply(android.app.Application) -> b
leakcanary.AndroidLeakFixes$BUBBLE_POPUP$apply$1 -> c.a$c$a:
    android.app.Application $application -> a
    265:271:void run() -> run
leakcanary.AndroidLeakFixes$BUBBLE_POPUP$apply$1$1 -> c.a$c$a$a:
    java.lang.reflect.Field $helperField -> a
    275:280:void invoke(android.app.Activity) -> c
    258:258:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.AndroidLeakFixes$CONNECTIVITY_MANAGER -> c.a$d:
    218:218:void <init>(java.lang.String,int) -> <init>
    220:229:void apply(android.app.Application) -> b
leakcanary.AndroidLeakFixes$Companion -> c.a$f:
    381:381:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    381:381:void <init>():381 -> <init>
    381:381:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    381:381:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> a
    381:381:java.util.List access$findAllHandlerThreads(leakcanary.AndroidLeakFixes$Companion):381 -> a
    381:381:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> b
    381:381:void access$onEachIdle(leakcanary.AndroidLeakFixes$Companion,android.os.Handler,kotlin.jvm.functions.Function0):381 -> b
    390:392:void applyFixes(android.app.Application,java.util.Set) -> c
    388:388:void applyFixes$default(leakcanary.AndroidLeakFixes$Companion,android.app.Application,java.util.Set,int,java.lang.Object) -> d
    457:458:void checkMainThread$plumber_android_release() -> e
    428:428:java.util.List findAllHandlerThreads() -> f
    438:444:void onActivityDestroyed$plumber_android_release(android.app.Application,kotlin.jvm.functions.Function1) -> g
    408:424:void onEachIdle(android.os.Handler,kotlin.jvm.functions.Function0) -> h
leakcanary.AndroidLeakFixes$Companion$backgroundExecutor$1 -> c.a$e:
    leakcanary.AndroidLeakFixes$Companion$backgroundExecutor$1 INSTANCE -> a
    397:404:leakcanary.AndroidLeakFixes$Companion$backgroundExecutor$1$thread$1 newThread(java.lang.Runnable) -> a
    381:381:java.lang.Thread newThread(java.lang.Runnable) -> newThread
leakcanary.AndroidLeakFixes$Companion$backgroundExecutor$1$thread$1 -> c.a$e$a:
    java.lang.Runnable $runnable -> a
    397:397:void <init>(java.lang.Runnable) -> <init>
    399:401:void run() -> run
leakcanary.AndroidLeakFixes$Companion$noOpDelegate$noOpHandler$1 -> c.b:
    leakcanary.AndroidLeakFixes$Companion$noOpDelegate$noOpHandler$1 INSTANCE -> a
    450:450:void invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> a
    381:381:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
leakcanary.AndroidLeakFixes$Companion$onActivityDestroyed$1 -> c.a$f$a:
    android.app.Application$ActivityLifecycleCallbacks $$delegate_0 -> a
    kotlin.jvm.functions.Function1 $block -> b
    438:439:void <init>(leakcanary.AndroidLeakFixes$Companion,kotlin.jvm.functions.Function1) -> <init>
    447:447:java.lang.Object leakcanary.AndroidLeakFixes$Companion.noOpDelegate$plumber_android_release() -> <init>
    447:447:void <init>(leakcanary.AndroidLeakFixes$Companion,kotlin.jvm.functions.Function1):466 -> <init>
    448:448:java.lang.Object leakcanary.AndroidLeakFixes$Companion.noOpDelegate$plumber_android_release() -> <init>
    448:448:void <init>(leakcanary.AndroidLeakFixes$Companion,kotlin.jvm.functions.Function1):467 -> <init>
    451:451:java.lang.Object leakcanary.AndroidLeakFixes$Companion.noOpDelegate$plumber_android_release() -> <init>
    451:451:void <init>(leakcanary.AndroidLeakFixes$Companion,kotlin.jvm.functions.Function1):470 -> <init>
    452:452:java.lang.Object leakcanary.AndroidLeakFixes$Companion.noOpDelegate$plumber_android_release() -> <init>
    452:452:void <init>(leakcanary.AndroidLeakFixes$Companion,kotlin.jvm.functions.Function1):471 -> <init>
    451:451:java.lang.Object leakcanary.AndroidLeakFixes$Companion.noOpDelegate$plumber_android_release() -> <init>
    451:451:void <init>(leakcanary.AndroidLeakFixes$Companion,kotlin.jvm.functions.Function1):470 -> <init>
    441:442:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
leakcanary.AndroidLeakFixes$Companion$onEachIdle$1 -> c.a$f$b:
    kotlin.jvm.functions.Function0 $onIdle -> a
    413:419:void run() -> run
leakcanary.AndroidLeakFixes$Companion$onEachIdle$1$1 -> c.a$f$b$a:
    leakcanary.AndroidLeakFixes$Companion$onEachIdle$1 this$0 -> a
    416:417:boolean queueIdle() -> queueIdle
leakcanary.AndroidLeakFixes$FLUSH_HANDLER_THREADS -> c.a$g:
    137:137:void <init>(java.lang.String,int) -> <init>
    139:178:void apply(android.app.Application) -> b
leakcanary.AndroidLeakFixes$FLUSH_HANDLER_THREADS$apply$1 -> c.a$g$a:
    java.util.Set $flushedThreadIds -> a
    142:155:void run() -> run
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    31:31:void run():487 -> run
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    32:32:void run():488 -> run
    155:155:void run() -> run
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    33:33:void run():489 -> run
    156:177:void run() -> run
leakcanary.AndroidLeakFixes$FLUSH_HANDLER_THREADS$apply$1$3$2 -> c.a$g$a$a:
    kotlin.jvm.internal.Ref$BooleanRef $scheduleFlush -> a
    android.os.Handler $flushHandler -> b
    137:137:java.lang.Object invoke() -> a
    159:175:void invoke() -> c
leakcanary.AndroidLeakFixes$FLUSH_HANDLER_THREADS$apply$1$3$2$1 -> c.a$g$a$a$a:
    leakcanary.AndroidLeakFixes$FLUSH_HANDLER_THREADS$apply$1$3$2 this$0 -> a
    168:169:void run() -> run
leakcanary.AndroidLeakFixes$LAST_HOVERED_VIEW -> c.a$h:
    290:290:void <init>(java.lang.String,int) -> <init>
    292:293:void apply(android.app.Application) -> b
leakcanary.AndroidLeakFixes$LAST_HOVERED_VIEW$apply$1 -> c.a$h$a:
    android.app.Application $application -> a
    297:302:void run() -> run
leakcanary.AndroidLeakFixes$LAST_HOVERED_VIEW$apply$1$1 -> c.a$h$a$a:
    java.lang.reflect.Field $field -> a
    306:311:void invoke(android.app.Activity) -> c
    290:290:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.AndroidLeakFixes$MEDIA_SESSION_LEGACY_HELPER -> c.a$i:
    41:41:void <init>(java.lang.String,int) -> <init>
    43:54:void apply(android.app.Application) -> b
leakcanary.AndroidLeakFixes$MEDIA_SESSION_LEGACY_HELPER$apply$1 -> c.a$i$a:
    android.app.Application $application -> a
    47:53:void run() -> run
leakcanary.AndroidLeakFixes$SAMSUNG_CLIPBOARD_MANAGER -> c.a$j:
    236:236:void <init>(java.lang.String,int) -> <init>
    238:239:void apply(android.app.Application) -> b
leakcanary.AndroidLeakFixes$TEXT_LINE_POOL -> c.a$k:
    67:67:void <init>(java.lang.String,int) -> <init>
    70:99:void apply(android.app.Application) -> b
leakcanary.AndroidLeakFixes$TEXT_LINE_POOL$apply$1 -> c.a$k$a:
    android.app.Application $application -> a
    75:86:void run() -> run
leakcanary.AndroidLeakFixes$TEXT_LINE_POOL$apply$1$1 -> c.a$k$a$a:
    java.lang.Object $sCached -> a
    91:91:void invoke(android.app.Activity) -> c
    67:67:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.AndroidLeakFixes$USER_MANAGER -> c.a$l:
    117:117:void <init>(java.lang.String,int) -> <init>
    120:128:void apply(android.app.Application) -> b
leakcanary.AndroidLeakFixes$VIEW_LOCATION_HOLDER -> c.a$m:
    372:372:void <init>(java.lang.String,int) -> <init>
    374:375:void apply(android.app.Application) -> b
leakcanary.AppWatcher -> c.c:
    leakcanary.AppWatcher INSTANCE -> b
    leakcanary.AppWatcher$Config config -> a
    15:153:void <clinit>() -> <clinit>
    15:15:void <clinit>() -> <init>
    15:15:void <init>():15 -> <init>
    153:153:void <clinit>() -> a
    153:153:leakcanary.AppWatcher$Config getConfig():153 -> a
    186:186:leakcanary.ObjectWatcher getObjectWatcher() -> b
    190:190:boolean isInstalled() -> c
    206:207:void manualInstall(android.app.Application) -> d
leakcanary.AppWatcher$Config -> c.c$a:
    long watchDurationMillis -> e
    boolean enabled -> f
    boolean watchActivities -> a
    boolean watchFragments -> b
    boolean watchFragmentViews -> c
    boolean watchViewModels -> d
    22:22:void <init>(boolean,boolean,boolean,boolean,long,boolean) -> <init>
    28:67:void <init>(boolean,boolean,boolean,boolean,long,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    28:28:boolean getWatchActivities() -> a
    57:57:long getWatchDurationMillis() -> b
    42:42:boolean getWatchFragmentViews() -> c
    35:35:boolean getWatchFragments() -> d
    50:50:boolean getWatchViewModels() -> e
leakcanary.Clock -> c.d:
    long uptimeMillis() -> a
leakcanary.Clock$Companion -> c.d$a:
    leakcanary.Clock$Companion $$INSTANCE -> a
    14:14:void <clinit>() -> <clinit>
    14:14:void <init>() -> <init>
leakcanary.DefaultOnHeapAnalyzedListener -> c.e:
    kotlin.Lazy application$delegate -> b
    leakcanary.DefaultOnHeapAnalyzedListener$Companion Companion -> d
    android.os.Handler mainHandler -> a
    kotlin.jvm.functions.Function0 applicationProvider -> c
    28:28:void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    28:28:void <init>(kotlin.jvm.functions.Function0):28 -> <init>
    38:40:void <init>(kotlin.jvm.functions.Function0) -> <init>
    28:28:void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    43:43:void onHeapAnalyzed(shark.HeapAnalysis) -> a
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> a
    31:31:void onHeapAnalyzed(shark.HeapAnalysis):133 -> a
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> a
    32:32:void onHeapAnalyzed(shark.HeapAnalysis):134 -> a
    43:43:void onHeapAnalyzed(shark.HeapAnalysis) -> a
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> a
    33:33:void onHeapAnalyzed(shark.HeapAnalysis):135 -> a
    45:45:void onHeapAnalyzed(shark.HeapAnalysis) -> a
    28:28:void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.internal.DefaultConstructorMarker) -> b
    28:28:android.app.Application access$getApplication$p(leakcanary.DefaultOnHeapAnalyzedListener):28 -> b
    28:28:void <init>(kotlin.jvm.functions.Function0,kotlin.jvm.internal.DefaultConstructorMarker) -> c
    28:28:kotlin.jvm.functions.Function0 access$getApplicationProvider$p(leakcanary.DefaultOnHeapAnalyzedListener):28 -> c
    android.app.Application getApplication() -> d
    116:117:void printIntentInfo() -> e
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> e
    31:31:void printIntentInfo():141 -> e
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> e
    32:32:void printIntentInfo():142 -> e
    118:124:void printIntentInfo() -> e
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> e
    33:33:void printIntentInfo():143 -> e
    126:126:void printIntentInfo() -> e
    74:85:void showNotification(leakcanary.internal.navigation.Screen,java.lang.String) -> f
    93:108:void showToast(shark.HeapAnalysis) -> g
leakcanary.DefaultOnHeapAnalyzedListener$Companion -> c.e$a:
    128:128:void <init>() -> <init>
    128:128:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    130:130:leakcanary.OnHeapAnalyzedListener create() -> a
leakcanary.DefaultOnHeapAnalyzedListener$Companion$create$1 -> c.e$a$a:
    leakcanary.DefaultOnHeapAnalyzedListener$Companion$create$1 INSTANCE -> a
    128:128:java.lang.Object invoke() -> a
    130:130:android.app.Application invoke() -> c
leakcanary.DefaultOnHeapAnalyzedListener$application$2 -> c.e$b:
    leakcanary.DefaultOnHeapAnalyzedListener this$0 -> a
    28:28:java.lang.Object invoke() -> a
    40:40:android.app.Application invoke() -> c
leakcanary.DefaultOnHeapAnalyzedListener$showToast$1 -> c.e$c:
    leakcanary.DefaultOnHeapAnalyzedListener this$0 -> a
    shark.HeapAnalysis $heapAnalysis -> b
    94:94:void run() -> run
leakcanary.GcTrigger -> c.f:
    void runGc() -> a
leakcanary.GcTrigger$Default -> c.f$a:
    leakcanary.GcTrigger$Default INSTANCE -> a
    33:33:void <clinit>() -> <clinit>
    33:33:void <init>() -> <init>
    40:44:void runGc() -> a
    49:52:void enqueueReferences() -> b
leakcanary.KeyedWeakReference -> leakcanary.KeyedWeakReference:
    30:44:void <init>(java.lang.Object,java.lang.String,java.lang.String,long,java.lang.ref.ReferenceQueue) -> <init>
    30:30:long access$getHeapDumpUptimeMillis$cp() -> access$getHeapDumpUptimeMillis$cp
    30:30:void access$setHeapDumpUptimeMillis$cp(long) -> access$setHeapDumpUptimeMillis$cp
    33:33:java.lang.String getDescription() -> getDescription
    32:32:java.lang.String getKey() -> getKey
    44:44:long getRetainedUptimeMillis() -> getRetainedUptimeMillis
    34:34:long getWatchUptimeMillis() -> getWatchUptimeMillis
    44:44:void setRetainedUptimeMillis(long) -> setRetainedUptimeMillis
leakcanary.KeyedWeakReference$Companion -> leakcanary.KeyedWeakReference$a:
    46:46:void <init>() -> <init>
    46:46:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    48:48:void setHeapDumpUptimeMillis(long) -> a
leakcanary.LeakCanary -> c.g:
    leakcanary.LeakCanary$Config config -> a
    leakcanary.LeakCanary INSTANCE -> b
    28:292:void <clinit>() -> <clinit>
    28:28:void <clinit>() -> <init>
    28:28:void <init>():28 -> <init>
    348:348:void dumpHeap() -> a
    292:292:void <clinit>() -> b
    292:292:leakcanary.LeakCanary$Config getConfig():292 -> b
    303:303:void logConfigChange(leakcanary.LeakCanary$Config,leakcanary.LeakCanary$Config) -> c
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> c
    31:31:void logConfigChange(leakcanary.LeakCanary$Config,leakcanary.LeakCanary$Config):351 -> c
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> c
    32:32:void logConfigChange(leakcanary.LeakCanary$Config,leakcanary.LeakCanary$Config):352 -> c
    304:316:void logConfigChange(leakcanary.LeakCanary$Config,leakcanary.LeakCanary$Config) -> c
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> c
    33:33:void logConfigChange(leakcanary.LeakCanary$Config,leakcanary.LeakCanary$Config):355 -> c
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> c
    31:31:void logConfigChange(leakcanary.LeakCanary$Config,leakcanary.LeakCanary$Config):351 -> c
    318:318:void logConfigChange(leakcanary.LeakCanary$Config,leakcanary.LeakCanary$Config) -> c
    323:323:android.content.Intent newLeakDisplayActivityIntent() -> d
    294:297:void setConfig(leakcanary.LeakCanary$Config) -> e
leakcanary.LeakCanary$Config -> c.g$a:
    java.util.List objectInspectors -> e
    boolean requestWriteExternalStoragePermission -> j
    java.util.List referenceMatchers -> d
    int maxStoredHeapDumps -> i
    shark.LeakingObjectFinder leakingObjectFinder -> k
    boolean useExperimentalLeakFinders -> l
    shark.MetadataExtractor metadataExtractor -> g
    leakcanary.OnHeapAnalyzedListener onHeapAnalyzedListener -> f
    boolean computeRetainedHeapSize -> h
    boolean dumpHeap -> a
    boolean dumpHeapWhenDebugging -> b
    int retainedVisibleThreshold -> c
    35:35:void <init>(boolean,boolean,int,java.util.List,java.util.List,leakcanary.OnHeapAnalyzedListener,shark.MetadataExtractor,boolean,int,boolean,shark.LeakingObjectFinder,boolean) -> <init>
    43:173:void <init>(boolean,boolean,int,java.util.List,java.util.List,leakcanary.OnHeapAnalyzedListener,shark.MetadataExtractor,boolean,int,boolean,shark.LeakingObjectFinder,boolean,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    leakcanary.LeakCanary$Config copy(boolean,boolean,int,java.util.List,java.util.List,leakcanary.OnHeapAnalyzedListener,shark.MetadataExtractor,boolean,int,boolean,shark.LeakingObjectFinder,boolean) -> a
    leakcanary.LeakCanary$Config copy$default(leakcanary.LeakCanary$Config,boolean,boolean,int,java.util.List,java.util.List,leakcanary.OnHeapAnalyzedListener,shark.MetadataExtractor,boolean,int,boolean,shark.LeakingObjectFinder,boolean,int,java.lang.Object) -> b
    121:121:boolean getComputeRetainedHeapSize() -> c
    43:43:boolean getDumpHeap() -> d
    51:51:boolean getDumpHeapWhenDebugging() -> e
    167:167:shark.LeakingObjectFinder getLeakingObjectFinder() -> f
    130:130:int getMaxStoredHeapDumps() -> g
    108:108:shark.MetadataExtractor getMetadataExtractor() -> h
    91:91:java.util.List getObjectInspectors() -> i
    100:100:leakcanary.OnHeapAnalyzedListener getOnHeapAnalyzedListener() -> j
    82:82:java.util.List getReferenceMatchers() -> k
    141:141:boolean getRequestWriteExternalStoragePermission() -> l
    69:69:int getRetainedVisibleThreshold() -> m
leakcanary.ObjectWatcher -> c.h:
    java.util.Map watchedObjects -> b
    kotlin.jvm.functions.Function0 isEnabled -> f
    java.lang.ref.ReferenceQueue queue -> c
    java.util.Set onObjectRetainedListeners -> a
    java.util.concurrent.Executor checkRetainedExecutor -> e
    leakcanary.Clock clock -> d
    36:36:void access$moveToRetained(leakcanary.ObjectWatcher,java.lang.String) -> <init>
    36:36:void <init>(leakcanary.Clock,java.util.concurrent.Executor,kotlin.jvm.functions.Function0):36 -> <init>
    45:52:void <init>(leakcanary.Clock,java.util.concurrent.Executor,kotlin.jvm.functions.Function0) -> <init>
    36:36:void access$moveToRetained(leakcanary.ObjectWatcher,java.lang.String) -> a
    105:104:void addOnObjectRetainedListener(leakcanary.OnObjectRetainedListener) -> b
    161:208:void clearObjectsWatchedBefore(long) -> c
    491:491:java.util.Map kotlin.collections.MapsKt__MapsKt.filterTo(java.util.Map,java.util.Map,kotlin.jvm.functions.Function1) -> c
    491:491:void clearObjectsWatchedBefore(long):213 -> c
    161:160:void clearObjectsWatchedBefore(long) -> c
    70:71:int getRetainedObjectCount() -> d
    140:140:int kotlin.collections.MapsKt___MapsKt.count(java.util.Map,kotlin.jvm.functions.Function1) -> d
    140:140:int getRetainedObjectCount():200 -> d
    141:141:int kotlin.collections.MapsKt___MapsKt.count(java.util.Map,kotlin.jvm.functions.Function1) -> d
    141:141:int getRetainedObjectCount():201 -> d
    142:142:int kotlin.collections.MapsKt___MapsKt.count(java.util.Map,kotlin.jvm.functions.Function1) -> d
    142:142:int getRetainedObjectCount():202 -> d
    71:71:int getRetainedObjectCount() -> d
    143:143:int kotlin.collections.MapsKt___MapsKt.count(java.util.Map,kotlin.jvm.functions.Function1) -> d
    143:143:int getRetainedObjectCount():203 -> d
    69:69:int getRetainedObjectCount() -> d
    176:175:void moveToRetained(java.lang.String) -> e
    187:193:void removeWeaklyReachableObjects() -> f
    134:143:void watch(java.lang.Object,java.lang.String) -> g
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> g
    31:31:void watch(java.lang.Object,java.lang.String):204 -> g
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> g
    32:32:void watch(java.lang.Object,java.lang.String):205 -> g
    144:133:void watch(java.lang.Object,java.lang.String) -> g
leakcanary.ObjectWatcher$watch$2 -> c.h$a:
    leakcanary.ObjectWatcher this$0 -> a
    java.lang.String $key -> b
    152:153:void run() -> run
leakcanary.OnHeapAnalyzedListener -> c.i:
    void onHeapAnalyzed(shark.HeapAnalysis) -> a
leakcanary.OnHeapAnalyzedListener$Companion -> c.i$a:
    leakcanary.OnHeapAnalyzedListener$Companion $$INSTANCE -> a
    20:20:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
leakcanary.OnObjectRetainedListener -> c.j:
leakcanary.OnObjectRetainedListener$Companion -> c.j$a:
    leakcanary.OnObjectRetainedListener$Companion $$INSTANCE -> a
    13:13:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
leakcanary.ViewLocationHolderLeakFix -> c.k:
    kotlin.Pair groupAndOutChildren -> a
    leakcanary.ViewLocationHolderLeakFix INSTANCE -> b
    18:18:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
    18:18:void access$uncheckedClearStaticPool(leakcanary.ViewLocationHolderLeakFix,android.app.Application) -> a
    23:42:void applyFix$plumber_android_release(android.app.Application) -> b
    56:65:void uncheckedClearStaticPool(android.app.Application) -> c
leakcanary.ViewLocationHolderLeakFix$applyFix$1 -> c.k$a:
    android.app.Application$ActivityLifecycleCallbacks $$delegate_0 -> a
    android.app.Application $application -> b
    26:27:void <init>(android.app.Application) -> <init>
    447:447:java.lang.Object leakcanary.AndroidLeakFixes$Companion.noOpDelegate$plumber_android_release() -> <init>
    447:447:void <init>(android.app.Application):70 -> <init>
    448:448:java.lang.Object leakcanary.AndroidLeakFixes$Companion.noOpDelegate$plumber_android_release() -> <init>
    448:448:void <init>(android.app.Application):71 -> <init>
    451:451:java.lang.Object leakcanary.AndroidLeakFixes$Companion.noOpDelegate$plumber_android_release() -> <init>
    451:451:void <init>(android.app.Application):74 -> <init>
    452:452:java.lang.Object leakcanary.AndroidLeakFixes$Companion.noOpDelegate$plumber_android_release() -> <init>
    452:452:void <init>(android.app.Application):75 -> <init>
    451:451:java.lang.Object leakcanary.AndroidLeakFixes$Companion.noOpDelegate$plumber_android_release() -> <init>
    451:451:void <init>(android.app.Application):74 -> <init>
    33:36:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
    39:40:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
leakcanary.ViewLocationHolderLeakFix$applyFix$1$onActivityCreated$1 -> c.k$a$a:
    leakcanary.ViewLocationHolderLeakFix$applyFix$1 this$0 -> a
    26:26:java.lang.Object invoke() -> a
    34:35:void invoke() -> c
leakcanary.internal.ActivityDestroyWatcher -> c.l.a:
    leakcanary.ObjectWatcher objectWatcher -> b
    leakcanary.internal.ActivityDestroyWatcher$Companion Companion -> d
    kotlin.jvm.functions.Function0 configProvider -> c
    leakcanary.internal.ActivityDestroyWatcher$lifecycleCallbacks$1 lifecycleCallbacks -> a
    24:30:void <init>(leakcanary.ObjectWatcher,kotlin.jvm.functions.Function0) -> <init>
    24:24:void <init>(leakcanary.ObjectWatcher,kotlin.jvm.functions.Function0,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    24:24:kotlin.jvm.functions.Function0 access$getConfigProvider$p(leakcanary.internal.ActivityDestroyWatcher) -> a
    24:24:leakcanary.internal.ActivityDestroyWatcher$lifecycleCallbacks$1 access$getLifecycleCallbacks$p(leakcanary.internal.ActivityDestroyWatcher) -> b
    24:24:leakcanary.ObjectWatcher access$getObjectWatcher$p(leakcanary.internal.ActivityDestroyWatcher) -> c
leakcanary.internal.ActivityDestroyWatcher$Companion -> c.l.a$a:
    40:40:void <init>() -> <init>
    40:40:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    46:49:void install(android.app.Application,leakcanary.ObjectWatcher,kotlin.jvm.functions.Function0) -> a
leakcanary.internal.ActivityDestroyWatcher$lifecycleCallbacks$1 -> c.l.a$b:
    android.app.Application$ActivityLifecycleCallbacks $$delegate_0 -> a
    leakcanary.internal.ActivityDestroyWatcher this$0 -> b
    30:30:void <init>(leakcanary.internal.ActivityDestroyWatcher) -> <init>
    75:75:java.lang.Object leakcanary.internal.InternalAppWatcher.noOpDelegate() -> <init>
    75:75:void <init>(leakcanary.internal.ActivityDestroyWatcher):53 -> <init>
    76:76:java.lang.Object leakcanary.internal.InternalAppWatcher.noOpDelegate() -> <init>
    76:76:void <init>(leakcanary.internal.ActivityDestroyWatcher):54 -> <init>
    79:79:java.lang.Object leakcanary.internal.InternalAppWatcher.noOpDelegate() -> <init>
    79:79:void <init>(leakcanary.internal.ActivityDestroyWatcher):57 -> <init>
    80:80:java.lang.Object leakcanary.internal.InternalAppWatcher.noOpDelegate() -> <init>
    80:80:void <init>(leakcanary.internal.ActivityDestroyWatcher):58 -> <init>
    79:79:java.lang.Object leakcanary.internal.InternalAppWatcher.noOpDelegate() -> <init>
    79:79:void <init>(leakcanary.internal.ActivityDestroyWatcher):57 -> <init>
    32:37:void onActivityDestroyed(android.app.Activity) -> onActivityDestroyed
leakcanary.internal.AndroidHeapDumper -> leakcanary.internal.AndroidHeapDumper:
    36:36:android.content.Context access$getContext$p(leakcanary.internal.AndroidHeapDumper) -> <init>
    36:36:void <init>(android.content.Context,leakcanary.internal.LeakDirectoryProvider):36 -> <init>
    41:42:void <init>(android.content.Context,leakcanary.internal.LeakDirectoryProvider) -> <init>
    36:36:android.content.Context access$getContext$p(leakcanary.internal.AndroidHeapDumper) -> access$getContext$p
    117:121:void cancelToast(android.widget.Toast) -> cancelToast
    45:51:java.io.File dumpHeap() -> dumpHeap
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> dumpHeap
    31:31:java.io.File dumpHeap():124 -> dumpHeap
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> dumpHeap
    32:32:java.io.File dumpHeap():125 -> dumpHeap
    51:51:java.io.File dumpHeap() -> dumpHeap
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> dumpHeap
    33:33:java.io.File dumpHeap():126 -> dumpHeap
    52:70:java.io.File dumpHeap() -> dumpHeap
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> dumpHeap
    31:31:java.io.File dumpHeap():127 -> dumpHeap
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> dumpHeap
    32:32:java.io.File dumpHeap():128 -> dumpHeap
    70:70:java.io.File dumpHeap() -> dumpHeap
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> dumpHeap
    33:33:java.io.File dumpHeap():129 -> dumpHeap
    71:76:java.io.File dumpHeap() -> dumpHeap
    40:40:void shark.SharkLog.d(java.lang.Throwable,kotlin.jvm.functions.Function0) -> dumpHeap
    40:40:java.io.File dumpHeap():130 -> dumpHeap
    41:41:void shark.SharkLog.d(java.lang.Throwable,kotlin.jvm.functions.Function0) -> dumpHeap
    41:41:java.io.File dumpHeap():131 -> dumpHeap
    76:76:java.io.File dumpHeap() -> dumpHeap
    42:42:void shark.SharkLog.d(java.lang.Throwable,kotlin.jvm.functions.Function0) -> dumpHeap
    42:42:java.io.File dumpHeap():132 -> dumpHeap
    78:45:java.io.File dumpHeap() -> dumpHeap
    86:114:void showToast(leakcanary.internal.FutureResult) -> showToast
leakcanary.internal.AndroidHeapDumper$cancelToast$1 -> leakcanary.internal.AndroidHeapDumper$a:
    android.widget.Toast $toast -> a
    120:120:void run() -> run
leakcanary.internal.AndroidHeapDumper$showToast$1 -> leakcanary.internal.AndroidHeapDumper$b:
    leakcanary.internal.FutureResult $waitingForToast -> b
    leakcanary.internal.AndroidHeapDumper this$0 -> a
    87:113:void run() -> run
leakcanary.internal.AndroidHeapDumper$showToast$1$1 -> leakcanary.internal.AndroidHeapDumper$b$a:
    leakcanary.internal.AndroidHeapDumper$showToast$1 this$0 -> a
    android.widget.Toast $toast -> b
    108:108:void <init>(leakcanary.internal.AndroidHeapDumper$showToast$1,android.widget.Toast) -> <init>
    110:111:void onAnimationEnd(android.animation.Animator) -> onAnimationEnd
leakcanary.internal.AndroidOFragmentDestroyWatcher -> c.l.b:
    leakcanary.internal.AndroidOFragmentDestroyWatcher$fragmentLifecycleCallbacks$1 fragmentLifecycleCallbacks -> a
    leakcanary.ObjectWatcher objectWatcher -> b
    kotlin.jvm.functions.Function0 configProvider -> c
    28:32:void <init>(leakcanary.ObjectWatcher,kotlin.jvm.functions.Function0) -> <init>
    28:28:kotlin.jvm.functions.Function0 access$getConfigProvider$p(leakcanary.internal.AndroidOFragmentDestroyWatcher) -> c
    28:28:leakcanary.ObjectWatcher access$getObjectWatcher$p(leakcanary.internal.AndroidOFragmentDestroyWatcher) -> d
    60:62:void invoke(android.app.Activity) -> e
    28:28:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.AndroidOFragmentDestroyWatcher$fragmentLifecycleCallbacks$1 -> c.l.b$a:
    leakcanary.internal.AndroidOFragmentDestroyWatcher this$0 -> a
    32:32:void <init>(leakcanary.internal.AndroidOFragmentDestroyWatcher) -> <init>
    51:56:void onFragmentDestroyed(android.app.FragmentManager,android.app.Fragment) -> onFragmentDestroyed
    38:45:void onFragmentViewDestroyed(android.app.FragmentManager,android.app.Fragment) -> onFragmentViewDestroyed
leakcanary.internal.AndroidSupportFragmentDestroyWatcher -> leakcanary.internal.AndroidSupportFragmentDestroyWatcher:
    25:30:void <init>(leakcanary.ObjectWatcher,kotlin.jvm.functions.Function0) -> <init>
    25:25:kotlin.jvm.functions.Function0 access$getConfigProvider$p(leakcanary.internal.AndroidSupportFragmentDestroyWatcher) -> access$getConfigProvider$p
    25:25:leakcanary.ObjectWatcher access$getObjectWatcher$p(leakcanary.internal.AndroidSupportFragmentDestroyWatcher) -> access$getObjectWatcher$p
    25:25:java.lang.Object invoke(java.lang.Object) -> invoke
    58:62:void invoke(android.app.Activity) -> invoke
leakcanary.internal.AndroidSupportFragmentDestroyWatcher$fragmentLifecycleCallbacks$1 -> leakcanary.internal.AndroidSupportFragmentDestroyWatcher$fragmentLifecycleCallbacks$1:
    leakcanary.internal.AndroidSupportFragmentDestroyWatcher this$0 -> a
    30:30:void <init>(leakcanary.internal.AndroidSupportFragmentDestroyWatcher) -> <init>
    49:54:void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentDestroyed
    36:43:void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentViewDestroyed
leakcanary.internal.AndroidXFragmentDestroyWatcher -> leakcanary.internal.AndroidXFragmentDestroyWatcher:
    26:31:void <init>(leakcanary.ObjectWatcher,kotlin.jvm.functions.Function0) -> <init>
    26:26:kotlin.jvm.functions.Function0 access$getConfigProvider$p(leakcanary.internal.AndroidXFragmentDestroyWatcher) -> access$getConfigProvider$p
    26:26:leakcanary.ObjectWatcher access$getObjectWatcher$p(leakcanary.internal.AndroidXFragmentDestroyWatcher) -> access$getObjectWatcher$p
    26:26:java.lang.Object invoke(java.lang.Object) -> invoke
    67:72:void invoke(android.app.Activity) -> invoke
leakcanary.internal.AndroidXFragmentDestroyWatcher$fragmentLifecycleCallbacks$1 -> leakcanary.internal.AndroidXFragmentDestroyWatcher$fragmentLifecycleCallbacks$1:
    leakcanary.internal.AndroidXFragmentDestroyWatcher this$0 -> a
    31:31:void <init>(leakcanary.internal.AndroidXFragmentDestroyWatcher) -> <init>
    38:39:void onFragmentCreated(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment,android.os.Bundle) -> onFragmentCreated
    58:63:void onFragmentDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentDestroyed
    45:52:void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentViewDestroyed
leakcanary.internal.AppWatcherInstaller -> leakcanary.internal.AppWatcherInstaller:
    14:14:void <init>() -> <init>
    14:14:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    59:59:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    44:44:java.lang.String getType(android.net.Uri) -> getType
    51:51:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    28:28:boolean onCreate() -> onCreate
    40:40:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    68:68:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
leakcanary.internal.AppWatcherInstaller$LeakCanaryProcess -> leakcanary.internal.AppWatcherInstaller$LeakCanaryProcess:
    25:25:void <init>() -> <init>
leakcanary.internal.AppWatcherInstaller$MainProcess -> leakcanary.internal.AppWatcherInstaller$MainProcess:
    19:19:void <init>() -> <init>
leakcanary.internal.DebuggerControl -> c.l.c:
    leakcanary.internal.DebuggerControl INSTANCE -> a
    24:24:void <clinit>() -> <clinit>
    24:24:void <init>() -> <init>
    27:27:boolean isDebuggerAttached() -> a
leakcanary.internal.DefaultCanaryLog -> c.l.d:
    kotlin.text.Regex NEW_LINE_REGEX -> a
    23:23:void <clinit>() -> <clinit>
    6:6:kotlin.text.Regex access$getNEW_LINE_REGEX$cp() -> <init>
    6:6:void <init>():6 -> <init>
    19:20:void d(java.lang.Throwable,java.lang.String) -> a
    9:16:void d(java.lang.String) -> b
leakcanary.internal.DefaultCanaryLog$Companion -> c.l.d$a:
    22:22:void <init>() -> <init>
    22:22:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
leakcanary.internal.DefaultOnRetainInstanceListener -> c.l.e:
    24:24:void <init>() -> <init>
    26:26:void onEvent(leakcanary.internal.RetainInstanceEvent) -> a
leakcanary.internal.DisplayLeakAdapter -> c.l.f:
    java.lang.String INDENTATION -> g
    shark.LeakTrace leakTrace -> e
    java.lang.String classNameColorHexString -> a
    java.lang.CharSequence header -> f
    java.lang.String referenceColorHexString -> c
    leakcanary.internal.DisplayLeakAdapter$Companion Companion -> h
    java.lang.String leakColorHexString -> b
    java.lang.String extraColorHexString -> d
    266:266:void <clinit>() -> <clinit>
    49:49:java.lang.String access$getINDENTATION$cp() -> <init>
    49:49:void <init>(android.content.Context,shark.LeakTrace,java.lang.CharSequence):49 -> <init>
    53:67:void <init>(android.content.Context,shark.LeakTrace,java.lang.CharSequence) -> <init>
    161:181:java.lang.String asHtmlString(shark.LeakTraceObject,java.lang.String) -> a
    105:158:void bindConnectorRow(android.view.View,int) -> b
    94:99:void bindHeaderRow(android.view.View) -> c
    254:254:int elementIndex(int) -> d
    191:221:leakcanary.internal.DisplayLeakConnectorView$Type getConnectorType(int) -> e
    248:252:java.io.Serializable getItem(int) -> f
    185:186:java.lang.String styledClassSimpleName(shark.LeakTraceObject) -> g
    246:246:int getCount() -> getCount
    49:49:java.lang.String access$getINDENTATION$cp() -> getItem
    49:49:java.lang.Object getItem(int):49 -> getItem
    260:260:long getItemId(int) -> getItemId
    258:258:int getItemViewType(int) -> getItemViewType
    74:74:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    256:256:int getViewTypeCount() -> getViewTypeCount
    244:244:boolean isEnabled(int) -> isEnabled
leakcanary.internal.DisplayLeakAdapter$Companion -> c.l.f$a:
    262:262:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    262:262:void <init>():262 -> <init>
    262:262:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    262:262:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> a
    262:262:java.lang.String access$hexStringColor(leakcanary.internal.DisplayLeakAdapter$Companion,android.content.Context,int):262 -> a
    273:273:java.lang.String hexStringColor(android.content.Context,int) -> b
leakcanary.internal.DisplayLeakConnectorView -> leakcanary.internal.DisplayLeakConnectorView:
    float SQRT_TWO -> i
    android.graphics.PorterDuffXfermode CLEAR_XFER_MODE -> j
    android.graphics.Paint referencePaint -> d
    float circleY -> f
    android.graphics.Paint clearPaint -> c
    float strokeSize -> e
    android.graphics.Paint leakPaint -> b
    android.graphics.Paint classNamePaint -> a
    leakcanary.internal.DisplayLeakConnectorView$Type type -> g
    android.graphics.Bitmap cache -> h
    237:239:void <clinit>() -> <clinit>
    43:105:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    185:205:void drawArrowHead(android.graphics.Canvas,android.graphics.Paint) -> a
    160:164:void drawGcRoot(android.graphics.Canvas) -> b
    218:222:void drawInstanceCircle(android.graphics.Canvas) -> c
    171:178:void drawItems(android.graphics.Canvas,android.graphics.Paint,android.graphics.Paint) -> d
    211:215:void drawNextArrowLine(android.graphics.Canvas,android.graphics.Paint) -> e
    152:155:void drawStartLine(android.graphics.Canvas) -> f
    108:148:void onDraw(android.graphics.Canvas) -> onDraw
    225:233:void setType(leakcanary.internal.DisplayLeakConnectorView$Type) -> setType
leakcanary.internal.DisplayLeakConnectorView$Companion -> leakcanary.internal.DisplayLeakConnectorView$a:
    235:235:void <init>() -> <init>
    235:235:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
leakcanary.internal.DisplayLeakConnectorView$Type -> leakcanary.internal.DisplayLeakConnectorView$b:
    leakcanary.internal.DisplayLeakConnectorView$Type GC_ROOT -> a
    leakcanary.internal.DisplayLeakConnectorView$Type START -> b
    leakcanary.internal.DisplayLeakConnectorView$Type START_LAST_REACHABLE -> c
    leakcanary.internal.DisplayLeakConnectorView$Type[] $VALUES -> k
    leakcanary.internal.DisplayLeakConnectorView$Type NODE_UNKNOWN -> d
    leakcanary.internal.DisplayLeakConnectorView$Type NODE_FIRST_UNREACHABLE -> e
    leakcanary.internal.DisplayLeakConnectorView$Type NODE_UNREACHABLE -> f
    leakcanary.internal.DisplayLeakConnectorView$Type NODE_REACHABLE -> g
    leakcanary.internal.DisplayLeakConnectorView$Type NODE_LAST_REACHABLE -> h
    leakcanary.internal.DisplayLeakConnectorView$Type END -> i
    leakcanary.internal.DisplayLeakConnectorView$Type END_FIRST_UNREACHABLE -> j
    58:58:void <init>(java.lang.String,int) -> <init>
leakcanary.internal.ForegroundService -> leakcanary.internal.ForegroundService:
    int notificationId -> b
    int notificationContentTitleResId -> a
    25:29:void <init>(java.lang.String,int,int) -> <init>
    void onHandleIntentInForeground(android.content.Intent) -> b
    45:52:void showForegroundNotification(int,int,boolean,java.lang.String) -> c
    66:66:android.os.IBinder onBind(android.content.Intent) -> onBind
    32:37:void onCreate() -> onCreate
    61:63:void onDestroy() -> onDestroy
    55:56:void onHandleIntent(android.content.Intent) -> onHandleIntent
leakcanary.internal.FragmentDestroyWatcher -> c.l.g:
    leakcanary.internal.FragmentDestroyWatcher INSTANCE -> b
    java.lang.String ANDROID_SUPPORT_FRAGMENT_CLASS_NAME -> a
    30:40:void <clinit>() -> <clinit>
    30:30:void <clinit>() -> <init>
    30:30:void <init>():30 -> <init>
    112:112:boolean classAvailable(java.lang.String) -> a
    98:98:kotlin.jvm.functions.Function1 getWatcherIfAvailable(java.lang.String,java.lang.String,leakcanary.ObjectWatcher,kotlin.jvm.functions.Function0) -> b
    49:89:void install(android.app.Application,leakcanary.ObjectWatcher,kotlin.jvm.functions.Function0) -> c
leakcanary.internal.FragmentDestroyWatcher$install$3 -> c.l.g$a:
    java.util.List $fragmentDestroyWatchers -> b
    android.app.Application$ActivityLifecycleCallbacks $$delegate_0 -> a
    79:79:void <init>(java.util.List) -> <init>
    75:75:java.lang.Object leakcanary.internal.InternalAppWatcher.noOpDelegate() -> <init>
    75:75:void <init>(java.util.List):129 -> <init>
    76:76:java.lang.Object leakcanary.internal.InternalAppWatcher.noOpDelegate() -> <init>
    76:76:void <init>(java.util.List):130 -> <init>
    79:79:java.lang.Object leakcanary.internal.InternalAppWatcher.noOpDelegate() -> <init>
    79:79:void <init>(java.util.List):133 -> <init>
    80:80:java.lang.Object leakcanary.internal.InternalAppWatcher.noOpDelegate() -> <init>
    80:80:void <init>(java.util.List):134 -> <init>
    79:79:java.lang.Object leakcanary.internal.InternalAppWatcher.noOpDelegate() -> <init>
    79:79:void <init>(java.util.List):133 -> <init>
    84:87:void onActivityCreated(android.app.Activity,android.os.Bundle) -> onActivityCreated
leakcanary.internal.FragmentExtensionsKt -> leakcanary.internal.FragmentExtensionsKt:
    kotlin.Lazy hasAndroidXFragmentActivity$delegate -> a
    8:8:void <clinit>() -> <clinit>
    boolean getHasAndroidXFragmentActivity() -> a
    18:33:void onAndroidXFragmentViewDestroyed(android.app.Activity,kotlin.jvm.functions.Function0) -> b
leakcanary.internal.FragmentExtensionsKt$hasAndroidXFragmentActivity$2 -> leakcanary.internal.FragmentExtensionsKt$a:
    leakcanary.internal.FragmentExtensionsKt$hasAndroidXFragmentActivity$2 INSTANCE -> a
    java.lang.Object invoke() -> a
    9:14:boolean invoke() -> c
leakcanary.internal.FragmentExtensionsKt$onAndroidXFragmentViewDestroyed$1 -> leakcanary.internal.FragmentExtensionsKt$onAndroidXFragmentViewDestroyed$1:
    kotlin.jvm.functions.Function0 $block -> a
    23:23:void <init>(kotlin.jvm.functions.Function0) -> <init>
    28:29:void onFragmentViewDestroyed(androidx.fragment.app.FragmentManager,androidx.fragment.app.Fragment) -> onFragmentViewDestroyed
leakcanary.internal.FutureResult -> c.l.h:
    java.util.concurrent.CountDownLatch latch -> b
    java.util.concurrent.atomic.AtomicReference resultHolder -> a
    22:25:void <init>() -> <init>
    40:41:java.lang.Object get() -> a
    47:49:void set(java.lang.Object) -> b
    31:34:boolean wait(long,java.util.concurrent.TimeUnit) -> c
leakcanary.internal.HeapAnalyzerService -> leakcanary.internal.HeapAnalyzerService:
    leakcanary.internal.HeapAnalyzerService$Companion Companion -> c
    40:40:void <init>() -> <init>
    102:104:void onAnalysisProgress(shark.OnAnalysisProgressListener$Step) -> a
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> a
    31:31:void onAnalysisProgress(shark.OnAnalysisProgressListener$Step):141 -> a
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> a
    32:32:void onAnalysisProgress(shark.OnAnalysisProgressListener$Step):142 -> a
    104:104:void onAnalysisProgress(shark.OnAnalysisProgressListener$Step) -> a
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> a
    33:33:void onAnalysisProgress(shark.OnAnalysisProgressListener$Step):143 -> a
    105:109:void onAnalysisProgress(shark.OnAnalysisProgressListener$Step) -> a
    47:48:void onHandleIntentInForeground(android.content.Intent) -> b
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> b
    31:31:void onHandleIntentInForeground(android.content.Intent):138 -> b
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> b
    32:32:void onHandleIntentInForeground(android.content.Intent):139 -> b
    48:48:void onHandleIntentInForeground(android.content.Intent) -> b
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> b
    33:33:void onHandleIntentInForeground(android.content.Intent):140 -> b
    49:49:void onHandleIntentInForeground(android.content.Intent) -> b
    70:77:shark.HeapAnalysis analyzeHeap(java.io.File,leakcanary.LeakCanary$Config) -> d
    89:93:shark.HeapAnalysisFailure missingFileFailure(java.io.File) -> e
leakcanary.internal.HeapAnalyzerService$Companion -> leakcanary.internal.HeapAnalyzerService$a:
    111:111:void <init>() -> <init>
    111:111:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    119:122:void runAnalysis(android.content.Context,java.io.File) -> a
    128:134:void startForegroundService(android.content.Context,android.content.Intent) -> b
leakcanary.internal.HeapDumpTrigger -> c.l.i:
    kotlin.jvm.functions.Function0 scheduleDismissNoRetainedOnTapNotification -> e
    kotlin.jvm.functions.Function0 scheduleDismissRetainedCountNotification -> d
    long applicationInvisibleAt -> f
    leakcanary.internal.HeapDumper heapDumper -> k
    long checkScheduledAt -> a
    kotlin.jvm.functions.Function0 configProvider -> l
    leakcanary.GcTrigger gcTrigger -> j
    long lastHeapDumpUptimeMillis -> c
    leakcanary.ObjectWatcher objectWatcher -> i
    int lastDisplayedRetainedObjectCount -> b
    android.app.Application application -> g
    android.os.Handler backgroundHandler -> h
    27:27:void access$dismissRetainedCountNotification(leakcanary.internal.HeapDumpTrigger) -> <init>
    27:27:void <init>(android.app.Application,android.os.Handler,leakcanary.ObjectWatcher,leakcanary.GcTrigger,leakcanary.internal.HeapDumper,kotlin.jvm.functions.Function0):27 -> <init>
    50:70:void <init>(android.app.Application,android.os.Handler,leakcanary.ObjectWatcher,leakcanary.GcTrigger,leakcanary.internal.HeapDumper,kotlin.jvm.functions.Function0) -> <init>
    297:318:void showNoMoreRetainedObjectNotification() -> A
    324:339:void showRetainedCountNotification(int,java.lang.String) -> B
    27:27:void access$dismissRetainedCountNotification(leakcanary.internal.HeapDumpTrigger) -> a
    27:27:void access$checkRetainedObjects(leakcanary.internal.HeapDumpTrigger,java.lang.String):27 -> a
    27:27:void access$dismissRetainedCountNotification(leakcanary.internal.HeapDumpTrigger) -> b
    27:27:void access$dismissNoRetainedOnTapNotification(leakcanary.internal.HeapDumpTrigger):27 -> b
    27:27:void access$dismissRetainedCountNotification(leakcanary.internal.HeapDumpTrigger) -> c
    27:27:void access$dismissRetainedCountNotification(leakcanary.internal.HeapDumpTrigger) -> d
    27:27:void access$dumpHeap(leakcanary.internal.HeapDumpTrigger,int,boolean):27 -> d
    27:27:void access$dismissRetainedCountNotification(leakcanary.internal.HeapDumpTrigger) -> e
    27:27:android.app.Application access$getApplication$p(leakcanary.internal.HeapDumpTrigger):27 -> e
    27:27:void access$dismissRetainedCountNotification(leakcanary.internal.HeapDumpTrigger) -> f
    27:27:android.os.Handler access$getBackgroundHandler$p(leakcanary.internal.HeapDumpTrigger):27 -> f
    27:27:void access$dismissRetainedCountNotification(leakcanary.internal.HeapDumpTrigger) -> g
    27:27:leakcanary.GcTrigger access$getGcTrigger$p(leakcanary.internal.HeapDumpTrigger):27 -> g
    27:27:void access$dismissRetainedCountNotification(leakcanary.internal.HeapDumpTrigger) -> h
    27:27:android.app.NotificationManager access$getNotificationManager$p(leakcanary.internal.HeapDumpTrigger):27 -> h
    27:27:void access$dismissRetainedCountNotification(leakcanary.internal.HeapDumpTrigger) -> i
    27:27:leakcanary.ObjectWatcher access$getObjectWatcher$p(leakcanary.internal.HeapDumpTrigger):27 -> i
    27:27:void access$dismissRetainedCountNotification(leakcanary.internal.HeapDumpTrigger) -> j
    27:27:kotlin.jvm.functions.Function0 access$getScheduleDismissNoRetainedOnTapNotification$p(leakcanary.internal.HeapDumpTrigger):27 -> j
    27:27:void access$dismissRetainedCountNotification(leakcanary.internal.HeapDumpTrigger) -> k
    27:27:void access$setCheckScheduledAt$p(leakcanary.internal.HeapDumpTrigger,long):27 -> k
    27:27:void access$dismissRetainedCountNotification(leakcanary.internal.HeapDumpTrigger) -> l
    27:27:void access$setLastDisplayedRetainedObjectCount$p(leakcanary.internal.HeapDumpTrigger,int):27 -> l
    241:244:boolean checkRetainedCount(int,int) -> m
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> m
    31:31:boolean checkRetainedCount(int,int):372 -> m
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> m
    32:32:boolean checkRetainedCount(int,int):373 -> m
    244:244:boolean checkRetainedCount(int,int) -> m
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> m
    33:33:boolean checkRetainedCount(int,int):374 -> m
    245:271:boolean checkRetainedCount(int,int) -> m
    95:98:void checkRetainedObjects(java.lang.String) -> n
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> n
    31:31:void checkRetainedObjects(java.lang.String):360 -> n
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> n
    32:32:void checkRetainedObjects(java.lang.String):361 -> n
    98:98:void checkRetainedObjects(java.lang.String) -> n
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> n
    33:33:void checkRetainedObjects(java.lang.String):362 -> n
    99:143:void checkRetainedObjects(java.lang.String) -> n
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> n
    31:31:void checkRetainedObjects(java.lang.String):363 -> n
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> n
    32:32:void checkRetainedObjects(java.lang.String):364 -> n
    143:143:void checkRetainedObjects(java.lang.String) -> n
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> n
    33:33:void checkRetainedObjects(java.lang.String):365 -> n
    144:146:void checkRetainedObjects(java.lang.String) -> n
    347:349:void dismissNoRetainedOnTapNotification() -> o
    342:344:void dismissRetainedCountNotification() -> p
    152:158:void dumpHeap(int,boolean) -> q
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> q
    31:31:void dumpHeap(int,boolean):366 -> q
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> q
    32:32:void dumpHeap(int,boolean):367 -> q
    158:158:void dumpHeap(int,boolean) -> q
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> q
    33:33:void dumpHeap(int,boolean):368 -> q
    159:165:void dumpHeap(int,boolean) -> q
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> q
    31:31:void dumpHeap(int,boolean):369 -> q
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> q
    32:32:void dumpHeap(int,boolean):370 -> q
    165:165:void dumpHeap(int,boolean) -> q
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> q
    33:33:void dumpHeap(int,boolean):371 -> q
    166:179:void dumpHeap(int,boolean) -> q
    65:66:boolean getApplicationInvisibleLessThanWatchPeriod() -> r
    41:41:boolean getApplicationVisible() -> s
    38:38:android.app.NotificationManager getNotificationManager() -> t
    73:85:void onApplicationVisibilityChanged(boolean) -> u
    201:235:void onDumpHeapReceived(boolean) -> v
    88:92:void onObjectRetained() -> w
    182:198:void saveResourceIdNamesToMemory() -> x
    279:282:void scheduleRetainedObjectCheck(java.lang.String,boolean,long) -> y
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> y
    31:31:void scheduleRetainedObjectCheck(java.lang.String,boolean,long):375 -> y
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> y
    32:32:void scheduleRetainedObjectCheck(java.lang.String,boolean,long):376 -> y
    282:282:void scheduleRetainedObjectCheck(java.lang.String,boolean,long) -> y
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> y
    33:33:void scheduleRetainedObjectCheck(java.lang.String,boolean,long):377 -> y
    283:287:void scheduleRetainedObjectCheck(java.lang.String,boolean,long) -> y
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> y
    31:31:void scheduleRetainedObjectCheck(java.lang.String,boolean,long):378 -> y
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> y
    32:32:void scheduleRetainedObjectCheck(java.lang.String,boolean,long):379 -> y
    287:287:void scheduleRetainedObjectCheck(java.lang.String,boolean,long) -> y
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> y
    33:33:void scheduleRetainedObjectCheck(java.lang.String,boolean,long):380 -> y
    288:294:void scheduleRetainedObjectCheck(java.lang.String,boolean,long) -> y
    277:277:void scheduleRetainedObjectCheck$default(leakcanary.internal.HeapDumpTrigger,java.lang.String,boolean,long,int,java.lang.Object) -> z
leakcanary.internal.HeapDumpTrigger$Companion -> c.l.i$a:
    351:351:void <init>() -> <init>
    351:351:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
leakcanary.internal.HeapDumpTrigger$onDumpHeapReceived$1 -> c.l.i$b:
    boolean $forceDump -> b
    leakcanary.internal.HeapDumpTrigger this$0 -> a
    202:206:void run() -> run
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    31:31:void run():360 -> run
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    32:32:void run():361 -> run
    206:206:void run() -> run
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    33:33:void run():362 -> run
    208:232:void run() -> run
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    31:31:void run():363 -> run
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    32:32:void run():364 -> run
    232:232:void run() -> run
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    33:33:void run():365 -> run
    233:234:void run() -> run
leakcanary.internal.HeapDumpTrigger$sam$java_lang_Runnable$0 -> c.l.j:
    kotlin.jvm.functions.Function0 function -> a
leakcanary.internal.HeapDumpTrigger$saveResourceIdNamesToMemory$1 -> c.l.i$c:
    android.content.res.Resources $resources -> a
    185:189:java.lang.String invoke(int) -> c
    27:27:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.HeapDumpTrigger$saveResourceIdNamesToMemory$2 -> c.l.i$d:
    android.content.res.Resources $resources -> a
    192:196:java.lang.String invoke(int) -> c
    27:27:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.HeapDumpTrigger$scheduleDismissNoRetainedOnTapNotification$1 -> c.l.i$e:
    leakcanary.internal.HeapDumpTrigger this$0 -> a
    27:27:java.lang.Object invoke() -> a
    55:56:void invoke() -> c
leakcanary.internal.HeapDumpTrigger$scheduleDismissRetainedCountNotification$1 -> c.l.i$f:
    leakcanary.internal.HeapDumpTrigger this$0 -> a
    27:27:java.lang.Object invoke() -> a
    51:52:void invoke() -> c
leakcanary.internal.HeapDumpTrigger$scheduleRetainedObjectCheck$3 -> c.l.i$g:
    java.lang.String $reason -> b
    leakcanary.internal.HeapDumpTrigger this$0 -> a
    291:293:void run() -> run
leakcanary.internal.HeapDumper -> c.l.k:
leakcanary.internal.InternalAppWatcher -> c.l.l:
    kotlin.Lazy mainHandler$delegate -> d
    android.app.Application application -> b
    leakcanary.internal.InternalAppWatcher INSTANCE -> g
    java.util.concurrent.Executor checkRetainedExecutor -> e
    leakcanary.internal.InternalAppWatcher$clock$1 clock -> c
    kotlin.jvm.functions.Function1 onAppWatcherInstalled -> a
    leakcanary.ObjectWatcher objectWatcher -> f
    20:20:android.os.Handler access$getMainHandler$p(leakcanary.internal.InternalAppWatcher) -> <clinit>
    20:20:void <clinit>():20 -> <clinit>
    29:48:void <clinit>() -> <clinit>
    20:20:android.os.Handler access$getMainHandler$p(leakcanary.internal.InternalAppWatcher) -> <init>
    20:20:void <init>():20 -> <init>
    20:20:android.os.Handler access$getMainHandler$p(leakcanary.internal.InternalAppWatcher) -> a
    85:86:void checkMainThread() -> b
    android.os.Handler getMainHandler() -> c
    54:54:void <clinit>() -> d
    54:54:leakcanary.ObjectWatcher getObjectWatcher():54 -> d
    61:72:void install(android.app.Application) -> e
    23:23:boolean isInstalled() -> f
leakcanary.internal.InternalAppWatcher$NoLeakCanary -> c.l.l$a:
    leakcanary.internal.InternalAppWatcher$NoLeakCanary INSTANCE -> a
    92:92:void <clinit>() -> <clinit>
    92:92:void <init>() -> <init>
    94:94:void invoke(android.app.Application) -> c
    92:92:java.lang.Object invoke(java.lang.Object) -> invoke
    97:97:void onObjectRetained() -> onObjectRetained
leakcanary.internal.InternalAppWatcher$checkRetainedExecutor$1 -> c.l.l$b:
    leakcanary.internal.InternalAppWatcher$checkRetainedExecutor$1 INSTANCE -> a
    52:53:void execute(java.lang.Runnable) -> execute
leakcanary.internal.InternalAppWatcher$clock$1 -> c.l.l$c:
    29:29:void <init>() -> <init>
    31:31:long uptimeMillis() -> a
leakcanary.internal.InternalAppWatcher$install$configProvider$1 -> c.l.l$d:
    leakcanary.internal.InternalAppWatcher$install$configProvider$1 INSTANCE -> a
    20:20:java.lang.Object invoke() -> a
    68:68:leakcanary.AppWatcher$Config invoke() -> c
leakcanary.internal.InternalAppWatcher$mainHandler$2 -> c.l.l$e:
    leakcanary.internal.InternalAppWatcher$mainHandler$2 INSTANCE -> a
    20:20:java.lang.Object invoke() -> a
    36:36:android.os.Handler invoke() -> c
leakcanary.internal.InternalAppWatcher$noOpDelegate$noOpHandler$1 -> c.l.m:
    leakcanary.internal.InternalAppWatcher$noOpDelegate$noOpHandler$1 INSTANCE -> a
    78:78:void invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> a
    20:20:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
leakcanary.internal.InternalAppWatcher$objectWatcher$1 -> c.l.l$f:
    leakcanary.internal.InternalAppWatcher$objectWatcher$1 INSTANCE -> a
    20:20:java.lang.Object invoke() -> a
    57:57:boolean invoke() -> c
leakcanary.internal.InternalLeakCanary -> leakcanary.internal.InternalLeakCanary:
    40:40:java.lang.String access$getTestClassName$p(leakcanary.internal.InternalLeakCanary) -> <clinit>
    40:40:void <clinit>():40 -> <clinit>
    62:114:void <clinit>() -> <clinit>
    40:40:java.lang.String access$getTestClassName$p(leakcanary.internal.InternalLeakCanary) -> <init>
    40:40:void <init>():40 -> <init>
    40:40:java.lang.String access$getTestClassName$p(leakcanary.internal.InternalLeakCanary) -> access$getApplicationVisible$p
    40:40:boolean access$getApplicationVisible$p(leakcanary.internal.InternalLeakCanary):40 -> access$getApplicationVisible$p
    40:40:java.lang.String access$getTestClassName$p(leakcanary.internal.InternalLeakCanary) -> access$getHeapDumpTrigger$p
    40:40:leakcanary.internal.HeapDumpTrigger access$getHeapDumpTrigger$p(leakcanary.internal.InternalLeakCanary):40 -> access$getHeapDumpTrigger$p
    40:40:java.lang.String access$getTestClassName$p(leakcanary.internal.InternalLeakCanary) -> access$getTestClassName$p
    40:40:java.lang.String access$getTestClassName$p(leakcanary.internal.InternalLeakCanary) -> access$isRunningTests$p
    40:40:boolean access$isRunningTests$p(leakcanary.internal.InternalLeakCanary):40 -> access$isRunningTests$p
    40:40:java.lang.String access$getTestClassName$p(leakcanary.internal.InternalLeakCanary) -> access$setApplicationVisible$p
    40:40:void access$setApplicationVisible$p(leakcanary.internal.InternalLeakCanary,boolean):40 -> access$setApplicationVisible$p
    40:40:java.lang.String access$getTestClassName$p(leakcanary.internal.InternalLeakCanary) -> access$setHeapDumpTrigger$p
    40:40:void access$setHeapDumpTrigger$p(leakcanary.internal.InternalLeakCanary,leakcanary.internal.HeapDumpTrigger):40 -> access$setHeapDumpTrigger$p
    207:300:void addDynamicShortcut(android.app.Application) -> addDynamicShortcut
    40:40:void shark.SharkLog.d(java.lang.Throwable,kotlin.jvm.functions.Function0) -> addDynamicShortcut
    40:40:void addDynamicShortcut(android.app.Application):358 -> addDynamicShortcut
    41:41:void shark.SharkLog.d(java.lang.Throwable,kotlin.jvm.functions.Function0) -> addDynamicShortcut
    41:41:void addDynamicShortcut(android.app.Application):359 -> addDynamicShortcut
    301:303:void addDynamicShortcut(android.app.Application) -> addDynamicShortcut
    42:42:void shark.SharkLog.d(java.lang.Throwable,kotlin.jvm.functions.Function0) -> addDynamicShortcut
    42:42:void addDynamicShortcut(android.app.Application):360 -> addDynamicShortcut
    40:40:void shark.SharkLog.d(java.lang.Throwable,kotlin.jvm.functions.Function0) -> addDynamicShortcut
    40:40:void addDynamicShortcut(android.app.Application):358 -> addDynamicShortcut
    305:218:void addDynamicShortcut(android.app.Application) -> addDynamicShortcut
    155:160:void checkRunningInDebuggableBuild() -> checkRunningInDebuggableBuild
    86:87:leakcanary.internal.LeakDirectoryProvider createLeakDirectoryProvider(android.content.Context) -> createLeakDirectoryProvider
    192:203:void disableDumpHeapInTests() -> disableDumpHeapInTests
    52:52:android.app.Application getApplication() -> getApplication
    65:65:boolean getApplicationVisible() -> getApplicationVisible
    121:121:void setResumedActivity(android.app.Activity) -> getResumedActivity
    121:121:android.app.Activity getResumedActivity():121 -> getResumedActivity
    40:40:java.lang.String access$getTestClassName$p(leakcanary.internal.InternalLeakCanary) -> invoke
    40:40:java.lang.Object invoke(java.lang.Object):40 -> invoke
    124:152:void invoke(android.app.Application) -> invoke
    332:332:java.lang.Object noOpDelegate() -> noOpDelegate
    315:318:void onDumpHeapReceived(boolean) -> onDumpHeapReceived
    309:312:void onObjectRetained() -> onObjectRetained
    176:187:void registerResumedActivityListener(android.app.Application) -> registerResumedActivityListener
    324:329:void setEnabledBlocking(java.lang.String,boolean) -> setEnabledBlocking
    121:121:void setResumedActivity(android.app.Activity) -> setResumedActivity
leakcanary.internal.InternalLeakCanary$FormFactor -> leakcanary.internal.InternalLeakCanary$a:
    leakcanary.internal.InternalLeakCanary$FormFactor WATCH -> c
    leakcanary.internal.InternalLeakCanary$FormFactor TV -> b
    leakcanary.internal.InternalLeakCanary$FormFactor[] $VALUES -> d
    leakcanary.internal.InternalLeakCanary$FormFactor MOBILE -> a
    94:94:void <init>(java.lang.String,int) -> <init>
leakcanary.internal.InternalLeakCanary$createLeakDirectoryProvider$1 -> leakcanary.internal.InternalLeakCanary$b:
    leakcanary.internal.InternalLeakCanary$createLeakDirectoryProvider$1 INSTANCE -> a
    40:40:java.lang.Object invoke() -> a
    88:88:int invoke() -> c
leakcanary.internal.InternalLeakCanary$createLeakDirectoryProvider$2 -> leakcanary.internal.InternalLeakCanary$c:
    leakcanary.internal.InternalLeakCanary$createLeakDirectoryProvider$2 INSTANCE -> a
    40:40:java.lang.Object invoke() -> a
    90:90:boolean invoke() -> c
leakcanary.internal.InternalLeakCanary$disableDumpHeapInTests$1 -> leakcanary.internal.InternalLeakCanary$d:
    leakcanary.internal.InternalLeakCanary$disableDumpHeapInTests$1 INSTANCE -> a
    193:194:void run() -> run
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    31:31:void run():344 -> run
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    32:32:void run():345 -> run
    194:194:void run() -> run
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    33:33:void run():346 -> run
    195:198:void run() -> run
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    31:31:void run():347 -> run
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    32:32:void run():348 -> run
    198:198:void run() -> run
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    33:33:void run():349 -> run
    200:200:void run() -> run
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    31:31:void run():350 -> run
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    32:32:void run():351 -> run
    200:200:void run() -> run
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    33:33:void run():352 -> run
    201:202:void run() -> run
leakcanary.internal.InternalLeakCanary$formFactor$2 -> leakcanary.internal.InternalLeakCanary$e:
    leakcanary.internal.InternalLeakCanary$formFactor$2 INSTANCE -> a
    40:40:java.lang.Object invoke() -> a
    101:102:leakcanary.internal.InternalLeakCanary$FormFactor invoke() -> c
leakcanary.internal.InternalLeakCanary$invoke$1 -> leakcanary.internal.InternalLeakCanary$f:
    leakcanary.internal.InternalLeakCanary$invoke$1 INSTANCE -> a
    145:147:void invoke(boolean) -> c
    40:40:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.InternalLeakCanary$invoke$configProvider$1 -> leakcanary.internal.InternalLeakCanary$g:
    leakcanary.internal.InternalLeakCanary$invoke$configProvider$1 INSTANCE -> a
    40:40:java.lang.Object invoke() -> a
    134:134:leakcanary.LeakCanary$Config invoke() -> c
leakcanary.internal.InternalLeakCanary$isDebuggableBuild$2 -> leakcanary.internal.InternalLeakCanary$h:
    leakcanary.internal.InternalLeakCanary$isDebuggableBuild$2 INSTANCE -> a
    40:40:java.lang.Object invoke() -> a
    82:82:boolean invoke() -> c
leakcanary.internal.InternalLeakCanary$isInstantApp$2 -> leakcanary.internal.InternalLeakCanary$i:
    leakcanary.internal.InternalLeakCanary$isInstantApp$2 INSTANCE -> a
    40:40:java.lang.Object invoke() -> a
    111:111:boolean invoke() -> c
leakcanary.internal.InternalLeakCanary$isRunningTests$2 -> leakcanary.internal.InternalLeakCanary$j:
    leakcanary.internal.InternalLeakCanary$isRunningTests$2 INSTANCE -> a
    40:40:java.lang.Object invoke() -> a
    73:78:boolean invoke() -> c
leakcanary.internal.InternalLeakCanary$noOpDelegate$noOpHandler$1 -> leakcanary.internal.InternalLeakCanary$k:
    leakcanary.internal.InternalLeakCanary$noOpDelegate$noOpHandler$1 INSTANCE -> a
    335:335:void invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> a
    40:40:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
leakcanary.internal.InternalLeakCanary$onRetainInstanceListener$2 -> leakcanary.internal.InternalLeakCanary$l:
    leakcanary.internal.InternalLeakCanary$onRetainInstanceListener$2 INSTANCE -> a
    40:40:java.lang.Object invoke() -> a
    115:118:leakcanary.internal.OnRetainInstanceListener invoke() -> c
leakcanary.internal.InternalLeakCanary$registerResumedActivityListener$1 -> leakcanary.internal.InternalLeakCanary$m:
    android.app.Application$ActivityLifecycleCallbacks $$delegate_0 -> a
    176:176:void <init>(leakcanary.internal.InternalLeakCanary) -> <init>
    332:332:java.lang.Object leakcanary.internal.InternalLeakCanary.noOpDelegate() -> <init>
    332:332:void <init>(leakcanary.internal.InternalLeakCanary):344 -> <init>
    333:333:java.lang.Object leakcanary.internal.InternalLeakCanary.noOpDelegate() -> <init>
    333:333:void <init>(leakcanary.internal.InternalLeakCanary):345 -> <init>
    336:336:java.lang.Object leakcanary.internal.InternalLeakCanary.noOpDelegate() -> <init>
    336:336:void <init>(leakcanary.internal.InternalLeakCanary):348 -> <init>
    337:337:java.lang.Object leakcanary.internal.InternalLeakCanary.noOpDelegate() -> <init>
    337:337:void <init>(leakcanary.internal.InternalLeakCanary):349 -> <init>
    336:336:java.lang.Object leakcanary.internal.InternalLeakCanary.noOpDelegate() -> <init>
    336:336:void <init>(leakcanary.internal.InternalLeakCanary):348 -> <init>
    182:185:void onActivityPaused(android.app.Activity) -> onActivityPaused
    178:179:void onActivityResumed(android.app.Activity) -> onActivityResumed
leakcanary.internal.InternalLeakCanary$testClassName$2 -> leakcanary.internal.InternalLeakCanary$n:
    leakcanary.internal.InternalLeakCanary$testClassName$2 INSTANCE -> a
    40:40:java.lang.Object invoke() -> a
    69:69:java.lang.String invoke() -> c
leakcanary.internal.LeakCanaryFileProvider -> leakcanary.internal.LeakCanaryFileProvider:
    java.lang.String TAG_EXTERNAL -> g
    java.lang.String TAG_CACHE_PATH -> f
    java.lang.String TAG_EXTERNAL_CACHE -> i
    java.lang.String TAG_EXTERNAL_FILES -> h
    java.lang.String ATTR_NAME -> k
    java.util.HashMap sCache -> n
    java.lang.String TAG_EXTERNAL_MEDIA -> j
    java.lang.String ATTR_PATH -> l
    leakcanary.internal.LeakCanaryFileProvider$Companion Companion -> o
    java.lang.String[] COLUMNS -> b
    leakcanary.internal.LeakCanaryFileProvider$PathStrategy mStrategy -> a
    java.lang.String META_DATA_FILE_PROVIDER_PATHS -> c
    java.io.File DEVICE_ROOT -> m
    java.lang.String TAG_FILES_PATH -> e
    java.lang.String TAG_ROOT_PATH -> d
    367:384:void <clinit>() -> <clinit>
    44:44:java.lang.String access$getTAG_EXTERNAL_MEDIA$cp() -> <init>
    44:44:void <init>():44 -> <init>
    44:44:java.lang.String access$getTAG_EXTERNAL_MEDIA$cp() -> a
    44:44:java.lang.String access$getATTR_NAME$cp():44 -> a
    67:71:void attachInfo(android.content.Context,android.content.pm.ProviderInfo) -> attachInfo
    44:44:java.lang.String access$getTAG_EXTERNAL_MEDIA$cp() -> b
    44:44:java.lang.String access$getATTR_PATH$cp():44 -> b
    44:44:java.lang.String access$getTAG_EXTERNAL_MEDIA$cp() -> c
    44:44:java.io.File access$getDEVICE_ROOT$cp():44 -> c
    44:44:java.lang.String access$getTAG_EXTERNAL_MEDIA$cp() -> d
    44:44:java.lang.String access$getMETA_DATA_FILE_PROVIDER_PATHS$cp():44 -> d
    205:205:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    44:44:java.lang.String access$getTAG_EXTERNAL_MEDIA$cp() -> e
    44:44:java.util.HashMap access$getSCache$cp():44 -> e
    44:44:java.lang.String access$getTAG_EXTERNAL_MEDIA$cp() -> f
    44:44:java.lang.String access$getTAG_CACHE_PATH$cp():44 -> f
    44:44:java.lang.String access$getTAG_EXTERNAL_MEDIA$cp() -> g
    44:44:java.lang.String access$getTAG_EXTERNAL$cp():44 -> g
    149:149:java.lang.String getType(android.net.Uri) -> getType
    44:44:java.lang.String access$getTAG_EXTERNAL_MEDIA$cp() -> h
    44:44:java.lang.String access$getTAG_EXTERNAL_CACHE$cp():44 -> h
    44:44:java.lang.String access$getTAG_EXTERNAL_MEDIA$cp() -> i
    44:44:java.lang.String access$getTAG_EXTERNAL_FILES$cp():44 -> i
    172:172:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    44:44:java.lang.String access$getTAG_EXTERNAL_MEDIA$cp() -> j
    44:44:java.lang.String access$getTAG_EXTERNAL_MEDIA$cp() -> k
    44:44:java.lang.String access$getTAG_FILES_PATH$cp():44 -> k
    44:44:java.lang.String access$getTAG_EXTERNAL_MEDIA$cp() -> l
    44:44:java.lang.String access$getTAG_ROOT_PATH$cp():44 -> l
    53:53:boolean onCreate() -> onCreate
    229:229:android.os.ParcelFileDescriptor openFile(android.net.Uri,java.lang.String) -> openFile
    113:115:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    185:185:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
leakcanary.internal.LeakCanaryFileProvider$Companion -> leakcanary.internal.LeakCanaryFileProvider$a:
    366:366:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    366:366:void <init>():366 -> <init>
    366:366:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    366:366:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> a
    366:366:java.lang.Object[] access$copyOfAnyArray(leakcanary.internal.LeakCanaryFileProvider$Companion,java.lang.Object[],int):366 -> a
    366:366:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> b
    366:366:java.lang.String[] access$copyOfStringArray(leakcanary.internal.LeakCanaryFileProvider$Companion,java.lang.String[],int):366 -> b
    366:366:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> c
    366:366:leakcanary.internal.LeakCanaryFileProvider$PathStrategy access$getPathStrategy(leakcanary.internal.LeakCanaryFileProvider$Companion,android.content.Context,java.lang.String):366 -> c
    366:366:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> d
    366:366:int access$modeToMode(leakcanary.internal.LeakCanaryFileProvider$Companion,java.lang.String):366 -> d
    558:562:java.io.File buildPath(java.io.File,java.lang.String[]) -> e
    578:580:java.lang.Object[] copyOfAnyArray(java.lang.Object[],int) -> f
    569:571:java.lang.String[] copyOfStringArray(java.lang.String[],int) -> g
    520:520:java.io.File[] getExternalCacheDirs(android.content.Context) -> h
    512:512:java.io.File[] getExternalFilesDirs(android.content.Context,java.lang.String) -> i
    423:424:leakcanary.internal.LeakCanaryFileProvider$PathStrategy getPathStrategy(android.content.Context,java.lang.String) -> j
    411:412:android.net.Uri getUriForFile(android.content.Context,java.lang.String,java.io.File) -> k
    531:551:int modeToMode(java.lang.String) -> l
    455:458:leakcanary.internal.LeakCanaryFileProvider$PathStrategy parsePathStrategy(android.content.Context,java.lang.String) -> m
leakcanary.internal.LeakCanaryFileProvider$Companion$parsePathStrategy$1 -> leakcanary.internal.LeakCanaryFileProvider$a$a:
    android.content.res.XmlResourceParser $resourceParser -> b
    kotlin.jvm.internal.Ref$IntRef $type -> a
    366:366:java.lang.Object invoke() -> a
    466:466:int invoke() -> c
leakcanary.internal.LeakCanaryFileProvider$PathStrategy -> leakcanary.internal.LeakCanaryFileProvider$b:
leakcanary.internal.LeakCanaryFileProvider$SimplePathStrategy -> leakcanary.internal.LeakCanaryFileProvider$c:
    java.util.HashMap mRoots -> a
    java.lang.String mAuthority -> b
    272:273:void <init>(java.lang.String) -> <init>
    284:285:void addRoot(java.lang.String,java.io.File) -> a
    342:344:java.io.File getFileForUri(android.net.Uri) -> getFileForUri
    299:303:android.net.Uri getUriForFile(java.io.File) -> getUriForFile
leakcanary.internal.LeakDirectoryProvider -> c.l.n:
    leakcanary.internal.LeakDirectoryProvider$Companion Companion -> h
    android.content.Context context -> a
    java.util.List filesDeletedTooOld -> f
    boolean permissionNotificationDisplayed -> e
    java.util.List filesDeletedRemoveLeak -> g
    kotlin.jvm.functions.Function0 requestExternalStoragePermission -> c
    boolean writeExternalStorageGranted -> d
    kotlin.jvm.functions.Function0 maxStoredHeapDumps -> b
    184:185:void <clinit>() -> <clinit>
    39:39:java.util.List access$getFilesDeletedTooOld$cp() -> <init>
    39:39:void <init>(android.content.Context,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0):39 -> <init>
    44:44:void <init>(android.content.Context,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> <init>
    39:39:java.util.List access$getFilesDeletedTooOld$cp() -> a
    39:39:java.util.List access$getFilesDeletedRemoveLeak$cp():39 -> a
    39:39:java.util.List access$getFilesDeletedTooOld$cp() -> b
    140:141:java.io.File appStorageDirectory() -> c
    150:162:void cleanupOldHeapDumps() -> d
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> d
    31:31:void cleanupOldHeapDumps():215 -> d
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> d
    32:32:void cleanupOldHeapDumps():216 -> d
    162:162:void cleanupOldHeapDumps() -> d
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> d
    33:33:void cleanupOldHeapDumps():217 -> d
    164:174:void cleanupOldHeapDumps() -> d
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> d
    31:31:void cleanupOldHeapDumps():218 -> d
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> d
    32:32:void cleanupOldHeapDumps():219 -> d
    174:174:void cleanupOldHeapDumps() -> d
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> d
    33:33:void cleanupOldHeapDumps():220 -> d
    175:157:void cleanupOldHeapDumps() -> d
    145:146:boolean directoryWritableAfterMkdirs(java.io.File) -> e
    135:136:java.io.File externalStorageDirectory() -> f
    101:110:boolean hasStoragePermission() -> g
    47:61:java.util.List listFiles(java.io.FilenameFilter) -> h
    65:71:java.io.File newHeapDumpFile() -> i
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    31:31:java.io.File newHeapDumpFile():200 -> i
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    32:32:java.io.File newHeapDumpFile():201 -> i
    71:71:java.io.File newHeapDumpFile() -> i
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    33:33:java.io.File newHeapDumpFile():202 -> i
    72:74:java.io.File newHeapDumpFile() -> i
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    31:31:java.io.File newHeapDumpFile():203 -> i
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    32:32:java.io.File newHeapDumpFile():204 -> i
    74:74:java.io.File newHeapDumpFile() -> i
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    33:33:java.io.File newHeapDumpFile():205 -> i
    75:79:java.io.File newHeapDumpFile() -> i
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    31:31:java.io.File newHeapDumpFile():206 -> i
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    32:32:java.io.File newHeapDumpFile():207 -> i
    79:79:java.io.File newHeapDumpFile() -> i
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    33:33:java.io.File newHeapDumpFile():208 -> i
    81:81:java.io.File newHeapDumpFile() -> i
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    31:31:java.io.File newHeapDumpFile():209 -> i
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    32:32:java.io.File newHeapDumpFile():210 -> i
    82:82:java.io.File newHeapDumpFile() -> i
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    33:33:java.io.File newHeapDumpFile():211 -> i
    84:89:java.io.File newHeapDumpFile() -> i
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    31:31:java.io.File newHeapDumpFile():212 -> i
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    32:32:java.io.File newHeapDumpFile():213 -> i
    90:90:java.io.File newHeapDumpFile() -> i
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    33:33:java.io.File newHeapDumpFile():214 -> i
    92:97:java.io.File newHeapDumpFile() -> i
    114:131:void requestWritePermissionNotification() -> j
leakcanary.internal.LeakDirectoryProvider$Companion -> c.l.n$a:
    180:180:void <init>() -> <init>
    180:180:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    185:185:java.util.List getFilesDeletedRemoveLeak() -> a
    190:191:java.lang.String hprofDeleteReason(java.io.File) -> b
leakcanary.internal.LeakDirectoryProvider$cleanupOldHeapDumps$2 -> c.l.n$b:
    leakcanary.internal.LeakDirectoryProvider$cleanupOldHeapDumps$2 INSTANCE -> a
    165:166:int compare(java.io.File,java.io.File) -> a
    39:39:int compare(java.lang.Object,java.lang.Object) -> compare
leakcanary.internal.LeakDirectoryProvider$cleanupOldHeapDumps$hprofFiles$1 -> c.l.n$c:
    leakcanary.internal.LeakDirectoryProvider$cleanupOldHeapDumps$hprofFiles$1 INSTANCE -> a
    151:153:boolean accept(java.io.File,java.lang.String) -> accept
leakcanary.internal.NotificationReceiver -> leakcanary.internal.NotificationReceiver:
    leakcanary.internal.NotificationReceiver$Companion Companion -> a
    11:11:void <init>() -> <init>
    22:30:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> onReceive
    31:31:void onReceive(android.content.Context,android.content.Intent):46 -> onReceive
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> onReceive
    32:32:void onReceive(android.content.Context,android.content.Intent):47 -> onReceive
    30:30:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> onReceive
    33:33:void onReceive(android.content.Context,android.content.Intent):48 -> onReceive
    32:33:void onReceive(android.content.Context,android.content.Intent) -> onReceive
leakcanary.internal.NotificationReceiver$Action -> leakcanary.internal.NotificationReceiver$a:
    leakcanary.internal.NotificationReceiver$Action[] $VALUES -> c
    leakcanary.internal.NotificationReceiver$Action DUMP_HEAP -> a
    leakcanary.internal.NotificationReceiver$Action CANCEL_NOTIFICATION -> b
    13:13:void <init>(java.lang.String,int) -> <init>
leakcanary.internal.NotificationReceiver$Companion -> leakcanary.internal.NotificationReceiver$b:
    35:35:void <init>() -> <init>
    35:35:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    40:42:android.app.PendingIntent pendingIntent(android.content.Context,leakcanary.internal.NotificationReceiver$Action) -> a
leakcanary.internal.NotificationType -> c.l.o:
    leakcanary.internal.NotificationType LEAKCANARY_MAX -> d
    leakcanary.internal.NotificationType[] $VALUES -> e
    leakcanary.internal.NotificationType LEAKCANARY_LOW -> c
    int importance -> b
    int nameResId -> a
    7:9:void <clinit>() -> <clinit>
    5:5:void <init>(java.lang.String,int,int,int) -> <init>
    5:5:int getImportance() -> a
    5:5:int getNameResId() -> b
leakcanary.internal.Notifications -> c.l.p:
    boolean canShowBackgroundNotifications -> a
    leakcanary.internal.Notifications INSTANCE -> b
    29:38:void <clinit>() -> <clinit>
    29:29:void <init>() -> <init>
    70:87:android.app.Notification buildNotification(android.content.Context,android.app.Notification$Builder,leakcanary.internal.NotificationType) -> a
    32:32:boolean getCanShowNotification() -> b
    49:61:void showNotification(android.content.Context,java.lang.CharSequence,java.lang.CharSequence,android.app.PendingIntent,int,leakcanary.internal.NotificationType) -> c
leakcanary.internal.OnRetainInstanceListener -> c.l.q:
    void onEvent(leakcanary.internal.RetainInstanceEvent) -> a
leakcanary.internal.PlumberInstaller -> leakcanary.internal.PlumberInstaller:
    14:14:void <init>() -> <init>
    48:48:int delete(android.net.Uri,java.lang.String,java.lang.String[]) -> delete
    33:33:java.lang.String getType(android.net.Uri) -> getType
    40:40:android.net.Uri insert(android.net.Uri,android.content.ContentValues) -> insert
    17:17:boolean onCreate() -> onCreate
    29:29:android.database.Cursor query(android.net.Uri,java.lang.String[],java.lang.String,java.lang.String[],java.lang.String) -> query
    57:57:int update(android.net.Uri,android.content.ContentValues,java.lang.String,java.lang.String[]) -> update
leakcanary.internal.RequestStoragePermissionActivity -> leakcanary.internal.RequestStoragePermissionActivity:
    leakcanary.internal.RequestStoragePermissionActivity$Companion Companion -> a
    35:35:void <init>() -> <init>
    69:69:boolean hasStoragePermission() -> a
    64:66:void finish() -> finish
    38:48:void onCreate(android.os.Bundle) -> onCreate
    55:60:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
leakcanary.internal.RequestStoragePermissionActivity$Companion -> leakcanary.internal.RequestStoragePermissionActivity$a:
    72:72:void <init>() -> <init>
    72:72:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    75:77:android.app.PendingIntent createPendingIntent(android.content.Context) -> a
leakcanary.internal.RetainInstanceEvent -> c.l.u:
    3:3:void <init>() -> <init>
    3:3:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
leakcanary.internal.RetainInstanceEvent$CountChanged$BelowThreshold -> c.l.r:
    int retainedCount -> a
    6:6:void <init>(int) -> <init>
    6:6:int getRetainedCount() -> a
leakcanary.internal.RetainInstanceEvent$CountChanged$DebuggerIsAttached -> c.l.s:
    leakcanary.internal.RetainInstanceEvent$CountChanged$DebuggerIsAttached INSTANCE -> a
    7:7:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
leakcanary.internal.RetainInstanceEvent$CountChanged$DumpHappenedRecently -> c.l.t:
    leakcanary.internal.RetainInstanceEvent$CountChanged$DumpHappenedRecently INSTANCE -> a
    8:8:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
leakcanary.internal.RetainInstanceEvent$NoMoreObjects -> c.l.u$a:
    leakcanary.internal.RetainInstanceEvent$NoMoreObjects INSTANCE -> a
    4:4:void <clinit>() -> <clinit>
    4:4:void <init>() -> <init>
leakcanary.internal.RowElementLayout -> leakcanary.internal.RowElementLayout:
    int minHeight -> d
    int titleMarginTop -> e
    int rowMargins -> b
    int moreSize -> c
    android.view.View title -> g
    int connectorWidth -> a
    android.view.View connector -> f
    24:47:void <init>(android.content.Context,android.util.AttributeSet) -> <init>
    50:53:void onFinishInflate() -> onFinishInflate
    84:84:void onLayout(boolean,int,int,int,int) -> onLayout
    59:63:void onMeasure(int,int) -> onMeasure
leakcanary.internal.Serializables -> c.l.v:
    leakcanary.internal.Serializables INSTANCE -> a
    15:15:void <clinit>() -> <clinit>
    15:15:void <init>() -> <init>
leakcanary.internal.SerializablesKt -> c.l.w:
    10:12:byte[] toByteArray(java.io.Serializable) -> a
leakcanary.internal.SquigglySpan -> c.l.x:
    leakcanary.internal.SquigglySpan$Companion Companion -> i
    float periodDegrees -> g
    float halfWaveHeight -> f
    int width -> h
    float amplitude -> e
    float halfStrokeWidth -> d
    android.graphics.Paint squigglyPaint -> a
    int referenceColor -> c
    android.graphics.Path path -> b
    32:63:void <init>(android.content.Context) -> <init>
    88:99:void draw(android.graphics.Canvas,java.lang.CharSequence,int,int,float,int,int,int,android.graphics.Paint) -> draw
    72:74:int getSize(android.graphics.Paint,java.lang.CharSequence,int,int,android.graphics.Paint$FontMetricsInt) -> getSize
leakcanary.internal.SquigglySpan$Companion -> c.l.x$a:
    101:101:void <init>() -> <init>
    101:101:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    101:101:void access$squigglyHorizontalPath(leakcanary.internal.SquigglySpan$Companion,android.graphics.Path,float,float,float,float,float) -> a
    107:114:void replaceUnderlineSpans(android.text.SpannableStringBuilder,android.content.Context) -> b
    125:137:void squigglyHorizontalPath(android.graphics.Path,float,float,float,float,float) -> c
leakcanary.internal.ViewModelClearedWatcher -> leakcanary.internal.ViewModelClearedWatcher:
    java.util.Map viewModelMap -> a
    leakcanary.ObjectWatcher objectWatcher -> b
    leakcanary.internal.ViewModelClearedWatcher$Companion Companion -> d
    kotlin.jvm.functions.Function0 configProvider -> c
    18:38:void <init>(androidx.lifecycle.ViewModelStoreOwner,leakcanary.ObjectWatcher,kotlin.jvm.functions.Function0) -> <init>
    41:48:void onCleared() -> onCleared
leakcanary.internal.ViewModelClearedWatcher$Companion -> leakcanary.internal.ViewModelClearedWatcher$Companion:
    50:50:void <init>() -> <init>
    50:50:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    56:62:void install(androidx.lifecycle.ViewModelStoreOwner,leakcanary.ObjectWatcher,kotlin.jvm.functions.Function0) -> a
leakcanary.internal.ViewModelClearedWatcher$Companion$install$provider$1 -> leakcanary.internal.ViewModelClearedWatcher$Companion$install$provider$1:
    leakcanary.ObjectWatcher $objectWatcher -> b
    androidx.lifecycle.ViewModelStoreOwner $storeOwner -> a
    kotlin.jvm.functions.Function0 $configProvider -> c
    56:56:void <init>(androidx.lifecycle.ViewModelStoreOwner,leakcanary.ObjectWatcher,kotlin.jvm.functions.Function0) -> <init>
    59:59:androidx.lifecycle.ViewModel create(java.lang.Class) -> create
leakcanary.internal.VisibilityTracker -> c.l.y:
    android.app.Application$ActivityLifecycleCallbacks $$delegate_0 -> d
    boolean hasVisibleActivities -> b
    int startedActivityCount -> a
    kotlin.jvm.functions.Function1 listener -> c
    7:10:void <init>(kotlin.jvm.functions.Function1) -> <init>
    332:332:java.lang.Object leakcanary.internal.InternalLeakCanary.noOpDelegate() -> <init>
    332:332:void <init>(kotlin.jvm.functions.Function1):45 -> <init>
    333:333:java.lang.Object leakcanary.internal.InternalLeakCanary.noOpDelegate() -> <init>
    333:333:void <init>(kotlin.jvm.functions.Function1):46 -> <init>
    336:336:java.lang.Object leakcanary.internal.InternalLeakCanary.noOpDelegate() -> <init>
    336:336:void <init>(kotlin.jvm.functions.Function1):49 -> <init>
    337:337:java.lang.Object leakcanary.internal.InternalLeakCanary.noOpDelegate() -> <init>
    337:337:void <init>(kotlin.jvm.functions.Function1):50 -> <init>
    336:336:java.lang.Object leakcanary.internal.InternalLeakCanary.noOpDelegate() -> <init>
    336:336:void <init>(kotlin.jvm.functions.Function1):49 -> <init>
    22:27:void onActivityStarted(android.app.Activity) -> onActivityStarted
    32:39:void onActivityStopped(android.app.Activity) -> onActivityStopped
leakcanary.internal.VisibilityTrackerKt -> c.l.z:
    43:44:void registerVisibilityListener(android.app.Application,kotlin.jvm.functions.Function1) -> a
leakcanary.internal.activity.LeakActivity -> leakcanary.internal.activity.LeakActivity:
    kotlin.Lazy leaksButton$delegate -> g
    kotlin.Lazy leaksButtonIconView$delegate -> h
    leakcanary.internal.activity.LeakActivity$Companion Companion -> n
    kotlin.Lazy heapDumpsButton$delegate -> i
    kotlin.Lazy heapDumpsButtonIconView$delegate -> j
    kotlin.Lazy aboutButton$delegate -> k
    kotlin.Lazy aboutButtonIconView$delegate -> l
    kotlin.Lazy bottomNavigationBar$delegate -> m
    23:23:void access$importHprof(leakcanary.internal.activity.LeakActivity,android.net.Uri) -> <init>
    23:23:void <init>():23 -> <init>
    25:49:void <init>() -> <init>
    100:100:leakcanary.internal.navigation.Screen getLauncherScreen() -> a
    65:97:void onNewScreen(leakcanary.internal.navigation.Screen) -> e
    23:23:void access$importHprof(leakcanary.internal.activity.LeakActivity,android.net.Uri) -> j
    android.view.View getAboutButton() -> k
    android.view.View getAboutButtonIconView() -> l
    android.view.View getBottomNavigationBar() -> m
    android.view.View getHeapDumpsButton() -> n
    android.view.View getHeapDumpsButtonIconView() -> o
    120:120:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> onActivityResult
    31:31:void onActivityResult(int,int,android.content.Intent):193 -> onActivityResult
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> onActivityResult
    32:32:void onActivityResult(int,int,android.content.Intent):194 -> onActivityResult
    121:121:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> onActivityResult
    33:33:void onActivityResult(int,int,android.content.Intent):195 -> onActivityResult
    123:130:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    54:62:void onCreate(android.os.Bundle) -> onCreate
    155:159:void onDestroy() -> onDestroy
    android.view.View getLeaksButton() -> p
    android.view.View getLeaksButtonIconView() -> q
    133:150:void importHprof(android.net.Uri) -> r
    40:40:void shark.SharkLog.d(java.lang.Throwable,kotlin.jvm.functions.Function0) -> r
    40:40:void importHprof(android.net.Uri):196 -> r
    41:41:void shark.SharkLog.d(java.lang.Throwable,kotlin.jvm.functions.Function0) -> r
    41:41:void importHprof(android.net.Uri):197 -> r
    150:150:void importHprof(android.net.Uri) -> r
    42:42:void shark.SharkLog.d(java.lang.Throwable,kotlin.jvm.functions.Function0) -> r
    42:42:void importHprof(android.net.Uri):198 -> r
    151:152:void importHprof(android.net.Uri) -> r
    104:113:void requestImportHprof() -> s
    165:169:void setTheme(int) -> setTheme
leakcanary.internal.activity.LeakActivity$Companion -> leakcanary.internal.activity.LeakActivity$a:
    171:171:void <init>() -> <init>
    171:171:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    185:187:android.content.Intent createIntent(android.content.Context) -> a
    178:181:android.app.PendingIntent createPendingIntent(android.content.Context,java.util.ArrayList) -> b
leakcanary.internal.activity.LeakActivity$aboutButton$2 -> leakcanary.internal.activity.LeakActivity$b:
    leakcanary.internal.activity.LeakActivity this$0 -> a
    23:23:java.lang.Object invoke() -> a
    42:42:android.view.View invoke() -> c
leakcanary.internal.activity.LeakActivity$aboutButtonIconView$2 -> leakcanary.internal.activity.LeakActivity$c:
    leakcanary.internal.activity.LeakActivity this$0 -> a
    23:23:java.lang.Object invoke() -> a
    46:46:android.view.View invoke() -> c
leakcanary.internal.activity.LeakActivity$bottomNavigationBar$2 -> leakcanary.internal.activity.LeakActivity$d:
    leakcanary.internal.activity.LeakActivity this$0 -> a
    23:23:java.lang.Object invoke() -> a
    50:50:android.view.View invoke() -> c
leakcanary.internal.activity.LeakActivity$heapDumpsButton$2 -> leakcanary.internal.activity.LeakActivity$e:
    leakcanary.internal.activity.LeakActivity this$0 -> a
    23:23:java.lang.Object invoke() -> a
    34:34:android.view.View invoke() -> c
leakcanary.internal.activity.LeakActivity$heapDumpsButtonIconView$2 -> leakcanary.internal.activity.LeakActivity$f:
    leakcanary.internal.activity.LeakActivity this$0 -> a
    23:23:java.lang.Object invoke() -> a
    38:38:android.view.View invoke() -> c
leakcanary.internal.activity.LeakActivity$leaksButton$2 -> leakcanary.internal.activity.LeakActivity$g:
    leakcanary.internal.activity.LeakActivity this$0 -> a
    23:23:java.lang.Object invoke() -> a
    26:26:android.view.View invoke() -> c
leakcanary.internal.activity.LeakActivity$leaksButtonIconView$2 -> leakcanary.internal.activity.LeakActivity$h:
    leakcanary.internal.activity.LeakActivity this$0 -> a
    23:23:java.lang.Object invoke() -> a
    30:30:android.view.View invoke() -> c
leakcanary.internal.activity.LeakActivity$onActivityResult$$inlined$let$lambda$1 -> leakcanary.internal.activity.LeakActivity$i:
    leakcanary.internal.activity.LeakActivity this$0 -> b
    android.net.Uri $fileUri -> a
    126:127:void run() -> run
leakcanary.internal.activity.LeakActivity$onCreate$1 -> leakcanary.internal.activity.LeakActivity$j:
    leakcanary.internal.activity.LeakActivity this$0 -> a
    59:59:void onClick(android.view.View) -> onClick
leakcanary.internal.activity.LeakActivity$onCreate$2 -> leakcanary.internal.activity.LeakActivity$k:
    leakcanary.internal.activity.LeakActivity this$0 -> a
    60:60:void onClick(android.view.View) -> onClick
leakcanary.internal.activity.LeakActivity$onCreate$3 -> leakcanary.internal.activity.LeakActivity$l:
    leakcanary.internal.activity.LeakActivity this$0 -> a
    61:61:void onClick(android.view.View) -> onClick
leakcanary.internal.activity.LeakViewsKt -> c.l.a0.a:
    1:1:void access$startShareIntentChooser(android.view.View,android.net.Uri) -> a
    21:27:void share(android.view.View,java.lang.String) -> b
    31:40:void shareHeapDump(android.view.View,java.io.File) -> c
    70:70:void shareToGitHubIssue(android.view.View,shark.HeapAnalysisFailure) -> d
    52:52:void shareToStackOverflow(android.view.View,java.lang.String) -> e
    43:49:void startShareIntentChooser(android.view.View,android.net.Uri) -> f
leakcanary.internal.activity.LeakViewsKt$shareHeapDump$1 -> c.l.a0.a$a:
    java.io.File $heapDumpFile -> b
    android.view.View $this_shareHeapDump -> a
    32:39:void run() -> run
leakcanary.internal.activity.LeakViewsKt$shareHeapDump$1$1 -> c.l.a0.a$a$a:
    leakcanary.internal.activity.LeakViewsKt$shareHeapDump$1 this$0 -> a
    android.net.Uri $heapDumpUri -> b
    38:38:void run() -> run
leakcanary.internal.activity.LeakViewsKt$shareToGitHubIssue$1 -> c.l.a0.a$b:
    shark.HeapAnalysisFailure $failure -> c
    android.view.View $this_shareToGitHubIssue -> a
    android.content.ClipboardManager $clipboard -> b
    74:89:void run() -> run
leakcanary.internal.activity.LeakViewsKt$shareToStackOverflow$1 -> c.l.a0.a$c:
    android.view.View $this_shareToStackOverflow -> a
    android.content.ClipboardManager $clipboard -> b
    java.lang.String $content -> c
    56:62:void run() -> run
leakcanary.internal.activity.db.Db -> c.l.a0.b.a:
    leakcanary.internal.activity.db.LeaksDbHelper dbHelper -> a
    leakcanary.internal.activity.db.Db INSTANCE -> b
    10:10:void <clinit>() -> <clinit>
    10:10:void <init>() -> <init>
    10:10:leakcanary.internal.activity.db.LeaksDbHelper access$getDbHelper$p(leakcanary.internal.activity.db.Db) -> a
    10:10:void access$setDbHelper$p(leakcanary.internal.activity.db.Db,leakcanary.internal.activity.db.LeaksDbHelper) -> b
    47:50:void closeDatabase() -> c
    31:43:void execute(android.view.View,kotlin.jvm.functions.Function1) -> d
leakcanary.internal.activity.db.Db$DbContext -> c.l.a0.b.a$a:
    android.database.sqlite.SQLiteDatabase db -> b
    kotlin.jvm.functions.Function1 updateUi -> a
    19:19:void <init>(android.database.sqlite.SQLiteDatabase) -> <init>
    19:19:android.database.sqlite.SQLiteDatabase getDb() -> a
    23:24:void updateUi(kotlin.jvm.functions.Function1) -> b
    20:20:kotlin.jvm.functions.Function1 getUpdateUi() -> c
leakcanary.internal.activity.db.Db$OnDb -> c.l.a0.b.a$b:
    android.database.sqlite.SQLiteDatabase getDb() -> a
leakcanary.internal.activity.db.Db$closeDatabase$1 -> c.l.a0.b.a$c:
    leakcanary.internal.activity.db.Db$closeDatabase$1 INSTANCE -> a
    10:10:java.lang.Object invoke() -> a
    48:49:void invoke() -> c
leakcanary.internal.activity.db.Db$execute$1 -> c.l.a0.b.a$d:
    android.content.Context $appContext -> a
    kotlin.jvm.functions.Function1 $block -> b
    33:36:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    10:10:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.db.DbKt -> c.l.a0.b.b:
    55:56:void executeOnDb(android.view.View,kotlin.jvm.functions.Function1) -> a
leakcanary.internal.activity.db.HeapAnalysisTable -> c.l.a0.b.c:
    java.util.List updateListeners -> a
    leakcanary.internal.activity.db.HeapAnalysisTable INSTANCE -> c
    android.os.Handler mainHandler -> b
    18:18:java.util.List access$getUpdateListeners$p(leakcanary.internal.activity.db.HeapAnalysisTable) -> <clinit>
    18:18:void <clinit>():18 -> <clinit>
    20:22:void <clinit>() -> <clinit>
    18:18:java.util.List access$getUpdateListeners$p(leakcanary.internal.activity.db.HeapAnalysisTable) -> <init>
    18:18:void <init>():18 -> <init>
    18:18:java.util.List access$getUpdateListeners$p(leakcanary.internal.activity.db.HeapAnalysisTable) -> a
    147:159:void delete(android.database.sqlite.SQLiteDatabase,long,java.io.File) -> b
    29:29:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> b
    29:29:void delete(android.database.sqlite.SQLiteDatabase,long,java.io.File):258 -> b
    30:30:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> b
    30:30:void delete(android.database.sqlite.SQLiteDatabase,long,java.io.File):259 -> b
    31:31:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> b
    31:31:void delete(android.database.sqlite.SQLiteDatabase,long,java.io.File):260 -> b
    160:162:void delete(android.database.sqlite.SQLiteDatabase,long,java.io.File) -> b
    32:32:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> b
    32:32:void delete(android.database.sqlite.SQLiteDatabase,long,java.io.File):261 -> b
    33:33:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> b
    33:33:void delete(android.database.sqlite.SQLiteDatabase,long,java.io.File):262 -> b
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> b
    35:35:void delete(android.database.sqlite.SQLiteDatabase,long,java.io.File):264 -> b
    163:164:void delete(android.database.sqlite.SQLiteDatabase,long,java.io.File) -> b
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> b
    35:35:void delete(android.database.sqlite.SQLiteDatabase,long,java.io.File):264 -> b
    167:167:void deleteAll(android.database.sqlite.SQLiteDatabase) -> c
    29:29:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    29:29:void deleteAll(android.database.sqlite.SQLiteDatabase):265 -> c
    30:30:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    30:30:void deleteAll(android.database.sqlite.SQLiteDatabase):266 -> c
    31:31:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    31:31:void deleteAll(android.database.sqlite.SQLiteDatabase):267 -> c
    168:176:void deleteAll(android.database.sqlite.SQLiteDatabase) -> c
    11:11:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    11:11:void deleteAll(android.database.sqlite.SQLiteDatabase):268 -> c
    12:12:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    12:12:void deleteAll(android.database.sqlite.SQLiteDatabase):269 -> c
    13:13:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    13:13:void deleteAll(android.database.sqlite.SQLiteDatabase):270 -> c
    177:180:void deleteAll(android.database.sqlite.SQLiteDatabase) -> c
    18:18:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    18:18:void deleteAll(android.database.sqlite.SQLiteDatabase):271 -> c
    19:19:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    19:19:void deleteAll(android.database.sqlite.SQLiteDatabase):272 -> c
    20:20:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    20:20:void deleteAll(android.database.sqlite.SQLiteDatabase):273 -> c
    21:21:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    21:21:void deleteAll(android.database.sqlite.SQLiteDatabase):274 -> c
    22:22:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    22:22:void deleteAll(android.database.sqlite.SQLiteDatabase):275 -> c
    19:19:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    19:19:void deleteAll(android.database.sqlite.SQLiteDatabase):272 -> c
    180:182:void deleteAll(android.database.sqlite.SQLiteDatabase) -> c
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    23:23:void deleteAll(android.database.sqlite.SQLiteDatabase):283 -> c
    178:178:void deleteAll(android.database.sqlite.SQLiteDatabase) -> c
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    23:23:void deleteAll(android.database.sqlite.SQLiteDatabase):283 -> c
    185:188:void deleteAll(android.database.sqlite.SQLiteDatabase) -> c
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    23:23:void deleteAll(android.database.sqlite.SQLiteDatabase):283 -> c
    277:194:void deleteAll(android.database.sqlite.SQLiteDatabase) -> c
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    18:18:void deleteAll(android.database.sqlite.SQLiteDatabase):278 -> c
    19:19:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    19:19:void deleteAll(android.database.sqlite.SQLiteDatabase):279 -> c
    195:195:void deleteAll(android.database.sqlite.SQLiteDatabase) -> c
    32:32:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    32:32:void deleteAll(android.database.sqlite.SQLiteDatabase):288 -> c
    33:33:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    33:33:void deleteAll(android.database.sqlite.SQLiteDatabase):289 -> c
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    35:35:void deleteAll(android.database.sqlite.SQLiteDatabase):291 -> c
    196:197:void deleteAll(android.database.sqlite.SQLiteDatabase) -> c
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    23:23:void deleteAll(android.database.sqlite.SQLiteDatabase):283 -> c
    14:14:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    14:14:void deleteAll(android.database.sqlite.SQLiteDatabase):285 -> c
    15:15:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    15:15:void deleteAll(android.database.sqlite.SQLiteDatabase):286 -> c
    16:16:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    16:16:void deleteAll(android.database.sqlite.SQLiteDatabase):287 -> c
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    18:18:void deleteAll(android.database.sqlite.SQLiteDatabase):278 -> c
    20:20:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    20:20:void deleteAll(android.database.sqlite.SQLiteDatabase):280 -> c
    21:21:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    21:21:void deleteAll(android.database.sqlite.SQLiteDatabase):281 -> c
    22:22:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    22:22:void deleteAll(android.database.sqlite.SQLiteDatabase):282 -> c
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    23:23:void deleteAll(android.database.sqlite.SQLiteDatabase):283 -> c
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    24:24:void deleteAll(android.database.sqlite.SQLiteDatabase):284 -> c
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    35:35:void deleteAll(android.database.sqlite.SQLiteDatabase):291 -> c
    48:63:long insert(android.database.sqlite.SQLiteDatabase,shark.HeapAnalysis) -> d
    29:29:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> d
    29:29:long insert(android.database.sqlite.SQLiteDatabase,shark.HeapAnalysis):207 -> d
    30:30:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> d
    30:30:long insert(android.database.sqlite.SQLiteDatabase,shark.HeapAnalysis):208 -> d
    31:31:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> d
    31:31:long insert(android.database.sqlite.SQLiteDatabase,shark.HeapAnalysis):209 -> d
    64:73:long insert(android.database.sqlite.SQLiteDatabase,shark.HeapAnalysis) -> d
    32:32:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> d
    32:32:long insert(android.database.sqlite.SQLiteDatabase,shark.HeapAnalysis):212 -> d
    33:33:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> d
    33:33:long insert(android.database.sqlite.SQLiteDatabase,shark.HeapAnalysis):213 -> d
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> d
    35:35:long insert(android.database.sqlite.SQLiteDatabase,shark.HeapAnalysis):215 -> d
    74:74:long insert(android.database.sqlite.SQLiteDatabase,shark.HeapAnalysis) -> d
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> d
    35:35:long insert(android.database.sqlite.SQLiteDatabase,shark.HeapAnalysis):215 -> d
    78:79:void notifyUpdateOnMainThread() -> e
    38:39:kotlin.jvm.functions.Function0 onUpdate(kotlin.jvm.functions.Function0) -> f
    116:127:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase) -> g
    11:11:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> g
    11:11:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase):241 -> g
    12:12:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> g
    12:12:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase):242 -> g
    13:13:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> g
    13:13:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase):243 -> g
    128:138:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase) -> g
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> g
    18:18:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase):248 -> g
    19:19:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> g
    19:19:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase):249 -> g
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> g
    23:23:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase):253 -> g
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> g
    24:24:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase):254 -> g
    14:14:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> g
    14:14:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase):255 -> g
    15:15:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> g
    15:15:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase):256 -> g
    16:16:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> g
    16:16:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase):257 -> g
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> g
    18:18:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase):248 -> g
    20:20:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> g
    20:20:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase):250 -> g
    21:21:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> g
    21:21:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase):251 -> g
    22:22:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> g
    22:22:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase):252 -> g
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> g
    23:23:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase):253 -> g
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> g
    24:24:java.util.List retrieveAll(android.database.sqlite.SQLiteDatabase):254 -> g
leakcanary.internal.activity.db.HeapAnalysisTable$Projection -> c.l.a0.b.c$a:
    long createdAtTimeMillis -> b
    long id -> a
    int leakCount -> c
    java.lang.String exceptionSummary -> d
    199:199:void <init>(long,long,int,java.lang.String) -> <init>
    201:201:long getCreatedAtTimeMillis() -> a
    203:203:java.lang.String getExceptionSummary() -> b
    200:200:long getId() -> c
    202:202:int getLeakCount() -> d
leakcanary.internal.activity.db.HeapAnalysisTable$delete$1 -> c.l.a0.b.c$b:
    java.io.File $heapDumpFile -> a
    149:154:void run() -> run
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    31:31:void run():207 -> run
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    32:32:void run():208 -> run
    154:154:void run() -> run
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> run
    33:33:void run():209 -> run
    155:156:void run() -> run
leakcanary.internal.activity.db.HeapAnalysisTable$deleteAll$1$1$2 -> c.l.a0.b.c$c:
    java.util.List $all -> a
    190:193:void run() -> run
leakcanary.internal.activity.db.HeapAnalysisTable$notifyUpdateOnMainThread$1 -> c.l.a0.b.c$d:
    leakcanary.internal.activity.db.HeapAnalysisTable$notifyUpdateOnMainThread$1 INSTANCE -> a
    84:85:void run() -> run
leakcanary.internal.activity.db.HeapAnalysisTable$onUpdate$1 -> c.l.a0.b.c$e:
    kotlin.jvm.functions.Function0 $block -> a
    18:18:java.lang.Object invoke() -> a
    40:41:void invoke() -> c
leakcanary.internal.activity.db.Io -> c.l.a0.b.d:
    android.os.Handler mainHandler -> b
    java.util.concurrent.ExecutorService serialExecutor -> a
    leakcanary.internal.activity.db.Io INSTANCE -> c
    12:15:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    12:12:android.os.Handler access$getMainHandler$p(leakcanary.internal.activity.db.Io) -> a
    59:60:void checkMainThread() -> b
    37:56:void execute(android.view.View,kotlin.jvm.functions.Function1) -> c
    30:31:void execute(kotlin.jvm.functions.Function0) -> d
leakcanary.internal.activity.db.Io$IoContext -> c.l.a0.b.d$a:
    kotlin.jvm.functions.Function1 updateUi -> a
    21:21:void <init>() -> <init>
    25:26:void updateUi(kotlin.jvm.functions.Function1) -> b
    22:22:kotlin.jvm.functions.Function1 getUpdateUi() -> c
leakcanary.internal.activity.db.Io$OnIo -> c.l.a0.b.d$b:
    void updateUi(kotlin.jvm.functions.Function1) -> b
leakcanary.internal.activity.db.Io$VolatileObjectRef -> c.l.a0.b.d$c:
    java.lang.Object element -> a
    69:69:void <init>(java.lang.Object) -> <init>
    71:71:java.lang.Object getElement() -> a
    71:71:void setElement(java.lang.Object) -> b
leakcanary.internal.activity.db.Io$execute$1 -> c.l.a0.b.d$d:
    leakcanary.internal.activity.db.Io$VolatileObjectRef $viewWrapper -> a
    12:12:java.lang.Object invoke() -> a
    40:41:void invoke() -> c
leakcanary.internal.activity.db.Io$execute$2 -> c.l.a0.b.d$e:
    leakcanary.internal.activity.db.Io$VolatileObjectRef $viewWrapper -> a
    kotlin.jvm.functions.Function1 $block -> b
    43:55:void invoke() -> a
    12:12:void run() -> run
leakcanary.internal.activity.db.Io$execute$2$1 -> c.l.a0.b.d$e$a:
    leakcanary.internal.activity.db.Io$execute$2 this$0 -> a
    kotlin.jvm.functions.Function1 $updateUi -> b
    51:51:void invoke() -> a
    12:12:void run() -> run
leakcanary.internal.activity.db.IoKt -> c.l.a0.b.f:
    76:77:void executeOnIo(android.view.View,kotlin.jvm.functions.Function1) -> a
leakcanary.internal.activity.db.IoKt$sam$java_lang_Runnable$0 -> c.l.a0.b.e:
    kotlin.jvm.functions.Function0 function -> a
leakcanary.internal.activity.db.LeakTable -> c.l.a0.b.g:
    leakcanary.internal.activity.db.LeakTable INSTANCE -> a
    9:9:void <clinit>() -> <clinit>
    9:9:void <clinit>() -> <init>
    9:9:void <init>():9 -> <init>
    207:217:void deleteByHeapAnalysisId(android.database.sqlite.SQLiteDatabase,long) -> a
    36:46:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak) -> b
    11:11:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> b
    11:11:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak):219 -> b
    12:12:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> b
    12:12:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak):220 -> b
    13:13:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> b
    13:13:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak):221 -> b
    47:49:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak) -> b
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> b
    18:18:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak):226 -> b
    19:19:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> b
    19:19:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak):227 -> b
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> b
    23:23:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak):231 -> b
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> b
    24:24:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak):232 -> b
    44:47:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak) -> b
    14:14:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> b
    14:14:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak):233 -> b
    15:15:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> b
    15:15:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak):234 -> b
    16:16:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> b
    16:16:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak):235 -> b
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> b
    18:18:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak):226 -> b
    20:20:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> b
    20:20:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak):228 -> b
    21:21:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> b
    21:21:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak):229 -> b
    22:22:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> b
    22:22:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak):230 -> b
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> b
    23:23:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak):231 -> b
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> b
    24:24:long insert(android.database.sqlite.SQLiteDatabase,long,shark.Leak):232 -> b
    138:140:void markAsRead(android.database.sqlite.SQLiteDatabase,java.lang.String) -> c
    101:117:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase) -> d
    11:11:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> d
    11:11:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase):256 -> d
    12:12:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> d
    12:12:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase):257 -> d
    13:13:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> d
    13:13:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase):258 -> d
    118:130:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase) -> d
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> d
    18:18:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase):263 -> d
    19:19:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> d
    19:19:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase):264 -> d
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> d
    23:23:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase):268 -> d
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> d
    24:24:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase):269 -> d
    14:14:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> d
    14:14:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase):270 -> d
    15:15:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> d
    15:15:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase):271 -> d
    16:16:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> d
    16:16:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase):272 -> d
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> d
    18:18:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase):263 -> d
    20:20:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> d
    20:20:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase):265 -> d
    21:21:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> d
    21:21:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase):266 -> d
    22:22:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> d
    22:22:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase):267 -> d
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> d
    23:23:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase):268 -> d
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> d
    24:24:java.util.List retrieveAllLeaks(android.database.sqlite.SQLiteDatabase):269 -> d
    160:177:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String) -> e
    11:11:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    11:11:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):273 -> e
    12:12:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    12:12:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):274 -> e
    13:13:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    13:13:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):275 -> e
    178:178:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String) -> e
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    18:18:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):280 -> e
    19:19:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    19:19:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):281 -> e
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    23:23:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):285 -> e
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    24:24:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):286 -> e
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    23:23:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):285 -> e
    14:14:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    14:14:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):287 -> e
    15:15:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    15:15:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):288 -> e
    16:16:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    16:16:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):289 -> e
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    18:18:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):280 -> e
    20:20:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    20:20:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):282 -> e
    21:21:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    21:21:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):283 -> e
    22:22:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    22:22:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):284 -> e
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    23:23:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):285 -> e
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> e
    24:24:leakcanary.internal.activity.db.LeakTable$LeakProjection retrieveLeakBySignature(android.database.sqlite.SQLiteDatabase,java.lang.String):286 -> e
    69:78:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set) -> f
    11:11:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> f
    11:11:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set):239 -> f
    12:12:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> f
    12:12:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set):240 -> f
    13:13:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> f
    13:13:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set):241 -> f
    79:85:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set) -> f
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> f
    18:18:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set):246 -> f
    19:19:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> f
    19:19:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set):247 -> f
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> f
    23:23:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set):251 -> f
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> f
    24:24:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set):252 -> f
    14:14:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> f
    14:14:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set):253 -> f
    15:15:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> f
    15:15:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set):254 -> f
    16:16:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> f
    16:16:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set):255 -> f
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> f
    18:18:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set):246 -> f
    20:20:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> f
    20:20:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set):248 -> f
    21:21:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> f
    21:21:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set):249 -> f
    22:22:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> f
    22:22:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set):250 -> f
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> f
    23:23:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set):251 -> f
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> f
    24:24:java.util.Map retrieveLeakReadStatuses(android.database.sqlite.SQLiteDatabase,java.util.Set):252 -> f
leakcanary.internal.activity.db.LeakTable$AllLeaksProjection -> c.l.a0.b.g$a:
    boolean isLibraryLeak -> e
    boolean isNew -> f
    java.lang.String signature -> a
    int leakTraceCount -> d
    long createdAtTimeMillis -> c
    java.lang.String shortDescription -> b
    89:89:void <init>(java.lang.String,java.lang.String,long,int,boolean,boolean) -> <init>
    92:92:long getCreatedAtTimeMillis() -> a
    93:93:int getLeakTraceCount() -> b
    91:91:java.lang.String getShortDescription() -> c
    90:90:java.lang.String getSignature() -> d
    94:94:boolean isLibraryLeak() -> e
    95:95:boolean isNew() -> f
leakcanary.internal.activity.db.LeakTable$LeakProjection -> c.l.a0.b.g$b:
    java.util.List leakTraces -> d
    java.lang.String shortDescription -> a
    boolean isNew -> b
    boolean isLibraryLeak -> c
    142:142:void <init>(java.lang.String,boolean,boolean,java.util.List) -> <init>
    146:146:java.util.List getLeakTraces() -> a
    143:143:java.lang.String getShortDescription() -> b
    145:145:boolean isLibraryLeak() -> c
    144:144:boolean isNew() -> d
leakcanary.internal.activity.db.LeakTable$LeakTraceProjection -> c.l.a0.b.g$c:
    long heapAnalysisId -> b
    long createdAtTimeMillis -> d
    java.lang.String classSimpleName -> c
    int leakTraceIndex -> a
    149:149:void <init>(int,long,java.lang.String,long) -> <init>
    152:152:java.lang.String getClassSimpleName() -> a
    153:153:long getCreatedAtTimeMillis() -> b
    151:151:long getHeapAnalysisId() -> c
    150:150:int getLeakTraceIndex() -> d
leakcanary.internal.activity.db.LeakTable$retrieveLeakBySignature$1$1 -> c.l.a0.b.g$d:
    android.database.Cursor $cursor -> a
    187:187:android.database.Cursor invoke(android.database.Cursor) -> c
    9:9:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.db.LeakTable$retrieveLeakBySignature$1$2 -> c.l.a0.b.g$e:
    android.database.Cursor $cursor -> a
    189:194:leakcanary.internal.activity.db.LeakTable$LeakTraceProjection invoke(android.database.Cursor) -> c
    9:9:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.db.LeakTable$retrieveLeakReadStatuses$1 -> c.l.a0.b.g$f:
    leakcanary.internal.activity.db.LeakTable$retrieveLeakReadStatuses$1 INSTANCE -> a
    75:75:java.lang.String invoke(java.lang.String) -> c
    9:9:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.db.LeakTraceTable -> c.l.a0.b.h:
    leakcanary.internal.activity.db.LeakTraceTable INSTANCE -> a
    7:7:void <clinit>() -> <clinit>
    7:7:void <init>() -> <init>
    42:43:void deleteByHeapAnalysisId(android.database.sqlite.SQLiteDatabase,long) -> a
    30:35:long insert(android.database.sqlite.SQLiteDatabase,long,long,int,java.lang.String) -> b
leakcanary.internal.activity.db.LeaksDbHelper -> c.l.a0.b.i:
    11:11:void <init>(android.content.Context) -> <init>
    68:72:void recreateDb(android.database.sqlite.SQLiteDatabase) -> g
    16:20:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    64:65:void onDowngrade(android.database.sqlite.SQLiteDatabase,int,int) -> onDowngrade
    27:32:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    11:11:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> onUpgrade
    11:11:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):79 -> onUpgrade
    12:12:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> onUpgrade
    12:12:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):80 -> onUpgrade
    13:13:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> onUpgrade
    13:13:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):81 -> onUpgrade
    33:45:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> onUpgrade
    18:18:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):86 -> onUpgrade
    19:19:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> onUpgrade
    19:19:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):87 -> onUpgrade
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> onUpgrade
    23:23:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):91 -> onUpgrade
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> onUpgrade
    24:24:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):92 -> onUpgrade
    31:48:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    29:29:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> onUpgrade
    29:29:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):96 -> onUpgrade
    30:30:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> onUpgrade
    30:30:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):97 -> onUpgrade
    31:31:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> onUpgrade
    31:31:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):98 -> onUpgrade
    49:52:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    32:32:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> onUpgrade
    32:32:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):101 -> onUpgrade
    33:33:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> onUpgrade
    33:33:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):102 -> onUpgrade
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> onUpgrade
    35:35:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):104 -> onUpgrade
    56:57:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> onUpgrade
    35:35:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):104 -> onUpgrade
    14:14:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> onUpgrade
    14:14:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):93 -> onUpgrade
    15:15:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> onUpgrade
    15:15:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):94 -> onUpgrade
    16:16:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> onUpgrade
    16:16:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):95 -> onUpgrade
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> onUpgrade
    18:18:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):86 -> onUpgrade
    20:20:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> onUpgrade
    20:20:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):88 -> onUpgrade
    21:21:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> onUpgrade
    21:21:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):89 -> onUpgrade
    22:22:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> onUpgrade
    22:22:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):90 -> onUpgrade
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> onUpgrade
    23:23:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):91 -> onUpgrade
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> onUpgrade
    24:24:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int):92 -> onUpgrade
    55:55:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
leakcanary.internal.activity.db.LeaksDbHelper$Companion -> c.l.a0.b.i$a:
    74:74:void <init>() -> <init>
    74:74:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
leakcanary.internal.activity.db.LeaksDbHelper$onUpgrade$allAnalysis$1$1 -> c.l.a0.b.i$b:
    android.database.Cursor $cursor -> a
    11:11:java.lang.Object invoke() -> a
    34:35:shark.HeapAnalysis invoke() -> c
    18:18:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    18:18:shark.HeapAnalysis invoke():79 -> c
    19:19:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    19:19:shark.HeapAnalysis invoke():80 -> c
    20:20:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    20:20:shark.HeapAnalysis invoke():81 -> c
    21:21:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    21:21:shark.HeapAnalysis invoke():82 -> c
    22:22:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    22:22:shark.HeapAnalysis invoke():83 -> c
    19:19:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    19:19:shark.HeapAnalysis invoke():80 -> c
    37:38:shark.HeapAnalysis invoke() -> c
leakcanary.internal.activity.db.LeaksDbHelper$onUpgrade$allAnalysis$1$2 -> c.l.a0.b.i$c:
    leakcanary.internal.activity.db.LeaksDbHelper$onUpgrade$allAnalysis$1$2 INSTANCE -> a
    41:43:shark.HeapAnalysis invoke(shark.HeapAnalysis) -> c
    11:11:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.AboutScreen -> c.l.a0.c.a:
    leakcanary.internal.activity.screen.AboutScreen$HeapDumpPolicy HeapDumpPolicy -> a
    22:22:void <init>() -> <init>
    24:42:android.view.View createView(android.view.ViewGroup) -> a
    45:60:java.lang.String getHeapDumpStatusMessage(android.content.res.Resources) -> b
leakcanary.internal.activity.screen.AboutScreen$HeapDumpPolicy -> c.l.a0.c.a$a:
    62:62:void <init>() -> <init>
    62:62:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    72:73:leakcanary.internal.activity.screen.AboutScreen$HeapDumpPolicy$HeapDumpStatus getHeapDumpStatus(android.content.res.Resources) -> a
    87:92:boolean isRunningTests(android.content.res.Resources) -> b
leakcanary.internal.activity.screen.AboutScreen$HeapDumpPolicy$HeapDumpStatus -> c.l.a0.c.a$a$a:
    leakcanary.internal.activity.screen.AboutScreen$HeapDumpPolicy$HeapDumpStatus[] $VALUES -> f
    leakcanary.internal.activity.screen.AboutScreen$HeapDumpPolicy$HeapDumpStatus NOT_INSTALLED -> e
    leakcanary.internal.activity.screen.AboutScreen$HeapDumpPolicy$HeapDumpStatus ENABLED -> a
    leakcanary.internal.activity.screen.AboutScreen$HeapDumpPolicy$HeapDumpStatus DISABLED_DEBUGGER_ATTACHED -> b
    leakcanary.internal.activity.screen.AboutScreen$HeapDumpPolicy$HeapDumpStatus DISABLED_BY_DEVELOPER -> c
    leakcanary.internal.activity.screen.AboutScreen$HeapDumpPolicy$HeapDumpStatus DISABLED_RUNNING_TESTS -> d
    63:63:void <init>(java.lang.String,int) -> <init>
leakcanary.internal.activity.screen.HeapAnalysisFailureScreen -> c.l.a0.c.b:
    long analysisId -> a
    22:22:void access$onFailureRetrieved(leakcanary.internal.activity.screen.HeapAnalysisFailureScreen,android.view.View,shark.HeapAnalysisFailure,boolean) -> <init>
    22:22:void <init>(long):22 -> <init>
    24:24:void <init>(long) -> <init>
    27:40:android.view.View createView(android.view.ViewGroup) -> a
    22:22:void access$onFailureRetrieved(leakcanary.internal.activity.screen.HeapAnalysisFailureScreen,android.view.View,shark.HeapAnalysisFailure,boolean) -> b
    22:22:long access$getAnalysisId$p(leakcanary.internal.activity.screen.HeapAnalysisFailureScreen):22 -> b
    22:22:void access$onFailureRetrieved(leakcanary.internal.activity.screen.HeapAnalysisFailureScreen,android.view.View,shark.HeapAnalysisFailure,boolean) -> c
    46:58:void onFailureRetrieved(android.view.View,shark.HeapAnalysisFailure,boolean) -> d
leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$createView$$inlined$apply$lambda$1 -> c.l.a0.c.b$a:
    leakcanary.internal.activity.screen.HeapAnalysisFailureScreen this$0 -> a
    30:30:void invoke(leakcanary.internal.activity.db.Db$OnDb) -> c
    92:92:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    92:92:void invoke(leakcanary.internal.activity.db.Db$OnDb):96 -> c
    29:29:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    29:29:void invoke(leakcanary.internal.activity.db.Db$OnDb):97 -> c
    30:30:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    30:30:void invoke(leakcanary.internal.activity.db.Db$OnDb):98 -> c
    31:31:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    31:31:void invoke(leakcanary.internal.activity.db.Db$OnDb):99 -> c
    93:93:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    93:93:void invoke(leakcanary.internal.activity.db.Db$OnDb):100 -> c
    101:101:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    101:101:void invoke(leakcanary.internal.activity.db.Db$OnDb):108 -> c
    93:93:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    93:93:void invoke(leakcanary.internal.activity.db.Db$OnDb):100 -> c
    94:94:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    94:94:void invoke(leakcanary.internal.activity.db.Db$OnDb):109 -> c
    98:98:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    98:98:void invoke(leakcanary.internal.activity.db.Db$OnDb):113 -> c
    99:99:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    99:99:void invoke(leakcanary.internal.activity.db.Db$OnDb):114 -> c
    93:93:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    93:93:void invoke(leakcanary.internal.activity.db.Db$OnDb):100 -> c
    101:101:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    101:101:void invoke(leakcanary.internal.activity.db.Db$OnDb):108 -> c
    11:11:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    11:11:void invoke(leakcanary.internal.activity.db.Db$OnDb):115 -> c
    12:12:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    12:12:void invoke(leakcanary.internal.activity.db.Db$OnDb):116 -> c
    13:13:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    13:13:void invoke(leakcanary.internal.activity.db.Db$OnDb):117 -> c
    102:102:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    102:102:void invoke(leakcanary.internal.activity.db.Db$OnDb):118 -> c
    103:103:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    103:103:void invoke(leakcanary.internal.activity.db.Db$OnDb):119 -> c
    18:18:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    18:18:void invoke(leakcanary.internal.activity.db.Db$OnDb):120 -> c
    19:19:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    19:19:void invoke(leakcanary.internal.activity.db.Db$OnDb):121 -> c
    20:20:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    20:20:void invoke(leakcanary.internal.activity.db.Db$OnDb):122 -> c
    21:21:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    21:21:void invoke(leakcanary.internal.activity.db.Db$OnDb):123 -> c
    22:22:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    22:22:void invoke(leakcanary.internal.activity.db.Db$OnDb):124 -> c
    19:19:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    19:19:void invoke(leakcanary.internal.activity.db.Db$OnDb):121 -> c
    103:103:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    103:103:void invoke(leakcanary.internal.activity.db.Db$OnDb):119 -> c
    104:104:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    104:104:void invoke(leakcanary.internal.activity.db.Db$OnDb):125 -> c
    105:105:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    105:105:void invoke(leakcanary.internal.activity.db.Db$OnDb):126 -> c
    107:107:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    107:107:void invoke(leakcanary.internal.activity.db.Db$OnDb):128 -> c
    109:109:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    109:109:void invoke(leakcanary.internal.activity.db.Db$OnDb):130 -> c
    102:102:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    102:102:void invoke(leakcanary.internal.activity.db.Db$OnDb):118 -> c
    110:110:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    110:110:void invoke(leakcanary.internal.activity.db.Db$OnDb):131 -> c
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    18:18:void invoke(leakcanary.internal.activity.db.Db$OnDb):132 -> c
    19:19:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    19:19:void invoke(leakcanary.internal.activity.db.Db$OnDb):133 -> c
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    23:23:void invoke(leakcanary.internal.activity.db.Db$OnDb):137 -> c
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    24:24:void invoke(leakcanary.internal.activity.db.Db$OnDb):138 -> c
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    35:35:void invoke(leakcanary.internal.activity.db.Db$OnDb):143 -> c
    111:111:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    111:111:void invoke(leakcanary.internal.activity.db.Db$OnDb):142 -> c
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    35:35:void invoke(leakcanary.internal.activity.db.Db$OnDb):143 -> c
    30:39:void invoke(leakcanary.internal.activity.db.Db$OnDb) -> c
    14:14:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    14:14:void invoke(leakcanary.internal.activity.db.Db$OnDb):139 -> c
    15:15:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    15:15:void invoke(leakcanary.internal.activity.db.Db$OnDb):140 -> c
    16:16:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    16:16:void invoke(leakcanary.internal.activity.db.Db$OnDb):141 -> c
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    18:18:void invoke(leakcanary.internal.activity.db.Db$OnDb):132 -> c
    20:20:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    20:20:void invoke(leakcanary.internal.activity.db.Db$OnDb):134 -> c
    21:21:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    21:21:void invoke(leakcanary.internal.activity.db.Db$OnDb):135 -> c
    22:22:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    22:22:void invoke(leakcanary.internal.activity.db.Db$OnDb):136 -> c
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    23:23:void invoke(leakcanary.internal.activity.db.Db$OnDb):137 -> c
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    24:24:void invoke(leakcanary.internal.activity.db.Db$OnDb):138 -> c
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    35:35:void invoke(leakcanary.internal.activity.db.Db$OnDb):143 -> c
    22:22:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$createView$$inlined$apply$lambda$1$1 -> c.l.a0.c.b$a$a:
    shark.HeapAnalysisFailure $heapAnalysis -> b
    leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$createView$$inlined$apply$lambda$1 this$0 -> a
    boolean $heapDumpFileExist -> c
    37:37:void invoke(android.view.View) -> c
    22:22:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$createView$1$1$1 -> c.l.a0.c.c:
    leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$createView$1$1$1 INSTANCE -> a
    33:34:void invoke(android.view.View) -> c
    22:22:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$onFailureRetrieved$1 -> c.l.a0.c.b$b:
    shark.HeapAnalysisFailure $heapAnalysis -> b
    android.view.View $this_onFailureRetrieved -> a
    61:73:kotlin.jvm.functions.Function0 invoke(java.lang.String) -> c
    22:22:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$onFailureRetrieved$1$1 -> c.l.a0.c.b$b$a:
    leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$onFailureRetrieved$1 this$0 -> a
    22:22:java.lang.Object invoke() -> a
    64:65:void invoke() -> c
leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$onFailureRetrieved$1$2 -> c.l.a0.c.b$b$b:
    leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$onFailureRetrieved$1 this$0 -> a
    22:22:java.lang.Object invoke() -> a
    69:70:void invoke() -> c
leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$onFailureRetrieved$3 -> c.l.a0.c.b$c:
    shark.HeapAnalysisFailure $heapAnalysis -> c
    leakcanary.internal.activity.screen.HeapAnalysisFailureScreen this$0 -> a
    android.view.View $this_onFailureRetrieved -> b
    83:93:void invoke(android.view.Menu) -> c
    22:22:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$onFailureRetrieved$3$1 -> c.l.a0.c.b$c$a:
    leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$onFailureRetrieved$3 this$0 -> a
    85:91:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$onFailureRetrieved$3$1$1 -> c.l.a0.c.b$c$a$a:
    leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$onFailureRetrieved$3$1 this$0 -> a
    86:90:void invoke(leakcanary.internal.activity.db.Db$OnDb) -> c
    22:22:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$onFailureRetrieved$3$1$1$1 -> c.l.a0.c.b$c$a$a$a:
    leakcanary.internal.activity.screen.HeapAnalysisFailureScreen$onFailureRetrieved$3$1$1$1 INSTANCE -> a
    88:89:void invoke(android.view.View) -> c
    22:22:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapDumpRenderer -> c.l.a0.c.d:
    leakcanary.internal.activity.screen.HeapDumpRenderer INSTANCE -> a
    37:37:void <clinit>() -> <clinit>
    37:37:void <clinit>() -> <init>
    37:37:void <init>():37 -> <init>
    59:109:android.graphics.Bitmap render(android.content.Context,java.io.File,int,int,int) -> a
    31:31:shark.OnHprofRecordListener shark.OnHprofRecordListener$Companion.invoke(kotlin.jvm.functions.Function2) -> a
    31:31:android.graphics.Bitmap render(android.content.Context,java.io.File,int,int,int):282 -> a
    38:38:shark.OnHprofRecordListener shark.OnHprofRecordListener$Companion.invoke(kotlin.jvm.functions.Function2) -> a
    38:38:android.graphics.Bitmap render(android.content.Context,java.io.File,int,int,int):289 -> a
    108:277:android.graphics.Bitmap render(android.content.Context,java.io.File,int,int,int) -> a
leakcanary.internal.activity.screen.HeapDumpRenderer$HasDensity -> c.l.a0.c.d$a:
    float density -> a
    39:40:void <init>(android.content.res.Resources) -> <init>
    46:46:float getDp(float) -> a
    43:43:float getDp(int) -> b
leakcanary.internal.activity.screen.HeapDumpRenderer$render$$inlined$with$lambda$1 -> c.l.a0.c.d$b:
    java.util.Map $hprofStringCache$inlined -> b
    java.util.Map $classNames$inlined -> c
    kotlin.jvm.internal.Ref$ObjectRef $currentRecord$inlined -> e
    int $stringColor$inlined -> k
    int $zygoteHeapColor$inlined -> h
    int $otherColor$inlined -> i
    int $appHeapColor$inlined -> f
    java.util.List $recordPositions$inlined -> j
    int $imageHeapColor$inlined -> g
    java.util.Map $colors$inlined -> l
    kotlin.jvm.internal.Ref$LongRef $lastPosition$inlined -> d
    31:31:void shark.OnHprofRecordListener$Companion$invoke$1.<init>(kotlin.jvm.functions.Function2) -> <init>
    31:31:void <init>(java.util.Map,java.util.Map,leakcanary.internal.activity.screen.HeapDumpRenderer$HasDensity,kotlin.jvm.internal.Ref$LongRef,kotlin.jvm.internal.Ref$ObjectRef,int,int,int,int,java.util.List,int,java.util.Map,int,int,int,int,int,int,int,int,int,int,int,int,int,int,android.content.Context,java.io.File,int,int,int):31 -> <init>
    36:36:void shark.OnHprofRecordListener$Companion$invoke$1.onHprofRecord(long,shark.HprofRecord) -> a
    36:36:void onHprofRecord(long,shark.HprofRecord):36 -> a
    41:89:void onHprofRecord(long,shark.HprofRecord) -> a
    37:37:void shark.OnHprofRecordListener$Companion$invoke$1.onHprofRecord(long,shark.HprofRecord) -> a
    37:37:void onHprofRecord(long,shark.HprofRecord):37 -> a
    84:84:void onHprofRecord(long,shark.HprofRecord) -> a
leakcanary.internal.activity.screen.HeapDumpScreen -> c.l.a0.c.e:
    long analysisId -> a
    30:30:void access$onSuccessRetrieved(leakcanary.internal.activity.screen.HeapDumpScreen,android.view.View,shark.HeapAnalysisSuccess,java.util.Map,boolean) -> <init>
    30:30:void <init>(long):30 -> <init>
    32:32:void <init>(long) -> <init>
    35:52:android.view.View createView(android.view.ViewGroup) -> a
    30:30:void access$onSuccessRetrieved(leakcanary.internal.activity.screen.HeapDumpScreen,android.view.View,shark.HeapAnalysisSuccess,java.util.Map,boolean) -> b
    30:30:long access$getAnalysisId$p(leakcanary.internal.activity.screen.HeapDumpScreen):30 -> b
    30:30:void access$onSuccessRetrieved(leakcanary.internal.activity.screen.HeapDumpScreen,android.view.View,shark.HeapAnalysisSuccess,java.util.Map,boolean) -> c
    60:197:void onSuccessRetrieved(android.view.View,shark.HeapAnalysisSuccess,java.util.Map,boolean) -> d
leakcanary.internal.activity.screen.HeapDumpScreen$Companion -> c.l.a0.c.e$a:
    199:199:void <init>() -> <init>
    199:199:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
leakcanary.internal.activity.screen.HeapDumpScreen$createView$$inlined$apply$lambda$1 -> c.l.a0.c.e$b:
    leakcanary.internal.activity.screen.HeapDumpScreen this$0 -> a
    39:39:void invoke(leakcanary.internal.activity.db.Db$OnDb) -> c
    92:92:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    92:92:void invoke(leakcanary.internal.activity.db.Db$OnDb):206 -> c
    29:29:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    29:29:void invoke(leakcanary.internal.activity.db.Db$OnDb):207 -> c
    30:30:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    30:30:void invoke(leakcanary.internal.activity.db.Db$OnDb):208 -> c
    31:31:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    31:31:void invoke(leakcanary.internal.activity.db.Db$OnDb):209 -> c
    93:93:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    93:93:void invoke(leakcanary.internal.activity.db.Db$OnDb):210 -> c
    101:101:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    101:101:void invoke(leakcanary.internal.activity.db.Db$OnDb):218 -> c
    93:93:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    93:93:void invoke(leakcanary.internal.activity.db.Db$OnDb):210 -> c
    94:94:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    94:94:void invoke(leakcanary.internal.activity.db.Db$OnDb):219 -> c
    98:98:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    98:98:void invoke(leakcanary.internal.activity.db.Db$OnDb):223 -> c
    99:99:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    99:99:void invoke(leakcanary.internal.activity.db.Db$OnDb):224 -> c
    93:93:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    93:93:void invoke(leakcanary.internal.activity.db.Db$OnDb):210 -> c
    101:101:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    101:101:void invoke(leakcanary.internal.activity.db.Db$OnDb):218 -> c
    11:11:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    11:11:void invoke(leakcanary.internal.activity.db.Db$OnDb):225 -> c
    12:12:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    12:12:void invoke(leakcanary.internal.activity.db.Db$OnDb):226 -> c
    13:13:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    13:13:void invoke(leakcanary.internal.activity.db.Db$OnDb):227 -> c
    102:102:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    102:102:void invoke(leakcanary.internal.activity.db.Db$OnDb):228 -> c
    103:103:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    103:103:void invoke(leakcanary.internal.activity.db.Db$OnDb):229 -> c
    18:18:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    18:18:void invoke(leakcanary.internal.activity.db.Db$OnDb):230 -> c
    19:19:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    19:19:void invoke(leakcanary.internal.activity.db.Db$OnDb):231 -> c
    20:20:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    20:20:void invoke(leakcanary.internal.activity.db.Db$OnDb):232 -> c
    21:21:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    21:21:void invoke(leakcanary.internal.activity.db.Db$OnDb):233 -> c
    22:22:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    22:22:void invoke(leakcanary.internal.activity.db.Db$OnDb):234 -> c
    19:19:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    19:19:void invoke(leakcanary.internal.activity.db.Db$OnDb):231 -> c
    103:103:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    103:103:void invoke(leakcanary.internal.activity.db.Db$OnDb):229 -> c
    104:104:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    104:104:void invoke(leakcanary.internal.activity.db.Db$OnDb):235 -> c
    105:105:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    105:105:void invoke(leakcanary.internal.activity.db.Db$OnDb):236 -> c
    107:107:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    107:107:void invoke(leakcanary.internal.activity.db.Db$OnDb):238 -> c
    109:109:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    109:109:void invoke(leakcanary.internal.activity.db.Db$OnDb):240 -> c
    102:102:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    102:102:void invoke(leakcanary.internal.activity.db.Db$OnDb):228 -> c
    110:110:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    110:110:void invoke(leakcanary.internal.activity.db.Db$OnDb):241 -> c
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    18:18:void invoke(leakcanary.internal.activity.db.Db$OnDb):242 -> c
    19:19:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    19:19:void invoke(leakcanary.internal.activity.db.Db$OnDb):243 -> c
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    23:23:void invoke(leakcanary.internal.activity.db.Db$OnDb):247 -> c
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    24:24:void invoke(leakcanary.internal.activity.db.Db$OnDb):248 -> c
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    35:35:void invoke(leakcanary.internal.activity.db.Db$OnDb):253 -> c
    111:111:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    111:111:void invoke(leakcanary.internal.activity.db.Db$OnDb):252 -> c
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    35:35:void invoke(leakcanary.internal.activity.db.Db$OnDb):253 -> c
    39:51:void invoke(leakcanary.internal.activity.db.Db$OnDb) -> c
    14:14:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    14:14:void invoke(leakcanary.internal.activity.db.Db$OnDb):249 -> c
    15:15:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    15:15:void invoke(leakcanary.internal.activity.db.Db$OnDb):250 -> c
    16:16:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    16:16:void invoke(leakcanary.internal.activity.db.Db$OnDb):251 -> c
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    18:18:void invoke(leakcanary.internal.activity.db.Db$OnDb):242 -> c
    20:20:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    20:20:void invoke(leakcanary.internal.activity.db.Db$OnDb):244 -> c
    21:21:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    21:21:void invoke(leakcanary.internal.activity.db.Db$OnDb):245 -> c
    22:22:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    22:22:void invoke(leakcanary.internal.activity.db.Db$OnDb):246 -> c
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    23:23:void invoke(leakcanary.internal.activity.db.Db$OnDb):247 -> c
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    24:24:void invoke(leakcanary.internal.activity.db.Db$OnDb):248 -> c
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    35:35:void invoke(leakcanary.internal.activity.db.Db$OnDb):253 -> c
    30:30:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapDumpScreen$createView$$inlined$apply$lambda$1$1 -> c.l.a0.c.e$b$a:
    java.util.Map $leakReadStatus -> c
    leakcanary.internal.activity.screen.HeapDumpScreen$createView$$inlined$apply$lambda$1 this$0 -> a
    shark.HeapAnalysisSuccess $heapAnalysis -> b
    boolean $heapDumpFileExist -> d
    49:49:void invoke(android.view.View) -> c
    30:30:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapDumpScreen$createView$1$1$1 -> c.l.a0.c.f:
    leakcanary.internal.activity.screen.HeapDumpScreen$createView$1$1$1 INSTANCE -> a
    42:43:void invoke(android.view.View) -> c
    30:30:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapDumpScreen$createView$1$1$signatures$1 -> c.l.a0.c.g:
    leakcanary.internal.activity.screen.HeapDumpScreen$createView$1$1$signatures$1 INSTANCE -> a
    45:45:java.lang.String invoke(shark.Leak) -> c
    30:30:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$$inlined$sortedByDescending$1 -> c.l.a0.c.e$c:
    121:121:int kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1.compare(java.lang.Object,java.lang.Object) -> compare
    121:121:int compare(java.lang.Object,java.lang.Object):121 -> compare
    84:84:void leakcanary.internal.activity.screen.HeapDumpScreen.onSuccessRetrieved(android.view.View,shark.HeapAnalysisSuccess,java.util.Map,boolean) -> compare
    84:84:int compare(java.lang.Object,java.lang.Object):320 -> compare
    84:84:void leakcanary.internal.activity.screen.HeapDumpScreen.onSuccessRetrieved(android.view.View,shark.HeapAnalysisSuccess,java.util.Map,boolean) -> compare
    84:84:int compare(java.lang.Object,java.lang.Object):321 -> compare
    121:121:int kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareByDescending$1.compare(java.lang.Object,java.lang.Object) -> compare
    121:121:int compare(java.lang.Object,java.lang.Object):121 -> compare
leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$1 -> c.l.a0.c.e$d:
    shark.HeapAnalysisSuccess $heapAnalysis -> c
    android.view.View $this_onSuccessRetrieved -> b
    leakcanary.internal.activity.screen.HeapDumpScreen this$0 -> a
    boolean $heapDumpFileExist -> d
    63:80:void invoke(android.view.Menu) -> c
    30:30:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$1$1 -> c.l.a0.c.e$d$a:
    leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$1 this$0 -> a
    65:71:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$1$1$1 -> c.l.a0.c.e$d$a$a:
    leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$1$1 this$0 -> a
    66:70:void invoke(leakcanary.internal.activity.db.Db$OnDb) -> c
    30:30:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$1$1$1$1 -> c.l.a0.c.e$d$a$a$a:
    leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$1$1$1$1 INSTANCE -> a
    68:69:void invoke(android.view.View) -> c
    30:30:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$1$2 -> c.l.a0.c.e$d$b:
    leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$1 this$0 -> a
    76:77:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$2 -> c.l.a0.c.e$e:
    shark.HeapAnalysisSuccess $heapAnalysis -> c
    java.util.List $leaks -> d
    android.view.View $this_onSuccessRetrieved -> a
    java.util.Map $leakReadStatus -> e
    boolean $heapDumpFileExist -> b
    87:87:void <init>(android.view.View,boolean,shark.HeapAnalysisSuccess,java.util.List,java.util.Map) -> <init>
    175:175:leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$2 getItem(int) -> a
    179:179:int getCount() -> getCount
    87:87:void <init>(android.view.View,boolean,shark.HeapAnalysisSuccess,java.util.List,java.util.Map) -> getItem
    87:87:java.lang.Object getItem(int):87 -> getItem
    177:177:long getItemId(int) -> getItemId
    181:185:int getItemViewType(int) -> getItemViewType
    92:110:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    67:67:java.util.List kotlin.collections.MapsKt___MapsKt.map(java.util.Map,kotlin.jvm.functions.Function1) -> getView
    67:67:android.view.View getView(int,android.view.View,android.view.ViewGroup):206 -> getView
    92:92:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> getView
    92:92:android.view.View getView(int,android.view.View,android.view.ViewGroup):207 -> getView
    93:93:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> getView
    93:93:android.view.View getView(int,android.view.View,android.view.ViewGroup):208 -> getView
    110:110:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    92:92:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> getView
    92:92:android.view.View getView(int,android.view.View,android.view.ViewGroup):207 -> getView
    94:94:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> getView
    94:94:android.view.View getView(int,android.view.View,android.view.ViewGroup):209 -> getView
    111:112:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
    187:187:int getViewTypeCount() -> getViewTypeCount
    189:189:boolean isEnabled(int) -> isEnabled
leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$2$getView$1 -> c.l.a0.c.e$e$a:
    leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$2 this$0 -> a
    115:132:kotlin.jvm.functions.Function0 invoke(java.lang.String) -> c
    87:87:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$2$getView$1$1 -> c.l.a0.c.e$e$a$a:
    leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$2$getView$1 this$0 -> a
    87:87:java.lang.Object invoke() -> a
    118:119:void invoke() -> c
leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$2$getView$1$2 -> c.l.a0.c.e$e$a$b:
    leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$2$getView$1 this$0 -> a
    87:87:java.lang.Object invoke() -> a
    123:124:void invoke() -> c
leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$2$getView$1$3 -> c.l.a0.c.e$e$a$c:
    leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$2$getView$1 this$0 -> a
    87:87:java.lang.Object invoke() -> a
    128:129:void invoke() -> c
leakcanary.internal.activity.screen.HeapDumpScreen$onSuccessRetrieved$3 -> c.l.a0.c.e$f:
    java.util.List $leaks -> c
    android.view.View $this_onSuccessRetrieved -> b
    leakcanary.internal.activity.screen.HeapDumpScreen this$0 -> a
    193:196:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
leakcanary.internal.activity.screen.HeapDumpsScreen -> c.l.a0.c.h:
    24:24:void access$onAnalysesRetrieved(leakcanary.internal.activity.screen.HeapDumpsScreen,android.view.View,java.util.List) -> <init>
    24:24:void <init>():24 -> <init>
    26:72:android.view.View createView(android.view.ViewGroup) -> a
    24:24:void access$onAnalysesRetrieved(leakcanary.internal.activity.screen.HeapDumpsScreen,android.view.View,java.util.List) -> b
    75:110:void onAnalysesRetrieved(android.view.View,java.util.List) -> c
leakcanary.internal.activity.screen.HeapDumpsScreen$createView$$inlined$apply$lambda$1 -> c.l.a0.c.h$a:
    leakcanary.internal.activity.screen.HeapDumpsScreen this$0 -> a
    68:70:void invoke(leakcanary.internal.activity.db.Db$OnDb) -> c
    24:24:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapDumpsScreen$createView$$inlined$apply$lambda$1$1 -> c.l.a0.c.h$a$a:
    java.util.List $projections -> b
    leakcanary.internal.activity.screen.HeapDumpsScreen$createView$$inlined$apply$lambda$1 this$0 -> a
    69:69:void invoke(android.view.View) -> c
    24:24:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapDumpsScreen$createView$1$1 -> c.l.a0.c.h$b:
    kotlin.jvm.functions.Function0 $unsubscribeRefresh -> a
    24:24:java.lang.Object invoke() -> a
    32:32:void invoke() -> c
leakcanary.internal.activity.screen.HeapDumpsScreen$createView$1$2 -> c.l.a0.c.h$c:
    android.view.View $this_apply -> a
    35:57:void invoke(android.view.Menu) -> c
    24:24:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapDumpsScreen$createView$1$2$1 -> c.l.a0.c.h$c$a:
    leakcanary.internal.activity.screen.HeapDumpsScreen$createView$1$2 this$0 -> a
    37:55:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
leakcanary.internal.activity.screen.HeapDumpsScreen$createView$1$2$1$1 -> c.l.a0.c.h$c$a$a:
    leakcanary.internal.activity.screen.HeapDumpsScreen$createView$1$2$1 this$0 -> a
    42:52:void onClick(android.content.DialogInterface,int) -> onClick
leakcanary.internal.activity.screen.HeapDumpsScreen$createView$1$2$1$1$1 -> c.l.a0.c.h$c$a$a$a:
    leakcanary.internal.activity.screen.HeapDumpsScreen$createView$1$2$1$1$1 INSTANCE -> a
    43:51:void invoke(leakcanary.internal.activity.db.Db$OnDb) -> c
    24:24:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapDumpsScreen$createView$1$2$1$1$1$1 -> c.l.a0.c.h$c$a$a$a$a:
    leakcanary.internal.activity.screen.HeapDumpsScreen$createView$1$2$1$1$1$1 INSTANCE -> a
    45:50:void invoke(android.view.View) -> c
    24:24:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HeapDumpsScreen$createView$1$2$1$1$1$1$1 -> c.l.a0.c.h$c$a$a$a$a$a:
    leakcanary.internal.activity.screen.HeapDumpsScreen$createView$1$2$1$1$1$1$1 INSTANCE -> a
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    49:49:void invoke(leakcanary.internal.activity.ui.SimpleListAdapter,android.view.View,int) -> c
leakcanary.internal.activity.screen.HeapDumpsScreen$createView$1$3 -> c.l.a0.c.h$d:
    android.view.View $this_apply -> a
    60:61:void onClick(android.view.View) -> onClick
leakcanary.internal.activity.screen.HeapDumpsScreen$createView$1$4 -> c.l.a0.c.h$e:
    leakcanary.internal.activity.screen.HeapDumpsScreen$createView$1$4 INSTANCE -> a
    64:65:void onClick(android.view.View) -> onClick
leakcanary.internal.activity.screen.HeapDumpsScreen$createView$1$unsubscribeRefresh$1 -> c.l.a0.c.h$f:
    android.view.View $this_apply -> a
    24:24:java.lang.Object invoke() -> a
    29:30:void invoke() -> c
leakcanary.internal.activity.screen.HeapDumpsScreen$onAnalysesRetrieved$1 -> c.l.a0.c.h$g:
    java.util.List $projections -> b
    android.view.View $this_onAnalysesRetrieved -> a
    82:89:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
leakcanary.internal.activity.screen.HeapDumpsScreen$onAnalysesRetrieved$2 -> c.l.a0.c.h$h:
    android.view.View $this_onAnalysesRetrieved -> a
    24:24:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    93:109:void invoke(leakcanary.internal.activity.ui.SimpleListAdapter,android.view.View,int) -> c
leakcanary.internal.activity.screen.HprofExplorerScreen -> c.l.a0.c.i:
    java.io.File heapDumpFile -> a
    47:47:java.lang.String access$heapValueAsString(leakcanary.internal.activity.screen.HprofExplorerScreen,shark.HeapValue) -> <init>
    47:47:void <init>(java.io.File):47 -> <init>
    49:49:void <init>(java.io.File) -> <init>
    51:123:android.view.View createView(android.view.ViewGroup) -> a
    47:47:java.lang.String access$heapValueAsString(leakcanary.internal.activity.screen.HprofExplorerScreen,shark.HeapValue) -> b
    47:47:java.util.List access$fieldsAsString(leakcanary.internal.activity.screen.HprofExplorerScreen,kotlin.sequences.Sequence):47 -> b
    47:47:java.lang.String access$heapValueAsString(leakcanary.internal.activity.screen.HprofExplorerScreen,shark.HeapValue) -> c
    47:47:java.io.File access$getHeapDumpFile$p(leakcanary.internal.activity.screen.HprofExplorerScreen):47 -> c
    47:47:java.lang.String access$heapValueAsString(leakcanary.internal.activity.screen.HprofExplorerScreen,shark.HeapValue) -> d
    47:47:java.lang.String access$heapValueAsString(leakcanary.internal.activity.screen.HprofExplorerScreen,shark.HeapValue) -> e
    47:47:void access$onHeapValueClicked(leakcanary.internal.activity.screen.HprofExplorerScreen,android.view.View,android.widget.TextView,android.widget.ListView,shark.HeapValue):47 -> e
    47:47:java.lang.String access$heapValueAsString(leakcanary.internal.activity.screen.HprofExplorerScreen,shark.HeapValue) -> f
    47:47:void access$showClass(leakcanary.internal.activity.screen.HprofExplorerScreen,android.view.View,android.widget.TextView,android.widget.ListView,shark.HeapObject$HeapClass):47 -> f
    47:47:java.lang.String access$heapValueAsString(leakcanary.internal.activity.screen.HprofExplorerScreen,shark.HeapValue) -> g
    47:47:void access$showInstance(leakcanary.internal.activity.screen.HprofExplorerScreen,android.view.View,android.widget.TextView,android.widget.ListView,shark.HeapObject$HeapInstance):47 -> g
    273:276:java.util.List fieldsAsString(kotlin.sequences.Sequence) -> h
    280:310:java.lang.String heapValueAsString(shark.HeapValue) -> i
    254:270:void onHeapValueClicked(android.view.View,android.widget.TextView,android.widget.ListView,shark.HeapValue) -> j
    130:160:void showClass(android.view.View,android.widget.TextView,android.widget.ListView,shark.HeapObject$HeapClass) -> k
    167:186:void showInstance(android.view.View,android.widget.TextView,android.widget.ListView,shark.HeapObject$HeapInstance) -> l
    193:216:void showObjectArray(android.view.View,android.widget.TextView,android.widget.ListView,shark.HeapObject$HeapObjectArray) -> m
    223:247:void showPrimitiveArray(android.view.View,android.widget.TextView,android.widget.ListView,shark.HeapObject$HeapPrimitiveArray) -> n
leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1 -> c.l.a0.c.i$a:
    android.view.ViewGroup $container$inlined -> c
    kotlin.jvm.internal.Ref$ObjectRef $closeable -> a
    leakcanary.internal.activity.screen.HprofExplorerScreen this$0 -> b
    68:122:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    47:47:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1$1 -> c.l.a0.c.i$a$a:
    shark.HeapGraph $graph -> b
    leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1 this$0 -> a
    72:121:void invoke(android.view.View) -> c
    47:47:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1$1$1 -> c.l.a0.c.i$a$a$a:
    android.widget.TextView $titleView -> c
    leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1$1 this$0 -> a
    android.view.View $this_updateUi -> b
    android.widget.ListView $listView -> d
    81:120:void onClick(android.view.View) -> onClick
leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1$1$1$1 -> c.l.a0.c.i$a$a$a$a:
    leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1$1$1 this$0 -> a
    android.widget.EditText $input -> b
    87:117:void onClick(android.content.DialogInterface,int) -> onClick
leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1$1$1$1$1 -> c.l.a0.c.i$a$a$a$a$a:
    leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1$1$1$1 this$0 -> a
    88:116:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    47:47:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1$1$1$1$1$1 -> c.l.a0.c.i$a$a$a$a$a$a:
    java.lang.String $partialClassName -> a
    90:90:boolean invoke(shark.HeapObject$HeapClass) -> c
    47:47:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1$1$1$1$1$2 -> c.l.a0.c.i$a$a$a$a$a$b:
    java.lang.String $partialClassName -> a
    95:99:void invoke(android.view.View) -> c
    47:47:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1$1$1$1$1$3 -> c.l.a0.c.i$a$a$a$a$a$c:
    java.util.List $matchingClasses -> b
    java.lang.String $partialClassName -> c
    leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1$1$1$1$1 this$0 -> a
    102:114:void invoke(android.view.View) -> c
    47:47:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1$1$1$1$1$3$1 -> c.l.a0.c.i$a$a$a$a$a$c$a:
    leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1$1$1$1$1$3 this$0 -> a
    47:47:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    107:109:void invoke(leakcanary.internal.activity.ui.SimpleListAdapter,android.view.View,int) -> c
leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1$1$1$1$1$3$2 -> c.l.a0.c.i$a$a$a$a$a$c$b:
    leakcanary.internal.activity.screen.HprofExplorerScreen$createView$$inlined$apply$lambda$1$1$1$1$1$3 this$0 -> a
    android.view.View $this_updateUi -> b
    111:113:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
leakcanary.internal.activity.screen.HprofExplorerScreen$createView$1$1 -> c.l.a0.c.i$b:
    kotlin.jvm.internal.Ref$ObjectRef $closeable -> a
    56:56:void <init>(kotlin.jvm.internal.Ref$ObjectRef) -> <init>
    58:58:void onViewAttachedToWindow(android.view.View) -> onViewAttachedToWindow
    61:64:void onViewDetachedFromWindow(android.view.View) -> onViewDetachedFromWindow
leakcanary.internal.activity.screen.HprofExplorerScreen$createView$1$1$onViewDetachedFromWindow$1 -> c.l.a0.c.i$b$a:
    leakcanary.internal.activity.screen.HprofExplorerScreen$createView$1$1 this$0 -> a
    56:56:java.lang.Object invoke() -> a
    62:63:void invoke() -> c
leakcanary.internal.activity.screen.HprofExplorerScreen$fieldsAsString$1 -> c.l.a0.c.i$c:
    leakcanary.internal.activity.screen.HprofExplorerScreen this$0 -> a
    274:274:kotlin.Pair invoke(shark.HeapField) -> c
    47:47:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HprofExplorerScreen$showClass$1 -> c.l.a0.c.i$d:
    android.widget.TextView $titleView -> c
    shark.HeapObject$HeapClass $selectedClass -> b
    leakcanary.internal.activity.screen.HprofExplorerScreen this$0 -> a
    android.widget.ListView $listView -> d
    131:159:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    47:47:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HprofExplorerScreen$showClass$1$1 -> c.l.a0.c.i$d$a:
    leakcanary.internal.activity.screen.HprofExplorerScreen$showClass$1 this$0 -> a
    java.util.List $staticFields -> d
    java.util.List $instances -> c
    java.lang.String $className -> b
    136:158:void invoke(android.view.View) -> c
    47:47:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HprofExplorerScreen$showClass$1$1$1 -> c.l.a0.c.i$d$a$a:
    leakcanary.internal.activity.screen.HprofExplorerScreen$showClass$1$1 this$0 -> a
    47:47:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    141:148:void invoke(leakcanary.internal.activity.ui.SimpleListAdapter,android.view.View,int) -> c
leakcanary.internal.activity.screen.HprofExplorerScreen$showClass$1$1$2 -> c.l.a0.c.i$d$a$b:
    android.view.View $this_updateUi -> b
    leakcanary.internal.activity.screen.HprofExplorerScreen$showClass$1$1 this$0 -> a
    150:157:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
leakcanary.internal.activity.screen.HprofExplorerScreen$showInstance$1 -> c.l.a0.c.i$e:
    android.widget.TextView $titleView -> c
    shark.HeapObject$HeapInstance $instance -> b
    leakcanary.internal.activity.screen.HprofExplorerScreen this$0 -> a
    android.widget.ListView $listView -> d
    168:185:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    47:47:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HprofExplorerScreen$showInstance$1$1 -> c.l.a0.c.i$e$a:
    java.util.List $fields -> c
    leakcanary.internal.activity.screen.HprofExplorerScreen$showInstance$1 this$0 -> a
    java.lang.String $className -> b
    172:184:void invoke(android.view.View) -> c
    47:47:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HprofExplorerScreen$showInstance$1$1$1 -> c.l.a0.c.i$e$a$a:
    leakcanary.internal.activity.screen.HprofExplorerScreen$showInstance$1$1 this$0 -> a
    47:47:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    176:179:void invoke(leakcanary.internal.activity.ui.SimpleListAdapter,android.view.View,int) -> c
leakcanary.internal.activity.screen.HprofExplorerScreen$showInstance$1$1$2 -> c.l.a0.c.i$e$a$b:
    android.view.View $this_updateUi -> b
    leakcanary.internal.activity.screen.HprofExplorerScreen$showInstance$1$1 this$0 -> a
    181:183:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
leakcanary.internal.activity.screen.HprofExplorerScreen$showObjectArray$1 -> c.l.a0.c.i$f:
    android.widget.TextView $titleView -> c
    shark.HeapObject$HeapObjectArray $instance -> b
    leakcanary.internal.activity.screen.HprofExplorerScreen this$0 -> a
    android.widget.ListView $listView -> d
    194:215:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    47:47:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HprofExplorerScreen$showObjectArray$1$1 -> c.l.a0.c.i$f$a:
    leakcanary.internal.activity.screen.HprofExplorerScreen$showObjectArray$1 this$0 -> a
    java.util.List $elements -> c
    java.lang.String $className -> b
    202:214:void invoke(android.view.View) -> c
    47:47:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HprofExplorerScreen$showObjectArray$1$1$1 -> c.l.a0.c.i$f$a$a:
    leakcanary.internal.activity.screen.HprofExplorerScreen$showObjectArray$1$1 this$0 -> a
    47:47:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    206:209:void invoke(leakcanary.internal.activity.ui.SimpleListAdapter,android.view.View,int) -> c
leakcanary.internal.activity.screen.HprofExplorerScreen$showObjectArray$1$1$2 -> c.l.a0.c.i$f$a$b:
    leakcanary.internal.activity.screen.HprofExplorerScreen$showObjectArray$1$1 this$0 -> a
    android.view.View $this_updateUi -> b
    211:213:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
leakcanary.internal.activity.screen.HprofExplorerScreen$showObjectArray$1$elements$1 -> c.l.a0.c.i$f$b:
    leakcanary.internal.activity.screen.HprofExplorerScreen$showObjectArray$1 this$0 -> a
    196:196:kotlin.Pair invoke(int,shark.HeapValue) -> c
    47:47:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HprofExplorerScreen$showPrimitiveArray$1 -> c.l.a0.c.i$g:
    android.widget.TextView $titleView -> b
    shark.HeapObject$HeapPrimitiveArray $instance -> a
    android.widget.ListView $listView -> c
    224:316:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    9741:9741:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> c
    9741:9741:void invoke(leakcanary.internal.activity.db.Io$OnIo):317 -> c
    318:225:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    9741:9741:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(int[],java.util.Collection,kotlin.jvm.functions.Function1) -> c
    9741:9741:void invoke(leakcanary.internal.activity.db.Io$OnIo):317 -> c
    319:320:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    9751:9751:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> c
    9751:9751:void invoke(leakcanary.internal.activity.db.Io$OnIo):321 -> c
    322:226:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    9751:9751:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(long[],java.util.Collection,kotlin.jvm.functions.Function1) -> c
    9751:9751:void invoke(leakcanary.internal.activity.db.Io$OnIo):321 -> c
    323:324:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    9721:9721:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> c
    9721:9721:void invoke(leakcanary.internal.activity.db.Io$OnIo):325 -> c
    326:227:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    9721:9721:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(byte[],java.util.Collection,kotlin.jvm.functions.Function1) -> c
    9721:9721:void invoke(leakcanary.internal.activity.db.Io$OnIo):325 -> c
    327:328:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    9731:9731:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> c
    9731:9731:void invoke(leakcanary.internal.activity.db.Io$OnIo):329 -> c
    330:228:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    9731:9731:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(short[],java.util.Collection,kotlin.jvm.functions.Function1) -> c
    9731:9731:void invoke(leakcanary.internal.activity.db.Io$OnIo):329 -> c
    331:229:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    9348:9348:java.util.Map kotlin.collections.ArraysKt___ArraysKt.groupByTo(char[],java.util.Map,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> c
    9348:9348:void invoke(leakcanary.internal.activity.db.Io$OnIo):332 -> c
    9681:9681:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapIndexedTo(char[],java.util.Collection,kotlin.jvm.functions.Function2) -> c
    9681:9681:void invoke(leakcanary.internal.activity.db.Io$OnIo):333 -> c
    9682:9682:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapIndexedTo(char[],java.util.Collection,kotlin.jvm.functions.Function2) -> c
    9682:9682:void invoke(leakcanary.internal.activity.db.Io$OnIo):334 -> c
    229:229:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    9681:9681:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapIndexedTo(char[],java.util.Collection,kotlin.jvm.functions.Function2) -> c
    9681:9681:void invoke(leakcanary.internal.activity.db.Io$OnIo):333 -> c
    9683:9683:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapIndexedTo(char[],java.util.Collection,kotlin.jvm.functions.Function2) -> c
    9683:9683:void invoke(leakcanary.internal.activity.db.Io$OnIo):335 -> c
    229:337:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    9692:9692:java.util.List kotlin.collections.ArraysKt___ArraysKt.mapNotNull(java.lang.Object[],kotlin.jvm.functions.Function1) -> c
    9692:9692:void invoke(leakcanary.internal.activity.db.Io$OnIo):338 -> c
    230:340:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    9701:9701:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapNotNullTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> c
    9701:9701:void invoke(leakcanary.internal.activity.db.Io$OnIo):341 -> c
    342:231:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    9701:9701:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapNotNullTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> c
    9701:9701:void invoke(leakcanary.internal.activity.db.Io$OnIo):341 -> c
    343:344:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    9711:9711:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> c
    9711:9711:void invoke(leakcanary.internal.activity.db.Io$OnIo):345 -> c
    346:232:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    9711:9711:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapTo(java.lang.Object[],java.util.Collection,kotlin.jvm.functions.Function1) -> c
    9711:9711:void invoke(leakcanary.internal.activity.db.Io$OnIo):345 -> c
    347:232:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    47:47:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HprofExplorerScreen$showPrimitiveArray$1$9 -> c.l.a0.c.i$g$a:
    leakcanary.internal.activity.screen.HprofExplorerScreen$showPrimitiveArray$1 this$0 -> a
    java.util.List $values -> c
    java.lang.String $type -> b
    235:245:void invoke(android.view.View) -> c
    47:47:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.HprofExplorerScreen$showPrimitiveArray$1$9$1 -> c.l.a0.c.i$g$a$a:
    leakcanary.internal.activity.screen.HprofExplorerScreen$showPrimitiveArray$1$9 this$0 -> a
    47:47:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    239:242:void invoke(leakcanary.internal.activity.ui.SimpleListAdapter,android.view.View,int) -> c
leakcanary.internal.activity.screen.HprofExplorerScreen$showPrimitiveArray$1$9$2 -> c.l.a0.c.i$g$a$b:
    leakcanary.internal.activity.screen.HprofExplorerScreen$showPrimitiveArray$1$9$2 INSTANCE -> a
    244:244:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
leakcanary.internal.activity.screen.LeakScreen -> c.l.a0.c.j:
    java.lang.String leakSignature -> a
    java.lang.Long selectedHeapAnalysisId -> b
    35:35:java.lang.String access$leakToString(leakcanary.internal.activity.screen.LeakScreen,shark.LeakTrace,shark.HeapAnalysisSuccess) -> <init>
    35:35:void <init>(java.lang.String,java.lang.Long):35 -> <init>
    38:38:void <init>(java.lang.String,java.lang.Long) -> <init>
    37:37:void <init>(java.lang.String,java.lang.Long,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    40:64:android.view.View createView(android.view.ViewGroup) -> a
    35:35:java.lang.String access$leakToString(leakcanary.internal.activity.screen.LeakScreen,shark.LeakTrace,shark.HeapAnalysisSuccess) -> b
    35:35:void access$bindSimpleRow(leakcanary.internal.activity.screen.LeakScreen,android.view.View,leakcanary.internal.activity.db.LeakTable$LeakTraceProjection):35 -> b
    35:35:java.lang.String access$leakToString(leakcanary.internal.activity.screen.LeakScreen,shark.LeakTrace,shark.HeapAnalysisSuccess) -> c
    35:35:java.lang.String access$getLeakSignature$p(leakcanary.internal.activity.screen.LeakScreen):35 -> c
    35:35:java.lang.String access$leakToString(leakcanary.internal.activity.screen.LeakScreen,shark.LeakTrace,shark.HeapAnalysisSuccess) -> d
    35:35:java.lang.Long access$getSelectedHeapAnalysisId$p(leakcanary.internal.activity.screen.LeakScreen):35 -> d
    35:35:java.lang.String access$leakToString(leakcanary.internal.activity.screen.LeakScreen,shark.LeakTrace,shark.HeapAnalysisSuccess) -> e
    35:35:java.lang.String access$leakToString(leakcanary.internal.activity.screen.LeakScreen,shark.LeakTrace,shark.HeapAnalysisSuccess) -> f
    35:35:void access$onLeakTraceSelected(leakcanary.internal.activity.screen.LeakScreen,android.view.View,shark.HeapAnalysisSuccess,long,int):35 -> f
    35:35:java.lang.String access$leakToString(leakcanary.internal.activity.screen.LeakScreen,shark.LeakTrace,shark.HeapAnalysisSuccess) -> g
    35:35:void access$onLeaksRetrieved(leakcanary.internal.activity.screen.LeakScreen,android.view.View,leakcanary.internal.activity.db.LeakTable$LeakProjection,int,shark.HeapAnalysisSuccess):35 -> g
    151:157:void bindSimpleRow(android.view.View,leakcanary.internal.activity.db.LeakTable$LeakTraceProjection) -> h
    236:242:java.lang.String leakToString(shark.LeakTrace,shark.HeapAnalysisSuccess) -> i
    67:67:java.util.List kotlin.collections.MapsKt___MapsKt.map(java.util.Map,kotlin.jvm.functions.Function1) -> i
    67:67:java.lang.String leakToString(shark.LeakTrace,shark.HeapAnalysisSuccess):253 -> i
    92:92:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> i
    92:92:java.lang.String leakToString(shark.LeakTrace,shark.HeapAnalysisSuccess):254 -> i
    93:93:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> i
    93:93:java.lang.String leakToString(shark.LeakTrace,shark.HeapAnalysisSuccess):255 -> i
    242:242:java.lang.String leakToString(shark.LeakTrace,shark.HeapAnalysisSuccess) -> i
    92:92:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> i
    92:92:java.lang.String leakToString(shark.LeakTrace,shark.HeapAnalysisSuccess):254 -> i
    94:94:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> i
    94:94:java.lang.String leakToString(shark.LeakTrace,shark.HeapAnalysisSuccess):256 -> i
    243:248:java.lang.String leakToString(shark.LeakTrace,shark.HeapAnalysisSuccess) -> i
    180:180:void onLeakTraceSelected(android.view.View,shark.HeapAnalysisSuccess,long,int) -> j
    118:118:java.lang.Object kotlin.sequences.SequencesKt___SequencesKt.first(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> j
    118:118:void onLeakTraceSelected(android.view.View,shark.HeapAnalysisSuccess,long,int):251 -> j
    180:180:void onLeakTraceSelected(android.view.View,shark.HeapAnalysisSuccess,long,int) -> j
    119:119:java.lang.Object kotlin.sequences.SequencesKt___SequencesKt.first(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> j
    119:119:void onLeakTraceSelected(android.view.View,shark.HeapAnalysisSuccess,long,int):252 -> j
    71:145:void onLeaksRetrieved(android.view.View,leakcanary.internal.activity.db.LeakTable$LeakProjection,int,shark.HeapAnalysisSuccess) -> k
    160:172:java.lang.String parseLinks(java.lang.String) -> l
leakcanary.internal.activity.screen.LeakScreen$createView$$inlined$apply$lambda$1 -> c.l.a0.c.j$a:
    leakcanary.internal.activity.screen.LeakScreen this$0 -> a
    44:52:void invoke(leakcanary.internal.activity.db.Db$OnDb) -> c
    310:310:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfFirst(java.util.List,kotlin.jvm.functions.Function1) -> c
    310:310:void invoke(leakcanary.internal.activity.db.Db$OnDb):251 -> c
    311:311:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfFirst(java.util.List,kotlin.jvm.functions.Function1) -> c
    311:311:void invoke(leakcanary.internal.activity.db.Db$OnDb):252 -> c
    312:312:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfFirst(java.util.List,kotlin.jvm.functions.Function1) -> c
    312:312:void invoke(leakcanary.internal.activity.db.Db$OnDb):253 -> c
    52:52:void invoke(leakcanary.internal.activity.db.Db$OnDb) -> c
    313:313:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfFirst(java.util.List,kotlin.jvm.functions.Function1) -> c
    313:313:void invoke(leakcanary.internal.activity.db.Db$OnDb):254 -> c
    314:314:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfFirst(java.util.List,kotlin.jvm.functions.Function1) -> c
    314:314:void invoke(leakcanary.internal.activity.db.Db$OnDb):255 -> c
    311:311:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfFirst(java.util.List,kotlin.jvm.functions.Function1) -> c
    311:311:void invoke(leakcanary.internal.activity.db.Db$OnDb):252 -> c
    316:316:int kotlin.collections.CollectionsKt___CollectionsKt.indexOfFirst(java.util.List,kotlin.jvm.functions.Function1) -> c
    316:316:void invoke(leakcanary.internal.activity.db.Db$OnDb):257 -> c
    52:56:void invoke(leakcanary.internal.activity.db.Db$OnDb) -> c
    92:92:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    92:92:void invoke(leakcanary.internal.activity.db.Db$OnDb):258 -> c
    29:29:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    29:29:void invoke(leakcanary.internal.activity.db.Db$OnDb):259 -> c
    30:30:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    30:30:void invoke(leakcanary.internal.activity.db.Db$OnDb):260 -> c
    31:31:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    31:31:void invoke(leakcanary.internal.activity.db.Db$OnDb):261 -> c
    93:93:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    93:93:void invoke(leakcanary.internal.activity.db.Db$OnDb):262 -> c
    101:101:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    101:101:void invoke(leakcanary.internal.activity.db.Db$OnDb):270 -> c
    93:93:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    93:93:void invoke(leakcanary.internal.activity.db.Db$OnDb):262 -> c
    94:94:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    94:94:void invoke(leakcanary.internal.activity.db.Db$OnDb):271 -> c
    98:98:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    98:98:void invoke(leakcanary.internal.activity.db.Db$OnDb):275 -> c
    99:99:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    99:99:void invoke(leakcanary.internal.activity.db.Db$OnDb):276 -> c
    93:93:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    93:93:void invoke(leakcanary.internal.activity.db.Db$OnDb):262 -> c
    101:101:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    101:101:void invoke(leakcanary.internal.activity.db.Db$OnDb):270 -> c
    11:11:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    11:11:void invoke(leakcanary.internal.activity.db.Db$OnDb):277 -> c
    12:12:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    12:12:void invoke(leakcanary.internal.activity.db.Db$OnDb):278 -> c
    13:13:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    13:13:void invoke(leakcanary.internal.activity.db.Db$OnDb):279 -> c
    102:102:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    102:102:void invoke(leakcanary.internal.activity.db.Db$OnDb):280 -> c
    103:103:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    103:103:void invoke(leakcanary.internal.activity.db.Db$OnDb):281 -> c
    18:18:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    18:18:void invoke(leakcanary.internal.activity.db.Db$OnDb):282 -> c
    19:19:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    19:19:void invoke(leakcanary.internal.activity.db.Db$OnDb):283 -> c
    20:20:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    20:20:void invoke(leakcanary.internal.activity.db.Db$OnDb):284 -> c
    21:21:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    21:21:void invoke(leakcanary.internal.activity.db.Db$OnDb):285 -> c
    22:22:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    22:22:void invoke(leakcanary.internal.activity.db.Db$OnDb):286 -> c
    19:19:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    19:19:void invoke(leakcanary.internal.activity.db.Db$OnDb):283 -> c
    103:103:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    103:103:void invoke(leakcanary.internal.activity.db.Db$OnDb):281 -> c
    104:104:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    104:104:void invoke(leakcanary.internal.activity.db.Db$OnDb):287 -> c
    105:105:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    105:105:void invoke(leakcanary.internal.activity.db.Db$OnDb):288 -> c
    107:107:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    107:107:void invoke(leakcanary.internal.activity.db.Db$OnDb):290 -> c
    109:109:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    109:109:void invoke(leakcanary.internal.activity.db.Db$OnDb):292 -> c
    102:102:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    102:102:void invoke(leakcanary.internal.activity.db.Db$OnDb):280 -> c
    110:110:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    110:110:void invoke(leakcanary.internal.activity.db.Db$OnDb):293 -> c
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    18:18:void invoke(leakcanary.internal.activity.db.Db$OnDb):294 -> c
    19:19:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    19:19:void invoke(leakcanary.internal.activity.db.Db$OnDb):295 -> c
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    23:23:void invoke(leakcanary.internal.activity.db.Db$OnDb):299 -> c
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    24:24:void invoke(leakcanary.internal.activity.db.Db$OnDb):300 -> c
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    35:35:void invoke(leakcanary.internal.activity.db.Db$OnDb):305 -> c
    111:111:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    111:111:void invoke(leakcanary.internal.activity.db.Db$OnDb):304 -> c
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    35:35:void invoke(leakcanary.internal.activity.db.Db$OnDb):305 -> c
    55:63:void invoke(leakcanary.internal.activity.db.Db$OnDb) -> c
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    35:35:void invoke(leakcanary.internal.activity.db.Db$OnDb):305 -> c
    14:14:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    14:14:void invoke(leakcanary.internal.activity.db.Db$OnDb):301 -> c
    15:15:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    15:15:void invoke(leakcanary.internal.activity.db.Db$OnDb):302 -> c
    16:16:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    16:16:void invoke(leakcanary.internal.activity.db.Db$OnDb):303 -> c
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    18:18:void invoke(leakcanary.internal.activity.db.Db$OnDb):294 -> c
    20:20:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    20:20:void invoke(leakcanary.internal.activity.db.Db$OnDb):296 -> c
    21:21:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    21:21:void invoke(leakcanary.internal.activity.db.Db$OnDb):297 -> c
    22:22:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    22:22:void invoke(leakcanary.internal.activity.db.Db$OnDb):298 -> c
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    23:23:void invoke(leakcanary.internal.activity.db.Db$OnDb):299 -> c
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    24:24:void invoke(leakcanary.internal.activity.db.Db$OnDb):300 -> c
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    35:35:void invoke(leakcanary.internal.activity.db.Db$OnDb):305 -> c
    35:35:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.LeakScreen$createView$$inlined$apply$lambda$1$1 -> c.l.a0.c.j$a$a:
    leakcanary.internal.activity.db.LeakTable$LeakProjection $leak -> b
    shark.HeapAnalysisSuccess $selectedHeapAnalysis -> d
    leakcanary.internal.activity.screen.LeakScreen$createView$$inlined$apply$lambda$1 this$0 -> a
    int $selectedLeakIndex -> c
    59:60:void invoke(android.view.View) -> c
    35:35:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.LeakScreen$createView$1$1$1 -> c.l.a0.c.k:
    leakcanary.internal.activity.screen.LeakScreen$createView$1$1$1 INSTANCE -> a
    48:49:void invoke(android.view.View) -> c
    35:35:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.LeakScreen$onLeakTraceSelected$1 -> c.l.a0.c.j$b:
    shark.HeapAnalysisSuccess $analysis -> d
    shark.LeakTrace $leakTrace -> c
    long $heapAnalysisId -> e
    android.view.View $this_onLeakTraceSelected -> b
    leakcanary.internal.activity.screen.LeakScreen this$0 -> a
    204:226:kotlin.jvm.functions.Function0 invoke(java.lang.String) -> c
    35:35:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.LeakScreen$onLeakTraceSelected$1$1 -> c.l.a0.c.j$b$a:
    leakcanary.internal.activity.screen.LeakScreen$onLeakTraceSelected$1 this$0 -> a
    35:35:java.lang.Object invoke() -> a
    207:208:void invoke() -> c
leakcanary.internal.activity.screen.LeakScreen$onLeakTraceSelected$1$2 -> c.l.a0.c.j$b$b:
    leakcanary.internal.activity.screen.LeakScreen$onLeakTraceSelected$1 this$0 -> a
    35:35:java.lang.Object invoke() -> a
    212:213:void invoke() -> c
leakcanary.internal.activity.screen.LeakScreen$onLeakTraceSelected$1$3 -> c.l.a0.c.j$b$c:
    leakcanary.internal.activity.screen.LeakScreen$onLeakTraceSelected$1 this$0 -> a
    35:35:java.lang.Object invoke() -> a
    217:218:void invoke() -> c
leakcanary.internal.activity.screen.LeakScreen$onLeakTraceSelected$1$4 -> c.l.a0.c.j$b$d:
    leakcanary.internal.activity.screen.LeakScreen$onLeakTraceSelected$1 this$0 -> a
    35:35:java.lang.Object invoke() -> a
    222:223:void invoke() -> c
leakcanary.internal.activity.screen.LeakScreen$onLeaksRetrieved$1 -> c.l.a0.c.j$c:
    leakcanary.internal.activity.db.LeakTable$LeakProjection $leak -> b
    leakcanary.internal.activity.screen.LeakScreen this$0 -> a
    35:35:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    100:101:void invoke(leakcanary.internal.activity.ui.SimpleListAdapter,android.view.View,int) -> c
leakcanary.internal.activity.screen.LeakScreen$onLeaksRetrieved$2 -> c.l.a0.c.j$d:
    kotlin.jvm.internal.Ref$ObjectRef $lastSelectedHeapAnalysis -> e
    android.view.View $this_onLeaksRetrieved -> b
    kotlin.jvm.internal.Ref$IntRef $lastSelectedLeakTraceIndex -> d
    leakcanary.internal.activity.screen.LeakScreen this$0 -> a
    leakcanary.internal.activity.db.LeakTable$LeakProjection $leak -> c
    106:106:void <init>(leakcanary.internal.activity.screen.LeakScreen,android.view.View,leakcanary.internal.activity.db.LeakTable$LeakProjection,kotlin.jvm.internal.Ref$IntRef,kotlin.jvm.internal.Ref$ObjectRef) -> <init>
    116:141:void onItemSelected(android.widget.AdapterView,android.view.View,int,long) -> onItemSelected
    108:108:void onNothingSelected(android.widget.AdapterView) -> onNothingSelected
leakcanary.internal.activity.screen.LeakScreen$onLeaksRetrieved$2$onItemSelected$1 -> c.l.a0.c.j$d$a:
    leakcanary.internal.activity.screen.LeakScreen$onLeaksRetrieved$2 this$0 -> a
    long $selectedHeapAnalysisId -> b
    leakcanary.internal.activity.db.LeakTable$LeakTraceProjection $selectedLeakTrace -> d
    int $position -> c
    124:125:void invoke(leakcanary.internal.activity.db.Db$OnDb) -> c
    92:92:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    92:92:void invoke(leakcanary.internal.activity.db.Db$OnDb):251 -> c
    29:29:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    29:29:void invoke(leakcanary.internal.activity.db.Db$OnDb):252 -> c
    30:30:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    30:30:void invoke(leakcanary.internal.activity.db.Db$OnDb):253 -> c
    31:31:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    31:31:void invoke(leakcanary.internal.activity.db.Db$OnDb):254 -> c
    93:93:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    93:93:void invoke(leakcanary.internal.activity.db.Db$OnDb):255 -> c
    101:101:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    101:101:void invoke(leakcanary.internal.activity.db.Db$OnDb):263 -> c
    93:93:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    93:93:void invoke(leakcanary.internal.activity.db.Db$OnDb):255 -> c
    94:94:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    94:94:void invoke(leakcanary.internal.activity.db.Db$OnDb):264 -> c
    98:98:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    98:98:void invoke(leakcanary.internal.activity.db.Db$OnDb):268 -> c
    99:99:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    99:99:void invoke(leakcanary.internal.activity.db.Db$OnDb):269 -> c
    93:93:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    93:93:void invoke(leakcanary.internal.activity.db.Db$OnDb):255 -> c
    101:101:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    101:101:void invoke(leakcanary.internal.activity.db.Db$OnDb):263 -> c
    11:11:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    11:11:void invoke(leakcanary.internal.activity.db.Db$OnDb):270 -> c
    12:12:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    12:12:void invoke(leakcanary.internal.activity.db.Db$OnDb):271 -> c
    13:13:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    13:13:void invoke(leakcanary.internal.activity.db.Db$OnDb):272 -> c
    102:102:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    102:102:void invoke(leakcanary.internal.activity.db.Db$OnDb):273 -> c
    103:103:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    103:103:void invoke(leakcanary.internal.activity.db.Db$OnDb):274 -> c
    18:18:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    18:18:void invoke(leakcanary.internal.activity.db.Db$OnDb):275 -> c
    19:19:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    19:19:void invoke(leakcanary.internal.activity.db.Db$OnDb):276 -> c
    20:20:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    20:20:void invoke(leakcanary.internal.activity.db.Db$OnDb):277 -> c
    21:21:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    21:21:void invoke(leakcanary.internal.activity.db.Db$OnDb):278 -> c
    22:22:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    22:22:void invoke(leakcanary.internal.activity.db.Db$OnDb):279 -> c
    19:19:java.lang.Object leakcanary.internal.Serializables.fromByteArray(byte[]) -> c
    19:19:void invoke(leakcanary.internal.activity.db.Db$OnDb):276 -> c
    103:103:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    103:103:void invoke(leakcanary.internal.activity.db.Db$OnDb):274 -> c
    104:104:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    104:104:void invoke(leakcanary.internal.activity.db.Db$OnDb):280 -> c
    105:105:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    105:105:void invoke(leakcanary.internal.activity.db.Db$OnDb):281 -> c
    107:107:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    107:107:void invoke(leakcanary.internal.activity.db.Db$OnDb):283 -> c
    14:14:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    14:14:void invoke(leakcanary.internal.activity.db.Db$OnDb):294 -> c
    109:109:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    109:109:void invoke(leakcanary.internal.activity.db.Db$OnDb):285 -> c
    102:102:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    102:102:void invoke(leakcanary.internal.activity.db.Db$OnDb):273 -> c
    110:110:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    110:110:void invoke(leakcanary.internal.activity.db.Db$OnDb):286 -> c
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    18:18:void invoke(leakcanary.internal.activity.db.Db$OnDb):287 -> c
    19:19:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    19:19:void invoke(leakcanary.internal.activity.db.Db$OnDb):288 -> c
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    23:23:void invoke(leakcanary.internal.activity.db.Db$OnDb):292 -> c
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    24:24:void invoke(leakcanary.internal.activity.db.Db$OnDb):293 -> c
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    35:35:void invoke(leakcanary.internal.activity.db.Db$OnDb):298 -> c
    111:111:shark.HeapAnalysis leakcanary.internal.activity.db.HeapAnalysisTable.retrieve(android.database.sqlite.SQLiteDatabase,long) -> c
    111:111:void invoke(leakcanary.internal.activity.db.Db$OnDb):297 -> c
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    35:35:void invoke(leakcanary.internal.activity.db.Db$OnDb):298 -> c
    124:134:void invoke(leakcanary.internal.activity.db.Db$OnDb) -> c
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    35:35:void invoke(leakcanary.internal.activity.db.Db$OnDb):298 -> c
    14:14:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    14:14:void invoke(leakcanary.internal.activity.db.Db$OnDb):294 -> c
    15:15:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    15:15:void invoke(leakcanary.internal.activity.db.Db$OnDb):295 -> c
    16:16:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    16:16:void invoke(leakcanary.internal.activity.db.Db$OnDb):296 -> c
    18:18:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    18:18:void invoke(leakcanary.internal.activity.db.Db$OnDb):287 -> c
    20:20:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    20:20:void invoke(leakcanary.internal.activity.db.Db$OnDb):289 -> c
    21:21:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    21:21:void invoke(leakcanary.internal.activity.db.Db$OnDb):290 -> c
    22:22:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    22:22:void invoke(leakcanary.internal.activity.db.Db$OnDb):291 -> c
    23:23:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    23:23:void invoke(leakcanary.internal.activity.db.Db$OnDb):292 -> c
    24:24:java.lang.Object leakcanary.internal.activity.db.CursorsKt.use(android.database.Cursor,kotlin.jvm.functions.Function1) -> c
    24:24:void invoke(leakcanary.internal.activity.db.Db$OnDb):293 -> c
    35:35:java.lang.Object leakcanary.internal.activity.db.CursorsKt.inTransaction(android.database.sqlite.SQLiteDatabase,kotlin.jvm.functions.Function1) -> c
    35:35:void invoke(leakcanary.internal.activity.db.Db$OnDb):298 -> c
    106:106:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.LeakScreen$onLeaksRetrieved$2$onItemSelected$1$1 -> c.l.a0.c.j$d$a$a:
    leakcanary.internal.activity.screen.LeakScreen$onLeaksRetrieved$2$onItemSelected$1 this$0 -> a
    shark.HeapAnalysisSuccess $newSelectedHeapAnalysis -> b
    127:133:void invoke(android.view.View) -> c
    106:106:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.LeaksScreen -> c.l.a0.c.l:
    23:23:void access$onGroupsRetrieved(leakcanary.internal.activity.screen.LeaksScreen,android.view.View,java.util.List) -> <init>
    23:23:void <init>():23 -> <init>
    25:37:android.view.View createView(android.view.ViewGroup) -> a
    23:23:void access$onGroupsRetrieved(leakcanary.internal.activity.screen.LeaksScreen,android.view.View,java.util.List) -> b
    40:73:void onGroupsRetrieved(android.view.View,java.util.List) -> c
leakcanary.internal.activity.screen.LeaksScreen$createView$$inlined$apply$lambda$1 -> c.l.a0.c.l$a:
    leakcanary.internal.activity.screen.LeaksScreen this$0 -> a
    34:36:void invoke(leakcanary.internal.activity.db.Db$OnDb) -> c
    23:23:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.LeaksScreen$createView$$inlined$apply$lambda$1$1 -> c.l.a0.c.l$a$a:
    java.util.List $projections -> b
    leakcanary.internal.activity.screen.LeaksScreen$createView$$inlined$apply$lambda$1 this$0 -> a
    35:35:void invoke(android.view.View) -> c
    23:23:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.LeaksScreen$createView$1$1 -> c.l.a0.c.l$b:
    kotlin.jvm.functions.Function0 $unsubscribeRefresh -> a
    23:23:java.lang.Object invoke() -> a
    31:31:void invoke() -> c
leakcanary.internal.activity.screen.LeaksScreen$createView$1$unsubscribeRefresh$1 -> c.l.a0.c.l$c:
    android.view.View $this_apply -> a
    23:23:java.lang.Object invoke() -> a
    28:29:void invoke() -> c
leakcanary.internal.activity.screen.LeaksScreen$onGroupsRetrieved$1 -> c.l.a0.c.l$d:
    java.util.List $projections -> b
    android.view.View $this_onGroupsRetrieved -> a
    23:23:java.lang.Object invoke(java.lang.Object,java.lang.Object,java.lang.Object) -> b
    49:68:void invoke(leakcanary.internal.activity.ui.SimpleListAdapter,android.view.View,int) -> c
leakcanary.internal.activity.screen.LeaksScreen$onGroupsRetrieved$2 -> c.l.a0.c.l$e:
    java.util.List $projections -> b
    android.view.View $this_onGroupsRetrieved -> a
    71:72:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
leakcanary.internal.activity.screen.RenderHeapDumpScreen -> c.l.a0.c.m:
    java.io.File heapDumpFile -> a
    27:27:java.io.File access$getHeapDumpFile$p(leakcanary.internal.activity.screen.RenderHeapDumpScreen) -> <init>
    27:27:void <init>(java.io.File):27 -> <init>
    29:29:void <init>(java.io.File) -> <init>
    32:130:android.view.View createView(android.view.ViewGroup) -> a
    27:27:java.io.File access$getHeapDumpFile$p(leakcanary.internal.activity.screen.RenderHeapDumpScreen) -> b
    137:141:java.lang.String humanReadableByteCount(long,boolean) -> c
    148:149:boolean savePng(java.io.File,android.graphics.Bitmap) -> d
leakcanary.internal.activity.screen.RenderHeapDumpScreen$createView$$inlined$apply$lambda$1 -> c.l.a0.c.m$a:
    android.view.ViewGroup $container$inlined -> b
    leakcanary.internal.activity.screen.RenderHeapDumpScreen this$0 -> a
    36:41:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    27:27:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.RenderHeapDumpScreen$createView$$inlined$apply$lambda$1$1 -> c.l.a0.c.m$a$a:
    leakcanary.internal.activity.screen.RenderHeapDumpScreen$createView$$inlined$apply$lambda$1 this$0 -> a
    java.lang.String $byteCount -> b
    38:40:void invoke(android.view.View) -> c
    27:27:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.RenderHeapDumpScreen$createView$$inlined$apply$lambda$2 -> c.l.a0.c.m$b:
    android.view.View $this_apply -> a
    android.view.View $loadingView -> c
    leakcanary.internal.activity.screen.RenderHeapDumpScreen this$0 -> d
    android.widget.ImageView $imageView -> b
    46:46:void <init>(android.view.View,android.widget.ImageView,android.view.View,leakcanary.internal.activity.screen.RenderHeapDumpScreen,android.view.ViewGroup) -> <init>
    49:64:void onGlobalLayout() -> onGlobalLayout
leakcanary.internal.activity.screen.RenderHeapDumpScreen$createView$$inlined$apply$lambda$2$1 -> c.l.a0.c.m$b$a:
    leakcanary.internal.activity.screen.RenderHeapDumpScreen$createView$$inlined$apply$lambda$2 this$0 -> a
    50:58:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    46:46:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.RenderHeapDumpScreen$createView$$inlined$apply$lambda$2$1$1 -> c.l.a0.c.m$b$a$a:
    android.graphics.Bitmap $bitmap -> b
    leakcanary.internal.activity.screen.RenderHeapDumpScreen$createView$$inlined$apply$lambda$2$1 this$0 -> a
    54:57:void invoke(android.view.View) -> c
    46:46:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.RenderHeapDumpScreen$createView$$inlined$apply$lambda$3 -> c.l.a0.c.m$c:
    leakcanary.internal.activity.screen.RenderHeapDumpScreen this$0 -> b
    android.view.View $this_apply -> a
    68:129:void invoke(android.view.Menu) -> c
    27:27:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.RenderHeapDumpScreen$createView$$inlined$apply$lambda$3$1 -> c.l.a0.c.m$c$a:
    leakcanary.internal.activity.screen.RenderHeapDumpScreen$createView$$inlined$apply$lambda$3 this$0 -> a
    70:127:boolean onMenuItemClick(android.view.MenuItem) -> onMenuItemClick
leakcanary.internal.activity.screen.RenderHeapDumpScreen$createView$$inlined$apply$lambda$3$1$1 -> c.l.a0.c.m$c$a$a:
    leakcanary.internal.activity.screen.RenderHeapDumpScreen$createView$$inlined$apply$lambda$3$1 this$0 -> a
    87:94:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> c
    31:31:void invoke(leakcanary.internal.activity.db.Io$OnIo):162 -> c
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> c
    32:32:void invoke(leakcanary.internal.activity.db.Io$OnIo):163 -> c
    94:125:void invoke(leakcanary.internal.activity.db.Io$OnIo) -> c
    27:27:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.RenderHeapDumpScreen$createView$$inlined$apply$lambda$3$1$1$1 -> c.l.a0.c.m$c$a$a$a:
    android.net.Uri $imageUri -> a
    103:114:void invoke(android.view.View) -> c
    27:27:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.screen.RenderHeapDumpScreen$createView$1$3$1$1$3 -> c.l.a0.c.n:
    leakcanary.internal.activity.screen.RenderHeapDumpScreen$createView$1$3$1$1$3 INSTANCE -> a
    117:123:void invoke(android.view.View) -> c
    27:27:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.activity.ui.SimpleListAdapter -> c.l.a0.d.a:
    java.util.List items -> b
    kotlin.jvm.functions.Function3 bindView -> c
    int rowResId -> a
    8:12:void <init>(int,java.util.List,kotlin.jvm.functions.Function3) -> <init>
    27:27:int getCount() -> getCount
    23:23:java.lang.Object getItem(int) -> getItem
    25:25:long getItemId(int) -> getItemId
    18:20:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
leakcanary.internal.activity.ui.TimeFormatter -> c.l.a0.d.b:
    leakcanary.internal.activity.ui.TimeFormatter INSTANCE -> a
    6:6:void <clinit>() -> <clinit>
    6:6:void <init>() -> <init>
    21:22:java.lang.String formatTimestamp(android.content.Context,long) -> a
leakcanary.internal.activity.ui.UiUtils -> c.l.a0.d.c:
    leakcanary.internal.activity.ui.UiUtils INSTANCE -> a
    8:8:void <clinit>() -> <clinit>
    8:8:void <init>() -> <init>
    14:30:void replaceUrlSpanWithAction$leakcanary_android_core_release(android.text.SpannableStringBuilder,kotlin.jvm.functions.Function1) -> a
leakcanary.internal.activity.ui.UiUtils$replaceUrlSpanWithAction$newSpan$1 -> c.l.a0.d.c$a:
    kotlin.jvm.functions.Function0 $action -> a
    22:22:void <init>(kotlin.jvm.functions.Function0) -> <init>
    24:25:void onClick(android.view.View) -> onClick
leakcanary.internal.navigation.BackstackFrame -> leakcanary.internal.navigation.BackstackFrame:
    leakcanary.internal.navigation.Screen screen -> a
    android.util.SparseArray viewState -> b
    56:56:void <clinit>() -> <clinit>
    8:8:void <init>(android.os.Parcel,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    16:16:void <init>(android.os.Parcel) -> <init>
    24:25:void <init>(leakcanary.internal.navigation.Screen) -> <init>
    32:34:void <init>(leakcanary.internal.navigation.Screen,android.view.View) -> <init>
    10:10:leakcanary.internal.navigation.Screen getScreen() -> a
    38:41:void restore(android.view.View) -> b
    43:43:int describeContents() -> describeContents
    50:52:void writeToParcel(android.os.Parcel,int) -> writeToParcel
leakcanary.internal.navigation.BackstackFrame$Companion -> leakcanary.internal.navigation.BackstackFrame$b:
    54:54:void <init>() -> <init>
    54:54:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
leakcanary.internal.navigation.BackstackFrame$Companion$CREATOR$1 -> leakcanary.internal.navigation.BackstackFrame$a:
    56:56:void <init>() -> <init>
    58:58:leakcanary.internal.navigation.BackstackFrame createFromParcel(android.os.Parcel) -> a
    62:62:leakcanary.internal.navigation.BackstackFrame[] newArray(int) -> b
    56:56:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    56:56:java.lang.Object[] newArray(int) -> newArray
leakcanary.internal.navigation.NavigatingActivity -> leakcanary.internal.navigation.NavigatingActivity:
    kotlin.jvm.functions.Function1 NO_MENU -> f
    leakcanary.internal.navigation.Screen currentScreen -> b
    kotlin.jvm.functions.Function1 onCreateOptionsMenu -> e
    android.view.ViewGroup container -> c
    android.view.View currentView -> d
    java.util.ArrayList backstack -> a
    184:184:void <clinit>() -> <clinit>
    17:17:kotlin.jvm.functions.Function1 access$getNO_MENU$cp() -> <init>
    17:17:void <init>():17 -> <init>
    25:25:void <init>() -> <init>
    72:72:leakcanary.internal.navigation.Screen getLauncherScreen() -> a
    134:136:void goBack() -> b
    107:109:void goTo(leakcanary.internal.navigation.Screen) -> c
    31:47:void installNavigation(android.os.Bundle,android.view.ViewGroup) -> d
    162:162:void onNewScreen(leakcanary.internal.navigation.Screen) -> e
    124:125:void refreshCurrentScreen() -> f
    90:92:void resetTo(leakcanary.internal.navigation.Screen) -> g
    151:154:void screenUpdated() -> h
    25:25:void <init>() -> i
    25:25:void setOnCreateOptionsMenu(kotlin.jvm.functions.Function1):25 -> i
    82:82:void onBackPressed() -> onBackPressed
    165:166:boolean onCreateOptionsMenu(android.view.Menu) -> onCreateOptionsMenu
    179:180:void onDestroy() -> onDestroy
    59:69:void onNewIntent(android.content.Intent) -> onNewIntent
    170:176:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    76:77:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
leakcanary.internal.navigation.NavigatingActivity$Companion -> leakcanary.internal.navigation.NavigatingActivity$b:
    183:183:void <init>() -> <init>
    183:183:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
leakcanary.internal.navigation.NavigatingActivity$Companion$NO_MENU$1 -> leakcanary.internal.navigation.NavigatingActivity$a:
    leakcanary.internal.navigation.NavigatingActivity$Companion$NO_MENU$1 INSTANCE -> a
    184:184:void invoke(android.view.Menu) -> c
    183:183:java.lang.Object invoke(java.lang.Object) -> invoke
leakcanary.internal.navigation.Screen -> c.l.b0.a:
    11:11:void <init>() -> <init>
    android.view.View createView(android.view.ViewGroup) -> a
leakcanary.internal.navigation.ViewsKt -> c.l.b0.b:
    19:19:android.app.Activity activity(android.view.View) -> a
    16:16:android.app.Activity getActivity(android.view.View) -> b
    35:35:int getColorCompat(android.content.Context,int) -> c
    31:32:void goBack(android.view.View) -> d
    27:28:void goTo(android.view.View,leakcanary.internal.navigation.Screen) -> e
    12:13:android.view.View inflate(android.view.ViewGroup,int) -> f
    54:57:void notifyScreenExiting(android.view.View) -> g
    22:24:void onCreateOptionsMenu(android.view.View,kotlin.jvm.functions.Function1) -> h
    44:50:void onScreenExiting(android.view.View,kotlin.jvm.functions.Function0) -> i
leakcanary.internal.tv.TvOnRetainInstanceListener -> c.l.c0.a:
    android.app.Application application -> b
    android.os.Handler handler -> a
    25:28:void <init>(android.app.Application) -> <init>
    31:49:void onEvent(leakcanary.internal.RetainInstanceEvent) -> a
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> a
    31:31:void onEvent(leakcanary.internal.RetainInstanceEvent):57 -> a
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> a
    32:32:void onEvent(leakcanary.internal.RetainInstanceEvent):58 -> a
    49:49:void onEvent(leakcanary.internal.RetainInstanceEvent) -> a
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> a
    33:33:void onEvent(leakcanary.internal.RetainInstanceEvent):59 -> a
    51:46:void onEvent(leakcanary.internal.RetainInstanceEvent) -> a
leakcanary.internal.tv.TvOnRetainInstanceListener$onEvent$2 -> c.l.c0.a$a:
    java.lang.String $message -> a
    52:52:void run() -> run
leakcanary.internal.tv.TvToast -> c.l.c0.b:
    leakcanary.internal.tv.TvToast INSTANCE -> a
    13:13:void <clinit>() -> <clinit>
    13:13:void <init>() -> <init>
    24:29:android.widget.Toast makeText(android.app.Activity,java.lang.CharSequence) -> a
okio.-Platform -> d.a:
    32:33:void arraycopy(byte[],int,byte[],int,int) -> a
    35:35:java.lang.String toUtf8String(byte[]) -> b
okio.-Util -> d.b:
    84:87:boolean arrayRangeEquals(byte[],int,byte[],int,int) -> a
    22:23:void checkOffsetAndCount(long,long,long) -> b
okio.Buffer -> d.c:
    long size -> b
    okio.Segment head -> a
    2213:2213:void <clinit>() -> <clinit>
    44:44:void <init>() -> <init>
    662:662:java.lang.String readString(long,java.nio.charset.Charset) -> a
    656:656:java.lang.String readUtf8(long) -> b
    51:51:okio.Buffer buffer() -> c
    44:44:void <init>() -> clone
    44:44:java.lang.Object clone():44 -> clone
    1621:1621:void close() -> close
    1380:1381:long read(okio.Buffer,long) -> d
    77:77:boolean exhausted() -> e
    1678:1683:boolean equals(java.lang.Object) -> equals
    814:814:byte[] readByteArray(long) -> f
    1617:1617:void flush() -> flush
    874:874:void clear() -> g
    1735:1738:okio.Buffer clone() -> h
    1713:1713:int hashCode() -> hashCode
    1425:1432:long indexOf(byte,long,long) -> i
    1395:1395:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1395:1395:long indexOf(byte,long,long):2276 -> i
    1454:1454:long indexOf(byte,long,long) -> i
    1397:1397:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1397:1397:long indexOf(byte,long,long):2278 -> i
    1399:1399:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1399:1399:long indexOf(byte,long,long):2280 -> i
    1400:1400:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1400:1400:long indexOf(byte,long,long):2281 -> i
    1401:1401:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1401:1401:long indexOf(byte,long,long):2282 -> i
    1402:1402:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1402:1402:long indexOf(byte,long,long):2283 -> i
    1400:1400:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1400:1400:long indexOf(byte,long,long):2281 -> i
    1401:1401:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1401:1401:long indexOf(byte,long,long):2282 -> i
    1404:1404:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1404:1404:long indexOf(byte,long,long):2285 -> i
    1433:1454:long indexOf(byte,long,long) -> i
    1407:1407:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1407:1407:long indexOf(byte,long,long):2288 -> i
    1408:1408:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1408:1408:long indexOf(byte,long,long):2289 -> i
    1409:1409:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1409:1409:long indexOf(byte,long,long):2290 -> i
    1410:1410:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1410:1410:long indexOf(byte,long,long):2291 -> i
    1414:1414:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1414:1414:long indexOf(byte,long,long):2295 -> i
    1433:1454:long indexOf(byte,long,long) -> i
    1411:1411:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1411:1411:long indexOf(byte,long,long):2292 -> i
    1412:1412:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1412:1412:long indexOf(byte,long,long):2293 -> i
    1408:1408:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1408:1408:long indexOf(byte,long,long):2289 -> i
    1411:1411:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1411:1411:long indexOf(byte,long,long):2292 -> i
    1395:1395:java.lang.Object seek(long,kotlin.jvm.functions.Function2) -> i
    1395:1395:long indexOf(byte,long,long):2276 -> i
    1433:1427:long indexOf(byte,long,long) -> i
    1619:1619:boolean isOpen() -> isOpen
    826:832:void readFully(byte[]) -> j
    48:48:void setSize$jvm(long) -> k
    48:48:void setSize$jvm(long) -> l
    48:48:long size():48 -> l
    1752:1752:okio.ByteString snapshot() -> m
    1758:1758:okio.ByteString snapshot(int) -> n
    1270:1270:okio.Segment writableSegment$jvm(int) -> o
    1288:1339:void write(okio.Buffer,long) -> p
    835:837:int read(byte[],int,int) -> read
    854:854:int read(java.nio.ByteBuffer) -> read
    263:263:byte readByte() -> readByte
    322:330:int readInt() -> readInt
    63:63:int okio.-Util.and(byte,int) -> readInt
    63:63:int readInt():2244 -> readInt
    330:331:int readInt() -> readInt
    63:63:int okio.-Util.and(byte,int) -> readInt
    63:63:int readInt():2245 -> readInt
    331:332:int readInt() -> readInt
    63:63:int okio.-Util.and(byte,int) -> readInt
    63:63:int readInt():2246 -> readInt
    332:333:int readInt() -> readInt
    63:63:int okio.-Util.and(byte,int) -> readInt
    63:63:int readInt():2247 -> readInt
    333:337:int readInt() -> readInt
    63:63:int okio.-Util.and(byte,int) -> readInt
    63:63:int readInt():2248 -> readInt
    337:338:int readInt() -> readInt
    63:63:int okio.-Util.and(byte,int) -> readInt
    63:63:int readInt():2249 -> readInt
    338:339:int readInt() -> readInt
    63:63:int okio.-Util.and(byte,int) -> readInt
    63:63:int readInt():2250 -> readInt
    339:340:int readInt() -> readInt
    63:63:int okio.-Util.and(byte,int) -> readInt
    63:63:int readInt():2251 -> readInt
    340:322:int readInt() -> readInt
    355:363:long readLong() -> readLong
    69:69:long okio.-Util.and(int,long) -> readLong
    69:69:long readLong():2252 -> readLong
    363:364:long readLong() -> readLong
    69:69:long okio.-Util.and(int,long) -> readLong
    69:69:long readLong():2253 -> readLong
    364:368:long readLong() -> readLong
    66:66:long okio.-Util.and(byte,long) -> readLong
    66:66:long readLong():2254 -> readLong
    368:369:long readLong() -> readLong
    66:66:long okio.-Util.and(byte,long) -> readLong
    66:66:long readLong():2255 -> readLong
    369:370:long readLong() -> readLong
    66:66:long okio.-Util.and(byte,long) -> readLong
    66:66:long readLong():2256 -> readLong
    370:371:long readLong() -> readLong
    66:66:long okio.-Util.and(byte,long) -> readLong
    66:66:long readLong():2257 -> readLong
    371:372:long readLong() -> readLong
    66:66:long okio.-Util.and(byte,long) -> readLong
    66:66:long readLong():2258 -> readLong
    372:373:long readLong() -> readLong
    66:66:long okio.-Util.and(byte,long) -> readLong
    66:66:long readLong():2259 -> readLong
    373:374:long readLong() -> readLong
    66:66:long okio.-Util.and(byte,long) -> readLong
    66:66:long readLong():2260 -> readLong
    374:375:long readLong() -> readLong
    66:66:long okio.-Util.and(byte,long) -> readLong
    66:66:long readLong():2261 -> readLong
    375:355:long readLong() -> readLong
    294:302:short readShort() -> readShort
    63:63:int okio.-Util.and(byte,int) -> readShort
    63:63:short readShort():2240 -> readShort
    302:302:short readShort() -> readShort
    63:63:int okio.-Util.and(byte,int) -> readShort
    63:63:short readShort():2241 -> readShort
    302:307:short readShort() -> readShort
    63:63:int okio.-Util.and(byte,int) -> readShort
    63:63:short readShort():2242 -> readShort
    307:307:short readShort() -> readShort
    63:63:int okio.-Util.and(byte,int) -> readShort
    63:63:short readShort():2243 -> readShort
    307:294:short readShort() -> readShort
    879:883:void skip(long) -> skip
    72:72:long okio.-Util.minOf(long,int) -> skip
    72:72:void skip(long):2275 -> skip
    883:893:void skip(long) -> skip
    1731:1731:java.lang.String toString() -> toString
    1084:1097:int write(java.nio.ByteBuffer) -> write
okio.Buffer$Companion -> d.c$a:
    2212:2212:void <init>() -> <init>
    2212:2212:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okio.BufferedSource -> d.d:
    java.lang.String readString(long,java.nio.charset.Charset) -> a
    java.lang.String readUtf8(long) -> b
    okio.Buffer buffer() -> c
    boolean exhausted() -> e
    byte[] readByteArray(long) -> f
okio.ByteString -> d.e:
    okio.ByteString$Companion Companion -> e
    okio.ByteString EMPTY -> d
    java.lang.String utf8 -> b
    byte[] data -> c
    int hashCode -> a
    282:282:void <clinit>() -> <clinit>
    72:72:void <init>(byte[]) -> <init>
    240:240:int compareTo(okio.ByteString) -> a
    160:160:byte getByte(int) -> b
    73:73:byte[] getData$jvm() -> c
    70:70:int compareTo(java.lang.Object) -> compareTo
    75:75:void setHashCode$jvm(int) -> d
    75:75:int getHashCode$jvm():75 -> d
    167:167:int getSize$jvm() -> e
    236:236:boolean equals(java.lang.Object) -> equals
    76:76:void setUtf8$jvm(java.lang.String) -> f
    76:76:java.lang.String getUtf8$jvm():76 -> f
    128:128:java.lang.String hex() -> g
    173:173:byte[] internalArray$jvm() -> h
    238:238:int hashCode() -> hashCode
    156:156:byte internalGet$jvm(int) -> i
    209:209:boolean rangeEquals(int,byte[],int,int) -> j
    75:75:void setHashCode$jvm(int) -> k
    76:76:void setUtf8$jvm(java.lang.String) -> l
    164:164:int size() -> m
    79:79:java.lang.String utf8() -> n
    250:255:void readObject(java.io.ObjectInputStream) -> readObject
    246:246:java.lang.String toString() -> toString
    259:261:void writeObject(java.io.ObjectOutputStream) -> writeObject
okio.ByteString$Companion -> d.e$a:
    277:277:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    277:277:void <init>():277 -> <init>
    277:277:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    286:286:okio.ByteString of(byte[]) -> a
    342:342:okio.ByteString read(java.io.InputStream,int) -> b
okio.InputStreamSource -> d.f:
    okio.Timeout timeout -> b
    java.io.InputStream input -> a
    90:90:void <init>(java.io.InputStream,okio.Timeout) -> <init>
    113:113:void close() -> close
    96:101:long read(okio.Buffer,long) -> d
    72:72:long okio.-Util.minOf(long,int) -> d
    72:72:long read(okio.Buffer,long):216 -> d
    101:97:long read(okio.Buffer,long) -> d
    117:117:java.lang.String toString() -> toString
okio.Okio -> d.g:
    42:42:okio.BufferedSource buffer(okio.Source) -> a
    213:213:boolean isAndroidGetsocknameError(java.lang.AssertionError) -> b
    88:88:okio.Source source(java.io.InputStream) -> c
okio.RealBufferedSource -> d.h:
    okio.Buffer bufferField -> a
    okio.Source source -> c
    boolean closed -> b
    24:27:void <init>(okio.Source) -> <init>
    199:200:java.lang.String readString(long,java.nio.charset.Charset) -> a
    32:32:okio.Buffer getBuffer() -> a
    32:32:java.lang.String readString(long,java.nio.charset.Charset):514 -> a
    200:200:java.lang.String readString(long,java.nio.charset.Charset) -> a
    189:190:java.lang.String readUtf8(long) -> b
    32:32:okio.Buffer getBuffer() -> b
    32:32:java.lang.String readUtf8(long):511 -> b
    190:190:java.lang.String readUtf8(long) -> b
    34:34:okio.Buffer buffer() -> c
    459:462:void close() -> close
    32:32:okio.Buffer getBuffer() -> close
    32:32:void close():552 -> close
    462:463:void close() -> close
    37:40:long read(okio.Buffer,long) -> d
    32:32:okio.Buffer getBuffer() -> d
    32:32:long read(okio.Buffer,long):470 -> d
    41:41:long read(okio.Buffer,long) -> d
    32:32:okio.Buffer getBuffer() -> d
    32:32:long read(okio.Buffer,long):471 -> d
    41:45:long read(okio.Buffer,long) -> d
    32:32:okio.Buffer getBuffer() -> d
    32:32:long read(okio.Buffer,long):472 -> d
    45:46:long read(okio.Buffer,long) -> d
    32:32:okio.Buffer getBuffer() -> d
    32:32:long read(okio.Buffer,long):473 -> d
    46:37:long read(okio.Buffer,long) -> d
    50:51:boolean exhausted() -> e
    32:32:okio.Buffer getBuffer() -> e
    32:32:boolean exhausted():474 -> e
    51:51:boolean exhausted() -> e
    32:32:okio.Buffer getBuffer() -> e
    32:32:boolean exhausted():475 -> e
    51:50:boolean exhausted() -> e
    111:112:byte[] readByteArray(long) -> f
    32:32:okio.Buffer getBuffer() -> f
    32:32:byte[] readByteArray(long):487 -> f
    112:112:byte[] readByteArray(long) -> f
    333:333:long indexOf(byte) -> g
    338:343:long indexOf(byte,long,long) -> h
    32:32:okio.Buffer getBuffer() -> h
    32:32:long indexOf(byte,long,long):542 -> h
    343:348:long indexOf(byte,long,long) -> h
    32:32:okio.Buffer getBuffer() -> h
    32:32:long indexOf(byte,long,long):543 -> h
    348:349:long indexOf(byte,long,long) -> h
    32:32:okio.Buffer getBuffer() -> h
    32:32:long indexOf(byte,long,long):544 -> h
    349:339:long indexOf(byte,long,long) -> h
    59:61:boolean request(long) -> i
    32:32:okio.Buffer getBuffer() -> i
    32:32:boolean request(long):476 -> i
    62:62:boolean request(long) -> i
    32:32:okio.Buffer getBuffer() -> i
    32:32:boolean request(long):477 -> i
    62:59:boolean request(long) -> i
    456:456:boolean isOpen() -> isOpen
    55:55:void require(long) -> j
    147:147:int read(java.nio.ByteBuffer) -> read
    32:32:okio.Buffer getBuffer() -> read
    32:32:int read(java.nio.ByteBuffer):497 -> read
    148:148:int read(java.nio.ByteBuffer) -> read
    32:32:okio.Buffer getBuffer() -> read
    32:32:int read(java.nio.ByteBuffer):498 -> read
    148:152:int read(java.nio.ByteBuffer) -> read
    32:32:okio.Buffer getBuffer() -> read
    32:32:int read(java.nio.ByteBuffer):499 -> read
    152:152:int read(java.nio.ByteBuffer) -> read
    68:69:byte readByte() -> readByte
    32:32:okio.Buffer getBuffer() -> readByte
    32:32:byte readByte():478 -> readByte
    69:69:byte readByte() -> readByte
    259:260:int readInt() -> readInt
    32:32:okio.Buffer getBuffer() -> readInt
    32:32:int readInt():530 -> readInt
    260:260:int readInt() -> readInt
    269:270:long readLong() -> readLong
    32:32:okio.Buffer getBuffer() -> readLong
    32:32:long readLong():532 -> readLong
    270:270:long readLong() -> readLong
    249:250:short readShort() -> readShort
    32:32:okio.Buffer getBuffer() -> readShort
    32:32:short readShort():528 -> readShort
    250:250:short readShort() -> readShort
    321:324:void skip(long) -> skip
    32:32:okio.Buffer getBuffer() -> skip
    32:32:void skip(long):538 -> skip
    324:324:void skip(long) -> skip
    32:32:okio.Buffer getBuffer() -> skip
    32:32:void skip(long):539 -> skip
    324:327:void skip(long) -> skip
    32:32:okio.Buffer getBuffer() -> skip
    32:32:void skip(long):540 -> skip
    327:328:void skip(long) -> skip
    32:32:okio.Buffer getBuffer() -> skip
    32:32:void skip(long):541 -> skip
    328:322:void skip(long) -> skip
    467:467:java.lang.String toString() -> toString
okio.Segment -> d.i:
    byte[] data -> a
    boolean owner -> e
    int pos -> b
    okio.Segment prev -> g
    int limit -> c
    okio.Segment next -> f
    boolean shared -> d
    55:57:void <init>() -> <init>
    61:65:void <init>(byte[],int,int,boolean,boolean) -> <init>
    140:140:void compact() -> a
    86:87:okio.Segment pop() -> b
    98:100:okio.Segment push(okio.Segment) -> c
    74:75:okio.Segment sharedCopy() -> d
    114:114:okio.Segment split(int) -> e
    152:152:void writeTo(okio.Segment,int) -> f
okio.Segment$Companion -> d.i$a:
    167:167:void <init>() -> <init>
    167:167:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okio.SegmentPool -> d.j:
    okio.SegmentPool INSTANCE -> c
    long byteCount -> b
    okio.Segment next -> a
    22:22:void <clinit>() -> <clinit>
    22:22:void <clinit>() -> <init>
    22:22:void <init>():22 -> <init>
    50:50:void recycle(okio.Segment) -> a
    37:37:okio.Segment take() -> b
okio.SegmentedByteString -> d.k:
    okio.SegmentedByteString$Companion Companion -> h
    int[] directory -> g
    byte[][] segments -> f
    53:53:void <init>(byte[][],int[],kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    53:53:void <init>(byte[][],int[]):53 -> <init>
    56:56:void <init>(byte[][],int[]) -> <init>
    53:53:void <init>(byte[][],int[],kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    173:173:int getSize$jvm() -> e
    295:295:boolean equals(java.lang.Object) -> equals
    99:99:java.lang.String hex() -> g
    251:251:byte[] internalArray$jvm() -> h
    303:308:int hashCode() -> hashCode
    257:257:void forEachSegment(kotlin.jvm.functions.Function3) -> hashCode
    257:257:int hashCode():414 -> hashCode
    258:258:void forEachSegment(kotlin.jvm.functions.Function3) -> hashCode
    258:258:int hashCode():415 -> hashCode
    259:259:void forEachSegment(kotlin.jvm.functions.Function3) -> hashCode
    259:259:int hashCode():416 -> hashCode
    260:260:void forEachSegment(kotlin.jvm.functions.Function3) -> hashCode
    260:260:int hashCode():417 -> hashCode
    261:261:void forEachSegment(kotlin.jvm.functions.Function3) -> hashCode
    261:261:int hashCode():418 -> hashCode
    262:262:void forEachSegment(kotlin.jvm.functions.Function3) -> hashCode
    262:262:int hashCode():419 -> hashCode
    264:264:void forEachSegment(kotlin.jvm.functions.Function3) -> hashCode
    264:264:int hashCode():421 -> hashCode
    309:315:int hashCode() -> hashCode
    265:265:void forEachSegment(kotlin.jvm.functions.Function3) -> hashCode
    265:265:int hashCode():422 -> hashCode
    266:266:void forEachSegment(kotlin.jvm.functions.Function3) -> hashCode
    266:266:int hashCode():423 -> hashCode
    260:260:void forEachSegment(kotlin.jvm.functions.Function3) -> hashCode
    260:260:int hashCode():417 -> hashCode
    268:268:void forEachSegment(kotlin.jvm.functions.Function3) -> hashCode
    268:268:int hashCode():425 -> hashCode
    316:317:int hashCode() -> hashCode
    159:163:byte internalGet$jvm(int) -> i
    230:236:boolean rangeEquals(int,byte[],int,int) -> j
    279:279:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> j
    279:279:boolean rangeEquals(int,byte[],int,int):400 -> j
    280:280:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> j
    280:280:boolean rangeEquals(int,byte[],int,int):401 -> j
    281:281:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> j
    281:281:boolean rangeEquals(int,byte[],int,int):402 -> j
    282:282:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> j
    282:282:boolean rangeEquals(int,byte[],int,int):403 -> j
    283:283:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> j
    283:283:boolean rangeEquals(int,byte[],int,int):404 -> j
    284:284:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> j
    284:284:boolean rangeEquals(int,byte[],int,int):405 -> j
    286:286:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> j
    286:286:boolean rangeEquals(int,byte[],int,int):407 -> j
    287:287:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> j
    287:287:boolean rangeEquals(int,byte[],int,int):408 -> j
    288:288:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> j
    288:288:boolean rangeEquals(int,byte[],int,int):409 -> j
    237:239:boolean rangeEquals(int,byte[],int,int) -> j
    289:289:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> j
    289:289:boolean rangeEquals(int,byte[],int,int):410 -> j
    290:290:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> j
    290:290:boolean rangeEquals(int,byte[],int,int):411 -> j
    281:281:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> j
    281:281:boolean rangeEquals(int,byte[],int,int):402 -> j
    292:292:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> j
    292:292:boolean rangeEquals(int,byte[],int,int):413 -> j
    240:232:boolean rangeEquals(int,byte[],int,int) -> j
    53:53:void <init>(byte[][],int[],kotlin.jvm.internal.DefaultConstructorMarker) -> o
    53:53:int access$segment(okio.SegmentedByteString,int):53 -> o
    55:55:int[] getDirectory() -> p
    54:54:byte[][] getSegments() -> q
    214:217:boolean rangeEquals(int,okio.ByteString,int,int) -> r
    279:279:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> r
    279:279:boolean rangeEquals(int,okio.ByteString,int,int):386 -> r
    280:280:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> r
    280:280:boolean rangeEquals(int,okio.ByteString,int,int):387 -> r
    281:281:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> r
    281:281:boolean rangeEquals(int,okio.ByteString,int,int):388 -> r
    282:282:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> r
    282:282:boolean rangeEquals(int,okio.ByteString,int,int):389 -> r
    283:283:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> r
    283:283:boolean rangeEquals(int,okio.ByteString,int,int):390 -> r
    284:284:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> r
    284:284:boolean rangeEquals(int,okio.ByteString,int,int):391 -> r
    286:286:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> r
    286:286:boolean rangeEquals(int,okio.ByteString,int,int):393 -> r
    287:287:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> r
    287:287:boolean rangeEquals(int,okio.ByteString,int,int):394 -> r
    288:288:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> r
    288:288:boolean rangeEquals(int,okio.ByteString,int,int):395 -> r
    218:220:boolean rangeEquals(int,okio.ByteString,int,int) -> r
    289:289:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> r
    289:289:boolean rangeEquals(int,okio.ByteString,int,int):396 -> r
    290:290:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> r
    290:290:boolean rangeEquals(int,okio.ByteString,int,int):397 -> r
    281:281:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> r
    281:281:boolean rangeEquals(int,okio.ByteString,int,int):388 -> r
    292:292:void forEachSegment(int,int,kotlin.jvm.functions.Function3) -> r
    292:292:boolean rangeEquals(int,okio.ByteString,int,int):399 -> r
    221:214:boolean rangeEquals(int,okio.ByteString,int,int) -> r
    169:170:int segment(int) -> s
    176:178:byte[] toByteArray() -> t
    257:257:void forEachSegment(kotlin.jvm.functions.Function3) -> t
    257:257:byte[] toByteArray():350 -> t
    258:258:void forEachSegment(kotlin.jvm.functions.Function3) -> t
    258:258:byte[] toByteArray():351 -> t
    259:259:void forEachSegment(kotlin.jvm.functions.Function3) -> t
    259:259:byte[] toByteArray():352 -> t
    260:260:void forEachSegment(kotlin.jvm.functions.Function3) -> t
    260:260:byte[] toByteArray():353 -> t
    261:261:void forEachSegment(kotlin.jvm.functions.Function3) -> t
    261:261:byte[] toByteArray():354 -> t
    262:262:void forEachSegment(kotlin.jvm.functions.Function3) -> t
    262:262:byte[] toByteArray():355 -> t
    264:264:void forEachSegment(kotlin.jvm.functions.Function3) -> t
    264:264:byte[] toByteArray():357 -> t
    179:181:byte[] toByteArray() -> t
    265:265:void forEachSegment(kotlin.jvm.functions.Function3) -> t
    265:265:byte[] toByteArray():358 -> t
    266:266:void forEachSegment(kotlin.jvm.functions.Function3) -> t
    266:266:byte[] toByteArray():359 -> t
    260:260:void forEachSegment(kotlin.jvm.functions.Function3) -> t
    260:260:byte[] toByteArray():353 -> t
    268:268:void forEachSegment(kotlin.jvm.functions.Function3) -> t
    268:268:byte[] toByteArray():361 -> t
    182:182:byte[] toByteArray() -> t
    320:320:java.lang.String toString() -> toString
    249:249:okio.ByteString toByteString() -> u
    323:323:java.lang.Object writeReplace() -> writeReplace
okio.SegmentedByteString$Companion -> d.k$a:
    58:58:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    58:58:void <init>():58 -> <init>
    58:58:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    60:91:okio.ByteString of(okio.Buffer,int) -> a
okio.Source -> d.l:
    long read(okio.Buffer,long) -> d
okio.Timeout -> d.m:
    240:240:void <clinit>() -> <clinit>
    40:40:void <init>() -> <init>
    114:116:void throwIfReached() -> a
okio.Timeout$Companion -> d.m$b:
    235:235:void <init>() -> <init>
    235:235:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
okio.Timeout$Companion$NONE$1 -> d.m$a:
    240:240:void <init>() -> <init>
    245:245:void throwIfReached() -> a
okio.internal.ByteStringKt -> d.n.a:
    char[] HEX_DIGITS -> a
    okio.ByteString COMMON_EMPTY -> b
    51:224:void <clinit>() -> <clinit>
    285:287:int codePointIndexToCharIndex(byte[],int) -> a
    206:206:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    206:206:int codePointIndexToCharIndex(byte[],int):306 -> a
    207:207:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    207:207:int codePointIndexToCharIndex(byte[],int):307 -> a
    208:208:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    208:208:int codePointIndexToCharIndex(byte[],int):308 -> a
    209:209:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    209:209:int codePointIndexToCharIndex(byte[],int):309 -> a
    210:210:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    210:210:int codePointIndexToCharIndex(byte[],int):310 -> a
    212:212:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    212:212:int codePointIndexToCharIndex(byte[],int):312 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):313 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    213:213:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    213:213:int codePointIndexToCharIndex(byte[],int):314 -> a
    216:216:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    216:216:int codePointIndexToCharIndex(byte[],int):317 -> a
    217:217:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    217:217:int codePointIndexToCharIndex(byte[],int):318 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):319 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    216:216:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    216:216:int codePointIndexToCharIndex(byte[],int):317 -> a
    238:238:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    238:238:int codePointIndexToCharIndex(byte[],int):476 -> a
    220:220:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    220:220:int codePointIndexToCharIndex(byte[],int):320 -> a
    57:57:int okio.-Util.shr(byte,int) -> a
    57:57:int codePointIndexToCharIndex(byte[],int):321 -> a
    222:222:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    222:222:int codePointIndexToCharIndex(byte[],int):322 -> a
    390:390:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    390:390:int codePointIndexToCharIndex(byte[],int):323 -> a
    391:391:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    391:391:int codePointIndexToCharIndex(byte[],int):324 -> a
    222:222:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    222:222:int codePointIndexToCharIndex(byte[],int):322 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):325 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    393:393:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    393:393:int codePointIndexToCharIndex(byte[],int):326 -> a
    396:396:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    396:396:int codePointIndexToCharIndex(byte[],int):329 -> a
    397:397:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    397:397:int codePointIndexToCharIndex(byte[],int):330 -> a
    398:398:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    398:398:int codePointIndexToCharIndex(byte[],int):331 -> a
    124:124:boolean okio.Utf8.isUtf8Continuation(byte) -> a
    124:124:int codePointIndexToCharIndex(byte[],int):332 -> a
    63:63:int okio.-Util.and(byte,int) -> a
    63:63:int codePointIndexToCharIndex(byte[],int):333 -> a
    399:399:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    399:399:int codePointIndexToCharIndex(byte[],int):334 -> a
    222:222:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    222:222:int codePointIndexToCharIndex(byte[],int):322 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):335 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    400:400:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    400:400:int codePointIndexToCharIndex(byte[],int):336 -> a
    403:403:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    403:403:int codePointIndexToCharIndex(byte[],int):339 -> a
    404:404:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    404:404:int codePointIndexToCharIndex(byte[],int):340 -> a
    405:405:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    405:405:int codePointIndexToCharIndex(byte[],int):341 -> a
    406:406:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    406:406:int codePointIndexToCharIndex(byte[],int):342 -> a
    403:403:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    403:403:int codePointIndexToCharIndex(byte[],int):339 -> a
    408:408:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    408:408:int codePointIndexToCharIndex(byte[],int):344 -> a
    409:409:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    409:409:int codePointIndexToCharIndex(byte[],int):345 -> a
    410:410:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    410:410:int codePointIndexToCharIndex(byte[],int):346 -> a
    222:222:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    222:222:int codePointIndexToCharIndex(byte[],int):322 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):347 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    413:413:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    413:413:int codePointIndexToCharIndex(byte[],int):348 -> a
    222:222:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    222:222:int codePointIndexToCharIndex(byte[],int):322 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):349 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    415:415:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    415:415:int codePointIndexToCharIndex(byte[],int):350 -> a
    416:416:int okio.Utf8.process2Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    416:416:int codePointIndexToCharIndex(byte[],int):351 -> a
    222:222:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    222:222:int codePointIndexToCharIndex(byte[],int):322 -> a
    224:224:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    224:224:int codePointIndexToCharIndex(byte[],int):352 -> a
    57:57:int okio.-Util.shr(byte,int) -> a
    57:57:int codePointIndexToCharIndex(byte[],int):353 -> a
    226:226:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    226:226:int codePointIndexToCharIndex(byte[],int):354 -> a
    431:431:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    431:431:int codePointIndexToCharIndex(byte[],int):355 -> a
    433:433:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    433:433:int codePointIndexToCharIndex(byte[],int):357 -> a
    226:226:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    226:226:int codePointIndexToCharIndex(byte[],int):354 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):358 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    434:434:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    434:434:int codePointIndexToCharIndex(byte[],int):359 -> a
    124:124:boolean okio.Utf8.isUtf8Continuation(byte) -> a
    124:124:int codePointIndexToCharIndex(byte[],int):360 -> a
    63:63:int okio.-Util.and(byte,int) -> a
    63:63:int codePointIndexToCharIndex(byte[],int):361 -> a
    440:440:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    440:440:int codePointIndexToCharIndex(byte[],int):365 -> a
    437:437:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    437:437:int codePointIndexToCharIndex(byte[],int):362 -> a
    444:444:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    444:444:int codePointIndexToCharIndex(byte[],int):369 -> a
    445:445:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    445:445:int codePointIndexToCharIndex(byte[],int):370 -> a
    446:446:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    446:446:int codePointIndexToCharIndex(byte[],int):371 -> a
    124:124:boolean okio.Utf8.isUtf8Continuation(byte) -> a
    124:124:int codePointIndexToCharIndex(byte[],int):372 -> a
    63:63:int okio.-Util.and(byte,int) -> a
    63:63:int codePointIndexToCharIndex(byte[],int):373 -> a
    447:447:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    447:447:int codePointIndexToCharIndex(byte[],int):374 -> a
    226:226:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    226:226:int codePointIndexToCharIndex(byte[],int):354 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):375 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    448:448:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    448:448:int codePointIndexToCharIndex(byte[],int):376 -> a
    450:450:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    450:450:int codePointIndexToCharIndex(byte[],int):378 -> a
    451:451:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    451:451:int codePointIndexToCharIndex(byte[],int):379 -> a
    124:124:boolean okio.Utf8.isUtf8Continuation(byte) -> a
    124:124:int codePointIndexToCharIndex(byte[],int):380 -> a
    63:63:int okio.-Util.and(byte,int) -> a
    63:63:int codePointIndexToCharIndex(byte[],int):381 -> a
    452:452:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    452:452:int codePointIndexToCharIndex(byte[],int):382 -> a
    226:226:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    226:226:int codePointIndexToCharIndex(byte[],int):354 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):383 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    453:453:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    453:453:int codePointIndexToCharIndex(byte[],int):384 -> a
    456:456:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    456:456:int codePointIndexToCharIndex(byte[],int):387 -> a
    457:457:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    457:457:int codePointIndexToCharIndex(byte[],int):388 -> a
    458:458:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    458:458:int codePointIndexToCharIndex(byte[],int):389 -> a
    459:459:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    459:459:int codePointIndexToCharIndex(byte[],int):390 -> a
    460:460:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    460:460:int codePointIndexToCharIndex(byte[],int):391 -> a
    456:456:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    456:456:int codePointIndexToCharIndex(byte[],int):387 -> a
    462:462:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    462:462:int codePointIndexToCharIndex(byte[],int):393 -> a
    463:463:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    463:463:int codePointIndexToCharIndex(byte[],int):394 -> a
    464:464:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    464:464:int codePointIndexToCharIndex(byte[],int):395 -> a
    226:226:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    226:226:int codePointIndexToCharIndex(byte[],int):354 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):396 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    466:466:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    466:466:int codePointIndexToCharIndex(byte[],int):397 -> a
    467:467:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    467:467:int codePointIndexToCharIndex(byte[],int):398 -> a
    226:226:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    226:226:int codePointIndexToCharIndex(byte[],int):354 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):399 -> a
    294:297:int codePointIndexToCharIndex(byte[],int) -> a
    470:470:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    470:470:int codePointIndexToCharIndex(byte[],int):400 -> a
    226:226:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    226:226:int codePointIndexToCharIndex(byte[],int):354 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):401 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    472:472:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    472:472:int codePointIndexToCharIndex(byte[],int):402 -> a
    473:473:int okio.Utf8.process3Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    473:473:int codePointIndexToCharIndex(byte[],int):403 -> a
    226:226:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    226:226:int codePointIndexToCharIndex(byte[],int):354 -> a
    228:228:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    228:228:int codePointIndexToCharIndex(byte[],int):404 -> a
    57:57:int okio.-Util.shr(byte,int) -> a
    57:57:int codePointIndexToCharIndex(byte[],int):405 -> a
    230:230:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    230:230:int codePointIndexToCharIndex(byte[],int):406 -> a
    489:489:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    489:489:int codePointIndexToCharIndex(byte[],int):407 -> a
    491:491:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    491:491:int codePointIndexToCharIndex(byte[],int):409 -> a
    230:230:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    230:230:int codePointIndexToCharIndex(byte[],int):406 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):410 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    492:492:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    492:492:int codePointIndexToCharIndex(byte[],int):411 -> a
    124:124:boolean okio.Utf8.isUtf8Continuation(byte) -> a
    124:124:int codePointIndexToCharIndex(byte[],int):412 -> a
    63:63:int okio.-Util.and(byte,int) -> a
    63:63:int codePointIndexToCharIndex(byte[],int):413 -> a
    496:496:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    496:496:int codePointIndexToCharIndex(byte[],int):415 -> a
    124:124:boolean okio.Utf8.isUtf8Continuation(byte) -> a
    124:124:int codePointIndexToCharIndex(byte[],int):416 -> a
    63:63:int okio.-Util.and(byte,int) -> a
    63:63:int codePointIndexToCharIndex(byte[],int):417 -> a
    502:502:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    502:502:int codePointIndexToCharIndex(byte[],int):421 -> a
    499:499:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    499:499:int codePointIndexToCharIndex(byte[],int):418 -> a
    495:495:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    495:495:int codePointIndexToCharIndex(byte[],int):414 -> a
    506:506:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    506:506:int codePointIndexToCharIndex(byte[],int):425 -> a
    507:507:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    507:507:int codePointIndexToCharIndex(byte[],int):426 -> a
    508:508:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    508:508:int codePointIndexToCharIndex(byte[],int):427 -> a
    124:124:boolean okio.Utf8.isUtf8Continuation(byte) -> a
    124:124:int codePointIndexToCharIndex(byte[],int):428 -> a
    63:63:int okio.-Util.and(byte,int) -> a
    63:63:int codePointIndexToCharIndex(byte[],int):429 -> a
    509:509:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    509:509:int codePointIndexToCharIndex(byte[],int):430 -> a
    230:230:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    230:230:int codePointIndexToCharIndex(byte[],int):406 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):431 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    510:510:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    510:510:int codePointIndexToCharIndex(byte[],int):432 -> a
    512:512:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    512:512:int codePointIndexToCharIndex(byte[],int):434 -> a
    513:513:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    513:513:int codePointIndexToCharIndex(byte[],int):435 -> a
    124:124:boolean okio.Utf8.isUtf8Continuation(byte) -> a
    124:124:int codePointIndexToCharIndex(byte[],int):436 -> a
    63:63:int okio.-Util.and(byte,int) -> a
    63:63:int codePointIndexToCharIndex(byte[],int):437 -> a
    514:514:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    514:514:int codePointIndexToCharIndex(byte[],int):438 -> a
    230:230:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    230:230:int codePointIndexToCharIndex(byte[],int):406 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):439 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    515:515:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    515:515:int codePointIndexToCharIndex(byte[],int):440 -> a
    517:517:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    517:517:int codePointIndexToCharIndex(byte[],int):442 -> a
    518:518:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    518:518:int codePointIndexToCharIndex(byte[],int):443 -> a
    124:124:boolean okio.Utf8.isUtf8Continuation(byte) -> a
    124:124:int codePointIndexToCharIndex(byte[],int):444 -> a
    63:63:int okio.-Util.and(byte,int) -> a
    63:63:int codePointIndexToCharIndex(byte[],int):445 -> a
    519:519:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    519:519:int codePointIndexToCharIndex(byte[],int):446 -> a
    230:230:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    230:230:int codePointIndexToCharIndex(byte[],int):406 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):447 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    520:520:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    520:520:int codePointIndexToCharIndex(byte[],int):448 -> a
    523:523:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    523:523:int codePointIndexToCharIndex(byte[],int):451 -> a
    524:524:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    524:524:int codePointIndexToCharIndex(byte[],int):452 -> a
    525:525:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    525:525:int codePointIndexToCharIndex(byte[],int):453 -> a
    526:526:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    526:526:int codePointIndexToCharIndex(byte[],int):454 -> a
    527:527:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    527:527:int codePointIndexToCharIndex(byte[],int):455 -> a
    528:528:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    528:528:int codePointIndexToCharIndex(byte[],int):456 -> a
    523:523:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    523:523:int codePointIndexToCharIndex(byte[],int):451 -> a
    530:530:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    530:530:int codePointIndexToCharIndex(byte[],int):458 -> a
    531:531:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    531:531:int codePointIndexToCharIndex(byte[],int):459 -> a
    532:532:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    532:532:int codePointIndexToCharIndex(byte[],int):460 -> a
    230:230:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    230:230:int codePointIndexToCharIndex(byte[],int):406 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):461 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    534:534:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    534:534:int codePointIndexToCharIndex(byte[],int):462 -> a
    535:535:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    535:535:int codePointIndexToCharIndex(byte[],int):463 -> a
    230:230:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    230:230:int codePointIndexToCharIndex(byte[],int):406 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):464 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    537:537:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    537:537:int codePointIndexToCharIndex(byte[],int):465 -> a
    538:538:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    538:538:int codePointIndexToCharIndex(byte[],int):466 -> a
    230:230:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    230:230:int codePointIndexToCharIndex(byte[],int):406 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):467 -> a
    294:297:int codePointIndexToCharIndex(byte[],int) -> a
    541:541:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    541:541:int codePointIndexToCharIndex(byte[],int):468 -> a
    230:230:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    230:230:int codePointIndexToCharIndex(byte[],int):406 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):469 -> a
    294:297:int codePointIndexToCharIndex(byte[],int) -> a
    543:543:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    543:543:int codePointIndexToCharIndex(byte[],int):470 -> a
    544:544:int okio.Utf8.process4Utf8Bytes(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    544:544:int codePointIndexToCharIndex(byte[],int):471 -> a
    230:230:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    230:230:int codePointIndexToCharIndex(byte[],int):406 -> a
    235:235:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    235:235:int codePointIndexToCharIndex(byte[],int):472 -> a
    288:292:int codePointIndexToCharIndex(byte[],int) -> a
    119:119:boolean okio.Utf8.isIsoControl(int) -> a
    119:119:int codePointIndexToCharIndex(byte[],int):473 -> a
    294:298:int codePointIndexToCharIndex(byte[],int) -> a
    236:236:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    236:236:int codePointIndexToCharIndex(byte[],int):474 -> a
    238:238:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    238:238:int codePointIndexToCharIndex(byte[],int):476 -> a
    207:207:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    207:207:int codePointIndexToCharIndex(byte[],int):307 -> a
    240:240:void okio.Utf8.processUtf8CodePoints(byte[],int,int,kotlin.jvm.functions.Function1) -> a
    240:240:int codePointIndexToCharIndex(byte[],int):478 -> a
    299:299:int codePointIndexToCharIndex(byte[],int) -> a
    207:212:int commonCompareTo(okio.ByteString,okio.ByteString) -> b
    63:63:int okio.-Util.and(byte,int) -> b
    63:63:int commonCompareTo(okio.ByteString,okio.ByteString):304 -> b
    212:213:int commonCompareTo(okio.ByteString,okio.ByteString) -> b
    63:63:int okio.-Util.and(byte,int) -> b
    63:63:int commonCompareTo(okio.ByteString,okio.ByteString):305 -> b
    213:221:int commonCompareTo(okio.ByteString,okio.ByteString) -> b
    192:192:boolean commonEquals(okio.ByteString,java.lang.Object) -> c
    133:133:byte commonGetByte(okio.ByteString,int) -> d
    135:135:int commonGetSize(okio.ByteString) -> e
    200:203:int commonHashCode(okio.ByteString) -> f
    54:57:java.lang.String commonHex(okio.ByteString) -> g
    57:57:int okio.-Util.shr(byte,int) -> g
    57:57:java.lang.String commonHex(okio.ByteString):302 -> g
    57:58:java.lang.String commonHex(okio.ByteString) -> g
    63:63:int okio.-Util.and(byte,int) -> g
    63:63:java.lang.String commonHex(okio.ByteString):303 -> g
    56:60:java.lang.String commonHex(okio.ByteString) -> g
    139:139:byte[] commonInternalArray(okio.ByteString) -> h
    226:226:okio.ByteString commonOf(byte[]) -> i
    154:156:boolean commonRangeEquals(okio.ByteString,int,byte[],int,int) -> j
    118:118:okio.ByteString commonSubstring(okio.ByteString,int,int) -> k
    261:277:java.lang.String commonToString(okio.ByteString) -> l
    37:43:java.lang.String commonUtf8(okio.ByteString) -> m
    224:224:void <clinit>() -> n
    224:224:okio.ByteString getCOMMON_EMPTY():224 -> n
permissions.dispatcher.PermissionRequest -> e.a.a:
    void proceed() -> a
permissions.dispatcher.PermissionUtils -> e.a.b:
    androidx.collection.SimpleArrayMap MIN_SDK_PERMISSIONS -> a
    19:33:void <clinit>() -> <clinit>
    99:101:boolean hasSelfPermission(android.content.Context,java.lang.String) -> a
    78:83:boolean hasSelfPermissions(android.content.Context,java.lang.String[]) -> b
    64:67:boolean permissionExists(java.lang.String) -> c
    113:118:boolean shouldShowRequestPermissionRationale(android.app.Activity,java.lang.String[]) -> d
    129:134:boolean shouldShowRequestPermissionRationale(androidx.fragment.app.Fragment,java.lang.String[]) -> e
    45:53:boolean verifyPermissions(int[]) -> f
permissions.dispatcher.ktx.ActivityExtensionsKt -> e.a.c.a:
    22:29:void withPermissionsCheck(androidx.fragment.app.FragmentActivity,java.lang.String[],kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> a
permissions.dispatcher.ktx.KtxPermissionRequest -> e.a.c.b:
    permissions.dispatcher.ktx.KtxPermissionRequest$Companion Companion -> b
    java.lang.ref.WeakReference requestPermission -> a
    6:6:void <init>(java.lang.ref.WeakReference,java.lang.ref.WeakReference) -> <init>
    11:12:void proceed() -> a
permissions.dispatcher.ktx.KtxPermissionRequest$Companion -> e.a.c.b$a:
    18:18:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    18:18:void <init>():18 -> <init>
    18:18:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    19:22:permissions.dispatcher.ktx.KtxPermissionRequest create(kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> a
permissions.dispatcher.ktx.PermissionRequestType -> e.a.c.c:
    11:11:void <init>() -> <init>
    11:11:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    boolean checkPermissions(android.content.Context,java.lang.String[]) -> a
    97:120:void invoke(java.lang.String[],androidx.fragment.app.FragmentActivity,kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> b
    void invokeRequest(permissions.dispatcher.ktx.PermissionsRequestFragment,java.lang.String[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> c
    74:89:void requestPermissions$ktx_release(java.lang.String[],androidx.fragment.app.FragmentActivity,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> d
permissions.dispatcher.ktx.PermissionRequestType$Others -> e.a.c.c$a:
    permissions.dispatcher.ktx.PermissionRequestType$Others INSTANCE -> a
    12:12:void <clinit>() -> <clinit>
    12:12:void <init>() -> <init>
    14:14:boolean checkPermissions(android.content.Context,java.lang.String[]) -> a
    21:26:void invokeRequest(permissions.dispatcher.ktx.PermissionsRequestFragment,java.lang.String[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> c
permissions.dispatcher.ktx.PermissionRequestType$invoke$1 -> e.a.c.c$b:
    kotlin.jvm.functions.Function0 $onNeverAskAgain -> e
    kotlin.jvm.functions.Function0 $requiresPermission -> d
    kotlin.jvm.functions.Function0 $onPermissionDenied -> f
    permissions.dispatcher.ktx.PermissionRequestType this$0 -> a
    androidx.fragment.app.FragmentActivity $activity -> c
    java.lang.String[] $permissions -> b
    11:11:java.lang.Object invoke() -> a
    102:109:void invoke() -> c
permissions.dispatcher.ktx.PermissionsRequestFragment -> permissions.dispatcher.ktx.PermissionsRequestFragment:
    kotlin.jvm.functions.Function0 onPermissionDenied -> d
    permissions.dispatcher.ktx.PermissionsRequestFragment$Companion Companion -> f
    java.lang.String tag -> e
    kotlin.jvm.functions.Function0 onNeverAskAgain -> c
    int requestCode -> a
    kotlin.jvm.functions.Function0 requiresPermission -> b
    99:99:void <clinit>() -> <clinit>
    16:17:void <init>() -> <init>
    16:16:java.lang.String access$getTag$cp() -> a
    96:96:kotlin.Unit dismiss() -> b
    69:73:void requestPermissions(java.lang.String[],kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0,kotlin.jvm.functions.Function0) -> c
    57:65:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    23:30:void onAttach(android.content.Context) -> onAttach
    33:38:void onDestroy() -> onDestroy
    41:54:void onRequestPermissionsResult(int,java.lang.String[],int[]) -> onRequestPermissionsResult
permissions.dispatcher.ktx.PermissionsRequestFragment$Companion -> permissions.dispatcher.ktx.PermissionsRequestFragment$a:
    98:98:void <init>() -> <init>
    98:98:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    99:99:java.lang.String getTag() -> a
    100:100:permissions.dispatcher.ktx.PermissionsRequestFragment newInstance() -> b
shark.AndroidBuildMirror -> f.a:
    shark.AndroidBuildMirror$Companion Companion -> c
    java.lang.String manufacturer -> a
    int sdkInt -> b
    7:7:void <init>(java.lang.String,int) -> <init>
    11:11:java.lang.String getManufacturer() -> a
    15:15:int getSdkInt() -> b
shark.AndroidBuildMirror$Companion -> f.a$a:
    17:17:void <init>() -> <init>
    17:17:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    22:22:shark.AndroidBuildMirror fromHeapGraph(shark.HeapGraph) -> a
shark.AndroidBuildMirror$Companion$fromHeapGraph$1 -> f.a$a$a:
    shark.HeapGraph $graph -> a
    17:17:java.lang.Object invoke() -> a
    23:23:shark.AndroidBuildMirror invoke() -> c
shark.AndroidMetadataExtractor -> f.b:
    shark.AndroidMetadataExtractor INSTANCE -> a
    3:3:void <clinit>() -> <clinit>
    3:3:void <init>() -> <init>
    5:10:java.util.Map extractMetadata(shark.HeapGraph) -> a
    19:20:java.lang.String readLeakCanaryVersion(shark.HeapGraph) -> b
    24:34:java.lang.String readProcessName(shark.HeapGraph) -> c
shark.AndroidObjectInspectors -> f.c:
    shark.AndroidObjectInspectors VIEW -> b
    shark.AndroidObjectInspectors[] $VALUES -> c
    java.lang.String ANDROID_SUPPORT_FRAGMENT_CLASS_NAME -> a
    shark.AndroidObjectInspectors$Companion Companion -> d
    530:530:void <clinit>() -> <clinit>
    37:549:void <init>(java.lang.String,int) -> <init>
    37:37:void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    547:547:java.lang.String getANDROID_SUPPORT_FRAGMENT_CLASS_NAME$shark_android() -> b
    519:519:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark_android() -> c
shark.AndroidObjectInspectors$ACTIVITY -> f.c$a:
    kotlin.jvm.functions.Function1 leakingObjectFilter -> e
    140:141:void <init>(java.lang.String,int) -> <init>
    150:164:void inspect(shark.ObjectReporter) -> a
    141:141:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark_android() -> c
shark.AndroidObjectInspectors$ACTIVITY$inspect$1 -> f.c$a$a:
    shark.AndroidObjectInspectors$ACTIVITY$inspect$1 INSTANCE -> a
    154:163:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    140:140:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$ACTIVITY$leakingObjectFilter$1 -> f.c$a$b:
    shark.AndroidObjectInspectors$ACTIVITY$leakingObjectFilter$1 INSTANCE -> a
    142:144:boolean invoke(shark.HeapObject) -> c
    140:140:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidObjectInspectors$ANDROIDX_FRAGMENT -> f.c$b:
    kotlin.jvm.functions.Function1 leakingObjectFilter -> e
    315:316:void <init>(java.lang.String,int) -> <init>
    327:340:void inspect(shark.ObjectReporter) -> a
    316:316:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark_android() -> c
shark.AndroidObjectInspectors$ANDROIDX_FRAGMENT$inspect$1 -> f.c$b$a:
    shark.AndroidObjectInspectors$ANDROIDX_FRAGMENT$inspect$1 INSTANCE -> a
    328:339:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    315:315:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$ANDROIDX_FRAGMENT$leakingObjectFilter$1 -> f.c$b$b:
    shark.AndroidObjectInspectors$ANDROIDX_FRAGMENT$leakingObjectFilter$1 INSTANCE -> a
    317:321:boolean invoke(shark.HeapObject) -> c
    315:315:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidObjectInspectors$APPLICATION -> f.c$c:
    241:241:void <init>(java.lang.String,int) -> <init>
    245:248:void inspect(shark.ObjectReporter) -> a
shark.AndroidObjectInspectors$APPLICATION$inspect$1 -> f.c$c$a:
    shark.AndroidObjectInspectors$APPLICATION$inspect$1 INSTANCE -> a
    246:247:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    241:241:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$CONTEXT_WRAPPER -> f.c$d:
    kotlin.jvm.functions.Function1 leakingObjectFilter -> e
    167:169:void <init>(java.lang.String,int) -> <init>
    179:187:void inspect(shark.ObjectReporter) -> a
    140:140:java.lang.Object kotlin.sequences.SequencesKt___SequencesKt.firstOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> a
    140:140:void inspect(shark.ObjectReporter):642 -> a
    188:195:void inspect(shark.ObjectReporter) -> a
    141:141:java.lang.Object kotlin.sequences.SequencesKt___SequencesKt.firstOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> a
    141:141:void inspect(shark.ObjectReporter):643 -> a
    186:217:void inspect(shark.ObjectReporter) -> a
    169:169:void <init>(java.lang.String,int) -> c
    169:169:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark_android():169 -> c
shark.AndroidObjectInspectors$CONTEXT_WRAPPER$inspect$matchingClassName$1 -> f.c$d$a:
    shark.AndroidObjectInspectors$CONTEXT_WRAPPER$inspect$matchingClassName$1 INSTANCE -> a
    186:186:java.lang.String invoke(shark.HeapObject$HeapClass) -> c
    167:167:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidObjectInspectors$CONTEXT_WRAPPER$leakingObjectFilter$1 -> f.c$d$b:
    shark.AndroidObjectInspectors$CONTEXT_WRAPPER$leakingObjectFilter$1 INSTANCE -> a
    170:173:boolean invoke(shark.HeapObject) -> c
    167:167:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidObjectInspectors$COORDINATOR -> f.c$e:
    kotlin.jvm.functions.Function1 leakingObjectFilter -> e
    412:413:void <init>(java.lang.String,int) -> <init>
    424:432:void inspect(shark.ObjectReporter) -> a
    413:413:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark_android() -> c
shark.AndroidObjectInspectors$COORDINATOR$inspect$1 -> f.c$e$a:
    shark.AndroidObjectInspectors$COORDINATOR$inspect$1 INSTANCE -> a
    425:426:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    412:412:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$COORDINATOR$leakingObjectFilter$1 -> f.c$e$b:
    shark.AndroidObjectInspectors$COORDINATOR$leakingObjectFilter$1 INSTANCE -> a
    414:418:boolean invoke(shark.HeapObject) -> c
    412:412:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidObjectInspectors$Companion -> f.c$f:
    521:521:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    521:521:void <init>():521 -> <init>
    521:521:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    537:542:java.util.List createLeakingObjectFilters(java.util.Set) -> a
    524:524:java.util.List getAppDefaults() -> b
shark.AndroidObjectInspectors$Companion$createLeakingObjectFilters$2$1 -> f.c$f$a:
    539:539:void <init>(kotlin.jvm.functions.Function1) -> <init>
shark.AndroidObjectInspectors$DIALOG -> f.c$g:
    kotlin.jvm.functions.Function1 leakingObjectFilter -> e
    220:221:void <init>(java.lang.String,int) -> <init>
    230:238:void inspect(shark.ObjectReporter) -> a
    221:221:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark_android() -> c
shark.AndroidObjectInspectors$DIALOG$inspect$1 -> f.c$g$a:
    shark.AndroidObjectInspectors$DIALOG$inspect$1 INSTANCE -> a
    231:231:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    220:220:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$DIALOG$leakingObjectFilter$1 -> f.c$g$b:
    shark.AndroidObjectInspectors$DIALOG$leakingObjectFilter$1 INSTANCE -> a
    222:224:boolean invoke(shark.HeapObject) -> c
    220:220:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidObjectInspectors$EDITOR -> f.c$h:
    kotlin.jvm.functions.Function1 leakingObjectFilter -> e
    124:125:void <init>(java.lang.String,int) -> <init>
    134:137:void inspect(shark.ObjectReporter) -> a
    125:125:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark_android() -> c
shark.AndroidObjectInspectors$EDITOR$inspect$1 -> f.c$h$a:
    shark.AndroidObjectInspectors$EDITOR$inspect$1 INSTANCE -> a
    135:136:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    124:124:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$EDITOR$leakingObjectFilter$1 -> f.c$h$b:
    shark.AndroidObjectInspectors$EDITOR$leakingObjectFilter$1 INSTANCE -> a
    126:130:boolean invoke(shark.HeapObject) -> c
    124:124:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidObjectInspectors$FRAGMENT -> f.c$i:
    kotlin.jvm.functions.Function1 leakingObjectFilter -> e
    261:262:void <init>(java.lang.String,int) -> <init>
    271:283:void inspect(shark.ObjectReporter) -> a
    262:262:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark_android() -> c
shark.AndroidObjectInspectors$FRAGMENT$inspect$1 -> f.c$i$a:
    shark.AndroidObjectInspectors$FRAGMENT$inspect$1 INSTANCE -> a
    272:272:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    261:261:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$FRAGMENT$leakingObjectFilter$1 -> f.c$i$b:
    shark.AndroidObjectInspectors$FRAGMENT$leakingObjectFilter$1 INSTANCE -> a
    263:265:boolean invoke(shark.HeapObject) -> c
    261:261:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidObjectInspectors$INPUT_METHOD_MANAGER -> f.c$j:
    251:251:void <init>(java.lang.String,int) -> <init>
    255:258:void inspect(shark.ObjectReporter) -> a
shark.AndroidObjectInspectors$INPUT_METHOD_MANAGER$inspect$1 -> f.c$j$a:
    shark.AndroidObjectInspectors$INPUT_METHOD_MANAGER$inspect$1 INSTANCE -> a
    256:257:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    251:251:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$MAIN_THREAD -> f.c$k:
    435:435:void <init>(java.lang.String,int) -> <init>
    439:445:void inspect(shark.ObjectReporter) -> a
shark.AndroidObjectInspectors$MAIN_THREAD$inspect$1 -> f.c$k$a:
    shark.AndroidObjectInspectors$MAIN_THREAD$inspect$1 INSTANCE -> a
    440:440:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    435:435:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$MESSAGE_QUEUE -> f.c$l:
    kotlin.jvm.functions.Function1 leakingObjectFilter -> e
    343:344:void <init>(java.lang.String,int) -> <init>
    354:365:void inspect(shark.ObjectReporter) -> a
    344:344:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark_android() -> c
shark.AndroidObjectInspectors$MESSAGE_QUEUE$inspect$1 -> f.c$l$a:
    shark.AndroidObjectInspectors$MESSAGE_QUEUE$inspect$1 INSTANCE -> a
    357:358:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    343:343:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$MESSAGE_QUEUE$leakingObjectFilter$1 -> f.c$l$b:
    shark.AndroidObjectInspectors$MESSAGE_QUEUE$leakingObjectFilter$1 INSTANCE -> a
    345:348:boolean invoke(shark.HeapObject) -> c
    343:343:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidObjectInspectors$MORTAR_PRESENTER -> f.c$m:
    kotlin.jvm.functions.Function1 leakingObjectFilter -> e
    368:369:void <init>(java.lang.String,int) -> <init>
    378:389:void inspect(shark.ObjectReporter) -> a
    369:369:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark_android() -> c
shark.AndroidObjectInspectors$MORTAR_PRESENTER$inspect$1 -> f.c$m$a:
    shark.AndroidObjectInspectors$MORTAR_PRESENTER$inspect$1 INSTANCE -> a
    382:388:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    368:368:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$MORTAR_PRESENTER$leakingObjectFilter$1 -> f.c$m$b:
    shark.AndroidObjectInspectors$MORTAR_PRESENTER$leakingObjectFilter$1 INSTANCE -> a
    370:372:boolean invoke(shark.HeapObject) -> c
    368:368:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidObjectInspectors$MORTAR_SCOPE -> f.c$n:
    kotlin.jvm.functions.Function1 leakingObjectFilter -> e
    392:393:void <init>(java.lang.String,int) -> <init>
    400:409:void inspect(shark.ObjectReporter) -> a
    393:393:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark_android() -> c
shark.AndroidObjectInspectors$MORTAR_SCOPE$inspect$1 -> f.c$n$a:
    shark.AndroidObjectInspectors$MORTAR_SCOPE$inspect$1 INSTANCE -> a
    401:401:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    392:392:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$MORTAR_SCOPE$leakingObjectFilter$1 -> f.c$n$b:
    shark.AndroidObjectInspectors$MORTAR_SCOPE$leakingObjectFilter$1 INSTANCE -> a
    394:396:boolean invoke(shark.HeapObject) -> c
    392:392:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidObjectInspectors$SUPPORT_FRAGMENT -> f.c$o:
    kotlin.jvm.functions.Function1 leakingObjectFilter -> e
    286:288:void <init>(java.lang.String,int) -> <init>
    299:312:void inspect(shark.ObjectReporter) -> a
    288:288:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark_android() -> c
shark.AndroidObjectInspectors$SUPPORT_FRAGMENT$inspect$1 -> f.c$o$a:
    shark.AndroidObjectInspectors$SUPPORT_FRAGMENT this$0 -> a
    300:311:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    286:286:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$SUPPORT_FRAGMENT$leakingObjectFilter$1 -> f.c$o$b:
    shark.AndroidObjectInspectors$SUPPORT_FRAGMENT this$0 -> a
    289:293:boolean invoke(shark.HeapObject) -> c
    286:286:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidObjectInspectors$TOAST -> f.c$p:
    kotlin.jvm.functions.Function1 leakingObjectFilter -> e
    489:490:void <init>(java.lang.String,int) -> <init>
    502:516:void inspect(shark.ObjectReporter) -> a
    490:490:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark_android() -> c
shark.AndroidObjectInspectors$TOAST$inspect$1 -> f.c$p$a:
    shark.AndroidObjectInspectors$TOAST$inspect$1 INSTANCE -> a
    503:504:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    489:489:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$TOAST$leakingObjectFilter$1 -> f.c$p$b:
    shark.AndroidObjectInspectors$TOAST$leakingObjectFilter$1 INSTANCE -> a
    491:496:boolean invoke(shark.HeapObject) -> c
    489:489:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidObjectInspectors$VIEW -> f.c$q:
    kotlin.jvm.functions.Function1 leakingObjectFilter -> e
    39:40:void <init>(java.lang.String,int) -> <init>
    52:121:void inspect(shark.ObjectReporter) -> a
    40:40:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark_android() -> c
shark.AndroidObjectInspectors$VIEW$inspect$1 -> f.c$q$a:
    shark.AndroidObjectInspectors$VIEW$inspect$1 INSTANCE -> a
    55:55:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    39:39:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$VIEW$leakingObjectFilter$1 -> f.c$q$b:
    shark.AndroidObjectInspectors$VIEW$leakingObjectFilter$1 INSTANCE -> a
    41:46:boolean invoke(shark.HeapObject) -> c
    39:39:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidObjectInspectors$VIEW_ROOT_IMPL -> f.c$r:
    kotlin.jvm.functions.Function1 leakingObjectFilter -> e
    448:449:void <init>(java.lang.String,int) -> <init>
    456:464:void inspect(shark.ObjectReporter) -> a
    449:449:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark_android() -> c
shark.AndroidObjectInspectors$VIEW_ROOT_IMPL$inspect$1 -> f.c$r$a:
    shark.AndroidObjectInspectors$VIEW_ROOT_IMPL$inspect$1 INSTANCE -> a
    457:457:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    448:448:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$VIEW_ROOT_IMPL$leakingObjectFilter$1 -> f.c$r$b:
    shark.AndroidObjectInspectors$VIEW_ROOT_IMPL$leakingObjectFilter$1 INSTANCE -> a
    450:452:boolean invoke(shark.HeapObject) -> c
    448:448:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidObjectInspectors$WINDOW -> f.c$s:
    kotlin.jvm.functions.Function1 leakingObjectFilter -> e
    467:468:void <init>(java.lang.String,int) -> <init>
    477:486:void inspect(shark.ObjectReporter) -> a
    468:468:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark_android() -> c
shark.AndroidObjectInspectors$WINDOW$inspect$1 -> f.c$s$a:
    shark.AndroidObjectInspectors$WINDOW$inspect$1 INSTANCE -> a
    478:478:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    467:467:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.AndroidObjectInspectors$WINDOW$leakingObjectFilter$1 -> f.c$s$b:
    shark.AndroidObjectInspectors$WINDOW$leakingObjectFilter$1 INSTANCE -> a
    469:471:boolean invoke(shark.HeapObject) -> c
    467:467:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidObjectInspectorsKt -> f.d:
    1:1:java.lang.String access$describedWithValue(shark.HeapField,java.lang.String) -> a
    1:1:void access$applyFromField(shark.ObjectReporter,shark.ObjectInspector,shark.HeapField):1 -> a
    1:1:java.lang.String access$describedWithValue(shark.HeapField,java.lang.String) -> b
    560:566:void applyFromField(shark.ObjectReporter,shark.ObjectInspector,shark.HeapField) -> c
    553:553:java.lang.String describedWithValue(shark.HeapField,java.lang.String) -> d
    632:632:shark.HeapField getOrThrow(shark.HeapObject$HeapInstance,java.lang.String,java.lang.String) -> e
    582:622:shark.HeapObject$HeapInstance unwrapActivityContext(shark.HeapObject$HeapInstance) -> f
shark.AndroidReferenceMatchers -> f.e:
    shark.AndroidReferenceMatchers[] $VALUES -> a
    kotlin.jvm.functions.Function1 ALWAYS -> b
    shark.AndroidReferenceMatchers$Companion Companion -> c
    1273:1273:void <clinit>() -> <clinit>
    49:49:void <init>(java.lang.String,int) -> <init>
    49:49:void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    49:49:kotlin.jvm.functions.Function1 access$getALWAYS$cp() -> a
    void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$ACCESSIBILITY_ITERATORS -> f.e$a:
    552:552:void <init>(java.lang.String,int) -> <init>
    554:563:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$ACCESSIBILITY_ITERATORS$add$1 -> f.e$a$a:
    shark.AndroidReferenceMatchers$ACCESSIBILITY_ITERATORS$add$1 INSTANCE -> a
    561:561:boolean invoke(shark.AndroidBuildMirror) -> c
    552:552:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$ACCESSIBILITY_NODE_ID_MANAGER -> f.e$b:
    631:631:void <init>(java.lang.String,int) -> <init>
    633:646:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$ACCESSIBILITY_NODE_ID_MANAGER$add$1 -> f.e$b$a:
    shark.AndroidReferenceMatchers$ACCESSIBILITY_NODE_ID_MANAGER$add$1 INSTANCE -> a
    644:644:boolean invoke(shark.AndroidBuildMirror) -> c
    631:631:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$ACCESSIBILITY_NODE_INFO__MORIGINALTEXT -> f.e$c:
    517:517:void <init>(java.lang.String,int) -> <init>
    521:535:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$ACCESSIBILITY_NODE_INFO__MORIGINALTEXT$add$1 -> f.e$c$a:
    shark.AndroidReferenceMatchers$ACCESSIBILITY_NODE_INFO__MORIGINALTEXT$add$1 INSTANCE -> a
    533:533:boolean invoke(shark.AndroidBuildMirror) -> c
    517:517:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$ACCOUNT_MANAGER -> f.e$d:
    367:367:void <init>(java.lang.String,int) -> <init>
    371:387:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$ACCOUNT_MANAGER$add$1 -> f.e$d$a:
    shark.AndroidReferenceMatchers$ACCOUNT_MANAGER$add$1 INSTANCE -> a
    385:385:boolean invoke(shark.AndroidBuildMirror) -> c
    367:367:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$ACTIVITY_CHOOSE_MODEL -> f.e$e:
    310:310:void <init>(java.lang.String,int) -> <init>
    314:332:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$ACTIVITY_CHOOSE_MODEL$add$1 -> f.e$e$a:
    shark.AndroidReferenceMatchers$ACTIVITY_CHOOSE_MODEL$add$1 INSTANCE -> a
    325:325:boolean invoke(shark.AndroidBuildMirror) -> c
    310:310:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$ACTIVITY_CLIENT_RECORD__NEXT_IDLE -> f.e$f:
    74:74:void <init>(java.lang.String,int) -> <init>
    78:86:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$ACTIVITY_CLIENT_RECORD__NEXT_IDLE$add$1 -> f.e$f$a:
    shark.AndroidReferenceMatchers$ACTIVITY_CLIENT_RECORD__NEXT_IDLE$add$1 INSTANCE -> a
    84:84:boolean invoke(shark.AndroidBuildMirror) -> c
    74:74:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$ACTIVITY_MANAGER_MCONTEXT -> f.e$g:
    935:935:void <init>(java.lang.String,int) -> <init>
    939:949:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$ACTIVITY_MANAGER_MCONTEXT$add$1 -> f.e$g$a:
    shark.AndroidReferenceMatchers$ACTIVITY_MANAGER_MCONTEXT$add$1 INSTANCE -> a
    947:947:boolean invoke(shark.AndroidBuildMirror) -> c
    935:935:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$APP_WIDGET_HOST_CALLBACKS -> f.e$h:
    430:430:void <init>(java.lang.String,int) -> <init>
    434:446:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$APP_WIDGET_HOST_CALLBACKS$add$1 -> f.e$h$a:
    shark.AndroidReferenceMatchers$APP_WIDGET_HOST_CALLBACKS$add$1 INSTANCE -> a
    444:444:boolean invoke(shark.AndroidBuildMirror) -> c
    430:430:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$ASSIST_STRUCTURE -> f.e$i:
    538:538:void <init>(java.lang.String,int) -> <init>
    540:549:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$ASSIST_STRUCTURE$add$1 -> f.e$i$a:
    shark.AndroidReferenceMatchers$ASSIST_STRUCTURE$add$1 INSTANCE -> a
    547:547:boolean invoke(shark.AndroidBuildMirror) -> c
    538:538:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$AUDIO_MANAGER -> f.e$j:
    449:449:void <init>(java.lang.String,int) -> <init>
    453:467:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$AUDIO_MANAGER$add$1 -> f.e$j$a:
    shark.AndroidReferenceMatchers$AUDIO_MANAGER$add$1 INSTANCE -> a
    465:465:boolean invoke(shark.AndroidBuildMirror) -> c
    449:449:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$AUDIO_MANAGER__MCONTEXT_STATIC -> f.e$k:
    919:919:void <init>(java.lang.String,int) -> <init>
    923:932:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$AUDIO_MANAGER__MCONTEXT_STATIC$add$1 -> f.e$k$a:
    shark.AndroidReferenceMatchers$AUDIO_MANAGER__MCONTEXT_STATIC$add$1 INSTANCE -> a
    930:930:boolean invoke(shark.AndroidBuildMirror) -> c
    919:919:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$AW_RESOURCE__SRESOURCES -> f.e$l:
    839:839:void <init>(java.lang.String,int) -> <init>
    846:851:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$AW_RESOURCE__SRESOURCES$add$1 -> f.e$l$a:
    shark.AndroidReferenceMatchers$AW_RESOURCE__SRESOURCES$add$1 INSTANCE -> a
    849:849:boolean invoke(shark.AndroidBuildMirror) -> c
    839:839:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$BACKDROP_FRAME_RENDERER__MDECORVIEW -> f.e$m:
    595:595:void <init>(java.lang.String,int) -> <init>
    599:610:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$BACKDROP_FRAME_RENDERER__MDECORVIEW$add$1 -> f.e$m$a:
    shark.AndroidReferenceMatchers$BACKDROP_FRAME_RENDERER__MDECORVIEW$add$1 INSTANCE -> a
    608:608:boolean invoke(shark.AndroidBuildMirror) -> c
    595:595:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$BIOMETRIC_PROMPT -> f.e$n:
    566:566:void <init>(java.lang.String,int) -> <init>
    568:576:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$BIOMETRIC_PROMPT$add$1 -> f.e$n$a:
    shark.AndroidReferenceMatchers$BIOMETRIC_PROMPT$add$1 INSTANCE -> a
    574:574:boolean invoke(shark.AndroidBuildMirror) -> c
    566:566:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$BLOCKING_QUEUE -> f.e$o:
    165:165:void <init>(java.lang.String,int) -> <init>
    169:190:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$BUBBLE_POPUP_HELPER__SHELPER -> f.e$p:
    1001:1001:void <init>(java.lang.String,int) -> <init>
    1005:1012:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$BUBBLE_POPUP_HELPER__SHELPER$add$1 -> f.e$p$a:
    shark.AndroidReferenceMatchers$BUBBLE_POPUP_HELPER__SHELPER$add$1 INSTANCE -> a
    1010:1010:boolean invoke(shark.AndroidBuildMirror) -> c
    1001:1001:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$CLIPBOARD_EX_MANAGER -> f.e$q:
    772:772:void <init>(java.lang.String,int) -> <init>
    776:800:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$CLIPBOARD_EX_MANAGER$add$1 -> f.e$q$a:
    shark.AndroidReferenceMatchers$CLIPBOARD_EX_MANAGER$add$1 INSTANCE -> a
    782:782:boolean invoke(shark.AndroidBuildMirror) -> c
    772:772:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$CLIPBOARD_EX_MANAGER$add$2 -> f.e$q$b:
    shark.AndroidReferenceMatchers$CLIPBOARD_EX_MANAGER$add$2 INSTANCE -> a
    791:791:boolean invoke(shark.AndroidBuildMirror) -> c
    772:772:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$CLIPBOARD_EX_MANAGER$add$3 -> f.e$q$c:
    shark.AndroidReferenceMatchers$CLIPBOARD_EX_MANAGER$add$3 INSTANCE -> a
    798:798:boolean invoke(shark.AndroidBuildMirror) -> c
    772:772:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$CLIPBOARD_UI_MANAGER__SINSTANCE -> f.e$r:
    733:733:void <init>(java.lang.String,int) -> <init>
    737:749:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$CLIPBOARD_UI_MANAGER__SINSTANCE$add$1 -> f.e$r$a:
    shark.AndroidReferenceMatchers$CLIPBOARD_UI_MANAGER__SINSTANCE$add$1 INSTANCE -> a
    747:747:boolean invoke(shark.AndroidBuildMirror) -> c
    733:733:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$CONNECTIVITY_MANAGER__SINSTANCE -> f.e$s:
    492:492:void <init>(java.lang.String,int) -> <init>
    496:514:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$CONNECTIVITY_MANAGER__SINSTANCE$add$1 -> f.e$s$a:
    shark.AndroidReferenceMatchers$CONNECTIVITY_MANAGER__SINSTANCE$add$1 INSTANCE -> a
    512:512:boolean invoke(shark.AndroidBuildMirror) -> c
    492:492:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$CONTROLLED_INPUT_CONNECTION_WRAPPER -> f.e$t:
    692:692:void <init>(java.lang.String,int) -> <init>
    694:700:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$Companion -> f.e$v:
    1227:1227:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    1227:1227:void <init>():1227 -> <init>
    1227:1227:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    1266:1270:java.util.List buildKnownReferences(java.util.Set) -> a
    1259:1259:java.util.List getAppDefaults() -> b
    1333:1333:shark.IgnoredReferenceMatcher ignoredInstanceField(java.lang.String,java.lang.String) -> c
    1342:1342:shark.IgnoredReferenceMatcher ignoredJavaLocal(java.lang.String) -> d
    1300:1300:shark.LibraryLeakReferenceMatcher instanceFieldLeak(java.lang.String,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1) -> e
    1297:1298:shark.LibraryLeakReferenceMatcher instanceFieldLeak$default(shark.AndroidReferenceMatchers$Companion,java.lang.String,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1,int,java.lang.Object) -> f
    1316:1316:shark.LibraryLeakReferenceMatcher libraryLeak(shark.ReferencePattern,java.lang.String,kotlin.jvm.functions.Function1) -> g
    1308:1308:shark.LibraryLeakReferenceMatcher nativeGlobalVariableLeak(java.lang.String,java.lang.String,kotlin.jvm.functions.Function1) -> h
    1305:1306:shark.LibraryLeakReferenceMatcher nativeGlobalVariableLeak$default(shark.AndroidReferenceMatchers$Companion,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1,int,java.lang.Object) -> i
    1287:1287:shark.LibraryLeakReferenceMatcher staticFieldLeak(java.lang.String,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1) -> j
    1284:1285:shark.LibraryLeakReferenceMatcher staticFieldLeak$default(shark.AndroidReferenceMatchers$Companion,java.lang.String,java.lang.String,java.lang.String,kotlin.jvm.functions.Function1,int,java.lang.Object) -> k
shark.AndroidReferenceMatchers$Companion$ALWAYS$1 -> f.e$u:
    shark.AndroidReferenceMatchers$Companion$ALWAYS$1 INSTANCE -> a
    1274:1274:boolean invoke(shark.AndroidBuildMirror) -> c
    1227:1227:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$Companion$libraryLeak$1 -> f.e$v$a:
    kotlin.jvm.functions.Function1 $patternApplies -> a
    1320:1321:boolean invoke(shark.HeapGraph) -> c
    1227:1227:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$DEVICE_POLICY_MANAGER__SETTINGS_OBSERVER -> f.e$w:
    1092:1092:void <init>(java.lang.String,int) -> <init>
    1096:1107:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$DEVICE_POLICY_MANAGER__SETTINGS_OBSERVER$add$1 -> f.e$w$a:
    shark.AndroidReferenceMatchers$DEVICE_POLICY_MANAGER__SETTINGS_OBSERVER$add$1 INSTANCE -> a
    1105:1105:boolean invoke(shark.AndroidBuildMirror) -> c
    1092:1092:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$EDITTEXT_BLINK_MESSAGEQUEUE -> f.e$x:
    470:470:void <init>(java.lang.String,int) -> <init>
    474:489:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$EDITTEXT_BLINK_MESSAGEQUEUE$add$1 -> f.e$x$a:
    shark.AndroidReferenceMatchers$EDITTEXT_BLINK_MESSAGEQUEUE$add$1 INSTANCE -> a
    487:487:boolean invoke(shark.AndroidBuildMirror) -> c
    470:470:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$EVENT_RECEIVER__MMESSAGE_QUEUE -> f.e$y:
    1209:1209:void <init>(java.lang.String,int) -> <init>
    1217:1220:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$EXTENDED_STATUS_BAR_MANAGER -> f.e$z:
    1110:1110:void <init>(java.lang.String,int) -> <init>
    1114:1125:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$EXTENDED_STATUS_BAR_MANAGER$add$1 -> f.e$z$a:
    shark.AndroidReferenceMatchers$EXTENDED_STATUS_BAR_MANAGER$add$1 INSTANCE -> a
    1123:1123:boolean invoke(shark.AndroidBuildMirror) -> c
    1110:1110:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$FINALIZER_WATCHDOG_DAEMON -> f.e$a0:
    1165:1165:void <init>(java.lang.String,int) -> <init>
    1171:1172:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$GESTURE_BOOST_MANAGER -> f.e$b0:
    985:985:void <init>(java.lang.String,int) -> <init>
    989:998:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$GESTURE_BOOST_MANAGER$add$1 -> f.e$b0$a:
    shark.AndroidReferenceMatchers$GESTURE_BOOST_MANAGER$add$1 INSTANCE -> a
    996:996:boolean invoke(shark.AndroidBuildMirror) -> c
    985:985:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$INPUT_METHOD_MANAGER_IS_TERRIBLE -> f.e$c0:
    193:193:void <init>(java.lang.String,int) -> <init>
    197:260:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$INPUT_METHOD_MANAGER_IS_TERRIBLE$add$1 -> f.e$c0$a:
    shark.AndroidReferenceMatchers$INPUT_METHOD_MANAGER_IS_TERRIBLE$add$1 INSTANCE -> a
    206:206:boolean invoke(shark.AndroidBuildMirror) -> c
    193:193:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$INPUT_METHOD_MANAGER_IS_TERRIBLE$add$2 -> f.e$c0$b:
    shark.AndroidReferenceMatchers$INPUT_METHOD_MANAGER_IS_TERRIBLE$add$2 INSTANCE -> a
    212:212:boolean invoke(shark.AndroidBuildMirror) -> c
    193:193:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$INPUT_METHOD_MANAGER_IS_TERRIBLE$add$3 -> f.e$c0$c:
    shark.AndroidReferenceMatchers$INPUT_METHOD_MANAGER_IS_TERRIBLE$add$3 INSTANCE -> a
    218:218:boolean invoke(shark.AndroidBuildMirror) -> c
    193:193:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$INPUT_METHOD_MANAGER_IS_TERRIBLE$add$4 -> f.e$c0$d:
    shark.AndroidReferenceMatchers$INPUT_METHOD_MANAGER_IS_TERRIBLE$add$4 INSTANCE -> a
    227:227:boolean invoke(shark.AndroidBuildMirror) -> c
    193:193:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$INPUT_METHOD_MANAGER_IS_TERRIBLE$add$5 -> f.e$c0$e:
    shark.AndroidReferenceMatchers$INPUT_METHOD_MANAGER_IS_TERRIBLE$add$5 INSTANCE -> a
    238:238:boolean invoke(shark.AndroidBuildMirror) -> c
    193:193:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$INPUT_METHOD_MANAGER_IS_TERRIBLE$add$6 -> f.e$c0$f:
    shark.AndroidReferenceMatchers$INPUT_METHOD_MANAGER_IS_TERRIBLE$add$6 INSTANCE -> a
    248:248:boolean invoke(shark.AndroidBuildMirror) -> c
    193:193:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$INPUT_METHOD_MANAGER_IS_TERRIBLE$add$7 -> f.e$c0$g:
    shark.AndroidReferenceMatchers$INPUT_METHOD_MANAGER_IS_TERRIBLE$add$7 INSTANCE -> a
    258:258:boolean invoke(shark.AndroidBuildMirror) -> c
    193:193:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$INSTRUMENTATION_RECOMMEND_ACTIVITY -> f.e$d0:
    1076:1076:void <init>(java.lang.String,int) -> <init>
    1080:1089:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$INSTRUMENTATION_RECOMMEND_ACTIVITY$add$1 -> f.e$d0$a:
    shark.AndroidReferenceMatchers$INSTRUMENTATION_RECOMMEND_ACTIVITY$add$1 INSTANCE -> a
    1087:1087:boolean invoke(shark.AndroidBuildMirror) -> c
    1076:1076:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$IREQUEST_FINISH_CALLBACK -> f.e$e0:
    53:53:void <init>(java.lang.String,int) -> <init>
    57:71:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$IREQUEST_FINISH_CALLBACK$add$1 -> f.e$e0$a:
    shark.AndroidReferenceMatchers$IREQUEST_FINISH_CALLBACK$add$1 INSTANCE -> a
    69:69:boolean invoke(shark.AndroidBuildMirror) -> c
    53:53:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$LAYOUT_TRANSITION -> f.e$f0:
    263:263:void <init>(java.lang.String,int) -> <init>
    267:276:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$LAYOUT_TRANSITION$add$1 -> f.e$f0$a:
    shark.AndroidReferenceMatchers$LAYOUT_TRANSITION$add$1 INSTANCE -> a
    274:274:boolean invoke(shark.AndroidBuildMirror) -> c
    263:263:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$LEAK_CANARY_HEAP_DUMPER -> f.e$g0:
    1194:1194:void <init>(java.lang.String,int) -> <init>
    1199:1200:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$LEAK_CANARY_INTERNAL -> f.e$h0:
    1203:1203:void <init>(java.lang.String,int) -> <init>
    1205:1206:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$LEAK_CANARY_THREAD -> f.e$i0:
    1186:1186:void <init>(java.lang.String,int) -> <init>
    1190:1191:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$LGCONTEXT__MCONTEXT -> f.e$j0:
    1015:1015:void <init>(java.lang.String,int) -> <init>
    1019:1025:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$LGCONTEXT__MCONTEXT$add$1 -> f.e$j0$a:
    shark.AndroidReferenceMatchers$LGCONTEXT__MCONTEXT$add$1 INSTANCE -> a
    1023:1023:boolean invoke(shark.AndroidBuildMirror) -> c
    1015:1015:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$MAGNIFIER -> f.e$k0:
    579:579:void <init>(java.lang.String,int) -> <init>
    581:592:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$MAGNIFIER$add$1 -> f.e$k0$a:
    shark.AndroidReferenceMatchers$MAGNIFIER$add$1 INSTANCE -> a
    590:590:boolean invoke(shark.AndroidBuildMirror) -> c
    579:579:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$MAIN -> f.e$l0:
    1175:1175:void <init>(java.lang.String,int) -> <init>
    1182:1183:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$MAPPER_CLIENT -> f.e$m0:
    1042:1042:void <init>(java.lang.String,int) -> <init>
    1046:1056:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$MAPPER_CLIENT$add$1 -> f.e$m0$a:
    shark.AndroidReferenceMatchers$MAPPER_CLIENT$add$1 INSTANCE -> a
    1054:1054:boolean invoke(shark.AndroidBuildMirror) -> c
    1042:1042:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$MEDIA_PROJECTION_CALLBACK -> f.e$n0:
    335:335:void <init>(java.lang.String,int) -> <init>
    337:346:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$MEDIA_PROJECTION_CALLBACK$add$1 -> f.e$n0$a:
    shark.AndroidReferenceMatchers$MEDIA_PROJECTION_CALLBACK$add$1 INSTANCE -> a
    344:344:boolean invoke(shark.AndroidBuildMirror) -> c
    335:335:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$MEDIA_SCANNER_CONNECTION -> f.e$o0:
    390:390:void <init>(java.lang.String,int) -> <init>
    394:406:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$MEDIA_SCANNER_CONNECTION$add$1 -> f.e$o0$a:
    shark.AndroidReferenceMatchers$MEDIA_SCANNER_CONNECTION$add$1 INSTANCE -> a
    404:404:boolean invoke(shark.AndroidBuildMirror) -> c
    390:390:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$MEDIA_SESSION_LEGACY_HELPER__SINSTANCE -> f.e$p0:
    121:121:void <init>(java.lang.String,int) -> <init>
    125:140:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$MEDIA_SESSION_LEGACY_HELPER__SINSTANCE$add$1 -> f.e$p0$a:
    shark.AndroidReferenceMatchers$MEDIA_SESSION_LEGACY_HELPER__SINSTANCE$add$1 INSTANCE -> a
    138:138:boolean invoke(shark.AndroidBuildMirror) -> c
    121:121:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$MULTI_WINDOW_DECOR_SUPPORT__MWINDOW -> f.e$q0:
    966:966:void <init>(java.lang.String,int) -> <init>
    970:980:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$MULTI_WINDOW_DECOR_SUPPORT__MWINDOW$add$1 -> f.e$q0$a:
    shark.AndroidReferenceMatchers$MULTI_WINDOW_DECOR_SUPPORT__MWINDOW$add$1 INSTANCE -> a
    978:978:boolean invoke(shark.AndroidBuildMirror) -> c
    966:966:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$OEM_SCENE_CALL_BLOCKER -> f.e$r0:
    1128:1128:void <init>(java.lang.String,int) -> <init>
    1132:1141:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$OEM_SCENE_CALL_BLOCKER$add$1 -> f.e$r0$a:
    shark.AndroidReferenceMatchers$OEM_SCENE_CALL_BLOCKER$add$1 INSTANCE -> a
    1139:1139:boolean invoke(shark.AndroidBuildMirror) -> c
    1128:1128:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$PERSONA_MANAGER -> f.e$s0:
    868:868:void <init>(java.lang.String,int) -> <init>
    872:881:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$PERSONA_MANAGER$add$1 -> f.e$s0$a:
    shark.AndroidReferenceMatchers$PERSONA_MANAGER$add$1 INSTANCE -> a
    879:879:boolean invoke(shark.AndroidBuildMirror) -> c
    868:868:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$REFERENCES -> f.e$t0:
    1146:1146:void <init>(java.lang.String,int) -> <init>
    1150:1162:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$RESOURCES__MCONTEXT -> f.e$u0:
    884:884:void <init>(java.lang.String,int) -> <init>
    888:898:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$RESOURCES__MCONTEXT$add$1 -> f.e$u0$a:
    shark.AndroidReferenceMatchers$RESOURCES__MCONTEXT$add$1 INSTANCE -> a
    896:896:boolean invoke(shark.AndroidBuildMirror) -> c
    884:884:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$SEM_APP_ICON_SOLUTION -> f.e$v0:
    829:829:void <init>(java.lang.String,int) -> <init>
    831:836:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$SEM_APP_ICON_SOLUTION$add$1 -> f.e$v0$a:
    shark.AndroidReferenceMatchers$SEM_APP_ICON_SOLUTION$add$1 INSTANCE -> a
    834:834:boolean invoke(shark.AndroidBuildMirror) -> c
    829:829:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$SEM_CLIPBOARD_MANAGER__MCONTEXT -> f.e$w0:
    752:752:void <init>(java.lang.String,int) -> <init>
    756:769:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$SEM_CLIPBOARD_MANAGER__MCONTEXT$add$1 -> f.e$w0$a:
    shark.AndroidReferenceMatchers$SEM_CLIPBOARD_MANAGER__MCONTEXT$add$1 INSTANCE -> a
    762:762:boolean invoke(shark.AndroidBuildMirror) -> c
    752:752:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$SEM_CLIPBOARD_MANAGER__MCONTEXT$add$2 -> f.e$w0$b:
    shark.AndroidReferenceMatchers$SEM_CLIPBOARD_MANAGER__MCONTEXT$add$2 INSTANCE -> a
    767:767:boolean invoke(shark.AndroidBuildMirror) -> c
    752:752:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$SEM_EMERGENCY_MANAGER__MCONTEXT -> f.e$x0:
    803:803:void <init>(java.lang.String,int) -> <init>
    807:816:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$SEM_EMERGENCY_MANAGER__MCONTEXT$add$1 -> f.e$x0$a:
    shark.AndroidReferenceMatchers$SEM_EMERGENCY_MANAGER__MCONTEXT$add$1 INSTANCE -> a
    814:814:boolean invoke(shark.AndroidBuildMirror) -> c
    803:803:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$SEM_PERSONA_MANAGER -> f.e$y0:
    819:819:void <init>(java.lang.String,int) -> <init>
    821:826:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$SEM_PERSONA_MANAGER$add$1 -> f.e$y0$a:
    shark.AndroidReferenceMatchers$SEM_PERSONA_MANAGER$add$1 INSTANCE -> a
    824:824:boolean invoke(shark.AndroidBuildMirror) -> c
    819:819:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$SMART_COVER_MANAGER -> f.e$z0:
    1028:1028:void <init>(java.lang.String,int) -> <init>
    1032:1039:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$SMART_COVER_MANAGER$add$1 -> f.e$z0$a:
    shark.AndroidReferenceMatchers$SMART_COVER_MANAGER$add$1 INSTANCE -> a
    1037:1037:boolean invoke(shark.AndroidBuildMirror) -> c
    1028:1028:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$SPAN_CONTROLLER -> f.e$a1:
    89:89:void <init>(java.lang.String,int) -> <init>
    93:118:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$SPAN_CONTROLLER$add$1 -> f.e$a1$a:
    shark.AndroidReferenceMatchers$SPAN_CONTROLLER$add$1 INSTANCE -> a
    110:110:boolean invoke(shark.AndroidBuildMirror) -> c
    89:89:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$SPAN_CONTROLLER$add$2 -> f.e$a1$b:
    shark.AndroidReferenceMatchers$SPAN_CONTROLLER$add$2 INSTANCE -> a
    116:116:boolean invoke(shark.AndroidBuildMirror) -> c
    89:89:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$SPEECH_RECOGNIZER -> f.e$b1:
    350:350:void <init>(java.lang.String,int) -> <init>
    354:364:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$SPEECH_RECOGNIZER$add$1 -> f.e$b1$a:
    shark.AndroidReferenceMatchers$SPEECH_RECOGNIZER$add$1 INSTANCE -> a
    362:362:boolean invoke(shark.AndroidBuildMirror) -> c
    350:350:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$SPELL_CHECKER -> f.e$c1:
    294:294:void <init>(java.lang.String,int) -> <init>
    298:307:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$SPELL_CHECKER$add$1 -> f.e$c1$a:
    shark.AndroidReferenceMatchers$SPELL_CHECKER$add$1 INSTANCE -> a
    305:305:boolean invoke(shark.AndroidBuildMirror) -> c
    294:294:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$SPELL_CHECKER_SESSION -> f.e$d1:
    279:279:void <init>(java.lang.String,int) -> <init>
    283:291:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$SPELL_CHECKER_SESSION$add$1 -> f.e$d1$a:
    shark.AndroidReferenceMatchers$SPELL_CHECKER_SESSION$add$1 INSTANCE -> a
    289:289:boolean invoke(shark.AndroidBuildMirror) -> c
    279:279:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$SPEN_GESTURE_MANAGER -> f.e$e1:
    718:718:void <init>(java.lang.String,int) -> <init>
    722:730:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$SPEN_GESTURE_MANAGER$add$1 -> f.e$e1$a:
    shark.AndroidReferenceMatchers$SPEN_GESTURE_MANAGER$add$1 INSTANCE -> a
    728:728:boolean invoke(shark.AndroidBuildMirror) -> c
    718:718:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$STATIC_MTARGET_VIEW -> f.e$f1:
    952:952:void <init>(java.lang.String,int) -> <init>
    956:963:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$STATIC_MTARGET_VIEW$add$1 -> f.e$f1$a:
    shark.AndroidReferenceMatchers$STATIC_MTARGET_VIEW$add$1 INSTANCE -> a
    961:961:boolean invoke(shark.AndroidBuildMirror) -> c
    952:952:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$SYSTEM_SENSOR_MANAGER__MAPPCONTEXTIMPL -> f.e$g1:
    1059:1059:void <init>(java.lang.String,int) -> <init>
    1063:1073:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$SYSTEM_SENSOR_MANAGER__MAPPCONTEXTIMPL$add$1 -> f.e$g1$a:
    shark.AndroidReferenceMatchers$SYSTEM_SENSOR_MANAGER__MAPPCONTEXTIMPL$add$1 INSTANCE -> a
    1071:1071:boolean invoke(shark.AndroidBuildMirror) -> c
    1059:1059:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$TEXT_LINE__SCACHED -> f.e$h1:
    143:143:void <init>(java.lang.String,int) -> <init>
    147:162:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$TEXT_LINE__SCACHED$add$1 -> f.e$h1$a:
    shark.AndroidReferenceMatchers$TEXT_LINE__SCACHED$add$1 INSTANCE -> a
    160:160:boolean invoke(shark.AndroidBuildMirror) -> c
    143:143:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$TEXT_TO_SPEECH -> f.e$i1:
    649:649:void <init>(java.lang.String,int) -> <init>
    653:674:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$TEXT_TO_SPEECH$add$1 -> f.e$i1$a:
    shark.AndroidReferenceMatchers$TEXT_TO_SPEECH$add$1 INSTANCE -> a
    665:665:boolean invoke(shark.AndroidBuildMirror) -> c
    649:649:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$TEXT_TO_SPEECH$add$2 -> f.e$i1$b:
    shark.AndroidReferenceMatchers$TEXT_TO_SPEECH$add$2 INSTANCE -> a
    672:672:boolean invoke(shark.AndroidBuildMirror) -> c
    649:649:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$TEXT_VIEW__MLAST_HOVERED_VIEW -> f.e$j1:
    854:854:void <init>(java.lang.String,int) -> <init>
    858:865:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$TEXT_VIEW__MLAST_HOVERED_VIEW$add$1 -> f.e$j1$a:
    shark.AndroidReferenceMatchers$TEXT_VIEW__MLAST_HOVERED_VIEW$add$1 INSTANCE -> a
    863:863:boolean invoke(shark.AndroidBuildMirror) -> c
    854:854:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$TOAST_TN -> f.e$k1:
    703:703:void <init>(java.lang.String,int) -> <init>
    705:711:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$USER_MANAGER__SINSTANCE -> f.e$l1:
    409:409:void <init>(java.lang.String,int) -> <init>
    413:427:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$USER_MANAGER__SINSTANCE$add$1 -> f.e$l1$a:
    shark.AndroidReferenceMatchers$USER_MANAGER__SINSTANCE$add$1 INSTANCE -> a
    425:425:boolean invoke(shark.AndroidBuildMirror) -> c
    409:409:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$VIEWLOCATIONHOLDER_ROOT -> f.e$m1:
    613:613:void <init>(java.lang.String,int) -> <init>
    617:628:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$VIEWLOCATIONHOLDER_ROOT$add$1 -> f.e$m1$a:
    shark.AndroidReferenceMatchers$VIEWLOCATIONHOLDER_ROOT$add$1 INSTANCE -> a
    626:626:boolean invoke(shark.AndroidBuildMirror) -> c
    613:613:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$VIEW_CONFIGURATION__MCONTEXT -> f.e$n1:
    901:901:void <init>(java.lang.String,int) -> <init>
    905:916:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$VIEW_CONFIGURATION__MCONTEXT$add$1 -> f.e$n1$a:
    shark.AndroidReferenceMatchers$VIEW_CONFIGURATION__MCONTEXT$add$1 INSTANCE -> a
    914:914:boolean invoke(shark.AndroidBuildMirror) -> c
    901:901:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidReferenceMatchers$WINDOW_MANAGER_GLOBAL -> f.e$o1:
    677:677:void <init>(java.lang.String,int) -> <init>
    679:689:void add$shark_android(java.util.List) -> b
shark.AndroidReferenceMatchers$WINDOW_MANAGER_GLOBAL$add$1 -> f.e$o1$a:
    shark.AndroidReferenceMatchers$WINDOW_MANAGER_GLOBAL$add$1 INSTANCE -> a
    687:687:boolean invoke(shark.AndroidBuildMirror) -> c
    677:677:java.lang.Object invoke(java.lang.Object) -> invoke
shark.AndroidResourceIdNames -> shark.AndroidResourceIdNames:
    5:5:void <init>(int[],java.lang.String[]) -> <init>
    5:5:void <init>(int[],java.lang.String[],kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    5:5:shark.AndroidResourceIdNames access$getHolderField$cp() -> access$getHolderField$cp
    5:5:void access$setHolderField$cp(shark.AndroidResourceIdNames) -> access$setHolderField$cp
    11:12:java.lang.String get(int) -> get
shark.AndroidResourceIdNames$Companion -> shark.AndroidResourceIdNames$a:
    19:19:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    19:19:void <init>():19 -> <init>
    19:19:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    65:66:java.lang.Integer findIdTypeResourceIdStart(kotlin.jvm.functions.Function1) -> a
    76:76:shark.AndroidResourceIdNames readFromHeap(shark.HeapGraph) -> b
    41:60:void saveToMemory(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> c
    37:37:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> c
    37:37:void saveToMemory(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):108 -> c
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> c
    38:38:void saveToMemory(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):109 -> c
    59:62:void saveToMemory(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> c
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> c
    38:38:void saveToMemory(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1):109 -> c
    40:40:void saveToMemory(kotlin.jvm.functions.Function1,kotlin.jvm.functions.Function1) -> c
shark.AndroidResourceIdNames$Companion$readFromHeap$1 -> shark.AndroidResourceIdNames$a$a:
    shark.HeapGraph $graph -> a
    19:19:java.lang.Object invoke() -> a
    77:87:shark.AndroidResourceIdNames invoke() -> c
    37:37:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> c
    37:37:shark.AndroidResourceIdNames invoke():100 -> c
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> c
    38:38:shark.AndroidResourceIdNames invoke():101 -> c
    84:81:shark.AndroidResourceIdNames invoke() -> c
    38:38:java.lang.Object[] kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray(java.util.Collection) -> c
    38:38:shark.AndroidResourceIdNames invoke():101 -> c
    84:90:shark.AndroidResourceIdNames invoke() -> c
shark.AndroidResourceIdNames$Companion$readFromHeap$1$1$1$names$1 -> shark.AndroidResourceIdNames$a$a$a:
    shark.AndroidResourceIdNames$Companion$readFromHeap$1$1$1$names$1 INSTANCE -> a
    85:85:java.lang.String invoke(shark.HeapValue) -> c
    19:19:java.lang.Object invoke(java.lang.Object) -> invoke
shark.ApplicationLeak -> f.f:
    java.util.List leakTraces -> a
    254:256:void <init>(java.util.List) -> <init>
    255:255:java.util.List getLeakTraces() -> a
    262:266:java.lang.String getShortDescription() -> b
    258:258:java.lang.String getSignature() -> c
    279:279:shark.LeakTrace leakTraceFromV20$shark() -> e
    271:271:java.lang.String toString() -> toString
shark.ApplicationLeak$Companion -> f.f$a:
    281:281:void <init>() -> <init>
    281:281:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.GcRoot -> f.g:
    6:6:void <init>() -> <init>
    6:6:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    long getId() -> a
shark.GcRoot$Debugger -> f.g$a:
    long id -> a
    125:125:void <init>(long) -> <init>
    125:125:long getId() -> a
shark.GcRoot$Finalizing -> f.g$b:
    long id -> a
    120:120:void <init>(long) -> <init>
    120:120:long getId() -> a
shark.GcRoot$InternedString -> f.g$c:
    long id -> a
    115:115:void <init>(long) -> <init>
    115:115:long getId() -> a
shark.GcRoot$JavaFrame -> f.g$d:
    long id -> a
    int threadSerialNumber -> b
    42:50:void <init>(long,int,int) -> <init>
    43:43:long getId() -> a
    45:45:int getThreadSerialNumber() -> b
shark.GcRoot$JniGlobal -> f.g$e:
    long id -> a
    21:24:void <init>(long,long) -> <init>
    22:22:long getId() -> a
shark.GcRoot$JniLocal -> f.g$f:
    long id -> a
    29:37:void <init>(long,int,int) -> <init>
    30:30:long getId() -> a
shark.GcRoot$JniMonitor -> f.g$g:
    long id -> a
    106:110:void <init>(long,int,int) -> <init>
    107:107:long getId() -> a
shark.GcRoot$MonitorUsed -> f.g$h:
    long id -> a
    80:80:void <init>(long) -> <init>
    80:80:long getId() -> a
shark.GcRoot$NativeStack -> f.g$i:
    long id -> a
    55:63:void <init>(long,int) -> <init>
    56:56:long getId() -> a
shark.GcRoot$ReferenceCleanup -> f.g$j:
    long id -> a
    96:96:void <init>(long) -> <init>
    96:96:long getId() -> a
shark.GcRoot$StickyClass -> f.g$k:
    long id -> a
    68:68:void <init>(long) -> <init>
    68:68:long getId() -> a
shark.GcRoot$ThreadBlock -> f.g$l:
    long id -> a
    70:74:void <init>(long,int) -> <init>
    71:71:long getId() -> a
shark.GcRoot$ThreadObject -> f.g$m:
    long id -> a
    int threadSerialNumber -> b
    87:91:void <init>(long,int,int) -> <init>
    88:88:long getId() -> a
    89:89:int getThreadSerialNumber() -> b
shark.GcRoot$Unknown -> f.g$n:
    long id -> a
    16:16:void <init>(long) -> <init>
    16:16:long getId() -> a
shark.GcRoot$Unreachable -> f.g$o:
    long id -> a
    130:130:void <init>(long) -> <init>
    130:130:long getId() -> a
shark.GcRoot$VmInternal -> f.g$p:
    long id -> a
    101:101:void <init>(long) -> <init>
    101:101:long getId() -> a
shark.GraphContext -> f.h:
    java.util.Map store -> a
    7:8:void <init>() -> <init>
    21:56:java.lang.Object getOrPut(java.lang.String,kotlin.jvm.functions.Function0) -> a
    353:353:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> a
    353:353:java.lang.Object getOrPut(java.lang.String,kotlin.jvm.functions.Function0):58 -> a
    53:53:java.lang.Object getOrPut(java.lang.String,kotlin.jvm.functions.Function0) -> a
    34:35:void set(java.lang.String,java.lang.Object) -> b
shark.HeapAnalysis -> f.i:
    12:12:void <init>() -> <init>
    12:12:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    long getCreatedAtTimeMillis() -> a
    java.io.File getHeapDumpFile() -> b
shark.HeapAnalysis$Companion -> f.i$a:
    28:28:void <init>() -> <init>
    28:28:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.HeapAnalysisException -> f.j:
    6:6:void <init>(java.lang.Throwable) -> <init>
    9:10:java.lang.String toString() -> toString
shark.HeapAnalysisException$Companion -> f.j$a:
    14:14:void <init>() -> <init>
    14:14:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.HeapAnalysisFailure -> f.k:
    java.io.File heapDumpFile -> a
    long createdAtTimeMillis -> b
    long analysisDurationMillis -> c
    shark.HeapAnalysisException exception -> d
    36:44:void <init>(java.io.File,long,long,shark.HeapAnalysisException) -> <init>
    38:38:long getCreatedAtTimeMillis() -> a
    37:37:java.io.File getHeapDumpFile() -> b
    39:39:long getAnalysisDurationMillis() -> c
    43:43:shark.HeapAnalysisException getException() -> d
    47:63:java.lang.String toString() -> toString
shark.HeapAnalysisFailure$Companion -> f.k$a:
    67:67:void <init>() -> <init>
    67:67:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.HeapAnalysisKt -> f.l:
    1:1:java.lang.String access$androidManufacturer() -> a
    1:1:int access$androidSdkInt() -> b
    1:1:java.lang.String access$leakCanaryVersion() -> c
    297:297:java.lang.String androidManufacturer() -> d
    287:287:int androidSdkInt() -> e
    307:307:java.lang.String leakCanaryVersion() -> f
shark.HeapAnalysisSuccess -> f.m:
    java.io.File heapDumpFile -> a
    java.util.Map metadata -> d
    java.util.List libraryLeaks -> f
    java.util.List applicationLeaks -> e
    shark.HeapAnalysisSuccess$Companion Companion -> g
    long createdAtTimeMillis -> b
    long analysisDurationMillis -> c
    75:88:void <init>(java.io.File,long,long,java.util.Map,java.util.List,java.util.List) -> <init>
    77:77:long getCreatedAtTimeMillis() -> a
    76:76:java.io.File getHeapDumpFile() -> b
    94:94:kotlin.sequences.Sequence getAllLeaks() -> c
    78:78:long getAnalysisDurationMillis() -> d
    83:83:java.util.List getApplicationLeaks() -> e
    87:87:java.util.List getLibraryLeaks() -> f
    79:79:java.util.Map getMetadata() -> g
    97:117:java.lang.String toString() -> toString
    67:67:java.util.List kotlin.collections.MapsKt___MapsKt.map(java.util.Map,kotlin.jvm.functions.Function1) -> toString
    67:67:java.lang.String toString():316 -> toString
    92:92:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> toString
    92:92:java.lang.String toString():317 -> toString
    93:93:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> toString
    93:93:java.lang.String toString():318 -> toString
    117:117:java.lang.String toString() -> toString
    92:92:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> toString
    92:92:java.lang.String toString():317 -> toString
    94:94:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> toString
    94:94:java.lang.String toString():319 -> toString
    118:122:java.lang.String toString() -> toString
shark.HeapAnalysisSuccess$Companion -> f.m$a:
    126:126:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    126:126:void <init>():126 -> <init>
    126:126:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    134:328:shark.HeapAnalysisSuccess upgradeFrom20Deserialized(shark.HeapAnalysisSuccess) -> a
    353:353:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> a
    353:353:shark.HeapAnalysisSuccess upgradeFrom20Deserialized(shark.HeapAnalysisSuccess):330 -> a
    325:350:shark.HeapAnalysisSuccess upgradeFrom20Deserialized(shark.HeapAnalysisSuccess) -> a
    353:353:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> a
    353:353:shark.HeapAnalysisSuccess upgradeFrom20Deserialized(shark.HeapAnalysisSuccess):352 -> a
    347:135:shark.HeapAnalysisSuccess upgradeFrom20Deserialized(shark.HeapAnalysisSuccess) -> a
shark.HeapAnalyzer -> f.n:
    shark.OnAnalysisProgressListener listener -> a
    55:55:void <init>(shark.OnAnalysisProgressListener) -> <init>
    79:89:shark.HeapAnalysis analyze(java.io.File,shark.LeakingObjectFinder,java.util.List,boolean,java.util.List,shark.MetadataExtractor,shark.ProguardMapping) -> a
    138:146:shark.HeapAnalysisSuccess analyzeGraph(shark.HeapAnalyzer$FindLeakInput,shark.MetadataExtractor,shark.LeakingObjectFinder,java.io.File,long) -> b
    428:662:java.util.List buildLeakTraceObjects(java.util.List,java.util.List) -> c
    355:366:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults) -> d
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> d
    31:31:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):617 -> d
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> d
    32:32:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):618 -> d
    367:368:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults) -> d
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> d
    33:33:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):619 -> d
    371:371:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults) -> d
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> d
    31:31:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):620 -> d
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> d
    32:32:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):621 -> d
    371:371:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults) -> d
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> d
    33:33:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):622 -> d
    372:401:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults) -> d
    250:250:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> d
    250:250:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):625 -> d
    401:401:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults) -> d
    251:251:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.firstOrNull(java.lang.Iterable,kotlin.jvm.functions.Function1) -> d
    251:251:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):626 -> d
    398:631:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults) -> d
    353:353:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> d
    353:353:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):633 -> d
    628:638:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults) -> d
    353:353:java.lang.Object kotlin.collections.MapsKt__MapsKt.getOrPut(java.util.Map,java.lang.Object,kotlin.jvm.functions.Function0) -> d
    353:353:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):640 -> d
    635:414:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults) -> d
    67:67:java.util.List kotlin.collections.MapsKt___MapsKt.map(java.util.Map,kotlin.jvm.functions.Function1) -> d
    67:67:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):642 -> d
    92:92:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> d
    92:92:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):643 -> d
    93:93:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> d
    93:93:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):644 -> d
    415:415:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults) -> d
    92:92:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> d
    92:92:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):643 -> d
    94:94:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> d
    94:94:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):645 -> d
    414:417:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults) -> d
    67:67:java.util.List kotlin.collections.MapsKt___MapsKt.map(java.util.Map,kotlin.jvm.functions.Function1) -> d
    67:67:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):646 -> d
    92:92:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> d
    92:92:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):647 -> d
    93:93:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> d
    93:93:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):648 -> d
    418:419:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults) -> d
    92:92:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> d
    92:92:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):647 -> d
    94:94:java.util.Collection kotlin.collections.MapsKt___MapsKt.mapTo(java.util.Map,java.util.Collection,kotlin.jvm.functions.Function1) -> d
    94:94:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults):649 -> d
    417:421:kotlin.Pair buildLeakTraces(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults) -> d
    468:667:java.util.List buildReferencePath(java.util.List,java.util.List) -> e
    478:518:java.util.List computeLeakStatuses(java.util.List) -> f
    118:118:java.lang.Object kotlin.sequences.SequencesKt___SequencesKt.first(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> f
    118:118:java.util.List computeLeakStatuses(java.util.List):672 -> f
    519:519:java.util.List computeLeakStatuses(java.util.List) -> f
    119:119:java.lang.Object kotlin.sequences.SequencesKt___SequencesKt.first(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> f
    119:119:java.util.List computeLeakStatuses(java.util.List):673 -> f
    531:537:java.util.List computeLeakStatuses(java.util.List) -> f
    118:118:java.lang.Object kotlin.sequences.SequencesKt___SequencesKt.first(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> f
    118:118:java.util.List computeLeakStatuses(java.util.List):674 -> f
    538:538:java.util.List computeLeakStatuses(java.util.List) -> f
    119:119:java.lang.Object kotlin.sequences.SequencesKt___SequencesKt.first(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> f
    119:119:java.util.List computeLeakStatuses(java.util.List):675 -> f
    550:550:java.util.List computeLeakStatuses(java.util.List) -> f
    243:347:java.util.List computeRetainedSizes(shark.HeapAnalyzer$FindLeakInput,shark.internal.PathFinder$PathFindingResults) -> g
    184:201:java.util.List deduplicateShortestPaths(java.util.List) -> h
    157:161:kotlin.Pair findLeaks(shark.HeapAnalyzer$FindLeakInput,java.util.Set) -> i
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    31:31:kotlin.Pair findLeaks(shark.HeapAnalyzer$FindLeakInput,java.util.Set):598 -> i
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    32:32:kotlin.Pair findLeaks(shark.HeapAnalyzer$FindLeakInput,java.util.Set):599 -> i
    161:161:kotlin.Pair findLeaks(shark.HeapAnalyzer$FindLeakInput,java.util.Set) -> i
    33:33:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> i
    33:33:kotlin.Pair findLeaks(shark.HeapAnalyzer$FindLeakInput,java.util.Set):600 -> i
    163:163:kotlin.Pair findLeaks(shark.HeapAnalyzer$FindLeakInput,java.util.Set) -> i
    230:240:void findResultsInTrie(shark.HeapAnalyzer$TrieNode$ParentNode,java.util.List) -> j
    585:589:java.lang.String recordClassName(shark.HeapObject) -> k
    557:579:kotlin.Pair resolveStatus(shark.ObjectReporter,boolean) -> l
    594:594:long since(long) -> m
    210:224:void updateTrie(shark.internal.ReferencePathNode,java.util.List,int,shark.HeapAnalyzer$TrieNode$ParentNode) -> n
shark.HeapAnalyzer$FindLeakInput -> f.n$a:
    java.util.List referenceMatchers -> b
    java.util.List objectInspectors -> d
    shark.HeapGraph graph -> a
    boolean computeRetainedHeapSize -> c
    59:59:void <init>(shark.HeapGraph,java.util.List,boolean,java.util.List) -> <init>
    62:62:boolean getComputeRetainedHeapSize() -> a
    60:60:shark.HeapGraph getGraph() -> b
    63:63:java.util.List getObjectInspectors() -> c
    61:61:java.util.List getReferenceMatchers() -> d
shark.HeapAnalyzer$TrieNode -> f.n$b:
    166:166:void <init>() -> <init>
    166:166:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.HeapAnalyzer$TrieNode$LeafNode -> f.n$b$a:
    shark.internal.ReferencePathNode pathNode -> a
    176:179:void <init>(long,shark.internal.ReferencePathNode) -> <init>
    178:178:shark.internal.ReferencePathNode getPathNode() -> a
shark.HeapAnalyzer$TrieNode$ParentNode -> f.n$b$b:
    java.util.Map children -> a
    long objectId -> b
    169:170:void <init>(long) -> <init>
    170:170:void <init>(long) -> a
    170:170:java.util.Map getChildren():170 -> a
    169:169:void <init>(long) -> b
    169:169:long getObjectId():169 -> b
    172:172:java.lang.String toString() -> toString
shark.HeapAnalyzer$computeLeakStatuses$nextNotLeakingIndex$1 -> f.n$c:
    kotlin.jvm.internal.Ref$IntRef $lastNotLeakingElementIndex -> a
    517:517:java.lang.Integer invoke(int) -> c
    55:55:java.lang.Object invoke(java.lang.Object) -> invoke
shark.HeapAnalyzer$computeLeakStatuses$previousLeakingIndex$1 -> f.n$d:
    kotlin.jvm.internal.Ref$IntRef $firstLeakingElementIndex -> a
    536:536:java.lang.Integer invoke(int) -> c
    55:55:java.lang.Object invoke(java.lang.Object) -> invoke
shark.HeapAnalyzer$computeRetainedSizes$1 -> f.n$e:
    shark.HeapAnalyzer$computeRetainedSizes$1 INSTANCE -> a
    264:264:boolean invoke(shark.HeapObject$HeapInstance) -> c
    55:55:java.lang.Object invoke(java.lang.Object) -> invoke
shark.HeapAnalyzer$computeRetainedSizes$4 -> f.n$f:
    java.util.Map $sizeByDominator -> c
    java.util.Map $nativeSizes -> d
    java.util.Set $leakingInstanceIds -> b
    shark.HeapAnalyzer$FindLeakInput $this_computeRetainedSizes -> a
    306:306:void <init>(shark.HeapAnalyzer$FindLeakInput,java.util.Set,java.util.Map,java.util.Map) -> <init>
    312:325:void onEntry(long,long) -> a
shark.HeapAnalyzer$computeRetainedSizes$nativeSizes$1 -> f.n$g:
    shark.HeapAnalyzer$computeRetainedSizes$nativeSizes$1 INSTANCE -> a
    252:252:int invoke(long) -> c
    55:55:java.lang.Object invoke(java.lang.Object) -> invoke
shark.HeapAnalyzer$computeRetainedSizes$sizeByDominator$1 -> f.n$h:
    shark.HeapAnalyzer$computeRetainedSizes$sizeByDominator$1 INSTANCE -> a
    290:290:int invoke(long) -> c
    55:55:java.lang.Object invoke(java.lang.Object) -> invoke
shark.HeapAnalyzer$updateTrie$childNode$1 -> f.n$i:
    shark.HeapAnalyzer$TrieNode$ParentNode $parentNode -> b
    long $objectId -> a
    55:55:java.lang.Object invoke() -> a
    216:218:shark.HeapAnalyzer$TrieNode$ParentNode invoke() -> c
shark.HeapField -> f.o:
    shark.HeapValue value -> c
    shark.HeapObject$HeapClass declaringClass -> a
    java.lang.String name -> b
    11:11:void <init>(shark.HeapObject$HeapClass,java.lang.String,shark.HeapValue) -> <init>
    15:15:shark.HeapObject$HeapClass getDeclaringClass() -> a
    19:19:java.lang.String getName() -> b
    24:24:shark.HeapValue getValue() -> c
    37:37:shark.HeapObject$HeapInstance getValueAsInstance() -> d
    43:43:shark.HeapObject$HeapObjectArray getValueAsObjectArray() -> e
    50:50:shark.HeapObject$HeapPrimitiveArray getValueAsPrimitiveArray() -> f
shark.HeapGraph -> f.p:
    java.util.List getGcRoots() -> a
    shark.HeapObject findObjectById(long) -> b
    kotlin.sequences.Sequence getClasses() -> c
    shark.HeapObject findObjectByIdOrNull(long) -> d
    kotlin.sequences.Sequence getInstances() -> e
    shark.HeapObject$HeapClass findClassByName(java.lang.String) -> f
    boolean objectExists(long) -> g
    int getIdentifierByteSize() -> h
shark.HeapObject -> f.q:
    shark.HeapObject$Companion Companion -> a
    582:597:void <clinit>() -> <clinit>
    9671:9671:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    9671:9671:void <clinit>():598 -> <clinit>
    599:583:void <clinit>() -> <clinit>
    9671:9671:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    9671:9671:void <clinit>():598 -> <clinit>
    583:584:void <clinit>() -> <clinit>
    36:36:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    36:36:void <init>():36 -> <init>
    36:36:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    66:66:shark.HeapObject$HeapInstance getAsInstance() -> a
    72:72:shark.HeapObject$HeapObjectArray getAsObjectArray() -> b
    78:78:shark.HeapObject$HeapPrimitiveArray getAsPrimitiveArray() -> c
    shark.HeapGraph getGraph() -> d
    long getObjectId() -> e
    shark.HprofRecord$HeapDumpRecord$ObjectRecord readRecord() -> f
shark.HeapObject$Companion -> f.q$a:
    580:580:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    580:580:void <init>():580 -> <init>
    580:580:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    580:580:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> a
    580:580:java.lang.String access$classSimpleName(shark.HeapObject$Companion,java.lang.String):580 -> a
    587:591:java.lang.String classSimpleName(java.lang.String) -> b
shark.HeapObject$HeapClass -> f.q$b:
    shark.internal.IndexedObject$IndexedClass indexedObject -> c
    long objectId -> d
    shark.HprofHeapGraph hprofGraph -> b
    83:83:shark.HprofHeapGraph access$getHprofGraph$p(shark.HeapObject$HeapClass) -> <init>
    83:83:void <init>(shark.HprofHeapGraph,shark.internal.IndexedObject$IndexedClass,long):83 -> <init>
    87:87:void <init>(shark.HprofHeapGraph,shark.internal.IndexedObject$IndexedClass,long) -> <init>
    89:89:shark.HeapGraph getGraph() -> d
    86:86:long getObjectId() -> e
    83:83:shark.HprofHeapGraph access$getHprofGraph$p(shark.HeapObject$HeapClass) -> f
    83:83:shark.HprofRecord$HeapDumpRecord$ObjectRecord readRecord():83 -> f
    83:83:shark.HprofHeapGraph access$getHprofGraph$p(shark.HeapObject$HeapClass) -> g
    261:261:shark.HeapField get(java.lang.String) -> h
    159:159:kotlin.sequences.Sequence getClassHierarchy() -> i
    211:211:kotlin.sequences.Sequence getDirectInstances() -> j
    110:110:int getInstanceByteSize() -> k
    95:95:java.lang.String getName() -> l
    101:101:java.lang.String getSimpleName() -> m
    150:151:shark.HeapObject$HeapClass getSuperclass() -> n
    134:601:int readFieldsByteSize() -> o
    219:219:shark.HprofRecord$HeapDumpRecord$ObjectRecord$ClassDumpRecord readRecord() -> p
    247:255:shark.HeapField readStaticField(java.lang.String) -> q
    228:229:kotlin.sequences.Sequence readStaticFields() -> r
    264:264:java.lang.String toString() -> toString
shark.HeapObject$HeapClass$classHierarchy$1 -> f.q$b$a:
    shark.HeapObject$HeapClass$classHierarchy$1 INSTANCE -> a
    159:159:shark.HeapObject$HeapClass invoke(shark.HeapObject$HeapClass) -> c
    83:83:java.lang.Object invoke(java.lang.Object) -> invoke
shark.HeapObject$HeapClass$directInstances$1 -> f.q$b$b:
    shark.HeapObject$HeapClass this$0 -> a
    211:211:boolean invoke(shark.HeapObject$HeapInstance) -> c
    83:83:java.lang.Object invoke(java.lang.Object) -> invoke
shark.HeapObject$HeapClass$readStaticFields$1 -> f.q$b$c:
    shark.HeapObject$HeapClass this$0 -> a
    230:233:shark.HeapField invoke(shark.HprofRecord$HeapDumpRecord$ObjectRecord$ClassDumpRecord$StaticFieldRecord) -> c
    83:83:java.lang.Object invoke(java.lang.Object) -> invoke
shark.HeapObject$HeapInstance -> f.q$c:
    boolean isPrimitiveWrapper -> e
    long objectId -> d
    shark.internal.IndexedObject$IndexedInstance indexedObject -> c
    shark.HprofHeapGraph hprofGraph -> b
    271:271:shark.HprofHeapGraph access$getHprofGraph$p(shark.HeapObject$HeapInstance) -> <init>
    271:271:void <init>(shark.HprofHeapGraph,shark.internal.IndexedObject$IndexedInstance,long,boolean):271 -> <init>
    279:279:void <init>(shark.HprofHeapGraph,shark.internal.IndexedObject$IndexedInstance,long,boolean) -> <init>
    282:282:shark.HeapGraph getGraph() -> d
    274:274:long getObjectId() -> e
    271:271:shark.HprofHeapGraph access$getHprofGraph$p(shark.HeapObject$HeapInstance) -> f
    271:271:shark.HprofRecord$HeapDumpRecord$ObjectRecord readRecord():271 -> f
    271:271:shark.HprofHeapGraph access$getHprofGraph$p(shark.HeapObject$HeapInstance) -> g
    387:387:shark.HeapField get(java.lang.String,java.lang.String) -> h
    378:378:shark.HeapField get(kotlin.reflect.KClass,java.lang.String) -> i
    288:288:int getByteSize() -> j
    273:273:shark.internal.IndexedObject$IndexedInstance getIndexedObject$shark_graph() -> k
    306:306:shark.HeapObject$HeapClass getInstanceClass() -> l
    312:312:long getInstanceClassId() -> m
    294:294:java.lang.String getInstanceClassName() -> n
    300:300:java.lang.String getInstanceClassSimpleName() -> o
    328:328:boolean instanceOf(java.lang.String) -> p
    278:278:boolean isPrimitiveWrapper() -> q
    418:432:java.lang.String readAsJavaString() -> r
    368:368:shark.HeapField readField(java.lang.String,java.lang.String) -> s
    140:140:java.lang.Object kotlin.sequences.SequencesKt___SequencesKt.firstOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> s
    140:140:shark.HeapField readField(java.lang.String,java.lang.String):601 -> s
    368:368:shark.HeapField readField(java.lang.String,java.lang.String) -> s
    141:141:java.lang.Object kotlin.sequences.SequencesKt___SequencesKt.firstOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> s
    141:141:shark.HeapField readField(java.lang.String,java.lang.String):602 -> s
    351:351:shark.HeapField readField(kotlin.reflect.KClass,java.lang.String) -> t
    463:463:java.lang.String toString() -> toString
    395:408:kotlin.sequences.Sequence readFields() -> u
    320:320:shark.HprofRecord$HeapDumpRecord$ObjectRecord$InstanceDumpRecord readRecord() -> v
shark.HeapObject$HeapInstance$readFields$1 -> f.q$c$a:
    kotlin.Lazy $fieldReader -> b
    shark.HeapObject$HeapInstance this$0 -> a
    kotlin.reflect.KProperty $fieldReader$metadata -> c
    400:406:kotlin.sequences.Sequence invoke(shark.HeapObject$HeapClass) -> c
    271:271:java.lang.Object invoke(java.lang.Object) -> invoke
shark.HeapObject$HeapInstance$readFields$1$1 -> f.q$c$a$a:
    shark.HeapObject$HeapInstance$readFields$1 this$0 -> a
    shark.HeapObject$HeapClass $heapClass -> b
    403:405:shark.HeapField invoke(shark.HprofRecord$HeapDumpRecord$ObjectRecord$ClassDumpRecord$FieldRecord) -> c
    271:271:java.lang.Object invoke(java.lang.Object) -> invoke
shark.HeapObject$HeapInstance$readFields$fieldReader$2 -> f.q$c$b:
    shark.HeapObject$HeapInstance this$0 -> a
    271:271:java.lang.Object invoke() -> a
    396:396:shark.internal.FieldValuesReader invoke() -> c
shark.HeapObject$HeapObjectArray -> f.q$d:
    boolean isPrimitiveWrapperArray -> e
    long objectId -> d
    shark.HprofHeapGraph hprofGraph -> b
    shark.internal.IndexedObject$IndexedObjectArray indexedObject -> c
    470:475:void <init>(shark.HprofHeapGraph,shark.internal.IndexedObject$IndexedObjectArray,long,boolean) -> <init>
    478:478:shark.HeapGraph getGraph() -> d
    473:473:long getObjectId() -> e
    470:470:shark.HprofRecord$HeapDumpRecord$ObjectRecord readRecord() -> f
    470:470:shark.HprofHeapGraph access$getHprofGraph$p(shark.HeapObject$HeapObjectArray) -> g
    484:484:java.lang.String getArrayClassName() -> h
    474:474:boolean isPrimitiveWrapperArray() -> i
    502:502:int readByteSize() -> j
    520:521:kotlin.sequences.Sequence readElements() -> k
    511:511:shark.HprofRecord$HeapDumpRecord$ObjectRecord$ObjectArrayDumpRecord readRecord() -> l
    525:525:java.lang.String toString() -> toString
shark.HeapObject$HeapObjectArray$readElements$1 -> f.q$d$a:
    shark.HeapObject$HeapObjectArray this$0 -> a
    521:521:shark.HeapValue invoke(long) -> c
    470:470:java.lang.Object invoke(java.lang.Object) -> invoke
shark.HeapObject$HeapPrimitiveArray -> f.q$e:
    shark.internal.IndexedObject$IndexedPrimitiveArray indexedObject -> c
    long objectId -> d
    shark.HprofHeapGraph hprofGraph -> b
    532:536:void <init>(shark.HprofHeapGraph,shark.internal.IndexedObject$IndexedPrimitiveArray,long) -> <init>
    539:539:shark.HeapGraph getGraph() -> d
    535:535:long getObjectId() -> e
    532:532:void <init>(shark.HprofHeapGraph,shark.internal.IndexedObject$IndexedPrimitiveArray,long) -> f
    532:532:shark.HprofRecord$HeapDumpRecord$ObjectRecord readRecord():532 -> f
    558:558:java.lang.String getArrayClassName() -> g
    552:552:shark.PrimitiveType getPrimitiveType() -> h
    545:545:int readByteSize() -> i
    572:572:shark.HprofRecord$HeapDumpRecord$ObjectRecord$PrimitiveArrayDumpRecord readRecord() -> j
    576:576:java.lang.String toString() -> toString
shark.HeapValue -> f.r:
    shark.ValueHolder holder -> b
    shark.HeapGraph graph -> a
    17:17:void <init>(shark.HeapGraph,shark.ValueHolder) -> <init>
    32:32:java.lang.Boolean getAsBoolean() -> a
    68:68:java.lang.Integer getAsInt() -> b
    74:74:java.lang.Long getAsLong() -> c
    86:86:java.lang.Long getAsNonNullObjectId() -> d
    106:106:shark.HeapObject getAsObject() -> e
    80:80:java.lang.Long getAsObjectId() -> f
    25:25:shark.ValueHolder getHolder() -> g
    98:98:boolean isNonNullReference() -> h
    92:92:boolean isNullReference() -> i
    121:125:java.lang.String readAsJavaString() -> j
shark.Hprof -> f.s:
    okio.BufferedSource source -> b
    shark.HprofReader reader -> c
    shark.Hprof$Companion Companion -> f
    long fileLength -> d
    java.util.Map supportedVersions -> e
    java.nio.channels.FileChannel channel -> a
    58:101:void <clinit>() -> <clinit>
    9671:9671:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    9671:9671:void <clinit>():102 -> <clinit>
    103:59:void <clinit>() -> <clinit>
    9671:9671:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    9671:9671:void <clinit>():102 -> <clinit>
    104:60:void <clinit>() -> <clinit>
    14:14:void <init>(java.nio.channels.FileChannel,okio.BufferedSource,shark.HprofReader,long,shark.Hprof$HprofVersion,long,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    14:14:void <init>(java.nio.channels.FileChannel,okio.BufferedSource,shark.HprofReader,long,shark.Hprof$HprofVersion,long):14 -> <init>
    14:14:void <init>(java.nio.channels.FileChannel,okio.BufferedSource,shark.HprofReader,long,shark.Hprof$HprofVersion,long,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    29:30:void close() -> close
    14:14:void <init>(java.nio.channels.FileChannel,okio.BufferedSource,shark.HprofReader,long,shark.Hprof$HprofVersion,long,kotlin.jvm.internal.DefaultConstructorMarker) -> g
    14:14:java.util.Map access$getSupportedVersions$cp():14 -> g
    25:25:long getFileLength() -> h
    17:17:shark.HprofReader getReader() -> i
    37:45:void moveReaderTo(long) -> j
shark.Hprof$Companion -> f.s$a:
    57:57:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    57:57:void <init>():57 -> <init>
    57:57:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    67:69:shark.Hprof open(java.io.File) -> a
shark.Hprof$HprofVersion -> f.s$b:
    shark.Hprof$HprofVersion[] $VALUES -> b
    java.lang.String versionString -> a
    51:54:void <clinit>() -> <clinit>
    50:50:void <init>(java.lang.String,int,java.lang.String) -> <init>
    50:50:java.lang.String getVersionString() -> a
shark.HprofHeapGraph -> f.t:
    shark.internal.HprofInMemoryIndex index -> d
    shark.GraphContext context -> a
    shark.HprofHeapGraph$Companion Companion -> e
    shark.internal.LruCache objectCache -> b
    shark.Hprof hprof -> c
    45:45:shark.Hprof access$getHprof$p(shark.HprofHeapGraph) -> <init>
    45:45:void <init>(shark.Hprof,shark.internal.HprofInMemoryIndex):45 -> <init>
    52:104:void <init>(shark.Hprof,shark.internal.HprofInMemoryIndex) -> <init>
    55:55:java.util.List getGcRoots() -> a
    107:107:shark.HeapObject findObjectById(long) -> b
    67:68:kotlin.sequences.Sequence getClasses() -> c
    113:113:shark.HeapObject findObjectByIdOrNull(long) -> d
    77:78:kotlin.sequences.Sequence getInstances() -> e
    118:122:shark.HeapObject$HeapClass findClassByName(java.lang.String) -> f
    127:127:boolean objectExists(long) -> g
    52:52:void <init>(shark.Hprof,shark.internal.HprofInMemoryIndex) -> getContext
    52:52:shark.GraphContext getContext():52 -> getContext
    50:50:int getIdentifierByteSize() -> h
    45:45:shark.Hprof access$getHprof$p(shark.HprofHeapGraph) -> i
    45:45:shark.Hprof access$getHprof$p(shark.HprofHeapGraph) -> j
    45:45:shark.internal.HprofInMemoryIndex access$getIndex$p(shark.HprofHeapGraph):45 -> j
    148:148:java.lang.String className$shark_graph(long) -> k
    145:145:shark.internal.FieldValuesReader createFieldValuesReader$shark_graph(shark.HprofRecord$HeapDumpRecord$ObjectRecord$InstanceDumpRecord) -> l
    134:134:java.lang.String fieldName$shark_graph(long,shark.HprofRecord$HeapDumpRecord$ObjectRecord$ClassDumpRecord$FieldRecord) -> m
    208:208:shark.HprofRecord$HeapDumpRecord$ObjectRecord$ClassDumpRecord readClassDumpRecord$shark_graph(long,shark.internal.IndexedObject$IndexedClass) -> n
    217:217:shark.HprofRecord$HeapDumpRecord$ObjectRecord$InstanceDumpRecord readInstanceDumpRecord$shark_graph(long,shark.internal.IndexedObject$IndexedInstance) -> o
    164:170:int readObjectArrayByteSize$shark_graph(long,shark.internal.IndexedObject$IndexedObjectArray) -> p
    155:155:shark.HprofRecord$HeapDumpRecord$ObjectRecord$ObjectArrayDumpRecord readObjectArrayDumpRecord$shark_graph(long,shark.internal.IndexedObject$IndexedObjectArray) -> q
    227:233:shark.HprofRecord$HeapDumpRecord$ObjectRecord readObjectRecord(long,shark.internal.IndexedObject,kotlin.jvm.functions.Function0) -> r
    186:201:int readPrimitiveArrayByteSize$shark_graph(long,shark.internal.IndexedObject$IndexedPrimitiveArray) -> s
    177:177:shark.HprofRecord$HeapDumpRecord$ObjectRecord$PrimitiveArrayDumpRecord readPrimitiveArrayDumpRecord$shark_graph(long,shark.internal.IndexedObject$IndexedPrimitiveArray) -> t
    141:141:java.lang.String staticFieldName$shark_graph(long,shark.HprofRecord$HeapDumpRecord$ObjectRecord$ClassDumpRecord$StaticFieldRecord) -> u
    240:251:shark.HeapObject wrapIndexedObject(shark.internal.IndexedObject,long) -> v
shark.HprofHeapGraph$Companion -> f.t$a:
    255:255:void <init>() -> <init>
    255:255:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    287:288:shark.HeapGraph indexHprof(shark.Hprof,shark.ProguardMapping,java.util.Set) -> a
    258:259:shark.HeapGraph indexHprof$default(shark.HprofHeapGraph$Companion,shark.Hprof,shark.ProguardMapping,java.util.Set,int,java.lang.Object) -> b
shark.HprofHeapGraph$classes$1 -> f.t$b:
    shark.HprofHeapGraph this$0 -> a
    69:71:shark.HeapObject$HeapClass invoke(kotlin.Pair) -> c
    45:45:java.lang.Object invoke(java.lang.Object) -> invoke
shark.HprofHeapGraph$instances$1 -> f.t$c:
    shark.HprofHeapGraph this$0 -> a
    79:82:shark.HeapObject$HeapInstance invoke(kotlin.Pair) -> c
    45:45:java.lang.Object invoke(java.lang.Object) -> invoke
shark.HprofHeapGraph$readClassDumpRecord$1 -> f.t$d:
    shark.HprofHeapGraph this$0 -> a
    45:45:java.lang.Object invoke() -> a
    209:209:shark.HprofRecord$HeapDumpRecord$ObjectRecord$ClassDumpRecord invoke() -> c
shark.HprofHeapGraph$readInstanceDumpRecord$1 -> f.t$e:
    shark.HprofHeapGraph this$0 -> a
    45:45:java.lang.Object invoke() -> a
    218:218:shark.HprofRecord$HeapDumpRecord$ObjectRecord$InstanceDumpRecord invoke() -> c
shark.HprofHeapGraph$readObjectArrayDumpRecord$1 -> f.t$f:
    shark.HprofHeapGraph this$0 -> a
    45:45:java.lang.Object invoke() -> a
    156:156:shark.HprofRecord$HeapDumpRecord$ObjectRecord$ObjectArrayDumpRecord invoke() -> c
shark.HprofHeapGraph$readPrimitiveArrayDumpRecord$1 -> f.t$g:
    shark.HprofHeapGraph this$0 -> a
    45:45:java.lang.Object invoke() -> a
    178:178:shark.HprofRecord$HeapDumpRecord$ObjectRecord$PrimitiveArrayDumpRecord invoke() -> c
shark.HprofReader -> f.u:
    int SHORT_SIZE -> n
    long startPosition -> j
    int INT_SIZE -> o
    int CHAR_SIZE -> l
    int BYTE_SIZE -> m
    shark.HprofRecord$HeapDumpRecord$ObjectRecord$ClassSkipContentRecord reusedClassSkipContentRecord -> d
    int BOOLEAN_SIZE -> k
    shark.HprofRecord$HeapDumpRecord$ObjectRecord$InstanceSkipContentRecord reusedInstanceSkipContentRecord -> c
    int identifierByteSize -> i
    long position -> a
    okio.BufferedSource source -> h
    shark.HprofRecord$HeapDumpRecord$ObjectRecord$PrimitiveArraySkipContentRecord reusedPrimitiveArraySkipContentRecord -> f
    java.util.Map typeSizes -> b
    int LONG_TYPE -> x
    int SHORT_TYPE -> v
    int INT_TYPE -> w
    shark.HprofRecord$LoadClassRecord reusedLoadClassRecord -> g
    int DOUBLE_TYPE -> t
    int BYTE_TYPE -> u
    int CHAR_TYPE -> r
    int FLOAT_TYPE -> s
    shark.HprofRecord$HeapDumpRecord$ObjectRecord$ObjectArraySkipContentRecord reusedObjectArraySkipContentRecord -> e
    int LONG_SIZE -> p
    int BOOLEAN_TYPE -> q
    980:996:void <clinit>() -> <clinit>
    78:107:void <init>(okio.BufferedSource,int,long) -> <init>
    748:754:shark.HprofRecord$HeapDumpRecord$ObjectRecord$ObjectArrayDumpRecord readObjectArrayDumpRecord() -> A
    767:773:shark.HprofRecord$HeapDumpRecord$ObjectRecord$ObjectArraySkipContentRecord readObjectArraySkipContentRecord() -> B
    692:721:shark.HprofRecord$HeapDumpRecord$ObjectRecord$PrimitiveArrayDumpRecord readPrimitiveArrayDumpRecord() -> C
    729:735:shark.HprofRecord$HeapDumpRecord$ObjectRecord$PrimitiveArraySkipContentRecord readPrimitiveArraySkipContentRecord() -> D
    804:805:short readShort() -> E
    842:842:short[] readShortArray(int) -> F
    829:830:java.lang.String readString(int,java.nio.charset.Charset) -> G
    914:914:int readUnsignedByte() -> H
    910:910:long readUnsignedInt() -> I
    918:918:int readUnsignedShort() -> J
    905:906:java.lang.String readUtf8(long) -> K
    785:795:shark.ValueHolder readValue(int) -> L
    96:96:void <init>(okio.BufferedSource,int,long) -> M
    96:96:void setPosition$shark_hprof(long):96 -> M
    922:923:void skip(int) -> N
    861:862:void skip(long) -> O
    933:955:void skipClassDumpRecord() -> P
    976:977:void skipHeapDumpInfoRecord() -> Q
    927:930:void skipInstanceDumpRecord() -> R
    958:961:void skipObjectArrayDumpRecord() -> S
    964:968:void skipPrimitiveArrayDumpRecord() -> T
    800:800:int typeSize(int) -> U
    858:858:boolean exhausted() -> a
    85:85:int getIdentifierByteSize() -> b
    96:96:void <init>(okio.BufferedSource,int,long) -> c
    96:96:long getPosition():96 -> c
    89:89:void <init>(okio.BufferedSource,int,long,int,kotlin.jvm.internal.DefaultConstructorMarker) -> d
    89:89:long getStartPosition():89 -> d
    871:873:boolean readBoolean() -> e
    818:818:boolean[] readBooleanArray(int) -> f
    866:867:byte readByte() -> g
    877:878:byte[] readByteArray(int) -> h
    882:882:char readChar() -> i
    822:822:char[] readCharArray(int) -> j
    565:615:shark.HprofRecord$HeapDumpRecord$ObjectRecord$ClassDumpRecord readClassDumpRecord() -> k
    632:675:shark.HprofRecord$HeapDumpRecord$ObjectRecord$ClassSkipContentRecord readClassSkipContentRecord() -> l
    890:890:double readDouble() -> m
    838:838:double[] readDoubleArray(int) -> n
    886:886:float readFloat() -> o
    834:834:float[] readFloatArray(int) -> p
    971:972:shark.HprofRecord$HeapDumpRecord$HeapDumpInfoRecord readHeapDumpInfoRecord() -> q
    119:526:void readHprofRecords(java.util.Set,shark.OnHprofRecordListener) -> r
    895:895:long readId() -> s
    814:814:long[] readIdArray(int) -> t
    532:537:shark.HprofRecord$HeapDumpRecord$ObjectRecord$InstanceDumpRecord readInstanceDumpRecord() -> u
    549:554:shark.HprofRecord$HeapDumpRecord$ObjectRecord$InstanceSkipContentRecord readInstanceSkipContentRecord() -> v
    809:810:int readInt() -> w
    846:846:int[] readIntArray(int) -> x
    854:855:long readLong() -> y
    850:850:long[] readLongArray(int) -> z
shark.HprofReader$Companion -> f.u$a:
    979:979:void <init>() -> <init>
    979:979:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.HprofRecord -> f.v:
    6:6:void <init>() -> <init>
    6:6:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.HprofRecord$HeapDumpEndRecord -> f.v$a:
    shark.HprofRecord$HeapDumpEndRecord INSTANCE -> a
    42:42:void <clinit>() -> <clinit>
    42:42:void <init>() -> <init>
shark.HprofRecord$HeapDumpRecord -> f.v$b:
    66:66:void <init>() -> <init>
    66:66:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.HprofRecord$HeapDumpRecord$GcRootRecord -> f.v$b$a:
    shark.GcRoot gcRoot -> a
    67:69:void <init>(shark.GcRoot) -> <init>
    68:68:shark.GcRoot getGcRoot() -> a
shark.HprofRecord$HeapDumpRecord$HeapDumpInfoRecord -> f.v$b$b:
    long heapNameStringId -> a
    329:332:void <init>(int,long) -> <init>
    331:331:long getHeapNameStringId() -> a
shark.HprofRecord$HeapDumpRecord$ObjectRecord -> f.v$b$c:
    71:71:void <init>() -> <init>
    71:71:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.HprofRecord$HeapDumpRecord$ObjectRecord$ClassDumpRecord -> f.v$b$c$a:
    java.util.List fields -> b
    java.util.List staticFields -> a
    72:82:void <init>(long,int,long,long,long,long,int,java.util.List,java.util.List) -> <init>
    81:81:java.util.List getFields() -> a
    80:80:java.util.List getStaticFields() -> b
shark.HprofRecord$HeapDumpRecord$ObjectRecord$ClassDumpRecord$FieldRecord -> f.v$b$c$a$a:
    long nameStringId -> a
    int type -> b
    89:89:void <init>(long,int) -> <init>
    90:90:long getNameStringId() -> a
    91:91:int getType() -> b
shark.HprofRecord$HeapDumpRecord$ObjectRecord$ClassDumpRecord$StaticFieldRecord -> f.v$b$c$a$b:
    long nameStringId -> a
    shark.ValueHolder value -> c
    int type -> b
    83:83:void <init>(long,int,shark.ValueHolder) -> <init>
    84:84:long getNameStringId() -> a
    86:86:shark.ValueHolder getValue() -> b
shark.HprofRecord$HeapDumpRecord$ObjectRecord$ClassSkipContentRecord -> f.v$b$c$b:
    long superclassId -> b
    long id -> a
    int instanceSize -> c
    102:142:void <init>(long,int,long,long,long,long,int,int,int) -> <init>
    113:113:long getId() -> a
    125:125:int getInstanceSize() -> b
    117:117:long getSuperclassId() -> c
    119:119:void setClassLoaderId$shark_hprof(long) -> d
    129:129:void setFieldCount$shark_hprof(int) -> e
    113:113:void setId$shark_hprof(long) -> f
    125:125:void setInstanceSize$shark_hprof(int) -> g
    123:123:void setProtectionDomainId$shark_hprof(long) -> h
    121:121:void setSignersId$shark_hprof(long) -> i
    115:115:void setStackTraceSerialNumber$shark_hprof(int) -> j
    127:127:void setStaticFieldCount$shark_hprof(int) -> k
    117:117:void setSuperclassId$shark_hprof(long) -> l
shark.HprofRecord$HeapDumpRecord$ObjectRecord$InstanceDumpRecord -> f.v$b$c$c:
    byte[] fieldValues -> b
    long classId -> a
    145:153:void <init>(long,int,long,byte[]) -> <init>
    148:148:long getClassId() -> a
    152:152:byte[] getFieldValues() -> b
shark.HprofRecord$HeapDumpRecord$ObjectRecord$InstanceSkipContentRecord -> f.v$b$c$d:
    long classId -> b
    long id -> a
    162:180:void <init>(long,int,long) -> <init>
    173:173:long getClassId() -> a
    167:167:long getId() -> b
    173:173:void setClassId$shark_hprof(long) -> c
    167:167:void setId$shark_hprof(long) -> d
    170:170:void setStackTraceSerialNumber$shark_hprof(int) -> e
shark.HprofRecord$HeapDumpRecord$ObjectRecord$ObjectArrayDumpRecord -> f.v$b$c$e:
    long[] elementIds -> a
    183:188:void <init>(long,int,long,long[]) -> <init>
    187:187:long[] getElementIds() -> a
shark.HprofRecord$HeapDumpRecord$ObjectRecord$ObjectArraySkipContentRecord -> f.v$b$c$f:
    long arrayClassId -> b
    long id -> a
    int size -> c
    197:217:void <init>(long,int,long,int) -> <init>
    207:207:long getArrayClassId() -> a
    203:203:long getId() -> b
    209:209:int getSize() -> c
    207:207:void setArrayClassId$shark_hprof(long) -> d
    203:203:void setId$shark_hprof(long) -> e
    209:209:void setSize$shark_hprof(int) -> f
    205:205:void setStackTraceSerialNumber$shark_hprof(int) -> g
shark.HprofRecord$HeapDumpRecord$ObjectRecord$PrimitiveArrayDumpRecord -> f.v$b$c$g:
    220:220:void <init>() -> <init>
    220:220:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.HprofRecord$HeapDumpRecord$ObjectRecord$PrimitiveArrayDumpRecord$BooleanArrayDump -> f.v$b$c$g$a:
    boolean[] array -> a
    225:229:void <init>(long,int,boolean[]) -> <init>
    228:228:boolean[] getArray() -> a
shark.HprofRecord$HeapDumpRecord$ObjectRecord$PrimitiveArrayDumpRecord$ByteArrayDump -> f.v$b$c$g$b:
    byte[] array -> a
    261:265:void <init>(long,int,byte[]) -> <init>
    264:264:byte[] getArray() -> a
shark.HprofRecord$HeapDumpRecord$ObjectRecord$PrimitiveArrayDumpRecord$CharArrayDump -> f.v$b$c$g$c:
    char[] array -> a
    234:238:void <init>(long,int,char[]) -> <init>
    237:237:char[] getArray() -> a
shark.HprofRecord$HeapDumpRecord$ObjectRecord$PrimitiveArrayDumpRecord$DoubleArrayDump -> f.v$b$c$g$d:
    double[] array -> a
    252:256:void <init>(long,int,double[]) -> <init>
    255:255:double[] getArray() -> a
shark.HprofRecord$HeapDumpRecord$ObjectRecord$PrimitiveArrayDumpRecord$FloatArrayDump -> f.v$b$c$g$e:
    float[] array -> a
    243:247:void <init>(long,int,float[]) -> <init>
    246:246:float[] getArray() -> a
shark.HprofRecord$HeapDumpRecord$ObjectRecord$PrimitiveArrayDumpRecord$IntArrayDump -> f.v$b$c$g$f:
    int[] array -> a
    279:283:void <init>(long,int,int[]) -> <init>
    282:282:int[] getArray() -> a
shark.HprofRecord$HeapDumpRecord$ObjectRecord$PrimitiveArrayDumpRecord$LongArrayDump -> f.v$b$c$g$g:
    long[] array -> a
    288:292:void <init>(long,int,long[]) -> <init>
    291:291:long[] getArray() -> a
shark.HprofRecord$HeapDumpRecord$ObjectRecord$PrimitiveArrayDumpRecord$ShortArrayDump -> f.v$b$c$g$h:
    short[] array -> a
    270:274:void <init>(long,int,short[]) -> <init>
    273:273:short[] getArray() -> a
shark.HprofRecord$HeapDumpRecord$ObjectRecord$PrimitiveArraySkipContentRecord -> f.v$b$c$h:
    long id -> a
    int size -> b
    shark.PrimitiveType type -> c
    305:325:void <init>(long,int,int,shark.PrimitiveType) -> <init>
    311:311:long getId() -> a
    315:315:int getSize() -> b
    317:317:shark.PrimitiveType getType() -> c
    311:311:void setId$shark_hprof(long) -> d
    315:315:void setSize$shark_hprof(int) -> e
    313:313:void setStackTraceSerialNumber$shark_hprof(int) -> f
    317:317:void setType$shark_hprof(shark.PrimitiveType) -> g
shark.HprofRecord$LoadClassRecord -> f.v$c:
    long classNameStringId -> b
    long id -> a
    16:35:void <init>(int,long,int,long) -> <init>
    28:28:long getClassNameStringId() -> a
    24:24:long getId() -> b
    28:28:void setClassNameStringId$shark_hprof(long) -> c
    22:22:void setClassSerialNumber$shark_hprof(int) -> d
    24:24:void setId$shark_hprof(long) -> e
    26:26:void setStackTraceSerialNumber$shark_hprof(int) -> f
shark.HprofRecord$StackFrameRecord -> f.v$d:
    44:58:void <init>(long,long,long,long,int,int) -> <init>
shark.HprofRecord$StackTraceRecord -> f.v$e:
    60:64:void <init>(int,int,long[]) -> <init>
shark.HprofRecord$StringRecord -> f.v$f:
    long id -> a
    java.lang.String string -> b
    7:10:void <init>(long,java.lang.String) -> <init>
    8:8:long getId() -> a
    9:9:java.lang.String getString() -> b
shark.IgnoredReferenceMatcher -> f.w:
    shark.ReferencePattern pattern -> a
    41:41:void <init>(shark.ReferencePattern) -> <init>
    41:41:shark.ReferencePattern getPattern() -> a
    42:42:java.lang.String toString() -> toString
shark.KeyedWeakReferenceFinder -> f.x:
    shark.KeyedWeakReferenceFinder INSTANCE -> a
    10:10:void <clinit>() -> <clinit>
    10:10:void <clinit>() -> <init>
    10:10:void <init>():10 -> <init>
    13:14:java.util.Set findLeakingObjectIds(shark.HeapGraph) -> a
    17:17:java.util.List findKeyedWeakReferences$shark(shark.HeapGraph) -> b
shark.KeyedWeakReferenceFinder$findKeyedWeakReferences$1 -> f.x$a:
    shark.HeapGraph $graph -> a
    10:10:java.lang.Object invoke() -> a
    18:27:java.util.List invoke() -> c
    31:31:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> c
    31:31:java.util.List invoke():53 -> c
    32:32:void shark.SharkLog.d(kotlin.jvm.functions.Function0) -> c
    32:32:java.util.List invoke():54 -> c
    28:49:java.util.List invoke() -> c
shark.KeyedWeakReferenceFinder$findKeyedWeakReferences$1$addedToContext$1 -> f.x$a$a:
    long $legacyKeyedWeakReferenceClassId -> b
    long $keyedWeakReferenceClassId -> a
    39:39:boolean invoke(shark.HeapObject$HeapInstance) -> c
    10:10:java.lang.Object invoke(java.lang.Object) -> invoke
shark.KeyedWeakReferenceFinder$findKeyedWeakReferences$1$addedToContext$2 -> f.x$a$b:
    java.lang.Long $heapDumpUptimeMillis -> a
    42:44:shark.internal.KeyedWeakReferenceMirror invoke(shark.HeapObject$HeapInstance) -> c
    10:10:java.lang.Object invoke(java.lang.Object) -> invoke
shark.KeyedWeakReferenceFinder$findKeyedWeakReferences$1$addedToContext$3 -> f.x$a$c:
    shark.KeyedWeakReferenceFinder$findKeyedWeakReferences$1$addedToContext$3 INSTANCE -> a
    46:46:boolean invoke(shark.internal.KeyedWeakReferenceMirror) -> c
    10:10:java.lang.Object invoke(java.lang.Object) -> invoke
shark.Leak -> f.y:
    169:169:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    169:169:void <init>():169 -> <init>
    169:169:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    java.util.List getLeakTraces() -> a
    java.lang.String getShortDescription() -> b
    java.lang.String getSignature() -> c
    181:185:java.lang.Integer getTotalRetainedHeapByteSize() -> d
    198:201:java.lang.String toString() -> toString
shark.Leak$Companion -> f.y$a:
    204:204:void <init>() -> <init>
    204:204:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.LeakTrace -> f.z:
    java.util.List referencePath -> b
    shark.LeakTrace$Companion Companion -> e
    java.lang.Integer retainedHeapByteSize -> d
    shark.LeakTraceObject leakingObject -> c
    shark.LeakTrace$GcRootType gcRootType -> a
    21:21:void <init>(shark.LeakTrace$GcRootType,java.util.List,shark.LeakTraceObject,java.lang.Integer) -> <init>
    26:26:shark.LeakTrace$GcRootType getGcRootType() -> a
    28:28:shark.LeakTraceObject getLeakingObject() -> b
    27:27:java.util.List getReferencePath() -> c
    33:33:java.lang.Integer getRetainedHeapByteSize() -> d
    53:57:java.lang.String getSignature() -> e
    41:44:kotlin.sequences.Sequence getSuspectReferenceSubpath() -> f
    79:121:java.lang.String leakTraceAsString(boolean) -> g
    66:66:boolean referencePathElementIsSuspect(int) -> h
    74:74:java.lang.String toString() -> toString
shark.LeakTrace$Companion -> f.z$a:
    170:170:void <init>() -> <init>
    170:170:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    170:170:java.lang.String access$getNextElementString(shark.LeakTrace$Companion,shark.LeakTrace,shark.LeakTraceReference,int,boolean) -> a
    177:181:java.lang.String getNextElementString(shark.LeakTrace,shark.LeakTraceReference,int,boolean) -> b
shark.LeakTrace$GcRootType -> f.z$b:
    shark.LeakTrace$GcRootType STICKY_CLASS -> f
    shark.LeakTrace$GcRootType THREAD_BLOCK -> g
    shark.LeakTrace$GcRootType JAVA_FRAME -> d
    shark.LeakTrace$GcRootType NATIVE_STACK -> e
    shark.LeakTrace$GcRootType JNI_MONITOR -> j
    shark.LeakTrace$GcRootType MONITOR_USED -> h
    shark.LeakTrace$GcRootType THREAD_OBJECT -> i
    java.lang.String description -> a
    shark.LeakTrace$GcRootType JNI_GLOBAL -> b
    shark.LeakTrace$GcRootType JNI_LOCAL -> c
    shark.LeakTrace$GcRootType[] $VALUES -> k
    shark.LeakTrace$GcRootType$Companion Companion -> l
    125:135:void <clinit>() -> <clinit>
    124:124:void <init>(java.lang.String,int,java.lang.String) -> <init>
    124:124:java.lang.String getDescription() -> a
shark.LeakTrace$GcRootType$Companion -> f.z$b$a:
    138:138:void <init>() -> <init>
    138:138:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    139:149:shark.LeakTrace$GcRootType fromGcRoot(shark.GcRoot) -> a
shark.LeakTrace$signature$1 -> f.z$c:
    shark.LeakTrace$signature$1 INSTANCE -> a
    55:55:java.lang.String invoke(shark.LeakTraceReference) -> c
    21:21:java.lang.Object invoke(java.lang.Object) -> invoke
shark.LeakTrace$suspectReferenceSubpath$1 -> f.z$d:
    shark.LeakTrace this$0 -> a
    43:43:boolean invoke(int,shark.LeakTraceReference) -> c
    21:21:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.LeakTraceObject -> f.a0:
    java.util.Set labels -> c
    shark.LeakTraceObject$ObjectType type -> a
    java.lang.String className -> b
    shark.LeakTraceObject$LeakingStatus leakingStatus -> d
    java.lang.String leakingStatusReason -> e
    7:7:void <init>(shark.LeakTraceObject$ObjectType,java.lang.String,java.util.Set,shark.LeakTraceObject$LeakingStatus,java.lang.String) -> <init>
    13:13:java.lang.String getClassName() -> a
    28:28:java.lang.String getClassSimpleName() -> b
    19:19:java.util.Set getLabels() -> c
    20:20:shark.LeakTraceObject$LeakingStatus getLeakingStatus() -> d
    21:21:java.lang.String getLeakingStatusReason() -> e
    31:31:java.lang.String getTypeName() -> f
shark.LeakTraceObject$LeakingStatus -> f.a0$a:
    shark.LeakTraceObject$LeakingStatus NOT_LEAKING -> a
    shark.LeakTraceObject$LeakingStatus LEAKING -> b
    shark.LeakTraceObject$LeakingStatus UNKNOWN -> c
    shark.LeakTraceObject$LeakingStatus[] $VALUES -> d
    39:39:void <init>(java.lang.String,int) -> <init>
shark.LeakTraceObject$ObjectType -> f.a0$b:
    shark.LeakTraceObject$ObjectType[] $VALUES -> d
    shark.LeakTraceObject$ObjectType CLASS -> a
    shark.LeakTraceObject$ObjectType ARRAY -> b
    shark.LeakTraceObject$ObjectType INSTANCE -> c
    33:33:void <init>(java.lang.String,int) -> <init>
shark.LeakTraceReference -> f.b0:
    shark.LeakTraceObject originObject -> a
    shark.LeakTraceReference$ReferenceType referenceType -> b
    java.lang.String referenceName -> c
    15:15:void <init>(shark.LeakTraceObject,shark.LeakTraceReference$ReferenceType,java.lang.String) -> <init>
    16:16:shark.LeakTraceObject getOriginObject() -> a
    33:33:java.lang.String getReferenceDisplayName() -> b
    42:42:java.lang.String getReferenceGenericName() -> c
    18:18:shark.LeakTraceReference$ReferenceType getReferenceType() -> d
shark.LeakTraceReference$Companion -> f.b0$a:
    50:50:void <init>() -> <init>
    50:50:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.LeakTraceReference$ReferenceType -> f.b0$b:
    shark.LeakTraceReference$ReferenceType LOCAL -> c
    shark.LeakTraceReference$ReferenceType STATIC_FIELD -> b
    shark.LeakTraceReference$ReferenceType INSTANCE_FIELD -> a
    shark.LeakTraceReference$ReferenceType[] $VALUES -> e
    shark.LeakTraceReference$ReferenceType ARRAY_ENTRY -> d
    24:24:void <init>(java.lang.String,int) -> <init>
shark.LeakingObjectFinder -> f.c0:
    java.util.Set findLeakingObjectIds(shark.HeapGraph) -> a
shark.LeakingObjectFinder$Companion -> f.c0$a:
    shark.LeakingObjectFinder$Companion $$INSTANCE -> a
    18:18:void <clinit>() -> <clinit>
    18:18:void <init>() -> <init>
shark.LibraryLeak -> f.d0:
    java.util.List leakTraces -> a
    shark.ReferencePattern pattern -> b
    java.lang.String description -> c
    214:225:void <init>(java.util.List,shark.ReferencePattern,java.lang.String) -> <init>
    215:215:java.util.List getLeakTraces() -> a
    230:230:java.lang.String getShortDescription() -> b
    227:227:java.lang.String getSignature() -> c
    224:224:java.lang.String getDescription() -> e
    220:220:shark.ReferencePattern getPattern() -> f
    244:244:shark.LeakTrace leakTraceFromV20$shark() -> g
    233:235:java.lang.String toString() -> toString
shark.LibraryLeak$Companion -> f.d0$a:
    246:246:void <init>() -> <init>
    246:246:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.LibraryLeakReferenceMatcher -> f.e0:
    shark.ReferencePattern pattern -> a
    java.lang.String description -> b
    kotlin.jvm.functions.Function1 patternApplies -> c
    21:33:void <init>(shark.ReferencePattern,java.lang.String,kotlin.jvm.functions.Function1) -> <init>
    22:22:shark.ReferencePattern getPattern() -> a
    26:26:java.lang.String getDescription() -> b
    32:32:kotlin.jvm.functions.Function1 getPatternApplies() -> c
    34:34:java.lang.String toString() -> toString
shark.MetadataExtractor -> f.f0:
    java.util.Map extractMetadata(shark.HeapGraph) -> a
shark.MetadataExtractor$Companion -> f.f0$a:
    shark.MetadataExtractor$Companion $$INSTANCE -> a
    14:19:void <clinit>() -> <clinit>
    34:34:shark.MetadataExtractor invoke(kotlin.jvm.functions.Function1) -> <clinit>
    34:34:void <clinit>():40 -> <clinit>
    36:36:shark.MetadataExtractor invoke(kotlin.jvm.functions.Function1) -> <clinit>
    36:36:void <clinit>():42 -> <clinit>
    14:14:void <clinit>() -> <init>
    14:14:void <init>():14 -> <init>
shark.MetadataExtractor$Companion$$special$$inlined$invoke$1 -> f.f0$a$a:
    34:34:void shark.MetadataExtractor$Companion$invoke$1.<init>(kotlin.jvm.functions.Function1) -> <init>
    34:34:void <init>():34 -> <init>
    35:35:java.util.Map shark.MetadataExtractor$Companion$invoke$1.extractMetadata(shark.HeapGraph) -> a
    35:35:java.util.Map extractMetadata(shark.HeapGraph):35 -> a
    19:19:void shark.MetadataExtractor$Companion.<clinit>() -> a
    19:19:java.util.Map extractMetadata(shark.HeapGraph):40 -> a
shark.ObjectInspector -> f.g0:
    void inspect(shark.ObjectReporter) -> a
shark.ObjectInspector$Companion -> f.g0$a:
    shark.ObjectInspector$Companion $$INSTANCE -> a
    20:20:void <clinit>() -> <clinit>
    20:20:void <init>() -> <init>
shark.ObjectInspectors -> f.h0:
    shark.ObjectInspectors KEYED_WEAK_REFERENCE -> a
    java.util.List jdkLeakingObjectFilters -> d
    shark.ObjectInspectors$Companion Companion -> e
    shark.ObjectInspectors[] $VALUES -> b
    kotlin.text.Regex ANONYMOUS_CLASS_NAME_PATTERN_REGEX -> c
    131:142:void <clinit>() -> <clinit>
    26:26:java.util.List access$getJdkLeakingObjectFilters$cp() -> <init>
    26:26:void <init>(java.lang.String,int):26 -> <init>
    26:26:java.util.List access$getJdkLeakingObjectFilters$cp() -> <init>
    26:26:void <init>(java.lang.String,int,kotlin.jvm.internal.DefaultConstructorMarker):26 -> <init>
    26:26:java.util.List access$getJdkLeakingObjectFilters$cp() -> b
    26:26:kotlin.text.Regex access$getANONYMOUS_CLASS_NAME_PATTERN_REGEX$cp():26 -> b
    26:26:java.util.List access$getJdkLeakingObjectFilters$cp() -> c
    127:127:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark() -> d
shark.ObjectInspectors$ANONYMOUS_CLASS -> f.h0$a:
    83:83:void <init>(java.lang.String,int) -> <init>
    87:113:void inspect(shark.ObjectReporter) -> a
shark.ObjectInspectors$CLASS -> f.h0$b:
    73:73:void <init>(java.lang.String,int) -> <init>
    77:80:void inspect(shark.ObjectReporter) -> a
shark.ObjectInspectors$CLASSLOADER -> f.h0$c:
    63:63:void <init>(java.lang.String,int) -> <init>
    67:70:void inspect(shark.ObjectReporter) -> a
shark.ObjectInspectors$CLASSLOADER$inspect$1 -> f.h0$c$a:
    shark.ObjectInspectors$CLASSLOADER$inspect$1 INSTANCE -> a
    68:69:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    63:63:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.ObjectInspectors$Companion -> f.h0$d:
    129:129:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    129:129:void <init>():129 -> <init>
    129:129:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    148:153:java.util.List createLeakingObjectFilters(java.util.Set) -> a
    135:135:java.util.List getJdkDefaults() -> b
    141:141:java.util.List getJdkLeakingObjectFilters() -> c
shark.ObjectInspectors$Companion$createLeakingObjectFilters$2$1 -> f.h0$d$a:
    150:150:void <init>(kotlin.jvm.functions.Function1) -> <init>
shark.ObjectInspectors$KEYED_WEAK_REFERENCE -> f.h0$e:
    kotlin.jvm.functions.Function1 leakingObjectFilter -> f
    28:30:void <init>(java.lang.String,int) -> <init>
    40:60:void inspect(shark.ObjectReporter) -> a
    30:30:void <init>(java.lang.String,int) -> d
    30:30:kotlin.jvm.functions.Function1 getLeakingObjectFilter$shark():30 -> d
shark.ObjectInspectors$KEYED_WEAK_REFERENCE$leakingObjectFilter$1 -> f.h0$e$a:
    shark.ObjectInspectors$KEYED_WEAK_REFERENCE$leakingObjectFilter$1 INSTANCE -> a
    31:34:boolean invoke(shark.HeapObject) -> c
    28:28:java.lang.Object invoke(java.lang.Object) -> invoke
shark.ObjectInspectors$THREAD -> f.h0$f:
    116:116:void <init>(java.lang.String,int) -> <init>
    120:124:void inspect(shark.ObjectReporter) -> a
shark.ObjectInspectors$THREAD$inspect$1 -> f.h0$f$a:
    shark.ObjectInspectors$THREAD$inspect$1 INSTANCE -> a
    121:121:void invoke(shark.ObjectReporter,shark.HeapObject$HeapInstance) -> c
    116:116:java.lang.Object invoke(java.lang.Object,java.lang.Object) -> invoke
shark.ObjectReporter -> f.i0:
    java.util.Set notLeakingReasons -> c
    java.util.Set leakingReasons -> b
    shark.HeapObject heapObject -> d
    java.util.LinkedHashSet labels -> a
    13:40:void <init>(shark.HeapObject) -> <init>
    13:13:void <init>(shark.HeapObject) -> a
    13:13:shark.HeapObject getHeapObject():13 -> a
    18:18:void <init>(shark.HeapObject) -> b
    18:18:java.util.LinkedHashSet getLabels():18 -> b
    23:23:void <init>(shark.HeapObject) -> c
    23:23:java.util.Set getLeakingReasons():23 -> c
    40:40:void <init>(shark.HeapObject) -> d
    40:40:java.util.Set getNotLeakingReasons():40 -> d
    59:63:void whenInstanceOf(java.lang.String,kotlin.jvm.functions.Function2) -> e
    49:50:void whenInstanceOf(kotlin.reflect.KClass,kotlin.jvm.functions.Function2) -> f
shark.OnAnalysisProgressListener -> f.j0:
    void onAnalysisProgress(shark.OnAnalysisProgressListener$Step) -> a
shark.OnAnalysisProgressListener$Companion -> f.j0$a:
    shark.OnAnalysisProgressListener$Companion $$INSTANCE -> a
    23:28:void <clinit>() -> <clinit>
    43:43:shark.OnAnalysisProgressListener invoke(kotlin.jvm.functions.Function1) -> <clinit>
    43:43:void <clinit>():50 -> <clinit>
    47:47:shark.OnAnalysisProgressListener invoke(kotlin.jvm.functions.Function1) -> <clinit>
    47:47:void <clinit>():54 -> <clinit>
    23:23:void <clinit>() -> <init>
    23:23:void <init>():23 -> <init>
shark.OnAnalysisProgressListener$Companion$$special$$inlined$invoke$1 -> f.j0$a$a:
    43:43:void shark.OnAnalysisProgressListener$Companion$invoke$1.<init>(kotlin.jvm.functions.Function1) -> <init>
    43:43:void <init>():43 -> <init>
    45:45:void shark.OnAnalysisProgressListener$Companion$invoke$1.onAnalysisProgress(shark.OnAnalysisProgressListener$Step) -> a
    45:45:void onAnalysisProgress(shark.OnAnalysisProgressListener$Step):45 -> a
    28:28:void shark.OnAnalysisProgressListener$Companion.<clinit>() -> a
    28:28:void onAnalysisProgress(shark.OnAnalysisProgressListener$Step):50 -> a
    46:46:void shark.OnAnalysisProgressListener$Companion$invoke$1.onAnalysisProgress(shark.OnAnalysisProgressListener$Step) -> a
    46:46:void onAnalysisProgress(shark.OnAnalysisProgressListener$Step):46 -> a
shark.OnAnalysisProgressListener$Step -> f.j0$b:
    shark.OnAnalysisProgressListener$Step FINDING_DOMINATORS -> e
    shark.OnAnalysisProgressListener$Step FINDING_PATHS_TO_RETAINED_OBJECTS -> d
    shark.OnAnalysisProgressListener$Step COMPUTING_RETAINED_SIZE -> g
    shark.OnAnalysisProgressListener$Step COMPUTING_NATIVE_RETAINED_SIZE -> f
    shark.OnAnalysisProgressListener$Step REPORTING_HEAP_ANALYSIS -> i
    shark.OnAnalysisProgressListener$Step[] $VALUES -> j
    shark.OnAnalysisProgressListener$Step BUILDING_LEAK_TRACES -> h
    shark.OnAnalysisProgressListener$Step PARSING_HEAP_DUMP -> a
    shark.OnAnalysisProgressListener$Step FINDING_RETAINED_OBJECTS -> c
    shark.OnAnalysisProgressListener$Step EXTRACTING_METADATA -> b
    9:9:void <init>(java.lang.String,int) -> <init>
shark.OnHprofRecordListener -> f.k0:
    shark.OnHprofRecordListener$Companion Companion -> a
    void onHprofRecord(long,shark.HprofRecord) -> a
shark.OnHprofRecordListener$Companion -> f.k0$a:
    shark.OnHprofRecordListener$Companion $$INSTANCE -> a
    17:17:void <clinit>() -> <clinit>
    17:17:void <init>() -> <init>
shark.PrimitiveType -> f.l0:
    shark.PrimitiveType LONG -> j
    java.util.Map primitiveTypeByHprofType -> m
    shark.PrimitiveType INT -> i
    int byteSize -> b
    shark.PrimitiveType[] $VALUES -> k
    int hprofType -> a
    shark.PrimitiveType$Companion Companion -> n
    shark.PrimitiveType DOUBLE -> f
    shark.PrimitiveType FLOAT -> e
    shark.PrimitiveType SHORT -> h
    shark.PrimitiveType BYTE -> g
    java.util.Map byteSizeByHprofType -> l
    shark.PrimitiveType CHAR -> d
    shark.PrimitiveType BOOLEAN -> c
    16:36:void <clinit>() -> <clinit>
    9671:9671:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    9671:9671:void <clinit>():37 -> <clinit>
    38:31:void <clinit>() -> <clinit>
    9671:9671:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    9671:9671:void <clinit>():37 -> <clinit>
    39:40:void <clinit>() -> <clinit>
    9671:9671:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    9671:9671:void <clinit>():41 -> <clinit>
    42:33:void <clinit>() -> <clinit>
    9671:9671:java.util.Collection kotlin.collections.ArraysKt___ArraysKt.mapIndexedTo(boolean[],java.util.Collection,kotlin.jvm.functions.Function2) -> <clinit>
    9671:9671:void <clinit>():41 -> <clinit>
    43:33:void <clinit>() -> <clinit>
    6:6:java.util.Map access$getPrimitiveTypeByHprofType$cp() -> <init>
    6:6:void <init>(java.lang.String,int,int,int):6 -> <init>
    6:6:java.util.Map access$getPrimitiveTypeByHprofType$cp() -> a
    6:6:java.util.Map access$getByteSizeByHprofType$cp():6 -> a
    6:6:java.util.Map access$getPrimitiveTypeByHprofType$cp() -> b
    14:14:int getByteSize() -> c
    10:10:int getHprofType() -> d
shark.PrimitiveType$Companion -> f.l0$a:
    25:25:void <init>() -> <init>
    25:25:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    31:31:java.util.Map getByteSizeByHprofType() -> a
    33:33:java.util.Map getPrimitiveTypeByHprofType() -> b
shark.ProguardMapping -> f.m0:
    java.util.LinkedHashMap obfuscatedToClearNamesMap -> a
    3:10:void <init>() -> <init>
    32:33:void addMapping(java.lang.String,java.lang.String) -> a
    17:17:java.lang.String deobfuscateClassName(java.lang.String) -> b
    25:25:java.lang.String deobfuscateFieldName(java.lang.String,java.lang.String) -> c
shark.ProguardMappingReader -> f.n0:
    java.io.InputStream proguardMappingInputStream -> a
    8:8:void <init>(java.io.InputStream) -> <init>
    66:76:void parseClassField(java.lang.String,java.lang.String,shark.ProguardMapping) -> a
    41:51:java.lang.String parseClassMapping(java.lang.String,shark.ProguardMapping) -> b
    14:15:shark.ProguardMapping readProguardMapping() -> c
shark.ProguardMappingReader$Companion -> f.n0$a:
    82:82:void <init>() -> <init>
    82:82:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.ReferenceMatcher -> f.o0:
    7:7:void <init>() -> <init>
    7:7:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    shark.ReferencePattern getPattern() -> a
shark.ReferencePattern -> f.p0:
    8:8:void <init>() -> <init>
    8:8:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.ReferencePattern$Companion -> f.p0$a:
    69:69:void <init>() -> <init>
    69:69:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.ReferencePattern$InstanceFieldPattern -> f.p0$b:
    java.lang.String className -> a
    java.lang.String fieldName -> b
    45:48:void <init>(java.lang.String,java.lang.String) -> <init>
    46:46:java.lang.String getClassName() -> a
    47:47:java.lang.String getFieldName() -> b
    49:49:java.lang.String toString() -> toString
shark.ReferencePattern$InstanceFieldPattern$Companion -> f.p0$b$a:
    51:51:void <init>() -> <init>
    51:51:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.ReferencePattern$JavaLocalPattern -> f.p0$c:
    java.lang.String threadName -> a
    13:15:void <init>(java.lang.String) -> <init>
    14:14:java.lang.String getThreadName() -> a
    16:16:java.lang.String toString() -> toString
shark.ReferencePattern$JavaLocalPattern$Companion -> f.p0$c$a:
    18:18:void <init>() -> <init>
    18:18:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.ReferencePattern$NativeGlobalVariablePattern -> f.p0$d:
    java.lang.String className -> a
    61:61:void <init>(java.lang.String) -> <init>
    61:61:java.lang.String getClassName() -> a
    62:62:java.lang.String toString() -> toString
shark.ReferencePattern$NativeGlobalVariablePattern$Companion -> f.p0$d$a:
    64:64:void <init>() -> <init>
    64:64:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.ReferencePattern$StaticFieldPattern -> f.p0$e:
    java.lang.String className -> a
    java.lang.String fieldName -> b
    26:29:void <init>(java.lang.String,java.lang.String) -> <init>
    27:27:java.lang.String getClassName() -> a
    28:28:java.lang.String getFieldName() -> b
    30:30:java.lang.String toString() -> toString
shark.ReferencePattern$StaticFieldPattern$Companion -> f.p0$e$a:
    32:32:void <init>() -> <init>
    32:32:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.SharkLog -> f.q0:
    shark.SharkLog$Logger logger -> a
    shark.SharkLog INSTANCE -> b
    6:6:void <clinit>() -> <clinit>
    6:6:void <init>() -> <init>
    24:24:shark.SharkLog$Logger getLogger() -> a
    24:24:void setLogger(shark.SharkLog$Logger) -> b
shark.SharkLog$Logger -> f.q0$a:
    void d(java.lang.Throwable,java.lang.String) -> a
    void d(java.lang.String) -> b
shark.ValueHolder -> f.r0:
    9:9:void <init>() -> <init>
    9:9:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.ValueHolder$BooleanHolder -> f.r0$a:
    boolean value -> a
    15:15:void <init>(boolean) -> <init>
    15:15:boolean getValue() -> a
shark.ValueHolder$ByteHolder -> f.r0$b:
    byte value -> a
    19:19:void <init>(byte) -> <init>
    19:19:byte getValue() -> a
shark.ValueHolder$CharHolder -> f.r0$c:
    char value -> a
    16:16:void <init>(char) -> <init>
    16:16:char getValue() -> a
shark.ValueHolder$Companion -> f.r0$d:
    24:24:void <init>() -> <init>
    24:24:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.ValueHolder$DoubleHolder -> f.r0$e:
    double value -> a
    18:18:void <init>(double) -> <init>
    18:18:double getValue() -> a
shark.ValueHolder$FloatHolder -> f.r0$f:
    float value -> a
    17:17:void <init>(float) -> <init>
    17:17:float getValue() -> a
shark.ValueHolder$IntHolder -> f.r0$g:
    int value -> a
    21:21:void <init>(int) -> <init>
    21:21:int getValue() -> a
shark.ValueHolder$LongHolder -> f.r0$h:
    long value -> a
    22:22:void <init>(long) -> <init>
    22:22:long getValue() -> a
shark.ValueHolder$ReferenceHolder -> f.r0$i:
    long value -> a
    10:10:void <init>(long) -> <init>
    10:10:long getValue() -> a
    12:12:boolean isNull() -> b
shark.ValueHolder$ShortHolder -> f.r0$j:
    short value -> a
    20:20:void <init>(short) -> <init>
    20:20:short getValue() -> a
shark.internal.ByteSubArray -> f.s0.a:
    boolean longIdentifiers -> e
    int rangeStart -> d
    int currentIndex -> b
    byte[] array -> c
    int endInclusive -> a
    6:13:void <init>(byte[],int,int,boolean) -> <init>
    18:20:byte readByte() -> a
    27:27:long readId() -> b
    35:37:int readInt() -> c
    64:66:long readLong() -> d
    44:56:long readTruncatedLong(int) -> e
    103:103:long shark.internal.ByteSubArrayKt.and(byte,long) -> e
    103:103:long readTruncatedLong(int):107 -> e
    56:59:long readTruncatedLong(int) -> e
    103:103:long shark.internal.ByteSubArrayKt.and(byte,long) -> e
    103:103:long readTruncatedLong(int):108 -> e
    59:46:long readTruncatedLong(int) -> e
shark.internal.ByteSubArrayKt -> f.s0.b:
    81:83:int readInt(byte[],int) -> a
    106:106:int and(byte,int) -> a
    106:106:int readInt(byte[],int):109 -> a
    83:84:int readInt(byte[],int) -> a
    106:106:int and(byte,int) -> a
    106:106:int readInt(byte[],int):110 -> a
    84:85:int readInt(byte[],int) -> a
    106:106:int and(byte,int) -> a
    106:106:int readInt(byte[],int):111 -> a
    85:86:int readInt(byte[],int) -> a
    106:106:int and(byte,int) -> a
    106:106:int readInt(byte[],int):112 -> a
    86:86:int readInt(byte[],int) -> a
    90:92:long readLong(byte[],int) -> b
    103:103:long and(byte,long) -> b
    103:103:long readLong(byte[],int):113 -> b
    92:93:long readLong(byte[],int) -> b
    103:103:long and(byte,long) -> b
    103:103:long readLong(byte[],int):114 -> b
    93:94:long readLong(byte[],int) -> b
    103:103:long and(byte,long) -> b
    103:103:long readLong(byte[],int):115 -> b
    94:95:long readLong(byte[],int) -> b
    103:103:long and(byte,long) -> b
    103:103:long readLong(byte[],int):116 -> b
    95:96:long readLong(byte[],int) -> b
    103:103:long and(byte,long) -> b
    103:103:long readLong(byte[],int):117 -> b
    96:97:long readLong(byte[],int) -> b
    103:103:long and(byte,long) -> b
    103:103:long readLong(byte[],int):118 -> b
    97:98:long readLong(byte[],int) -> b
    103:103:long and(byte,long) -> b
    103:103:long readLong(byte[],int):119 -> b
    98:99:long readLong(byte[],int) -> b
    103:103:long and(byte,long) -> b
    103:103:long readLong(byte[],int):120 -> b
    99:99:long readLong(byte[],int) -> b
    74:76:short readShort(byte[],int) -> c
    106:106:int and(byte,int) -> c
    106:106:short readShort(byte[],int):107 -> c
    76:76:short readShort(byte[],int) -> c
    106:106:int and(byte,int) -> c
    106:106:short readShort(byte[],int):108 -> c
    76:77:short readShort(byte[],int) -> c
shark.internal.FieldValuesReader -> f.s0.c:
    shark.HprofRecord$HeapDumpRecord$ObjectRecord$InstanceDumpRecord record -> b
    int INT_TYPE -> j
    int LONG_TYPE -> k
    int BYTE_TYPE -> h
    int SHORT_TYPE -> i
    int FLOAT_TYPE -> f
    int DOUBLE_TYPE -> g
    int BOOLEAN_TYPE -> d
    int CHAR_TYPE -> e
    int identifierByteSize -> c
    int position -> a
    103:110:void <clinit>() -> <clinit>
    25:25:void <init>(shark.HprofRecord$HeapDumpRecord$ObjectRecord$InstanceDumpRecord,int) -> <init>
    59:61:boolean readBoolean() -> a
    65:67:byte readByte() -> b
    97:99:char readChar() -> c
    93:93:double readDouble() -> d
    89:89:float readFloat() -> e
    49:49:long readId() -> f
    71:73:int readInt() -> g
    83:85:long readLong() -> h
    77:79:short readShort() -> i
    33:43:shark.ValueHolder readValue(shark.HprofRecord$HeapDumpRecord$ObjectRecord$ClassDumpRecord$FieldRecord) -> j
shark.internal.FieldValuesReader$Companion -> f.s0.c$a:
    102:102:void <init>() -> <init>
    102:102:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
shark.internal.HprofInMemoryIndex -> f.s0.d:
    shark.internal.SortedBytesMap primitiveArrayIndex -> g
    shark.internal.hppc.LongObjectScatterMap hprofStringCache -> b
    java.util.Set primitiveWrapperTypes -> j
    shark.ProguardMapping proguardMapping -> i
    java.util.List gcRoots -> h
    shark.internal.HprofInMemoryIndex$Companion Companion -> l
    java.util.Set PRIMITIVE_WRAPPER_TYPES -> k
    shark.internal.SortedBytesMap classIndex -> d
    shark.internal.SortedBytesMap objectArrayIndex -> f
    int positionSize -> a
    shark.internal.hppc.LongLongScatterMap classNames -> c
    shark.internal.SortedBytesMap instanceIndex -> e
    336:336:void <clinit>() -> <clinit>
    28:28:int access$getPositionSize$p(shark.internal.HprofInMemoryIndex) -> <init>
    28:28:void <init>(int,shark.internal.hppc.LongObjectScatterMap,shark.internal.hppc.LongLongScatterMap,shark.internal.SortedBytesMap,shark.internal.SortedBytesMap,shark.internal.SortedBytesMap,shark.internal.SortedBytesMap,java.util.List,shark.ProguardMapping,java.util.Set):28 -> <init>
    28:28:int access$getPositionSize$p(shark.internal.HprofInMemoryIndex) -> <init>
    28:28:void <init>(int,shark.internal.hppc.LongObjectScatterMap,shark.internal.hppc.LongLongScatterMap,shark.internal.SortedBytesMap,shark.internal.SortedBytesMap,shark.internal.SortedBytesMap,shark.internal.SortedBytesMap,java.util.List,shark.ProguardMapping,java.util.Set,kotlin.jvm.internal.DefaultConstructorMarker):28 -> <init>
    28:28:int access$getPositionSize$p(shark.internal.HprofInMemoryIndex) -> a
    28:28:java.util.Set access$getPRIMITIVE_WRAPPER_TYPES$cp():28 -> a
    28:28:int access$getPositionSize$p(shark.internal.HprofInMemoryIndex) -> b
    62:63:java.lang.Long classId(java.lang.String) -> c
    140:140:java.lang.Object kotlin.sequences.SequencesKt___SequencesKt.firstOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> c
    140:140:java.lang.Long classId(java.lang.String):402 -> c
    63:63:java.lang.Long classId(java.lang.String) -> c
    141:141:java.lang.Object kotlin.sequences.SequencesKt___SequencesKt.firstOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> c
    141:141:java.lang.Long classId(java.lang.String):403 -> c
    62:67:java.lang.Long classId(java.lang.String) -> c
    140:140:java.lang.Object kotlin.sequences.SequencesKt___SequencesKt.firstOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> c
    140:140:java.lang.Long classId(java.lang.String):404 -> c
    67:67:java.lang.Long classId(java.lang.String) -> c
    141:141:java.lang.Object kotlin.sequences.SequencesKt___SequencesKt.firstOrNull(kotlin.sequences.Sequence,kotlin.jvm.functions.Function1) -> c
    141:141:java.lang.Long classId(java.lang.String):405 -> c
    68:65:java.lang.Long classId(java.lang.String) -> c
    55:57:java.lang.String className(long) -> d
    45:50:java.lang.String fieldName(long,long) -> e
    134:134:java.util.List gcRoots() -> f
    38:38:java.util.Set getPrimitiveWrapperTypes() -> g
    190:190:java.lang.String hprofStringById(long) -> h
    73:74:kotlin.sequences.Sequence indexedClassSequence() -> i
    86:87:kotlin.sequences.Sequence indexedInstanceSequence() -> j
    139:169:shark.internal.IndexedObject indexedObjectOrNull(long) -> k
    174:186:boolean objectIdIsIndexed(long) -> l
shark.internal.HprofInMemoryIndex$Builder -> f.s0.d$a:
    shark.internal.hppc.LongObjectScatterMap hprofStringCache -> d
    java.util.Set primitiveWrapperTypes -> j
    shark.internal.UnsortedByteEntries classIndex -> f
    int identifierSize -> b
    shark.internal.UnsortedByteEntries instanceIndex -> g
    java.util.Set primitiveWrapperClassNames -> k
    int positionSize -> c
    shark.internal.hppc.LongLongScatterMap classNames -> e
    shark.internal.UnsortedByteEntries objectArrayIndex -> h
    shark.internal.UnsortedByteEntries primitiveArrayIndex -> i
    java.util.List gcRoots -> l
    java.util.Set indexedGcRootsTypes -> m
    193:254:void <init>(boolean,long,int,int,int,int,java.util.Set) -> <init>
    260:312:void onHprofRecord(long,shark.HprofRecord) -> a
    317:322:shark.internal.HprofInMemoryIndex buildIndex(shark.ProguardMapping) -> b
shark.internal.HprofInMemoryIndex$Companion -> f.s0.d$b:
    334:334:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    334:334:void <init>():334 -> <init>
    334:334:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    334:334:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> a
    334:334:int access$byteSizeForUnsigned(shark.internal.HprofInMemoryIndex$Companion,long):334 -> a
    343:349:int byteSizeForUnsigned(long) -> b
    357:378:shark.internal.HprofInMemoryIndex createReadingHprof(shark.Hprof,shark.ProguardMapping,java.util.Set) -> c
    31:31:shark.OnHprofRecordListener shark.OnHprofRecordListener$Companion.invoke(kotlin.jvm.functions.Function2) -> c
    31:31:shark.internal.HprofInMemoryIndex createReadingHprof(shark.Hprof,shark.ProguardMapping,java.util.Set):402 -> c
    38:38:shark.OnHprofRecordListener shark.OnHprofRecordListener$Companion.invoke(kotlin.jvm.functions.Function2) -> c
    38:38:shark.internal.HprofInMemoryIndex createReadingHprof(shark.Hprof,shark.ProguardMapping,java.util.Set):409 -> c
    373:397:shark.internal.HprofInMemoryIndex createReadingHprof(shark.Hprof,shark.ProguardMapping,java.util.Set) -> c
shark.internal.HprofInMemoryIndex$Companion$createReadingHprof$$inlined$invoke$1 -> f.s0.d$b$a:
    kotlin.jvm.internal.Ref$IntRef $primitiveArrayCount$inlined -> e
    kotlin.jvm.internal.Ref$IntRef $objectArrayCount$inlined -> d
    kotlin.jvm.internal.Ref$IntRef $instanceCount$inlined -> c
    kotlin.jvm.internal.Ref$IntRef $classCount$inlined -> b
    31:31:void shark.OnHprofRecordListener$Companion$invoke$1.<init>(kotlin.jvm.functions.Function2) -> <init>
    31:31:void <init>(kotlin.jvm.internal.Ref$IntRef,kotlin.jvm.internal.Ref$IntRef,kotlin.jvm.internal.Ref$IntRef,kotlin.jvm.internal.Ref$IntRef):31 -> <init>
    36:36:void shark.OnHprofRecordListener$Companion$invoke$1.onHprofRecord(long,shark.HprofRecord) -> a
    36:36:void onHprofRecord(long,shark.HprofRecord):36 -> a
    41:47:void onHprofRecord(long,shark.HprofRecord) -> a
    37:37:void shark.OnHprofRecordListener$Companion$invoke$1.onHprofRecord(long,shark.HprofRecord) -> a
    37:37:void onHprofRecord(long,shark.HprofRecord):37 -> a
shark.internal.HprofInMemoryIndex$indexedClassSequence$1 -> f.s0.d$c:
    shark.internal.HprofInMemoryIndex this$0 -> a
    75:81:kotlin.Pair invoke(kotlin.Pair) -> c
    28:28:java.lang.Object invoke(java.lang.Object) -> invoke
shark.internal.HprofInMemoryIndex$indexedInstanceSequence$1 -> f.s0.d$d:
    shark.internal.HprofInMemoryIndex this$0 -> a
    88:94:kotlin.Pair invoke(kotlin.Pair) -> c
    28:28:java.lang.Object invoke(java.lang.Object) -> invoke
shark.internal.IndexedObject -> f.s0.e:
    5:5:void <init>() -> <init>
    5:5:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    long getPosition() -> a
shark.internal.IndexedObject$IndexedClass -> f.s0.e$a:
    long superclassId -> b
    long position -> a
    int instanceSize -> c
    8:12:void <init>(long,long,int) -> <init>
    9:9:long getPosition() -> a
    11:11:int getInstanceSize() -> b
    10:10:long getSuperclassId() -> c
shark.internal.IndexedObject$IndexedInstance -> f.s0.e$b:
    long classId -> b
    long position -> a
    14:17:void <init>(long,long) -> <init>
    15:15:long getPosition() -> a
    16:16:long getClassId() -> b
shark.internal.IndexedObject$IndexedObjectArray -> f.s0.e$c:
    long arrayClassId -> b
    long position -> a
    19:22:void <init>(long,long) -> <init>
    20:20:long getPosition() -> a
    21:21:long getArrayClassId() -> b
shark.internal.IndexedObject$IndexedPrimitiveArray -> f.s0.e$d:
    long position -> b
    byte primitiveTypeOrdinal -> a
    24:28:void <init>(long,shark.PrimitiveType) -> <init>
    25:25:long getPosition() -> a
    30:30:shark.PrimitiveType getPrimitiveType() -> b
shark.internal.KeyedWeakReferenceMirror -> f.s0.f:
    shark.internal.KeyedWeakReferenceMirror$Companion Companion -> g
    shark.ValueHolder$ReferenceHolder referent -> b
    boolean hasReferent -> a
    java.lang.String key -> c
    java.lang.Long watchDurationMillis -> e
    java.lang.String description -> d
    java.lang.Long retainedDurationMillis -> f
    7:20:void <init>(shark.ValueHolder$ReferenceHolder,java.lang.String,java.lang.String,java.lang.Long,java.lang.Long) -> <init>
    11:11:java.lang.String getDescription() -> a
    18:18:boolean getHasReferent() -> b
    9:9:java.lang.String getKey() -> c
    8:8:shark.ValueHolder$ReferenceHolder getReferent() -> d
    15:15:java.lang.Long getRetainedDurationMillis() -> e
    13:13:java.lang.Long getWatchDurationMillis() -> f
shark.internal.KeyedWeakReferenceMirror$Companion -> f.s0.f$a:
    22:22:void <init>() -> <init>
    22:22:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    32:47:shark.internal.KeyedWeakReferenceMirror fromInstance(shark.HeapObject$HeapInstance,java.lang.Long) -> a
shark.internal.LruCache -> f.s0.g:
    java.util.LinkedHashMap cache -> a
    int maxSize -> f
    int hitCount -> d
    int missCount -> e
    int putCount -> b
    int evictionCount -> c
    10:10:void access$setEvictionCount$p(shark.internal.LruCache,int) -> <init>
    10:10:void <init>(int):10 -> <init>
    27:28:void <init>(int) -> <init>
    10:10:void access$setEvictionCount$p(shark.internal.LruCache,int) -> a
    43:44:java.lang.Object get(java.lang.Object) -> b
    20:20:int getEvictionCount() -> c
    11:11:int getMaxSize() -> d
    57:58:java.lang.Object put(java.lang.Object,java.lang.Object) -> e
    70:72:java.lang.String toString() -> toString
shark.internal.LruCache$2 -> f.s0.g$a:
    shark.internal.LruCache this$0 -> a
    31:31:void <init>(shark.internal.LruCache,int,float,boolean) -> <init>
    31:31:java.util.Set getEntries() -> c
    31:31:java.util.Set getKeys() -> d
    31:31:int getSize() -> e
    31:31:java.util.Set entrySet() -> entrySet
    31:31:java.util.Collection getValues() -> f
    31:31:java.util.Set keySet() -> keySet
    32:37:boolean removeEldestEntry(java.util.Map$Entry) -> removeEldestEntry
    31:31:int size() -> size
    31:31:java.util.Collection values() -> values
shark.internal.PathFinder -> f.s0.h:
    java.util.Map fieldNameByClassName -> a
    java.util.Map staticFieldNameByClassName -> b
    java.util.Map threadNameReferenceMatchers -> c
    java.util.Map jniGlobalReferenceMatchers -> d
    shark.OnAnalysisProgressListener listener -> f
    shark.HeapGraph graph -> e
    63:156:void <init>(shark.HeapGraph,shark.OnAnalysisProgressListener,java.util.List) -> <init>
    238:239:boolean checkSeen(shark.internal.PathFinder$State,shark.internal.ReferencePathNode) -> a
    172:173:int determineSizeOfObjectInstances(shark.HeapGraph) -> b
    486:511:void enqueue(shark.internal.PathFinder$State,shark.internal.ReferencePathNode) -> c
    215:215:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.first(java.lang.Iterable,kotlin.jvm.functions.Function1) -> c
    215:215:void enqueue(shark.internal.PathFinder$State,shark.internal.ReferencePathNode):729 -> c
    511:514:void enqueue(shark.internal.PathFinder$State,shark.internal.ReferencePathNode) -> c
    216:216:java.lang.Object kotlin.collections.CollectionsKt___CollectionsKt.first(java.lang.Iterable,kotlin.jvm.functions.Function1) -> c
    216:216:void enqueue(shark.internal.PathFinder$State,shark.internal.ReferencePathNode):730 -> c
    515:547:void enqueue(shark.internal.PathFinder$State,shark.internal.ReferencePathNode) -> c
    243:318:void enqueueGcRoots(shark.internal.PathFinder$State) -> d
    162:168:shark.internal.PathFinder$PathFindingResults findPathsFromGcRoots(java.util.Set,boolean) -> e
    192:222:shark.internal.PathFinder$PathFindingResults findPathsFromGcRoots(shark.internal.PathFinder$State) -> f
    226:226:shark.internal.ReferencePathNode poll(shark.internal.PathFinder$State) -> g
    327:351:java.util.List sortedGcRoots() -> h
    701:705:void undominate(shark.internal.PathFinder$State,long,boolean) -> i
    664:695:void undominateWithSkips(shark.internal.PathFinder$State,long) -> j
    593:661:void updateDominator(shark.internal.PathFinder$State,long,long,boolean) -> k
    554:585:void updateDominatorWithSkips(shark.internal.PathFinder$State,long,long) -> l
    366:404:void visitClassRecord(shark.internal.PathFinder$State,shark.HeapObject$HeapClass,shark.internal.ReferencePathNode) -> m
    410:456:void visitInstance(shark.internal.PathFinder$State,shark.HeapObject$HeapInstance,shark.internal.ReferencePathNode) -> n
    462:480:void visitObjectArray(shark.internal.PathFinder$State,shark.HeapObject$HeapObjectArray,shark.internal.ReferencePathNode) -> o
shark.internal.PathFinder$PathFindingResults -> f.s0.h$a:
    java.util.List pathsToLeakingObjects -> a
    shark.internal.hppc.LongLongScatterMap dominatedObjectIds -> b
    69:69:void <init>(java.util.List,shark.internal.hppc.LongLongScatterMap) -> <init>
    71:71:shark.internal.hppc.LongLongScatterMap getDominatedObjectIds() -> a
    70:70:java.util.List getPathsToLeakingObjects() -> b
shark.internal.PathFinder$State -> f.s0.h$b:
    java.util.Set leakingObjectIds -> g
    java.util.Deque toVisitLastQueue -> b
    java.util.Deque toVisitQueue -> a
    java.util.HashSet toVisitLastSet -> d
    boolean computeRetainedHeapSize -> i
    java.util.HashSet toVisitSet -> c
    int sizeOfObjectInstances -> h
    shark.internal.hppc.LongLongScatterMap dominatedObjectIds -> f
    shark.internal.hppc.LongScatterSet visitedSet -> e
    74:102:void <init>(java.util.Set,int,boolean) -> <init>
    77:77:boolean getComputeRetainedHeapSize() -> a
    102:102:void <init>(java.util.Set,int,boolean) -> b
    102:102:shark.internal.hppc.LongLongScatterMap getDominatedObjectIds():102 -> b
    75:75:java.util.Set getLeakingObjectIds() -> c
    105:105:boolean getQueuesNotEmpty() -> d
    76:76:int getSizeOfObjectInstances() -> e
    87:87:void <init>(java.util.Set,int,boolean) -> f
    87:87:java.util.Deque getToVisitLastQueue():87 -> f
    92:92:void <init>(java.util.Set,int,boolean) -> g
    92:92:java.util.HashSet getToVisitLastSet():92 -> g
    81:81:void <init>(java.util.Set,int,boolean) -> h
    81:81:java.util.Deque getToVisitQueue():81 -> h
    91:91:void <init>(java.util.Set,int,boolean) -> i
    91:91:java.util.HashSet getToVisitSet():91 -> i
    94:94:void <init>(java.util.Set,int,boolean) -> j
    94:94:shark.internal.hppc.LongScatterSet getVisitedSet():94 -> j
shark.internal.PathFinder$enqueueGcRoots$$inlined$forEach$lambda$1 -> f.s0.h$c:
    java.util.Map $threadNames$inlined -> b
    shark.HeapObject$HeapInstance $threadInstance -> a
    63:63:java.lang.Object invoke() -> a
    265:267:java.lang.String invoke() -> c
shark.internal.PathFinder$sortedGcRoots$3 -> f.s0.h$d:
    kotlin.jvm.functions.Function1 $rootClassName -> a
    353:358:int compare(kotlin.Pair,kotlin.Pair) -> a
    63:63:int compare(java.lang.Object,java.lang.Object) -> compare
shark.internal.PathFinder$sortedGcRoots$rootClassName$1 -> f.s0.h$e:
    shark.internal.PathFinder$sortedGcRoots$rootClassName$1 INSTANCE -> a
    328:339:java.lang.String invoke(shark.HeapObject) -> c
    63:63:java.lang.Object invoke(java.lang.Object) -> invoke
shark.internal.PathFinder$visitInstance$$inlined$sortBy$1 -> f.s0.h$f:
    102:102:int kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2.compare(java.lang.Object,java.lang.Object) -> compare
    102:102:int compare(java.lang.Object,java.lang.Object):102 -> compare
    427:427:void shark.internal.PathFinder.visitInstance(shark.internal.PathFinder$State,shark.HeapObject$HeapInstance,shark.internal.ReferencePathNode) -> compare
    427:427:int compare(java.lang.Object,java.lang.Object):320 -> compare
    427:427:void shark.internal.PathFinder.visitInstance(shark.internal.PathFinder$State,shark.HeapObject$HeapInstance,shark.internal.ReferencePathNode) -> compare
    427:427:int compare(java.lang.Object,java.lang.Object):321 -> compare
    102:102:int kotlin.comparisons.ComparisonsKt__ComparisonsKt$compareBy$2.compare(java.lang.Object,java.lang.Object) -> compare
    102:102:int compare(java.lang.Object,java.lang.Object):102 -> compare
shark.internal.PathFinder$visitInstance$fieldNamesAndValues$1 -> f.s0.h$g:
    shark.internal.PathFinder$visitInstance$fieldNamesAndValues$1 INSTANCE -> a
    424:424:boolean invoke(shark.HeapField) -> c
    63:63:java.lang.Object invoke(java.lang.Object) -> invoke
shark.internal.ReferencePathNode -> f.s0.i:
    7:7:void <init>() -> <init>
    7:7:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    long getObjectId() -> b
shark.internal.ReferencePathNode$ChildNode -> f.s0.i$a:
    30:30:void <init>() -> <init>
    30:30:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    shark.internal.ReferencePathNode getParent() -> c
    java.lang.String getRefFromParentName() -> d
    shark.LeakTraceReference$ReferenceType getRefFromParentType() -> e
shark.internal.ReferencePathNode$ChildNode$LibraryLeakChildNode -> f.s0.i$a$a:
    shark.LeakTraceReference$ReferenceType refFromParentType -> c
    shark.LibraryLeakReferenceMatcher matcher -> e
    long objectId -> a
    shark.internal.ReferencePathNode parent -> b
    java.lang.String refFromParentName -> d
    40:46:void <init>(long,shark.internal.ReferencePathNode,shark.LeakTraceReference$ReferenceType,java.lang.String,shark.LibraryLeakReferenceMatcher) -> <init>
    45:45:shark.LibraryLeakReferenceMatcher getMatcher() -> a
    41:41:long getObjectId() -> b
    42:42:shark.internal.ReferencePathNode getParent() -> c
    44:44:java.lang.String getRefFromParentName() -> d
    43:43:shark.LeakTraceReference$ReferenceType getRefFromParentType() -> e
shark.internal.ReferencePathNode$ChildNode$NormalNode -> f.s0.i$a$b:
    shark.LeakTraceReference$ReferenceType refFromParentType -> c
    long objectId -> a
    shark.internal.ReferencePathNode parent -> b
    java.lang.String refFromParentName -> d
    48:53:void <init>(long,shark.internal.ReferencePathNode,shark.LeakTraceReference$ReferenceType,java.lang.String) -> <init>
    49:49:long getObjectId() -> b
    50:50:shark.internal.ReferencePathNode getParent() -> c
    52:52:java.lang.String getRefFromParentName() -> d
    51:51:shark.LeakTraceReference$ReferenceType getRefFromParentType() -> e
shark.internal.ReferencePathNode$LibraryLeakNode -> f.s0.i$b:
    shark.LibraryLeakReferenceMatcher getMatcher() -> a
shark.internal.ReferencePathNode$RootNode -> f.s0.i$c:
    14:14:void <init>() -> <init>
    14:14:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    shark.GcRoot getGcRoot() -> c
shark.internal.ReferencePathNode$RootNode$LibraryLeakRootNode -> f.s0.i$c$a:
    shark.GcRoot gcRoot -> b
    long objectId -> a
    shark.LibraryLeakReferenceMatcher matcher -> c
    17:21:void <init>(long,shark.GcRoot,shark.LibraryLeakReferenceMatcher) -> <init>
    20:20:shark.LibraryLeakReferenceMatcher getMatcher() -> a
    18:18:long getObjectId() -> b
    19:19:shark.GcRoot getGcRoot() -> c
shark.internal.ReferencePathNode$RootNode$NormalRootNode -> f.s0.i$c$b:
    shark.GcRoot gcRoot -> b
    long objectId -> a
    23:26:void <init>(long,shark.GcRoot) -> <init>
    24:24:long getObjectId() -> b
    25:25:shark.GcRoot getGcRoot() -> c
shark.internal.SortedBytesMap -> f.s0.j:
    int bytesPerValue -> e
    int bytesPerEntry -> b
    int size -> c
    byte[] sortedEntries -> f
    int bytesPerKey -> a
    boolean longIdentifiers -> d
    11:19:void <init>(boolean,int,byte[]) -> <init>
    11:11:int access$getBytesPerEntry$p(shark.internal.SortedBytesMap) -> a
    11:11:int access$getBytesPerKey$p(shark.internal.SortedBytesMap) -> b
    11:11:int access$getBytesPerValue$p(shark.internal.SortedBytesMap) -> c
    11:11:boolean access$getLongIdentifiers$p(shark.internal.SortedBytesMap) -> d
    11:11:byte[] access$getSortedEntries$p(shark.internal.SortedBytesMap) -> e
    11:11:long access$keyAt(shark.internal.SortedBytesMap,int) -> f
    46:59:int binarySearch(long) -> g
    36:37:kotlin.sequences.Sequence entrySequence() -> h
    22:27:shark.internal.ByteSubArray get(long) -> i
    63:64:long keyAt(int) -> j
shark.internal.SortedBytesMap$entrySequence$1 -> f.s0.j$a:
    shark.internal.SortedBytesMap this$0 -> a
    38:39:kotlin.Pair invoke(int) -> c
    11:11:java.lang.Object invoke(java.lang.Object) -> invoke
shark.internal.StringsKt -> f.s0.k:
    java.nio.charset.Charset UTF_8 -> a
    8:8:void <clinit>() -> <clinit>
    25:38:java.lang.String createHash(java.lang.String,java.lang.String) -> a
    15:15:java.lang.String createSHA1Hash(java.lang.String) -> b
    43:43:byte[] getBytes(java.lang.String) -> c
    11:12:java.lang.String lastSegment(java.lang.String,char) -> d
shark.internal.UnsortedByteEntries -> f.s0.l:
    double growthFactor -> j
    byte[] entries -> b
    int initialCapacity -> i
    int currentCapacity -> f
    int bytesPerValue -> g
    shark.internal.UnsortedByteEntries$MutableByteSubArray subArray -> c
    int subArrayIndex -> d
    int assigned -> e
    boolean longIdentifiers -> h
    int bytesPerEntry -> a
    12:12:int access$readInt(shark.internal.UnsortedByteEntries,byte[],int) -> <init>
    12:12:void <init>(int,boolean,int,double):12 -> <init>
    19:22:void <init>(int,boolean,int,double) -> <init>
    15:16:void <init>(int,boolean,int,double,int,kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    12:12:int access$readInt(shark.internal.UnsortedByteEntries,byte[],int) -> a
    12:12:int access$getAssigned$p(shark.internal.UnsortedByteEntries):12 -> a
    12:12:int access$readInt(shark.internal.UnsortedByteEntries,byte[],int) -> b
    12:12:int access$getBytesPerEntry$p(shark.internal.UnsortedByteEntries):12 -> b
    12:12:int access$readInt(shark.internal.UnsortedByteEntries,byte[],int) -> c
    12:12:byte[] access$getEntries$p(shark.internal.UnsortedByteEntries):12 -> c
    12:12:int access$readInt(shark.internal.UnsortedByteEntries,byte[],int) -> d
    12:12:boolean access$getLongIdentifiers$p(shark.internal.UnsortedByteEntries):12 -> d
    12:12:int access$readInt(shark.internal.UnsortedByteEntries,byte[],int) -> e
    12:12:int access$getSubArrayIndex$p(shark.internal.UnsortedByteEntries):12 -> e
    12:12:int access$readInt(shark.internal.UnsortedByteEntries,byte[],int) -> f
    12:12:int access$readInt(shark.internal.UnsortedByteEntries,byte[],int) -> g
    12:12:long access$readLong(shark.internal.UnsortedByteEntries,byte[],int):12 -> g
    12:12:int access$readInt(shark.internal.UnsortedByteEntries,byte[],int) -> h
    12:12:void access$setSubArrayIndex$p(shark.internal.UnsortedByteEntries,int):12 -> h
    31:44:shark.internal.UnsortedByteEntries$MutableByteSubArray append(long) -> i
    117:120:void growEntries(int) -> j
    48:51:shark.internal.SortedBytesMap moveToSortedMap() -> k
    88:89:int readInt(byte[],int) -> l
    99:99:int and(byte,int) -> l
    99:99:int readInt(byte[],int):197 -> l
    89:90:int readInt(byte[],int) -> l
    99:99:int and(byte,int) -> l
    99:99:int readInt(byte[],int):198 -> l
    90:91:int readInt(byte[],int) -> l
    99:99:int and(byte,int) -> l
    99:99:int readInt(byte[],int):199 -> l
    91:92:int readInt(byte[],int) -> l
    99:99:int and(byte,int) -> l
    99:99:int readInt(byte[],int):200 -> l
    92:92:int readInt(byte[],int) -> l
    105:106:long readLong(byte[],int) -> m
    96:96:long and(byte,long) -> m
    96:96:long readLong(byte[],int):201 -> m
    106:107:long readLong(byte[],int) -> m
    96:96:long and(byte,long) -> m
    96:96:long readLong(byte[],int):202 -> m
    107:108:long readLong(byte[],int) -> m
    96:96:long and(byte,long) -> m
    96:96:long readLong(byte[],int):203 -> m
    108:109:long readLong(byte[],int) -> m
    96:96:long and(byte,long) -> m
    96:96:long readLong(byte[],int):204 -> m
    109:110:long readLong(byte[],int) -> m
    96:96:long and(byte,long) -> m
    96:96:long readLong(byte[],int):205 -> m
    110:111:long readLong(byte[],int) -> m
    96:96:long and(byte,long) -> m
    96:96:long readLong(byte[],int):206 -> m
    111:112:long readLong(byte[],int) -> m
    96:96:long and(byte,long) -> m
    96:96:long readLong(byte[],int):207 -> m
    112:113:long readLong(byte[],int) -> m
    96:96:long and(byte,long) -> m
    96:96:long readLong(byte[],int):208 -> m
    113:113:long readLong(byte[],int) -> m
shark.internal.UnsortedByteEntries$MutableByteSubArray -> f.s0.l$a:
    shark.internal.UnsortedByteEntries this$0 -> a
    122:122:void <init>(shark.internal.UnsortedByteEntries) -> <init>
    124:126:void writeByte(byte) -> a
    134:139:void writeId(long) -> b
    142:144:void writeInt(int) -> c
    176:178:void writeLong(long) -> d
    159:161:void writeTruncatedLong(long,int) -> e
shark.internal.UnsortedByteEntries$moveToSortedMap$1 -> f.s0.l$b:
    shark.internal.UnsortedByteEntries this$0 -> a
    53:53:void <init>(shark.internal.UnsortedByteEntries) -> <init>
    61:61:int compare(int,byte[],int,byte[],int) -> a
shark.internal.aosp.ByteArrayComparator -> f.s0.m.a:
    int compare(int,byte[],int,byte[],int) -> a
shark.internal.aosp.ByteArrayTimSort -> f.s0.m.b:
    shark.internal.aosp.ByteArrayTimSort$Companion Companion -> l
    byte[] tmp -> b
    int MIN_GALLOP -> j
    int INITIAL_TMP_STORAGE_LENGTH -> k
    int[] runBase -> d
    int entrySize -> h
    int MIN_MERGE -> i
    int[] runLen -> e
    int stackSize -> c
    byte[] a -> f
    shark.internal.aosp.ByteArrayComparator c -> g
    int minGallop -> a
    610:623:void <clinit>() -> <clinit>
    58:58:void access$setStackSize$p(shark.internal.aosp.ByteArrayTimSort,int) -> <init>
    58:58:void <init>(byte[],shark.internal.aosp.ByteArrayComparator,int,kotlin.jvm.internal.DefaultConstructorMarker):58 -> <init>
    65:129:void <init>(byte[],shark.internal.aosp.ByteArrayComparator,int) -> <init>
    58:58:void access$setStackSize$p(shark.internal.aosp.ByteArrayTimSort,int) -> a
    58:58:boolean access$getDEBUG$cp():58 -> a
    58:58:void access$setStackSize$p(shark.internal.aosp.ByteArrayTimSort,int) -> b
    58:58:int access$getMIN_MERGE$cp():58 -> b
    58:58:void access$setStackSize$p(shark.internal.aosp.ByteArrayTimSort,int) -> c
    58:58:void access$mergeCollapse(shark.internal.aosp.ByteArrayTimSort):58 -> c
    58:58:void access$setStackSize$p(shark.internal.aosp.ByteArrayTimSort,int) -> d
    58:58:void access$mergeForceCollapse(shark.internal.aosp.ByteArrayTimSort):58 -> d
    58:58:void access$setStackSize$p(shark.internal.aosp.ByteArrayTimSort,int) -> e
    58:58:void access$pushRun(shark.internal.aosp.ByteArrayTimSort,int,int):58 -> e
    572:572:byte[] ensureCapacity(int) -> f
    192:235:void mergeAt(int) -> g
    159:169:void mergeCollapse() -> h
    176:182:void mergeForceCollapse() -> i
    416:486:void mergeHi(int,int,int,int) -> j
    259:328:void mergeLo(int,int,int,int) -> k
    141:144:void pushRun(int,int) -> l
shark.internal.aosp.ByteArrayTimSort$Companion -> f.s0.m.b$a:
    592:592:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    592:592:void <init>():592 -> <init>
    592:592:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> <init>
    592:592:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> a
    592:592:int access$gallopLeft(shark.internal.aosp.ByteArrayTimSort$Companion,byte[],int,byte[],int,int,int,int,shark.internal.aosp.ByteArrayComparator):592 -> a
    592:592:void <init>(kotlin.jvm.internal.DefaultConstructorMarker) -> b
    592:592:int access$gallopRight(shark.internal.aosp.ByteArrayTimSort$Companion,byte[],int,byte[],int,int,int,int,shark.internal.aosp.ByteArrayComparator):592 -> b
    733:798:void binarySort(byte[],int,int,int,int,shark.internal.aosp.ByteArrayComparator) -> c
    696:697:void checkStartAndEnd(int,int,int) -> d
    832:848:int countRunAndMakeAscending(byte[],int,int,int,shark.internal.aosp.ByteArrayComparator) -> e
    937:990:int gallopLeft(byte[],int,byte[],int,int,int,int,shark.internal.aosp.ByteArrayComparator) -> f
    1017:1070:int gallopRight(byte[],int,byte[],int,int,int,int,shark.internal.aosp.ByteArrayComparator) -> g
    898:905:int minRunLength(int) -> h
    864:878:void reverseRange(byte[],int,int,int) -> i
    651:689:void sort(byte[],int,int,int,shark.internal.aosp.ByteArrayComparator) -> j
shark.internal.hppc.HHPC -> f.s0.n.a:
    shark.internal.hppc.HHPC INSTANCE -> a
    24:24:void <clinit>() -> <clinit>
    24:24:void <clinit>() -> <init>
    24:24:void <init>():24 -> <init>
    78:78:int expandAtCount(int,double) -> a
    40:48:int minBufferSize(int,double) -> b
    29:30:int mixPhi(long) -> c
    86:87:int nextBufferSize(int,int,double) -> d
    62:71:long nextHighestPowerOfTwo(long) -> e
shark.internal.hppc.LongLongScatterMap -> f.s0.n.b:
    long[] keys -> a
    long[] values -> b
    boolean hasEmptyKey -> f
    int mask -> d
    int resizeAt -> e
    int assigned -> c
    double loadFactor -> g
    26:26:void access$setHasEmptyKey$p(shark.internal.hppc.LongLongScatterMap,boolean) -> <init>
    26:26:void <init>(int):26 -> <init>
    35:75:void <init>(int) -> <init>
    26:26:void access$setHasEmptyKey$p(shark.internal.hppc.LongLongScatterMap,boolean) -> <init>
    26:26:void <init>(int,int,kotlin.jvm.internal.DefaultConstructorMarker):26 -> <init>
    26:26:void access$setHasEmptyKey$p(shark.internal.hppc.LongLongScatterMap,boolean) -> a
    26:26:boolean access$getHasEmptyKey$p(shark.internal.hppc.LongLongScatterMap):26 -> a
    26:26:void access$setHasEmptyKey$p(shark.internal.hppc.LongLongScatterMap,boolean) -> b
    26:26:long[] access$getKeys$p(shark.internal.hppc.LongLongScatterMap):26 -> b
    26:26:void access$setHasEmptyKey$p(shark.internal.hppc.LongLongScatterMap,boolean) -> c
    26:26:long[] access$getValues$p(shark.internal.hppc.LongLongScatterMap):26 -> c
    317:326:void allocateBuffers(int) -> d
    356:367:void allocateThenInsertThenRehash(int,long,long) -> e
    266:274:void ensureCapacity(int) -> f
    210:212:kotlin.sequences.Sequence entrySequence() -> g
    183:207:void forEach(shark.internal.hppc.LongLongScatterMap$ForEachCallback) -> h
    176:177:long get(long) -> i
    262:262:int getSize() -> j
    147:163:int getSlot(long) -> k
    170:170:long getSlotValue(int) -> l
    277:277:int hashKey(long) -> m
    71:71:boolean isEmpty() -> n
    288:308:void rehash(long[],long[]) -> o
    254:258:void release() -> p
    115:136:long remove(long) -> q
    81:110:long set(long,long) -> r
    374:381:void shiftConflictingKeys(int) -> s
shark.internal.hppc.LongLongScatterMap$ForEachCallback -> f.s0.n.b$a:
    void onEntry(long,long) -> a
shark.internal.hppc.LongLongScatterMap$entrySequence$1 -> f.s0.n.b$b:
    shark.internal.hppc.LongLongScatterMap this$0 -> a
    int $max -> c
    kotlin.jvm.internal.Ref$IntRef $slot -> b
    26:26:java.lang.Object invoke() -> a
    213:228:kotlin.Pair invoke() -> c
shark.internal.hppc.LongObjectScatterMap -> f.s0.n.c:
    java.lang.Object[] values -> b
    long[] keys -> a
    boolean hasEmptyKey -> f
    int mask -> d
    int resizeAt -> e
    int assigned -> c
    double loadFactor -> g
    26:26:void access$setHasEmptyKey$p(shark.internal.hppc.LongObjectScatterMap,boolean) -> <init>
    26:26:void <init>():26 -> <init>
    30:71:void <init>() -> <init>
    26:26:void access$setHasEmptyKey$p(shark.internal.hppc.LongObjectScatterMap,boolean) -> a
    26:26:boolean access$getHasEmptyKey$p(shark.internal.hppc.LongObjectScatterMap):26 -> a
    26:26:void access$setHasEmptyKey$p(shark.internal.hppc.LongObjectScatterMap,boolean) -> b
    26:26:long[] access$getKeys$p(shark.internal.hppc.LongObjectScatterMap):26 -> b
    26:26:void access$setHasEmptyKey$p(shark.internal.hppc.LongObjectScatterMap,boolean) -> c
    26:26:java.lang.Object[] access$getValues$p(shark.internal.hppc.LongObjectScatterMap):26 -> c
    265:275:void allocateBuffers(int) -> d
    305:316:void allocateThenInsertThenRehash(int,long,java.lang.Object) -> e
    214:222:void ensureCapacity(int) -> f
    158:160:kotlin.sequences.Sequence entrySequence() -> g
    137:153:java.lang.Object get(long) -> h
    210:210:int getSize() -> i
    225:225:int hashKey(long) -> j
    67:67:boolean isEmpty() -> k
    236:256:void rehash(long[],java.lang.Object[]) -> l
    77:106:java.lang.Object set(long,java.lang.Object) -> m
shark.internal.hppc.LongObjectScatterMap$entrySequence$1 -> f.s0.n.c$a:
    shark.internal.hppc.LongObjectScatterMap this$0 -> a
    int $max -> c
    kotlin.jvm.internal.Ref$IntRef $slot -> b
    26:26:java.lang.Object invoke() -> a
    161:176:kotlin.Pair invoke() -> c
shark.internal.hppc.LongScatterSet -> f.s0.n.d:
    long[] keys -> a
    boolean hasEmptyKey -> e
    int resizeAt -> d
    int assigned -> b
    double loadFactor -> f
    int mask -> c
    26:57:void <init>() -> <init>
    68:93:boolean add(long) -> a
    160:166:void allocateBuffers(int) -> b
    185:194:void allocateThenInsertThenRehash(int,long) -> c
    98:112:boolean contains(long) -> d
    123:130:void ensureCapacity(int) -> e
    60:60:int hashKey(long) -> f
    138:152:void rehash(long[]) -> g
    133:133:int size() -> h
